/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject41 struct for InlineObject41
type InlineObject41 struct {
	SessionId NullableString `json:"sessionId,omitempty"`
	Availability *string `json:"availability,omitempty"`
	Activity *string `json:"activity,omitempty"`
	ExpirationDuration NullableString `json:"expirationDuration,omitempty"`
}

// NewInlineObject41 instantiates a new InlineObject41 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject41() *InlineObject41 {
	this := InlineObject41{}
	return &this
}

// NewInlineObject41WithDefaults instantiates a new InlineObject41 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject41WithDefaults() *InlineObject41 {
	this := InlineObject41{}
	return &this
}

// GetSessionId returns the SessionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject41) GetSessionId() string {
	if o == nil || o.SessionId.Get() == nil {
		var ret string
		return ret
	}
	return *o.SessionId.Get()
}

// GetSessionIdOk returns a tuple with the SessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject41) GetSessionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SessionId.Get(), o.SessionId.IsSet()
}

// HasSessionId returns a boolean if a field has been set.
func (o *InlineObject41) HasSessionId() bool {
	if o != nil && o.SessionId.IsSet() {
		return true
	}

	return false
}

// SetSessionId gets a reference to the given NullableString and assigns it to the SessionId field.
func (o *InlineObject41) SetSessionId(v string) {
	o.SessionId.Set(&v)
}
// SetSessionIdNil sets the value for SessionId to be an explicit nil
func (o *InlineObject41) SetSessionIdNil() {
	o.SessionId.Set(nil)
}

// UnsetSessionId ensures that no value is present for SessionId, not even an explicit nil
func (o *InlineObject41) UnsetSessionId() {
	o.SessionId.Unset()
}

// GetAvailability returns the Availability field value if set, zero value otherwise.
func (o *InlineObject41) GetAvailability() string {
	if o == nil || o.Availability == nil {
		var ret string
		return ret
	}
	return *o.Availability
}

// GetAvailabilityOk returns a tuple with the Availability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject41) GetAvailabilityOk() (*string, bool) {
	if o == nil || o.Availability == nil {
		return nil, false
	}
	return o.Availability, true
}

// HasAvailability returns a boolean if a field has been set.
func (o *InlineObject41) HasAvailability() bool {
	if o != nil && o.Availability != nil {
		return true
	}

	return false
}

// SetAvailability gets a reference to the given string and assigns it to the Availability field.
func (o *InlineObject41) SetAvailability(v string) {
	o.Availability = &v
}

// GetActivity returns the Activity field value if set, zero value otherwise.
func (o *InlineObject41) GetActivity() string {
	if o == nil || o.Activity == nil {
		var ret string
		return ret
	}
	return *o.Activity
}

// GetActivityOk returns a tuple with the Activity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject41) GetActivityOk() (*string, bool) {
	if o == nil || o.Activity == nil {
		return nil, false
	}
	return o.Activity, true
}

// HasActivity returns a boolean if a field has been set.
func (o *InlineObject41) HasActivity() bool {
	if o != nil && o.Activity != nil {
		return true
	}

	return false
}

// SetActivity gets a reference to the given string and assigns it to the Activity field.
func (o *InlineObject41) SetActivity(v string) {
	o.Activity = &v
}

// GetExpirationDuration returns the ExpirationDuration field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject41) GetExpirationDuration() string {
	if o == nil || o.ExpirationDuration.Get() == nil {
		var ret string
		return ret
	}
	return *o.ExpirationDuration.Get()
}

// GetExpirationDurationOk returns a tuple with the ExpirationDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject41) GetExpirationDurationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExpirationDuration.Get(), o.ExpirationDuration.IsSet()
}

// HasExpirationDuration returns a boolean if a field has been set.
func (o *InlineObject41) HasExpirationDuration() bool {
	if o != nil && o.ExpirationDuration.IsSet() {
		return true
	}

	return false
}

// SetExpirationDuration gets a reference to the given NullableString and assigns it to the ExpirationDuration field.
func (o *InlineObject41) SetExpirationDuration(v string) {
	o.ExpirationDuration.Set(&v)
}
// SetExpirationDurationNil sets the value for ExpirationDuration to be an explicit nil
func (o *InlineObject41) SetExpirationDurationNil() {
	o.ExpirationDuration.Set(nil)
}

// UnsetExpirationDuration ensures that no value is present for ExpirationDuration, not even an explicit nil
func (o *InlineObject41) UnsetExpirationDuration() {
	o.ExpirationDuration.Unset()
}

func (o InlineObject41) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SessionId.IsSet() {
		toSerialize["sessionId"] = o.SessionId.Get()
	}
	if o.Availability != nil {
		toSerialize["availability"] = o.Availability
	}
	if o.Activity != nil {
		toSerialize["activity"] = o.Activity
	}
	if o.ExpirationDuration.IsSet() {
		toSerialize["expirationDuration"] = o.ExpirationDuration.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject41 struct {
	value *InlineObject41
	isSet bool
}

func (v NullableInlineObject41) Get() *InlineObject41 {
	return v.value
}

func (v *NullableInlineObject41) Set(val *InlineObject41) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject41) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject41) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject41(val *InlineObject41) *NullableInlineObject41 {
	return &NullableInlineObject41{value: val, isSet: true}
}

func (v NullableInlineObject41) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject41) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


