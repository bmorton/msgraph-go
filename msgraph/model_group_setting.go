/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// GroupSetting struct for GroupSetting
type GroupSetting struct {
	// Display name of this group of settings, which comes from the associated template.
	DisplayName NullableString `json:"displayName,omitempty"`
	// Unique identifier for the template used to create this group of settings. Read-only.
	TemplateId NullableString `json:"templateId,omitempty"`
	// Collection of name value pairs. Must contain and set all the settings defined in the template.
	Values *[]MicrosoftGraphSettingValue `json:"values,omitempty"`
}

// NewGroupSetting instantiates a new GroupSetting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupSetting() *GroupSetting {
	this := GroupSetting{}
	return &this
}

// NewGroupSettingWithDefaults instantiates a new GroupSetting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupSettingWithDefaults() *GroupSetting {
	this := GroupSetting{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GroupSetting) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GroupSetting) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *GroupSetting) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *GroupSetting) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *GroupSetting) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *GroupSetting) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetTemplateId returns the TemplateId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GroupSetting) GetTemplateId() string {
	if o == nil || o.TemplateId.Get() == nil {
		var ret string
		return ret
	}
	return *o.TemplateId.Get()
}

// GetTemplateIdOk returns a tuple with the TemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GroupSetting) GetTemplateIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TemplateId.Get(), o.TemplateId.IsSet()
}

// HasTemplateId returns a boolean if a field has been set.
func (o *GroupSetting) HasTemplateId() bool {
	if o != nil && o.TemplateId.IsSet() {
		return true
	}

	return false
}

// SetTemplateId gets a reference to the given NullableString and assigns it to the TemplateId field.
func (o *GroupSetting) SetTemplateId(v string) {
	o.TemplateId.Set(&v)
}
// SetTemplateIdNil sets the value for TemplateId to be an explicit nil
func (o *GroupSetting) SetTemplateIdNil() {
	o.TemplateId.Set(nil)
}

// UnsetTemplateId ensures that no value is present for TemplateId, not even an explicit nil
func (o *GroupSetting) UnsetTemplateId() {
	o.TemplateId.Unset()
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *GroupSetting) GetValues() []MicrosoftGraphSettingValue {
	if o == nil || o.Values == nil {
		var ret []MicrosoftGraphSettingValue
		return ret
	}
	return *o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupSetting) GetValuesOk() (*[]MicrosoftGraphSettingValue, bool) {
	if o == nil || o.Values == nil {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *GroupSetting) HasValues() bool {
	if o != nil && o.Values != nil {
		return true
	}

	return false
}

// SetValues gets a reference to the given []MicrosoftGraphSettingValue and assigns it to the Values field.
func (o *GroupSetting) SetValues(v []MicrosoftGraphSettingValue) {
	o.Values = &v
}

func (o GroupSetting) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.TemplateId.IsSet() {
		toSerialize["templateId"] = o.TemplateId.Get()
	}
	if o.Values != nil {
		toSerialize["values"] = o.Values
	}
	return json.Marshal(toSerialize)
}

type NullableGroupSetting struct {
	value *GroupSetting
	isSet bool
}

func (v NullableGroupSetting) Get() *GroupSetting {
	return v.value
}

func (v *NullableGroupSetting) Set(val *GroupSetting) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupSetting) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupSetting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupSetting(val *GroupSetting) *NullableGroupSetting {
	return &NullableGroupSetting{value: val, isSet: true}
}

func (v NullableGroupSetting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupSetting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


