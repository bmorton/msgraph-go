/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// InlineObject147 struct for InlineObject147
type InlineObject147 struct {
	GroupId *string `json:"groupId,omitempty"`
}

// NewInlineObject147 instantiates a new InlineObject147 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject147() *InlineObject147 {
	this := InlineObject147{}
	return &this
}

// NewInlineObject147WithDefaults instantiates a new InlineObject147 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject147WithDefaults() *InlineObject147 {
	this := InlineObject147{}
	return &this
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *InlineObject147) GetGroupId() string {
	if o == nil || o.GroupId == nil {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject147) GetGroupIdOk() (*string, bool) {
	if o == nil || o.GroupId == nil {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *InlineObject147) HasGroupId() bool {
	if o != nil && o.GroupId != nil {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *InlineObject147) SetGroupId(v string) {
	o.GroupId = &v
}

func (o InlineObject147) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GroupId != nil {
		toSerialize["groupId"] = o.GroupId
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject147 struct {
	value *InlineObject147
	isSet bool
}

func (v NullableInlineObject147) Get() *InlineObject147 {
	return v.value
}

func (v *NullableInlineObject147) Set(val *InlineObject147) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject147) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject147) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject147(val *InlineObject147) *NullableInlineObject147 {
	return &NullableInlineObject147{value: val, isSet: true}
}

func (v NullableInlineObject147) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject147) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


