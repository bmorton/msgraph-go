/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphSubjectRightsRequestDetail struct for MicrosoftGraphSubjectRightsRequestDetail
type MicrosoftGraphSubjectRightsRequestDetail struct {
	// Count of items that are excluded from the request.
	ExcludedItemCount NullableInt64 `json:"excludedItemCount,omitempty"`
	// Count of items per insight.
	InsightCounts *[]*AnyOfmicrosoftGraphKeyValuePair `json:"insightCounts,omitempty"`
	// Count of items found.
	ItemCount NullableInt64 `json:"itemCount,omitempty"`
	// Count of item that need review.
	ItemNeedReview NullableInt64 `json:"itemNeedReview,omitempty"`
	// Count of items per product, such as Exchange, SharePoint, OneDrive, and Teams.
	ProductItemCounts *[]*AnyOfmicrosoftGraphKeyValuePair `json:"productItemCounts,omitempty"`
	// Count of items signed off by the administrator.
	SignedOffItemCount NullableInt64 `json:"signedOffItemCount,omitempty"`
	// Total item size in bytes.
	TotalItemSize NullableInt64 `json:"totalItemSize,omitempty"`
}

// NewMicrosoftGraphSubjectRightsRequestDetail instantiates a new MicrosoftGraphSubjectRightsRequestDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphSubjectRightsRequestDetail() *MicrosoftGraphSubjectRightsRequestDetail {
	this := MicrosoftGraphSubjectRightsRequestDetail{}
	return &this
}

// NewMicrosoftGraphSubjectRightsRequestDetailWithDefaults instantiates a new MicrosoftGraphSubjectRightsRequestDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphSubjectRightsRequestDetailWithDefaults() *MicrosoftGraphSubjectRightsRequestDetail {
	this := MicrosoftGraphSubjectRightsRequestDetail{}
	return &this
}

// GetExcludedItemCount returns the ExcludedItemCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSubjectRightsRequestDetail) GetExcludedItemCount() int64 {
	if o == nil || o.ExcludedItemCount.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ExcludedItemCount.Get()
}

// GetExcludedItemCountOk returns a tuple with the ExcludedItemCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSubjectRightsRequestDetail) GetExcludedItemCountOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExcludedItemCount.Get(), o.ExcludedItemCount.IsSet()
}

// HasExcludedItemCount returns a boolean if a field has been set.
func (o *MicrosoftGraphSubjectRightsRequestDetail) HasExcludedItemCount() bool {
	if o != nil && o.ExcludedItemCount.IsSet() {
		return true
	}

	return false
}

// SetExcludedItemCount gets a reference to the given NullableInt64 and assigns it to the ExcludedItemCount field.
func (o *MicrosoftGraphSubjectRightsRequestDetail) SetExcludedItemCount(v int64) {
	o.ExcludedItemCount.Set(&v)
}
// SetExcludedItemCountNil sets the value for ExcludedItemCount to be an explicit nil
func (o *MicrosoftGraphSubjectRightsRequestDetail) SetExcludedItemCountNil() {
	o.ExcludedItemCount.Set(nil)
}

// UnsetExcludedItemCount ensures that no value is present for ExcludedItemCount, not even an explicit nil
func (o *MicrosoftGraphSubjectRightsRequestDetail) UnsetExcludedItemCount() {
	o.ExcludedItemCount.Unset()
}

// GetInsightCounts returns the InsightCounts field value if set, zero value otherwise.
func (o *MicrosoftGraphSubjectRightsRequestDetail) GetInsightCounts() []*AnyOfmicrosoftGraphKeyValuePair {
	if o == nil || o.InsightCounts == nil {
		var ret []*AnyOfmicrosoftGraphKeyValuePair
		return ret
	}
	return *o.InsightCounts
}

// GetInsightCountsOk returns a tuple with the InsightCounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSubjectRightsRequestDetail) GetInsightCountsOk() (*[]*AnyOfmicrosoftGraphKeyValuePair, bool) {
	if o == nil || o.InsightCounts == nil {
		return nil, false
	}
	return o.InsightCounts, true
}

// HasInsightCounts returns a boolean if a field has been set.
func (o *MicrosoftGraphSubjectRightsRequestDetail) HasInsightCounts() bool {
	if o != nil && o.InsightCounts != nil {
		return true
	}

	return false
}

// SetInsightCounts gets a reference to the given []*AnyOfmicrosoftGraphKeyValuePair and assigns it to the InsightCounts field.
func (o *MicrosoftGraphSubjectRightsRequestDetail) SetInsightCounts(v []*AnyOfmicrosoftGraphKeyValuePair) {
	o.InsightCounts = &v
}

// GetItemCount returns the ItemCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSubjectRightsRequestDetail) GetItemCount() int64 {
	if o == nil || o.ItemCount.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ItemCount.Get()
}

// GetItemCountOk returns a tuple with the ItemCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSubjectRightsRequestDetail) GetItemCountOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ItemCount.Get(), o.ItemCount.IsSet()
}

// HasItemCount returns a boolean if a field has been set.
func (o *MicrosoftGraphSubjectRightsRequestDetail) HasItemCount() bool {
	if o != nil && o.ItemCount.IsSet() {
		return true
	}

	return false
}

// SetItemCount gets a reference to the given NullableInt64 and assigns it to the ItemCount field.
func (o *MicrosoftGraphSubjectRightsRequestDetail) SetItemCount(v int64) {
	o.ItemCount.Set(&v)
}
// SetItemCountNil sets the value for ItemCount to be an explicit nil
func (o *MicrosoftGraphSubjectRightsRequestDetail) SetItemCountNil() {
	o.ItemCount.Set(nil)
}

// UnsetItemCount ensures that no value is present for ItemCount, not even an explicit nil
func (o *MicrosoftGraphSubjectRightsRequestDetail) UnsetItemCount() {
	o.ItemCount.Unset()
}

// GetItemNeedReview returns the ItemNeedReview field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSubjectRightsRequestDetail) GetItemNeedReview() int64 {
	if o == nil || o.ItemNeedReview.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ItemNeedReview.Get()
}

// GetItemNeedReviewOk returns a tuple with the ItemNeedReview field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSubjectRightsRequestDetail) GetItemNeedReviewOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ItemNeedReview.Get(), o.ItemNeedReview.IsSet()
}

// HasItemNeedReview returns a boolean if a field has been set.
func (o *MicrosoftGraphSubjectRightsRequestDetail) HasItemNeedReview() bool {
	if o != nil && o.ItemNeedReview.IsSet() {
		return true
	}

	return false
}

// SetItemNeedReview gets a reference to the given NullableInt64 and assigns it to the ItemNeedReview field.
func (o *MicrosoftGraphSubjectRightsRequestDetail) SetItemNeedReview(v int64) {
	o.ItemNeedReview.Set(&v)
}
// SetItemNeedReviewNil sets the value for ItemNeedReview to be an explicit nil
func (o *MicrosoftGraphSubjectRightsRequestDetail) SetItemNeedReviewNil() {
	o.ItemNeedReview.Set(nil)
}

// UnsetItemNeedReview ensures that no value is present for ItemNeedReview, not even an explicit nil
func (o *MicrosoftGraphSubjectRightsRequestDetail) UnsetItemNeedReview() {
	o.ItemNeedReview.Unset()
}

// GetProductItemCounts returns the ProductItemCounts field value if set, zero value otherwise.
func (o *MicrosoftGraphSubjectRightsRequestDetail) GetProductItemCounts() []*AnyOfmicrosoftGraphKeyValuePair {
	if o == nil || o.ProductItemCounts == nil {
		var ret []*AnyOfmicrosoftGraphKeyValuePair
		return ret
	}
	return *o.ProductItemCounts
}

// GetProductItemCountsOk returns a tuple with the ProductItemCounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSubjectRightsRequestDetail) GetProductItemCountsOk() (*[]*AnyOfmicrosoftGraphKeyValuePair, bool) {
	if o == nil || o.ProductItemCounts == nil {
		return nil, false
	}
	return o.ProductItemCounts, true
}

// HasProductItemCounts returns a boolean if a field has been set.
func (o *MicrosoftGraphSubjectRightsRequestDetail) HasProductItemCounts() bool {
	if o != nil && o.ProductItemCounts != nil {
		return true
	}

	return false
}

// SetProductItemCounts gets a reference to the given []*AnyOfmicrosoftGraphKeyValuePair and assigns it to the ProductItemCounts field.
func (o *MicrosoftGraphSubjectRightsRequestDetail) SetProductItemCounts(v []*AnyOfmicrosoftGraphKeyValuePair) {
	o.ProductItemCounts = &v
}

// GetSignedOffItemCount returns the SignedOffItemCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSubjectRightsRequestDetail) GetSignedOffItemCount() int64 {
	if o == nil || o.SignedOffItemCount.Get() == nil {
		var ret int64
		return ret
	}
	return *o.SignedOffItemCount.Get()
}

// GetSignedOffItemCountOk returns a tuple with the SignedOffItemCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSubjectRightsRequestDetail) GetSignedOffItemCountOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SignedOffItemCount.Get(), o.SignedOffItemCount.IsSet()
}

// HasSignedOffItemCount returns a boolean if a field has been set.
func (o *MicrosoftGraphSubjectRightsRequestDetail) HasSignedOffItemCount() bool {
	if o != nil && o.SignedOffItemCount.IsSet() {
		return true
	}

	return false
}

// SetSignedOffItemCount gets a reference to the given NullableInt64 and assigns it to the SignedOffItemCount field.
func (o *MicrosoftGraphSubjectRightsRequestDetail) SetSignedOffItemCount(v int64) {
	o.SignedOffItemCount.Set(&v)
}
// SetSignedOffItemCountNil sets the value for SignedOffItemCount to be an explicit nil
func (o *MicrosoftGraphSubjectRightsRequestDetail) SetSignedOffItemCountNil() {
	o.SignedOffItemCount.Set(nil)
}

// UnsetSignedOffItemCount ensures that no value is present for SignedOffItemCount, not even an explicit nil
func (o *MicrosoftGraphSubjectRightsRequestDetail) UnsetSignedOffItemCount() {
	o.SignedOffItemCount.Unset()
}

// GetTotalItemSize returns the TotalItemSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSubjectRightsRequestDetail) GetTotalItemSize() int64 {
	if o == nil || o.TotalItemSize.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TotalItemSize.Get()
}

// GetTotalItemSizeOk returns a tuple with the TotalItemSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSubjectRightsRequestDetail) GetTotalItemSizeOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TotalItemSize.Get(), o.TotalItemSize.IsSet()
}

// HasTotalItemSize returns a boolean if a field has been set.
func (o *MicrosoftGraphSubjectRightsRequestDetail) HasTotalItemSize() bool {
	if o != nil && o.TotalItemSize.IsSet() {
		return true
	}

	return false
}

// SetTotalItemSize gets a reference to the given NullableInt64 and assigns it to the TotalItemSize field.
func (o *MicrosoftGraphSubjectRightsRequestDetail) SetTotalItemSize(v int64) {
	o.TotalItemSize.Set(&v)
}
// SetTotalItemSizeNil sets the value for TotalItemSize to be an explicit nil
func (o *MicrosoftGraphSubjectRightsRequestDetail) SetTotalItemSizeNil() {
	o.TotalItemSize.Set(nil)
}

// UnsetTotalItemSize ensures that no value is present for TotalItemSize, not even an explicit nil
func (o *MicrosoftGraphSubjectRightsRequestDetail) UnsetTotalItemSize() {
	o.TotalItemSize.Unset()
}

func (o MicrosoftGraphSubjectRightsRequestDetail) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ExcludedItemCount.IsSet() {
		toSerialize["excludedItemCount"] = o.ExcludedItemCount.Get()
	}
	if o.InsightCounts != nil {
		toSerialize["insightCounts"] = o.InsightCounts
	}
	if o.ItemCount.IsSet() {
		toSerialize["itemCount"] = o.ItemCount.Get()
	}
	if o.ItemNeedReview.IsSet() {
		toSerialize["itemNeedReview"] = o.ItemNeedReview.Get()
	}
	if o.ProductItemCounts != nil {
		toSerialize["productItemCounts"] = o.ProductItemCounts
	}
	if o.SignedOffItemCount.IsSet() {
		toSerialize["signedOffItemCount"] = o.SignedOffItemCount.Get()
	}
	if o.TotalItemSize.IsSet() {
		toSerialize["totalItemSize"] = o.TotalItemSize.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphSubjectRightsRequestDetail struct {
	value *MicrosoftGraphSubjectRightsRequestDetail
	isSet bool
}

func (v NullableMicrosoftGraphSubjectRightsRequestDetail) Get() *MicrosoftGraphSubjectRightsRequestDetail {
	return v.value
}

func (v *NullableMicrosoftGraphSubjectRightsRequestDetail) Set(val *MicrosoftGraphSubjectRightsRequestDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphSubjectRightsRequestDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphSubjectRightsRequestDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphSubjectRightsRequestDetail(val *MicrosoftGraphSubjectRightsRequestDetail) *NullableMicrosoftGraphSubjectRightsRequestDetail {
	return &NullableMicrosoftGraphSubjectRightsRequestDetail{value: val, isSet: true}
}

func (v NullableMicrosoftGraphSubjectRightsRequestDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphSubjectRightsRequestDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


