/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// ImportedWindowsAutopilotDeviceIdentity Imported windows autopilot devices.
type ImportedWindowsAutopilotDeviceIdentity struct {
	// UPN of the user the device will be assigned
	AssignedUserPrincipalName NullableString `json:"assignedUserPrincipalName,omitempty"`
	// Group Tag of the Windows autopilot device.
	GroupTag NullableString `json:"groupTag,omitempty"`
	// Hardware Blob of the Windows autopilot device.
	HardwareIdentifier NullableString `json:"hardwareIdentifier,omitempty"`
	// The Import Id of the Windows autopilot device.
	ImportId NullableString `json:"importId,omitempty"`
	// Product Key of the Windows autopilot device.
	ProductKey NullableString `json:"productKey,omitempty"`
	// Serial number of the Windows autopilot device.
	SerialNumber NullableString `json:"serialNumber,omitempty"`
	// Current state of the imported device.
	State AnyOfmicrosoftGraphImportedWindowsAutopilotDeviceIdentityState `json:"state,omitempty"`
}

// NewImportedWindowsAutopilotDeviceIdentity instantiates a new ImportedWindowsAutopilotDeviceIdentity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImportedWindowsAutopilotDeviceIdentity() *ImportedWindowsAutopilotDeviceIdentity {
	this := ImportedWindowsAutopilotDeviceIdentity{}
	return &this
}

// NewImportedWindowsAutopilotDeviceIdentityWithDefaults instantiates a new ImportedWindowsAutopilotDeviceIdentity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImportedWindowsAutopilotDeviceIdentityWithDefaults() *ImportedWindowsAutopilotDeviceIdentity {
	this := ImportedWindowsAutopilotDeviceIdentity{}
	return &this
}

// GetAssignedUserPrincipalName returns the AssignedUserPrincipalName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImportedWindowsAutopilotDeviceIdentity) GetAssignedUserPrincipalName() string {
	if o == nil || o.AssignedUserPrincipalName.Get() == nil {
		var ret string
		return ret
	}
	return *o.AssignedUserPrincipalName.Get()
}

// GetAssignedUserPrincipalNameOk returns a tuple with the AssignedUserPrincipalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImportedWindowsAutopilotDeviceIdentity) GetAssignedUserPrincipalNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AssignedUserPrincipalName.Get(), o.AssignedUserPrincipalName.IsSet()
}

// HasAssignedUserPrincipalName returns a boolean if a field has been set.
func (o *ImportedWindowsAutopilotDeviceIdentity) HasAssignedUserPrincipalName() bool {
	if o != nil && o.AssignedUserPrincipalName.IsSet() {
		return true
	}

	return false
}

// SetAssignedUserPrincipalName gets a reference to the given NullableString and assigns it to the AssignedUserPrincipalName field.
func (o *ImportedWindowsAutopilotDeviceIdentity) SetAssignedUserPrincipalName(v string) {
	o.AssignedUserPrincipalName.Set(&v)
}
// SetAssignedUserPrincipalNameNil sets the value for AssignedUserPrincipalName to be an explicit nil
func (o *ImportedWindowsAutopilotDeviceIdentity) SetAssignedUserPrincipalNameNil() {
	o.AssignedUserPrincipalName.Set(nil)
}

// UnsetAssignedUserPrincipalName ensures that no value is present for AssignedUserPrincipalName, not even an explicit nil
func (o *ImportedWindowsAutopilotDeviceIdentity) UnsetAssignedUserPrincipalName() {
	o.AssignedUserPrincipalName.Unset()
}

// GetGroupTag returns the GroupTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImportedWindowsAutopilotDeviceIdentity) GetGroupTag() string {
	if o == nil || o.GroupTag.Get() == nil {
		var ret string
		return ret
	}
	return *o.GroupTag.Get()
}

// GetGroupTagOk returns a tuple with the GroupTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImportedWindowsAutopilotDeviceIdentity) GetGroupTagOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.GroupTag.Get(), o.GroupTag.IsSet()
}

// HasGroupTag returns a boolean if a field has been set.
func (o *ImportedWindowsAutopilotDeviceIdentity) HasGroupTag() bool {
	if o != nil && o.GroupTag.IsSet() {
		return true
	}

	return false
}

// SetGroupTag gets a reference to the given NullableString and assigns it to the GroupTag field.
func (o *ImportedWindowsAutopilotDeviceIdentity) SetGroupTag(v string) {
	o.GroupTag.Set(&v)
}
// SetGroupTagNil sets the value for GroupTag to be an explicit nil
func (o *ImportedWindowsAutopilotDeviceIdentity) SetGroupTagNil() {
	o.GroupTag.Set(nil)
}

// UnsetGroupTag ensures that no value is present for GroupTag, not even an explicit nil
func (o *ImportedWindowsAutopilotDeviceIdentity) UnsetGroupTag() {
	o.GroupTag.Unset()
}

// GetHardwareIdentifier returns the HardwareIdentifier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImportedWindowsAutopilotDeviceIdentity) GetHardwareIdentifier() string {
	if o == nil || o.HardwareIdentifier.Get() == nil {
		var ret string
		return ret
	}
	return *o.HardwareIdentifier.Get()
}

// GetHardwareIdentifierOk returns a tuple with the HardwareIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImportedWindowsAutopilotDeviceIdentity) GetHardwareIdentifierOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HardwareIdentifier.Get(), o.HardwareIdentifier.IsSet()
}

// HasHardwareIdentifier returns a boolean if a field has been set.
func (o *ImportedWindowsAutopilotDeviceIdentity) HasHardwareIdentifier() bool {
	if o != nil && o.HardwareIdentifier.IsSet() {
		return true
	}

	return false
}

// SetHardwareIdentifier gets a reference to the given NullableString and assigns it to the HardwareIdentifier field.
func (o *ImportedWindowsAutopilotDeviceIdentity) SetHardwareIdentifier(v string) {
	o.HardwareIdentifier.Set(&v)
}
// SetHardwareIdentifierNil sets the value for HardwareIdentifier to be an explicit nil
func (o *ImportedWindowsAutopilotDeviceIdentity) SetHardwareIdentifierNil() {
	o.HardwareIdentifier.Set(nil)
}

// UnsetHardwareIdentifier ensures that no value is present for HardwareIdentifier, not even an explicit nil
func (o *ImportedWindowsAutopilotDeviceIdentity) UnsetHardwareIdentifier() {
	o.HardwareIdentifier.Unset()
}

// GetImportId returns the ImportId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImportedWindowsAutopilotDeviceIdentity) GetImportId() string {
	if o == nil || o.ImportId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ImportId.Get()
}

// GetImportIdOk returns a tuple with the ImportId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImportedWindowsAutopilotDeviceIdentity) GetImportIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ImportId.Get(), o.ImportId.IsSet()
}

// HasImportId returns a boolean if a field has been set.
func (o *ImportedWindowsAutopilotDeviceIdentity) HasImportId() bool {
	if o != nil && o.ImportId.IsSet() {
		return true
	}

	return false
}

// SetImportId gets a reference to the given NullableString and assigns it to the ImportId field.
func (o *ImportedWindowsAutopilotDeviceIdentity) SetImportId(v string) {
	o.ImportId.Set(&v)
}
// SetImportIdNil sets the value for ImportId to be an explicit nil
func (o *ImportedWindowsAutopilotDeviceIdentity) SetImportIdNil() {
	o.ImportId.Set(nil)
}

// UnsetImportId ensures that no value is present for ImportId, not even an explicit nil
func (o *ImportedWindowsAutopilotDeviceIdentity) UnsetImportId() {
	o.ImportId.Unset()
}

// GetProductKey returns the ProductKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImportedWindowsAutopilotDeviceIdentity) GetProductKey() string {
	if o == nil || o.ProductKey.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProductKey.Get()
}

// GetProductKeyOk returns a tuple with the ProductKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImportedWindowsAutopilotDeviceIdentity) GetProductKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProductKey.Get(), o.ProductKey.IsSet()
}

// HasProductKey returns a boolean if a field has been set.
func (o *ImportedWindowsAutopilotDeviceIdentity) HasProductKey() bool {
	if o != nil && o.ProductKey.IsSet() {
		return true
	}

	return false
}

// SetProductKey gets a reference to the given NullableString and assigns it to the ProductKey field.
func (o *ImportedWindowsAutopilotDeviceIdentity) SetProductKey(v string) {
	o.ProductKey.Set(&v)
}
// SetProductKeyNil sets the value for ProductKey to be an explicit nil
func (o *ImportedWindowsAutopilotDeviceIdentity) SetProductKeyNil() {
	o.ProductKey.Set(nil)
}

// UnsetProductKey ensures that no value is present for ProductKey, not even an explicit nil
func (o *ImportedWindowsAutopilotDeviceIdentity) UnsetProductKey() {
	o.ProductKey.Unset()
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImportedWindowsAutopilotDeviceIdentity) GetSerialNumber() string {
	if o == nil || o.SerialNumber.Get() == nil {
		var ret string
		return ret
	}
	return *o.SerialNumber.Get()
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImportedWindowsAutopilotDeviceIdentity) GetSerialNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SerialNumber.Get(), o.SerialNumber.IsSet()
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *ImportedWindowsAutopilotDeviceIdentity) HasSerialNumber() bool {
	if o != nil && o.SerialNumber.IsSet() {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given NullableString and assigns it to the SerialNumber field.
func (o *ImportedWindowsAutopilotDeviceIdentity) SetSerialNumber(v string) {
	o.SerialNumber.Set(&v)
}
// SetSerialNumberNil sets the value for SerialNumber to be an explicit nil
func (o *ImportedWindowsAutopilotDeviceIdentity) SetSerialNumberNil() {
	o.SerialNumber.Set(nil)
}

// UnsetSerialNumber ensures that no value is present for SerialNumber, not even an explicit nil
func (o *ImportedWindowsAutopilotDeviceIdentity) UnsetSerialNumber() {
	o.SerialNumber.Unset()
}

// GetState returns the State field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImportedWindowsAutopilotDeviceIdentity) GetState() AnyOfmicrosoftGraphImportedWindowsAutopilotDeviceIdentityState {
	if o == nil  {
		var ret AnyOfmicrosoftGraphImportedWindowsAutopilotDeviceIdentityState
		return ret
	}
	return o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImportedWindowsAutopilotDeviceIdentity) GetStateOk() (*AnyOfmicrosoftGraphImportedWindowsAutopilotDeviceIdentityState, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return &o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ImportedWindowsAutopilotDeviceIdentity) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given AnyOfmicrosoftGraphImportedWindowsAutopilotDeviceIdentityState and assigns it to the State field.
func (o *ImportedWindowsAutopilotDeviceIdentity) SetState(v AnyOfmicrosoftGraphImportedWindowsAutopilotDeviceIdentityState) {
	o.State = v
}

func (o ImportedWindowsAutopilotDeviceIdentity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AssignedUserPrincipalName.IsSet() {
		toSerialize["assignedUserPrincipalName"] = o.AssignedUserPrincipalName.Get()
	}
	if o.GroupTag.IsSet() {
		toSerialize["groupTag"] = o.GroupTag.Get()
	}
	if o.HardwareIdentifier.IsSet() {
		toSerialize["hardwareIdentifier"] = o.HardwareIdentifier.Get()
	}
	if o.ImportId.IsSet() {
		toSerialize["importId"] = o.ImportId.Get()
	}
	if o.ProductKey.IsSet() {
		toSerialize["productKey"] = o.ProductKey.Get()
	}
	if o.SerialNumber.IsSet() {
		toSerialize["serialNumber"] = o.SerialNumber.Get()
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableImportedWindowsAutopilotDeviceIdentity struct {
	value *ImportedWindowsAutopilotDeviceIdentity
	isSet bool
}

func (v NullableImportedWindowsAutopilotDeviceIdentity) Get() *ImportedWindowsAutopilotDeviceIdentity {
	return v.value
}

func (v *NullableImportedWindowsAutopilotDeviceIdentity) Set(val *ImportedWindowsAutopilotDeviceIdentity) {
	v.value = val
	v.isSet = true
}

func (v NullableImportedWindowsAutopilotDeviceIdentity) IsSet() bool {
	return v.isSet
}

func (v *NullableImportedWindowsAutopilotDeviceIdentity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImportedWindowsAutopilotDeviceIdentity(val *ImportedWindowsAutopilotDeviceIdentity) *NullableImportedWindowsAutopilotDeviceIdentity {
	return &NullableImportedWindowsAutopilotDeviceIdentity{value: val, isSet: true}
}

func (v NullableImportedWindowsAutopilotDeviceIdentity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImportedWindowsAutopilotDeviceIdentity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


