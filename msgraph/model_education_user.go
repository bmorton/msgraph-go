/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"time"
)

// EducationUser struct for EducationUser
type EducationUser struct {
	// Related records related to the user. Possible relationships are parent, relative, aide, doctor, guardian, child, other, unknownFutureValue
	RelatedContacts *[]*AnyOfmicrosoftGraphRelatedContact `json:"relatedContacts,omitempty"`
	// True if the account is enabled; otherwise, false. This property is required when a user is created. Supports $filter.
	AccountEnabled NullableBool `json:"accountEnabled,omitempty"`
	// The licenses that are assigned to the user. Not nullable.
	AssignedLicenses *[]MicrosoftGraphAssignedLicense `json:"assignedLicenses,omitempty"`
	// The plans that are assigned to the user. Read-only. Not nullable.
	AssignedPlans *[]MicrosoftGraphAssignedPlan `json:"assignedPlans,omitempty"`
	// The telephone numbers for the user. Note: Although this is a string collection, only one number can be set for this property.
	BusinessPhones *[]string `json:"businessPhones,omitempty"`
	// Entity who created the user.
	CreatedBy AnyOfmicrosoftGraphIdentitySet `json:"createdBy,omitempty"`
	// The name for the department in which the user works. Supports $filter.
	Department NullableString `json:"department,omitempty"`
	// The name displayed in the address book for the user. This is usually the combination of the user's first name, middle initial, and last name. This property is required when a user is created and it cannot be cleared during updates. Supports $filter and $orderby.
	DisplayName NullableString `json:"displayName,omitempty"`
	// Where this user was created from. Possible values are: sis, manual.
	ExternalSource AnyOfmicrosoftGraphEducationExternalSource `json:"externalSource,omitempty"`
	// The name of the external source this resources was generated from.
	ExternalSourceDetail NullableString `json:"externalSourceDetail,omitempty"`
	// The given name (first name) of the user. Supports $filter.
	GivenName NullableString `json:"givenName,omitempty"`
	// The SMTP address for the user; for example, jeff@contoso.onmicrosoft.com. Read-Only. Supports $filter.
	Mail NullableString `json:"mail,omitempty"`
	// Mail address of user.
	MailingAddress AnyOfmicrosoftGraphPhysicalAddress `json:"mailingAddress,omitempty"`
	// The mail alias for the user. This property must be specified when a user is created. Supports $filter.
	MailNickname NullableString `json:"mailNickname,omitempty"`
	// The middle name of user.
	MiddleName NullableString `json:"middleName,omitempty"`
	// The primary cellular telephone number for the user.
	MobilePhone NullableString `json:"mobilePhone,omitempty"`
	OfficeLocation NullableString `json:"officeLocation,omitempty"`
	// Additional information used to associate the Azure AD user with its Active Directory counterpart.
	OnPremisesInfo AnyOfmicrosoftGraphEducationOnPremisesInfo `json:"onPremisesInfo,omitempty"`
	// Specifies password policies for the user. This value is an enumeration with one possible value being DisableStrongPassword, which allows weaker passwords than the default policy to be specified. DisablePasswordExpiration can also be specified. The two can be specified together; for example: DisablePasswordExpiration, DisableStrongPassword.
	PasswordPolicies NullableString `json:"passwordPolicies,omitempty"`
	// Specifies the password profile for the user. The profile contains the user's password. This property is required when a user is created. The password in the profile must satisfy minimum requirements as specified by the passwordPolicies property. By default, a strong password is required.
	PasswordProfile AnyOfmicrosoftGraphPasswordProfile `json:"passwordProfile,omitempty"`
	// The preferred language for the user. Should follow ISO 639-1 Code; for example, 'en-US'.
	PreferredLanguage NullableString `json:"preferredLanguage,omitempty"`
	// Default role for a user. The user's role might be different in an individual class. Possible values are: student, teacher, none, unknownFutureValue.
	PrimaryRole AnyOfmicrosoftGraphEducationUserRole `json:"primaryRole,omitempty"`
	// The plans that are provisioned for the user. Read-only. Not nullable.
	ProvisionedPlans *[]MicrosoftGraphProvisionedPlan `json:"provisionedPlans,omitempty"`
	RefreshTokensValidFromDateTime NullableTime `json:"refreshTokensValidFromDateTime,omitempty"`
	// Address where user lives.
	ResidenceAddress AnyOfmicrosoftGraphPhysicalAddress `json:"residenceAddress,omitempty"`
	// true if the Outlook global address list should contain this user, otherwise false. If not set, this will be treated as true. For users invited through the invitation manager, this property will be set to false.
	ShowInAddressList NullableBool `json:"showInAddressList,omitempty"`
	// If the primary role is student, this block will contain student specific data.
	Student AnyOfmicrosoftGraphEducationStudent `json:"student,omitempty"`
	// The user's surname (family name or last name). Supports $filter.
	Surname NullableString `json:"surname,omitempty"`
	// If the primary role is teacher, this block will contain teacher specific data.
	Teacher AnyOfmicrosoftGraphEducationTeacher `json:"teacher,omitempty"`
	// A two-letter country code (ISO standard 3166). Required for users who will be assigned licenses due to a legal requirement to check for availability of services in countries or regions. Examples include: 'US', 'JP', and 'GB'. Not nullable. Supports $filter.
	UsageLocation NullableString `json:"usageLocation,omitempty"`
	// The user principal name (UPN) of the user. The UPN is an Internet-style login name for the user based on the Internet standard RFC 822. By convention, this should map to the user's email name. The general format is alias@domain, where domain must be present in the tenant's collection of verified domains. This property is required when a user is created. The verified domains for the tenant can be accessed from the verifiedDomains property of organization. Supports $filter and $orderby.
	UserPrincipalName NullableString `json:"userPrincipalName,omitempty"`
	// A string value that can be used to classify user types in your directory, such as 'Member' and 'Guest'. Supports $filter.
	UserType NullableString `json:"userType,omitempty"`
	Rubrics *[]MicrosoftGraphEducationRubric `json:"rubrics,omitempty"`
	// Classes to which the user belongs. Nullable.
	Classes *[]MicrosoftGraphEducationClass `json:"classes,omitempty"`
	// Schools to which the user belongs. Nullable.
	Schools *[]MicrosoftGraphEducationSchool `json:"schools,omitempty"`
	// Classes for which the user is a teacher.
	TaughtClasses *[]MicrosoftGraphEducationClass `json:"taughtClasses,omitempty"`
	// The directory user corresponding to this user.
	User AnyOfmicrosoftGraphUser `json:"user,omitempty"`
}

// NewEducationUser instantiates a new EducationUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEducationUser() *EducationUser {
	this := EducationUser{}
	return &this
}

// NewEducationUserWithDefaults instantiates a new EducationUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEducationUserWithDefaults() *EducationUser {
	this := EducationUser{}
	return &this
}

// GetRelatedContacts returns the RelatedContacts field value if set, zero value otherwise.
func (o *EducationUser) GetRelatedContacts() []*AnyOfmicrosoftGraphRelatedContact {
	if o == nil || o.RelatedContacts == nil {
		var ret []*AnyOfmicrosoftGraphRelatedContact
		return ret
	}
	return *o.RelatedContacts
}

// GetRelatedContactsOk returns a tuple with the RelatedContacts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetRelatedContactsOk() (*[]*AnyOfmicrosoftGraphRelatedContact, bool) {
	if o == nil || o.RelatedContacts == nil {
		return nil, false
	}
	return o.RelatedContacts, true
}

// HasRelatedContacts returns a boolean if a field has been set.
func (o *EducationUser) HasRelatedContacts() bool {
	if o != nil && o.RelatedContacts != nil {
		return true
	}

	return false
}

// SetRelatedContacts gets a reference to the given []*AnyOfmicrosoftGraphRelatedContact and assigns it to the RelatedContacts field.
func (o *EducationUser) SetRelatedContacts(v []*AnyOfmicrosoftGraphRelatedContact) {
	o.RelatedContacts = &v
}

// GetAccountEnabled returns the AccountEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationUser) GetAccountEnabled() bool {
	if o == nil || o.AccountEnabled.Get() == nil {
		var ret bool
		return ret
	}
	return *o.AccountEnabled.Get()
}

// GetAccountEnabledOk returns a tuple with the AccountEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationUser) GetAccountEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AccountEnabled.Get(), o.AccountEnabled.IsSet()
}

// HasAccountEnabled returns a boolean if a field has been set.
func (o *EducationUser) HasAccountEnabled() bool {
	if o != nil && o.AccountEnabled.IsSet() {
		return true
	}

	return false
}

// SetAccountEnabled gets a reference to the given NullableBool and assigns it to the AccountEnabled field.
func (o *EducationUser) SetAccountEnabled(v bool) {
	o.AccountEnabled.Set(&v)
}
// SetAccountEnabledNil sets the value for AccountEnabled to be an explicit nil
func (o *EducationUser) SetAccountEnabledNil() {
	o.AccountEnabled.Set(nil)
}

// UnsetAccountEnabled ensures that no value is present for AccountEnabled, not even an explicit nil
func (o *EducationUser) UnsetAccountEnabled() {
	o.AccountEnabled.Unset()
}

// GetAssignedLicenses returns the AssignedLicenses field value if set, zero value otherwise.
func (o *EducationUser) GetAssignedLicenses() []MicrosoftGraphAssignedLicense {
	if o == nil || o.AssignedLicenses == nil {
		var ret []MicrosoftGraphAssignedLicense
		return ret
	}
	return *o.AssignedLicenses
}

// GetAssignedLicensesOk returns a tuple with the AssignedLicenses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetAssignedLicensesOk() (*[]MicrosoftGraphAssignedLicense, bool) {
	if o == nil || o.AssignedLicenses == nil {
		return nil, false
	}
	return o.AssignedLicenses, true
}

// HasAssignedLicenses returns a boolean if a field has been set.
func (o *EducationUser) HasAssignedLicenses() bool {
	if o != nil && o.AssignedLicenses != nil {
		return true
	}

	return false
}

// SetAssignedLicenses gets a reference to the given []MicrosoftGraphAssignedLicense and assigns it to the AssignedLicenses field.
func (o *EducationUser) SetAssignedLicenses(v []MicrosoftGraphAssignedLicense) {
	o.AssignedLicenses = &v
}

// GetAssignedPlans returns the AssignedPlans field value if set, zero value otherwise.
func (o *EducationUser) GetAssignedPlans() []MicrosoftGraphAssignedPlan {
	if o == nil || o.AssignedPlans == nil {
		var ret []MicrosoftGraphAssignedPlan
		return ret
	}
	return *o.AssignedPlans
}

// GetAssignedPlansOk returns a tuple with the AssignedPlans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetAssignedPlansOk() (*[]MicrosoftGraphAssignedPlan, bool) {
	if o == nil || o.AssignedPlans == nil {
		return nil, false
	}
	return o.AssignedPlans, true
}

// HasAssignedPlans returns a boolean if a field has been set.
func (o *EducationUser) HasAssignedPlans() bool {
	if o != nil && o.AssignedPlans != nil {
		return true
	}

	return false
}

// SetAssignedPlans gets a reference to the given []MicrosoftGraphAssignedPlan and assigns it to the AssignedPlans field.
func (o *EducationUser) SetAssignedPlans(v []MicrosoftGraphAssignedPlan) {
	o.AssignedPlans = &v
}

// GetBusinessPhones returns the BusinessPhones field value if set, zero value otherwise.
func (o *EducationUser) GetBusinessPhones() []string {
	if o == nil || o.BusinessPhones == nil {
		var ret []string
		return ret
	}
	return *o.BusinessPhones
}

// GetBusinessPhonesOk returns a tuple with the BusinessPhones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetBusinessPhonesOk() (*[]string, bool) {
	if o == nil || o.BusinessPhones == nil {
		return nil, false
	}
	return o.BusinessPhones, true
}

// HasBusinessPhones returns a boolean if a field has been set.
func (o *EducationUser) HasBusinessPhones() bool {
	if o != nil && o.BusinessPhones != nil {
		return true
	}

	return false
}

// SetBusinessPhones gets a reference to the given []string and assigns it to the BusinessPhones field.
func (o *EducationUser) SetBusinessPhones(v []string) {
	o.BusinessPhones = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationUser) GetCreatedBy() AnyOfmicrosoftGraphIdentitySet {
	if o == nil  {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret
	}
	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationUser) GetCreatedByOk() (*AnyOfmicrosoftGraphIdentitySet, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *EducationUser) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given AnyOfmicrosoftGraphIdentitySet and assigns it to the CreatedBy field.
func (o *EducationUser) SetCreatedBy(v AnyOfmicrosoftGraphIdentitySet) {
	o.CreatedBy = v
}

// GetDepartment returns the Department field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationUser) GetDepartment() string {
	if o == nil || o.Department.Get() == nil {
		var ret string
		return ret
	}
	return *o.Department.Get()
}

// GetDepartmentOk returns a tuple with the Department field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationUser) GetDepartmentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Department.Get(), o.Department.IsSet()
}

// HasDepartment returns a boolean if a field has been set.
func (o *EducationUser) HasDepartment() bool {
	if o != nil && o.Department.IsSet() {
		return true
	}

	return false
}

// SetDepartment gets a reference to the given NullableString and assigns it to the Department field.
func (o *EducationUser) SetDepartment(v string) {
	o.Department.Set(&v)
}
// SetDepartmentNil sets the value for Department to be an explicit nil
func (o *EducationUser) SetDepartmentNil() {
	o.Department.Set(nil)
}

// UnsetDepartment ensures that no value is present for Department, not even an explicit nil
func (o *EducationUser) UnsetDepartment() {
	o.Department.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationUser) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationUser) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *EducationUser) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *EducationUser) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *EducationUser) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *EducationUser) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetExternalSource returns the ExternalSource field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationUser) GetExternalSource() AnyOfmicrosoftGraphEducationExternalSource {
	if o == nil  {
		var ret AnyOfmicrosoftGraphEducationExternalSource
		return ret
	}
	return o.ExternalSource
}

// GetExternalSourceOk returns a tuple with the ExternalSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationUser) GetExternalSourceOk() (*AnyOfmicrosoftGraphEducationExternalSource, bool) {
	if o == nil || o.ExternalSource == nil {
		return nil, false
	}
	return &o.ExternalSource, true
}

// HasExternalSource returns a boolean if a field has been set.
func (o *EducationUser) HasExternalSource() bool {
	if o != nil && o.ExternalSource != nil {
		return true
	}

	return false
}

// SetExternalSource gets a reference to the given AnyOfmicrosoftGraphEducationExternalSource and assigns it to the ExternalSource field.
func (o *EducationUser) SetExternalSource(v AnyOfmicrosoftGraphEducationExternalSource) {
	o.ExternalSource = v
}

// GetExternalSourceDetail returns the ExternalSourceDetail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationUser) GetExternalSourceDetail() string {
	if o == nil || o.ExternalSourceDetail.Get() == nil {
		var ret string
		return ret
	}
	return *o.ExternalSourceDetail.Get()
}

// GetExternalSourceDetailOk returns a tuple with the ExternalSourceDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationUser) GetExternalSourceDetailOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExternalSourceDetail.Get(), o.ExternalSourceDetail.IsSet()
}

// HasExternalSourceDetail returns a boolean if a field has been set.
func (o *EducationUser) HasExternalSourceDetail() bool {
	if o != nil && o.ExternalSourceDetail.IsSet() {
		return true
	}

	return false
}

// SetExternalSourceDetail gets a reference to the given NullableString and assigns it to the ExternalSourceDetail field.
func (o *EducationUser) SetExternalSourceDetail(v string) {
	o.ExternalSourceDetail.Set(&v)
}
// SetExternalSourceDetailNil sets the value for ExternalSourceDetail to be an explicit nil
func (o *EducationUser) SetExternalSourceDetailNil() {
	o.ExternalSourceDetail.Set(nil)
}

// UnsetExternalSourceDetail ensures that no value is present for ExternalSourceDetail, not even an explicit nil
func (o *EducationUser) UnsetExternalSourceDetail() {
	o.ExternalSourceDetail.Unset()
}

// GetGivenName returns the GivenName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationUser) GetGivenName() string {
	if o == nil || o.GivenName.Get() == nil {
		var ret string
		return ret
	}
	return *o.GivenName.Get()
}

// GetGivenNameOk returns a tuple with the GivenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationUser) GetGivenNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.GivenName.Get(), o.GivenName.IsSet()
}

// HasGivenName returns a boolean if a field has been set.
func (o *EducationUser) HasGivenName() bool {
	if o != nil && o.GivenName.IsSet() {
		return true
	}

	return false
}

// SetGivenName gets a reference to the given NullableString and assigns it to the GivenName field.
func (o *EducationUser) SetGivenName(v string) {
	o.GivenName.Set(&v)
}
// SetGivenNameNil sets the value for GivenName to be an explicit nil
func (o *EducationUser) SetGivenNameNil() {
	o.GivenName.Set(nil)
}

// UnsetGivenName ensures that no value is present for GivenName, not even an explicit nil
func (o *EducationUser) UnsetGivenName() {
	o.GivenName.Unset()
}

// GetMail returns the Mail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationUser) GetMail() string {
	if o == nil || o.Mail.Get() == nil {
		var ret string
		return ret
	}
	return *o.Mail.Get()
}

// GetMailOk returns a tuple with the Mail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationUser) GetMailOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Mail.Get(), o.Mail.IsSet()
}

// HasMail returns a boolean if a field has been set.
func (o *EducationUser) HasMail() bool {
	if o != nil && o.Mail.IsSet() {
		return true
	}

	return false
}

// SetMail gets a reference to the given NullableString and assigns it to the Mail field.
func (o *EducationUser) SetMail(v string) {
	o.Mail.Set(&v)
}
// SetMailNil sets the value for Mail to be an explicit nil
func (o *EducationUser) SetMailNil() {
	o.Mail.Set(nil)
}

// UnsetMail ensures that no value is present for Mail, not even an explicit nil
func (o *EducationUser) UnsetMail() {
	o.Mail.Unset()
}

// GetMailingAddress returns the MailingAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationUser) GetMailingAddress() AnyOfmicrosoftGraphPhysicalAddress {
	if o == nil  {
		var ret AnyOfmicrosoftGraphPhysicalAddress
		return ret
	}
	return o.MailingAddress
}

// GetMailingAddressOk returns a tuple with the MailingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationUser) GetMailingAddressOk() (*AnyOfmicrosoftGraphPhysicalAddress, bool) {
	if o == nil || o.MailingAddress == nil {
		return nil, false
	}
	return &o.MailingAddress, true
}

// HasMailingAddress returns a boolean if a field has been set.
func (o *EducationUser) HasMailingAddress() bool {
	if o != nil && o.MailingAddress != nil {
		return true
	}

	return false
}

// SetMailingAddress gets a reference to the given AnyOfmicrosoftGraphPhysicalAddress and assigns it to the MailingAddress field.
func (o *EducationUser) SetMailingAddress(v AnyOfmicrosoftGraphPhysicalAddress) {
	o.MailingAddress = v
}

// GetMailNickname returns the MailNickname field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationUser) GetMailNickname() string {
	if o == nil || o.MailNickname.Get() == nil {
		var ret string
		return ret
	}
	return *o.MailNickname.Get()
}

// GetMailNicknameOk returns a tuple with the MailNickname field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationUser) GetMailNicknameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MailNickname.Get(), o.MailNickname.IsSet()
}

// HasMailNickname returns a boolean if a field has been set.
func (o *EducationUser) HasMailNickname() bool {
	if o != nil && o.MailNickname.IsSet() {
		return true
	}

	return false
}

// SetMailNickname gets a reference to the given NullableString and assigns it to the MailNickname field.
func (o *EducationUser) SetMailNickname(v string) {
	o.MailNickname.Set(&v)
}
// SetMailNicknameNil sets the value for MailNickname to be an explicit nil
func (o *EducationUser) SetMailNicknameNil() {
	o.MailNickname.Set(nil)
}

// UnsetMailNickname ensures that no value is present for MailNickname, not even an explicit nil
func (o *EducationUser) UnsetMailNickname() {
	o.MailNickname.Unset()
}

// GetMiddleName returns the MiddleName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationUser) GetMiddleName() string {
	if o == nil || o.MiddleName.Get() == nil {
		var ret string
		return ret
	}
	return *o.MiddleName.Get()
}

// GetMiddleNameOk returns a tuple with the MiddleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationUser) GetMiddleNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MiddleName.Get(), o.MiddleName.IsSet()
}

// HasMiddleName returns a boolean if a field has been set.
func (o *EducationUser) HasMiddleName() bool {
	if o != nil && o.MiddleName.IsSet() {
		return true
	}

	return false
}

// SetMiddleName gets a reference to the given NullableString and assigns it to the MiddleName field.
func (o *EducationUser) SetMiddleName(v string) {
	o.MiddleName.Set(&v)
}
// SetMiddleNameNil sets the value for MiddleName to be an explicit nil
func (o *EducationUser) SetMiddleNameNil() {
	o.MiddleName.Set(nil)
}

// UnsetMiddleName ensures that no value is present for MiddleName, not even an explicit nil
func (o *EducationUser) UnsetMiddleName() {
	o.MiddleName.Unset()
}

// GetMobilePhone returns the MobilePhone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationUser) GetMobilePhone() string {
	if o == nil || o.MobilePhone.Get() == nil {
		var ret string
		return ret
	}
	return *o.MobilePhone.Get()
}

// GetMobilePhoneOk returns a tuple with the MobilePhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationUser) GetMobilePhoneOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MobilePhone.Get(), o.MobilePhone.IsSet()
}

// HasMobilePhone returns a boolean if a field has been set.
func (o *EducationUser) HasMobilePhone() bool {
	if o != nil && o.MobilePhone.IsSet() {
		return true
	}

	return false
}

// SetMobilePhone gets a reference to the given NullableString and assigns it to the MobilePhone field.
func (o *EducationUser) SetMobilePhone(v string) {
	o.MobilePhone.Set(&v)
}
// SetMobilePhoneNil sets the value for MobilePhone to be an explicit nil
func (o *EducationUser) SetMobilePhoneNil() {
	o.MobilePhone.Set(nil)
}

// UnsetMobilePhone ensures that no value is present for MobilePhone, not even an explicit nil
func (o *EducationUser) UnsetMobilePhone() {
	o.MobilePhone.Unset()
}

// GetOfficeLocation returns the OfficeLocation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationUser) GetOfficeLocation() string {
	if o == nil || o.OfficeLocation.Get() == nil {
		var ret string
		return ret
	}
	return *o.OfficeLocation.Get()
}

// GetOfficeLocationOk returns a tuple with the OfficeLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationUser) GetOfficeLocationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OfficeLocation.Get(), o.OfficeLocation.IsSet()
}

// HasOfficeLocation returns a boolean if a field has been set.
func (o *EducationUser) HasOfficeLocation() bool {
	if o != nil && o.OfficeLocation.IsSet() {
		return true
	}

	return false
}

// SetOfficeLocation gets a reference to the given NullableString and assigns it to the OfficeLocation field.
func (o *EducationUser) SetOfficeLocation(v string) {
	o.OfficeLocation.Set(&v)
}
// SetOfficeLocationNil sets the value for OfficeLocation to be an explicit nil
func (o *EducationUser) SetOfficeLocationNil() {
	o.OfficeLocation.Set(nil)
}

// UnsetOfficeLocation ensures that no value is present for OfficeLocation, not even an explicit nil
func (o *EducationUser) UnsetOfficeLocation() {
	o.OfficeLocation.Unset()
}

// GetOnPremisesInfo returns the OnPremisesInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationUser) GetOnPremisesInfo() AnyOfmicrosoftGraphEducationOnPremisesInfo {
	if o == nil  {
		var ret AnyOfmicrosoftGraphEducationOnPremisesInfo
		return ret
	}
	return o.OnPremisesInfo
}

// GetOnPremisesInfoOk returns a tuple with the OnPremisesInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationUser) GetOnPremisesInfoOk() (*AnyOfmicrosoftGraphEducationOnPremisesInfo, bool) {
	if o == nil || o.OnPremisesInfo == nil {
		return nil, false
	}
	return &o.OnPremisesInfo, true
}

// HasOnPremisesInfo returns a boolean if a field has been set.
func (o *EducationUser) HasOnPremisesInfo() bool {
	if o != nil && o.OnPremisesInfo != nil {
		return true
	}

	return false
}

// SetOnPremisesInfo gets a reference to the given AnyOfmicrosoftGraphEducationOnPremisesInfo and assigns it to the OnPremisesInfo field.
func (o *EducationUser) SetOnPremisesInfo(v AnyOfmicrosoftGraphEducationOnPremisesInfo) {
	o.OnPremisesInfo = v
}

// GetPasswordPolicies returns the PasswordPolicies field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationUser) GetPasswordPolicies() string {
	if o == nil || o.PasswordPolicies.Get() == nil {
		var ret string
		return ret
	}
	return *o.PasswordPolicies.Get()
}

// GetPasswordPoliciesOk returns a tuple with the PasswordPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationUser) GetPasswordPoliciesOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PasswordPolicies.Get(), o.PasswordPolicies.IsSet()
}

// HasPasswordPolicies returns a boolean if a field has been set.
func (o *EducationUser) HasPasswordPolicies() bool {
	if o != nil && o.PasswordPolicies.IsSet() {
		return true
	}

	return false
}

// SetPasswordPolicies gets a reference to the given NullableString and assigns it to the PasswordPolicies field.
func (o *EducationUser) SetPasswordPolicies(v string) {
	o.PasswordPolicies.Set(&v)
}
// SetPasswordPoliciesNil sets the value for PasswordPolicies to be an explicit nil
func (o *EducationUser) SetPasswordPoliciesNil() {
	o.PasswordPolicies.Set(nil)
}

// UnsetPasswordPolicies ensures that no value is present for PasswordPolicies, not even an explicit nil
func (o *EducationUser) UnsetPasswordPolicies() {
	o.PasswordPolicies.Unset()
}

// GetPasswordProfile returns the PasswordProfile field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationUser) GetPasswordProfile() AnyOfmicrosoftGraphPasswordProfile {
	if o == nil  {
		var ret AnyOfmicrosoftGraphPasswordProfile
		return ret
	}
	return o.PasswordProfile
}

// GetPasswordProfileOk returns a tuple with the PasswordProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationUser) GetPasswordProfileOk() (*AnyOfmicrosoftGraphPasswordProfile, bool) {
	if o == nil || o.PasswordProfile == nil {
		return nil, false
	}
	return &o.PasswordProfile, true
}

// HasPasswordProfile returns a boolean if a field has been set.
func (o *EducationUser) HasPasswordProfile() bool {
	if o != nil && o.PasswordProfile != nil {
		return true
	}

	return false
}

// SetPasswordProfile gets a reference to the given AnyOfmicrosoftGraphPasswordProfile and assigns it to the PasswordProfile field.
func (o *EducationUser) SetPasswordProfile(v AnyOfmicrosoftGraphPasswordProfile) {
	o.PasswordProfile = v
}

// GetPreferredLanguage returns the PreferredLanguage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationUser) GetPreferredLanguage() string {
	if o == nil || o.PreferredLanguage.Get() == nil {
		var ret string
		return ret
	}
	return *o.PreferredLanguage.Get()
}

// GetPreferredLanguageOk returns a tuple with the PreferredLanguage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationUser) GetPreferredLanguageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PreferredLanguage.Get(), o.PreferredLanguage.IsSet()
}

// HasPreferredLanguage returns a boolean if a field has been set.
func (o *EducationUser) HasPreferredLanguage() bool {
	if o != nil && o.PreferredLanguage.IsSet() {
		return true
	}

	return false
}

// SetPreferredLanguage gets a reference to the given NullableString and assigns it to the PreferredLanguage field.
func (o *EducationUser) SetPreferredLanguage(v string) {
	o.PreferredLanguage.Set(&v)
}
// SetPreferredLanguageNil sets the value for PreferredLanguage to be an explicit nil
func (o *EducationUser) SetPreferredLanguageNil() {
	o.PreferredLanguage.Set(nil)
}

// UnsetPreferredLanguage ensures that no value is present for PreferredLanguage, not even an explicit nil
func (o *EducationUser) UnsetPreferredLanguage() {
	o.PreferredLanguage.Unset()
}

// GetPrimaryRole returns the PrimaryRole field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationUser) GetPrimaryRole() AnyOfmicrosoftGraphEducationUserRole {
	if o == nil  {
		var ret AnyOfmicrosoftGraphEducationUserRole
		return ret
	}
	return o.PrimaryRole
}

// GetPrimaryRoleOk returns a tuple with the PrimaryRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationUser) GetPrimaryRoleOk() (*AnyOfmicrosoftGraphEducationUserRole, bool) {
	if o == nil || o.PrimaryRole == nil {
		return nil, false
	}
	return &o.PrimaryRole, true
}

// HasPrimaryRole returns a boolean if a field has been set.
func (o *EducationUser) HasPrimaryRole() bool {
	if o != nil && o.PrimaryRole != nil {
		return true
	}

	return false
}

// SetPrimaryRole gets a reference to the given AnyOfmicrosoftGraphEducationUserRole and assigns it to the PrimaryRole field.
func (o *EducationUser) SetPrimaryRole(v AnyOfmicrosoftGraphEducationUserRole) {
	o.PrimaryRole = v
}

// GetProvisionedPlans returns the ProvisionedPlans field value if set, zero value otherwise.
func (o *EducationUser) GetProvisionedPlans() []MicrosoftGraphProvisionedPlan {
	if o == nil || o.ProvisionedPlans == nil {
		var ret []MicrosoftGraphProvisionedPlan
		return ret
	}
	return *o.ProvisionedPlans
}

// GetProvisionedPlansOk returns a tuple with the ProvisionedPlans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetProvisionedPlansOk() (*[]MicrosoftGraphProvisionedPlan, bool) {
	if o == nil || o.ProvisionedPlans == nil {
		return nil, false
	}
	return o.ProvisionedPlans, true
}

// HasProvisionedPlans returns a boolean if a field has been set.
func (o *EducationUser) HasProvisionedPlans() bool {
	if o != nil && o.ProvisionedPlans != nil {
		return true
	}

	return false
}

// SetProvisionedPlans gets a reference to the given []MicrosoftGraphProvisionedPlan and assigns it to the ProvisionedPlans field.
func (o *EducationUser) SetProvisionedPlans(v []MicrosoftGraphProvisionedPlan) {
	o.ProvisionedPlans = &v
}

// GetRefreshTokensValidFromDateTime returns the RefreshTokensValidFromDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationUser) GetRefreshTokensValidFromDateTime() time.Time {
	if o == nil || o.RefreshTokensValidFromDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.RefreshTokensValidFromDateTime.Get()
}

// GetRefreshTokensValidFromDateTimeOk returns a tuple with the RefreshTokensValidFromDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationUser) GetRefreshTokensValidFromDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RefreshTokensValidFromDateTime.Get(), o.RefreshTokensValidFromDateTime.IsSet()
}

// HasRefreshTokensValidFromDateTime returns a boolean if a field has been set.
func (o *EducationUser) HasRefreshTokensValidFromDateTime() bool {
	if o != nil && o.RefreshTokensValidFromDateTime.IsSet() {
		return true
	}

	return false
}

// SetRefreshTokensValidFromDateTime gets a reference to the given NullableTime and assigns it to the RefreshTokensValidFromDateTime field.
func (o *EducationUser) SetRefreshTokensValidFromDateTime(v time.Time) {
	o.RefreshTokensValidFromDateTime.Set(&v)
}
// SetRefreshTokensValidFromDateTimeNil sets the value for RefreshTokensValidFromDateTime to be an explicit nil
func (o *EducationUser) SetRefreshTokensValidFromDateTimeNil() {
	o.RefreshTokensValidFromDateTime.Set(nil)
}

// UnsetRefreshTokensValidFromDateTime ensures that no value is present for RefreshTokensValidFromDateTime, not even an explicit nil
func (o *EducationUser) UnsetRefreshTokensValidFromDateTime() {
	o.RefreshTokensValidFromDateTime.Unset()
}

// GetResidenceAddress returns the ResidenceAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationUser) GetResidenceAddress() AnyOfmicrosoftGraphPhysicalAddress {
	if o == nil  {
		var ret AnyOfmicrosoftGraphPhysicalAddress
		return ret
	}
	return o.ResidenceAddress
}

// GetResidenceAddressOk returns a tuple with the ResidenceAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationUser) GetResidenceAddressOk() (*AnyOfmicrosoftGraphPhysicalAddress, bool) {
	if o == nil || o.ResidenceAddress == nil {
		return nil, false
	}
	return &o.ResidenceAddress, true
}

// HasResidenceAddress returns a boolean if a field has been set.
func (o *EducationUser) HasResidenceAddress() bool {
	if o != nil && o.ResidenceAddress != nil {
		return true
	}

	return false
}

// SetResidenceAddress gets a reference to the given AnyOfmicrosoftGraphPhysicalAddress and assigns it to the ResidenceAddress field.
func (o *EducationUser) SetResidenceAddress(v AnyOfmicrosoftGraphPhysicalAddress) {
	o.ResidenceAddress = v
}

// GetShowInAddressList returns the ShowInAddressList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationUser) GetShowInAddressList() bool {
	if o == nil || o.ShowInAddressList.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ShowInAddressList.Get()
}

// GetShowInAddressListOk returns a tuple with the ShowInAddressList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationUser) GetShowInAddressListOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ShowInAddressList.Get(), o.ShowInAddressList.IsSet()
}

// HasShowInAddressList returns a boolean if a field has been set.
func (o *EducationUser) HasShowInAddressList() bool {
	if o != nil && o.ShowInAddressList.IsSet() {
		return true
	}

	return false
}

// SetShowInAddressList gets a reference to the given NullableBool and assigns it to the ShowInAddressList field.
func (o *EducationUser) SetShowInAddressList(v bool) {
	o.ShowInAddressList.Set(&v)
}
// SetShowInAddressListNil sets the value for ShowInAddressList to be an explicit nil
func (o *EducationUser) SetShowInAddressListNil() {
	o.ShowInAddressList.Set(nil)
}

// UnsetShowInAddressList ensures that no value is present for ShowInAddressList, not even an explicit nil
func (o *EducationUser) UnsetShowInAddressList() {
	o.ShowInAddressList.Unset()
}

// GetStudent returns the Student field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationUser) GetStudent() AnyOfmicrosoftGraphEducationStudent {
	if o == nil  {
		var ret AnyOfmicrosoftGraphEducationStudent
		return ret
	}
	return o.Student
}

// GetStudentOk returns a tuple with the Student field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationUser) GetStudentOk() (*AnyOfmicrosoftGraphEducationStudent, bool) {
	if o == nil || o.Student == nil {
		return nil, false
	}
	return &o.Student, true
}

// HasStudent returns a boolean if a field has been set.
func (o *EducationUser) HasStudent() bool {
	if o != nil && o.Student != nil {
		return true
	}

	return false
}

// SetStudent gets a reference to the given AnyOfmicrosoftGraphEducationStudent and assigns it to the Student field.
func (o *EducationUser) SetStudent(v AnyOfmicrosoftGraphEducationStudent) {
	o.Student = v
}

// GetSurname returns the Surname field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationUser) GetSurname() string {
	if o == nil || o.Surname.Get() == nil {
		var ret string
		return ret
	}
	return *o.Surname.Get()
}

// GetSurnameOk returns a tuple with the Surname field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationUser) GetSurnameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Surname.Get(), o.Surname.IsSet()
}

// HasSurname returns a boolean if a field has been set.
func (o *EducationUser) HasSurname() bool {
	if o != nil && o.Surname.IsSet() {
		return true
	}

	return false
}

// SetSurname gets a reference to the given NullableString and assigns it to the Surname field.
func (o *EducationUser) SetSurname(v string) {
	o.Surname.Set(&v)
}
// SetSurnameNil sets the value for Surname to be an explicit nil
func (o *EducationUser) SetSurnameNil() {
	o.Surname.Set(nil)
}

// UnsetSurname ensures that no value is present for Surname, not even an explicit nil
func (o *EducationUser) UnsetSurname() {
	o.Surname.Unset()
}

// GetTeacher returns the Teacher field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationUser) GetTeacher() AnyOfmicrosoftGraphEducationTeacher {
	if o == nil  {
		var ret AnyOfmicrosoftGraphEducationTeacher
		return ret
	}
	return o.Teacher
}

// GetTeacherOk returns a tuple with the Teacher field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationUser) GetTeacherOk() (*AnyOfmicrosoftGraphEducationTeacher, bool) {
	if o == nil || o.Teacher == nil {
		return nil, false
	}
	return &o.Teacher, true
}

// HasTeacher returns a boolean if a field has been set.
func (o *EducationUser) HasTeacher() bool {
	if o != nil && o.Teacher != nil {
		return true
	}

	return false
}

// SetTeacher gets a reference to the given AnyOfmicrosoftGraphEducationTeacher and assigns it to the Teacher field.
func (o *EducationUser) SetTeacher(v AnyOfmicrosoftGraphEducationTeacher) {
	o.Teacher = v
}

// GetUsageLocation returns the UsageLocation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationUser) GetUsageLocation() string {
	if o == nil || o.UsageLocation.Get() == nil {
		var ret string
		return ret
	}
	return *o.UsageLocation.Get()
}

// GetUsageLocationOk returns a tuple with the UsageLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationUser) GetUsageLocationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UsageLocation.Get(), o.UsageLocation.IsSet()
}

// HasUsageLocation returns a boolean if a field has been set.
func (o *EducationUser) HasUsageLocation() bool {
	if o != nil && o.UsageLocation.IsSet() {
		return true
	}

	return false
}

// SetUsageLocation gets a reference to the given NullableString and assigns it to the UsageLocation field.
func (o *EducationUser) SetUsageLocation(v string) {
	o.UsageLocation.Set(&v)
}
// SetUsageLocationNil sets the value for UsageLocation to be an explicit nil
func (o *EducationUser) SetUsageLocationNil() {
	o.UsageLocation.Set(nil)
}

// UnsetUsageLocation ensures that no value is present for UsageLocation, not even an explicit nil
func (o *EducationUser) UnsetUsageLocation() {
	o.UsageLocation.Unset()
}

// GetUserPrincipalName returns the UserPrincipalName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationUser) GetUserPrincipalName() string {
	if o == nil || o.UserPrincipalName.Get() == nil {
		var ret string
		return ret
	}
	return *o.UserPrincipalName.Get()
}

// GetUserPrincipalNameOk returns a tuple with the UserPrincipalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationUser) GetUserPrincipalNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UserPrincipalName.Get(), o.UserPrincipalName.IsSet()
}

// HasUserPrincipalName returns a boolean if a field has been set.
func (o *EducationUser) HasUserPrincipalName() bool {
	if o != nil && o.UserPrincipalName.IsSet() {
		return true
	}

	return false
}

// SetUserPrincipalName gets a reference to the given NullableString and assigns it to the UserPrincipalName field.
func (o *EducationUser) SetUserPrincipalName(v string) {
	o.UserPrincipalName.Set(&v)
}
// SetUserPrincipalNameNil sets the value for UserPrincipalName to be an explicit nil
func (o *EducationUser) SetUserPrincipalNameNil() {
	o.UserPrincipalName.Set(nil)
}

// UnsetUserPrincipalName ensures that no value is present for UserPrincipalName, not even an explicit nil
func (o *EducationUser) UnsetUserPrincipalName() {
	o.UserPrincipalName.Unset()
}

// GetUserType returns the UserType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationUser) GetUserType() string {
	if o == nil || o.UserType.Get() == nil {
		var ret string
		return ret
	}
	return *o.UserType.Get()
}

// GetUserTypeOk returns a tuple with the UserType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationUser) GetUserTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UserType.Get(), o.UserType.IsSet()
}

// HasUserType returns a boolean if a field has been set.
func (o *EducationUser) HasUserType() bool {
	if o != nil && o.UserType.IsSet() {
		return true
	}

	return false
}

// SetUserType gets a reference to the given NullableString and assigns it to the UserType field.
func (o *EducationUser) SetUserType(v string) {
	o.UserType.Set(&v)
}
// SetUserTypeNil sets the value for UserType to be an explicit nil
func (o *EducationUser) SetUserTypeNil() {
	o.UserType.Set(nil)
}

// UnsetUserType ensures that no value is present for UserType, not even an explicit nil
func (o *EducationUser) UnsetUserType() {
	o.UserType.Unset()
}

// GetRubrics returns the Rubrics field value if set, zero value otherwise.
func (o *EducationUser) GetRubrics() []MicrosoftGraphEducationRubric {
	if o == nil || o.Rubrics == nil {
		var ret []MicrosoftGraphEducationRubric
		return ret
	}
	return *o.Rubrics
}

// GetRubricsOk returns a tuple with the Rubrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetRubricsOk() (*[]MicrosoftGraphEducationRubric, bool) {
	if o == nil || o.Rubrics == nil {
		return nil, false
	}
	return o.Rubrics, true
}

// HasRubrics returns a boolean if a field has been set.
func (o *EducationUser) HasRubrics() bool {
	if o != nil && o.Rubrics != nil {
		return true
	}

	return false
}

// SetRubrics gets a reference to the given []MicrosoftGraphEducationRubric and assigns it to the Rubrics field.
func (o *EducationUser) SetRubrics(v []MicrosoftGraphEducationRubric) {
	o.Rubrics = &v
}

// GetClasses returns the Classes field value if set, zero value otherwise.
func (o *EducationUser) GetClasses() []MicrosoftGraphEducationClass {
	if o == nil || o.Classes == nil {
		var ret []MicrosoftGraphEducationClass
		return ret
	}
	return *o.Classes
}

// GetClassesOk returns a tuple with the Classes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetClassesOk() (*[]MicrosoftGraphEducationClass, bool) {
	if o == nil || o.Classes == nil {
		return nil, false
	}
	return o.Classes, true
}

// HasClasses returns a boolean if a field has been set.
func (o *EducationUser) HasClasses() bool {
	if o != nil && o.Classes != nil {
		return true
	}

	return false
}

// SetClasses gets a reference to the given []MicrosoftGraphEducationClass and assigns it to the Classes field.
func (o *EducationUser) SetClasses(v []MicrosoftGraphEducationClass) {
	o.Classes = &v
}

// GetSchools returns the Schools field value if set, zero value otherwise.
func (o *EducationUser) GetSchools() []MicrosoftGraphEducationSchool {
	if o == nil || o.Schools == nil {
		var ret []MicrosoftGraphEducationSchool
		return ret
	}
	return *o.Schools
}

// GetSchoolsOk returns a tuple with the Schools field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetSchoolsOk() (*[]MicrosoftGraphEducationSchool, bool) {
	if o == nil || o.Schools == nil {
		return nil, false
	}
	return o.Schools, true
}

// HasSchools returns a boolean if a field has been set.
func (o *EducationUser) HasSchools() bool {
	if o != nil && o.Schools != nil {
		return true
	}

	return false
}

// SetSchools gets a reference to the given []MicrosoftGraphEducationSchool and assigns it to the Schools field.
func (o *EducationUser) SetSchools(v []MicrosoftGraphEducationSchool) {
	o.Schools = &v
}

// GetTaughtClasses returns the TaughtClasses field value if set, zero value otherwise.
func (o *EducationUser) GetTaughtClasses() []MicrosoftGraphEducationClass {
	if o == nil || o.TaughtClasses == nil {
		var ret []MicrosoftGraphEducationClass
		return ret
	}
	return *o.TaughtClasses
}

// GetTaughtClassesOk returns a tuple with the TaughtClasses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetTaughtClassesOk() (*[]MicrosoftGraphEducationClass, bool) {
	if o == nil || o.TaughtClasses == nil {
		return nil, false
	}
	return o.TaughtClasses, true
}

// HasTaughtClasses returns a boolean if a field has been set.
func (o *EducationUser) HasTaughtClasses() bool {
	if o != nil && o.TaughtClasses != nil {
		return true
	}

	return false
}

// SetTaughtClasses gets a reference to the given []MicrosoftGraphEducationClass and assigns it to the TaughtClasses field.
func (o *EducationUser) SetTaughtClasses(v []MicrosoftGraphEducationClass) {
	o.TaughtClasses = &v
}

// GetUser returns the User field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationUser) GetUser() AnyOfmicrosoftGraphUser {
	if o == nil  {
		var ret AnyOfmicrosoftGraphUser
		return ret
	}
	return o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationUser) GetUserOk() (*AnyOfmicrosoftGraphUser, bool) {
	if o == nil || o.User == nil {
		return nil, false
	}
	return &o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *EducationUser) HasUser() bool {
	if o != nil && o.User != nil {
		return true
	}

	return false
}

// SetUser gets a reference to the given AnyOfmicrosoftGraphUser and assigns it to the User field.
func (o *EducationUser) SetUser(v AnyOfmicrosoftGraphUser) {
	o.User = v
}

func (o EducationUser) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RelatedContacts != nil {
		toSerialize["relatedContacts"] = o.RelatedContacts
	}
	if o.AccountEnabled.IsSet() {
		toSerialize["accountEnabled"] = o.AccountEnabled.Get()
	}
	if o.AssignedLicenses != nil {
		toSerialize["assignedLicenses"] = o.AssignedLicenses
	}
	if o.AssignedPlans != nil {
		toSerialize["assignedPlans"] = o.AssignedPlans
	}
	if o.BusinessPhones != nil {
		toSerialize["businessPhones"] = o.BusinessPhones
	}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.Department.IsSet() {
		toSerialize["department"] = o.Department.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.ExternalSource != nil {
		toSerialize["externalSource"] = o.ExternalSource
	}
	if o.ExternalSourceDetail.IsSet() {
		toSerialize["externalSourceDetail"] = o.ExternalSourceDetail.Get()
	}
	if o.GivenName.IsSet() {
		toSerialize["givenName"] = o.GivenName.Get()
	}
	if o.Mail.IsSet() {
		toSerialize["mail"] = o.Mail.Get()
	}
	if o.MailingAddress != nil {
		toSerialize["mailingAddress"] = o.MailingAddress
	}
	if o.MailNickname.IsSet() {
		toSerialize["mailNickname"] = o.MailNickname.Get()
	}
	if o.MiddleName.IsSet() {
		toSerialize["middleName"] = o.MiddleName.Get()
	}
	if o.MobilePhone.IsSet() {
		toSerialize["mobilePhone"] = o.MobilePhone.Get()
	}
	if o.OfficeLocation.IsSet() {
		toSerialize["officeLocation"] = o.OfficeLocation.Get()
	}
	if o.OnPremisesInfo != nil {
		toSerialize["onPremisesInfo"] = o.OnPremisesInfo
	}
	if o.PasswordPolicies.IsSet() {
		toSerialize["passwordPolicies"] = o.PasswordPolicies.Get()
	}
	if o.PasswordProfile != nil {
		toSerialize["passwordProfile"] = o.PasswordProfile
	}
	if o.PreferredLanguage.IsSet() {
		toSerialize["preferredLanguage"] = o.PreferredLanguage.Get()
	}
	if o.PrimaryRole != nil {
		toSerialize["primaryRole"] = o.PrimaryRole
	}
	if o.ProvisionedPlans != nil {
		toSerialize["provisionedPlans"] = o.ProvisionedPlans
	}
	if o.RefreshTokensValidFromDateTime.IsSet() {
		toSerialize["refreshTokensValidFromDateTime"] = o.RefreshTokensValidFromDateTime.Get()
	}
	if o.ResidenceAddress != nil {
		toSerialize["residenceAddress"] = o.ResidenceAddress
	}
	if o.ShowInAddressList.IsSet() {
		toSerialize["showInAddressList"] = o.ShowInAddressList.Get()
	}
	if o.Student != nil {
		toSerialize["student"] = o.Student
	}
	if o.Surname.IsSet() {
		toSerialize["surname"] = o.Surname.Get()
	}
	if o.Teacher != nil {
		toSerialize["teacher"] = o.Teacher
	}
	if o.UsageLocation.IsSet() {
		toSerialize["usageLocation"] = o.UsageLocation.Get()
	}
	if o.UserPrincipalName.IsSet() {
		toSerialize["userPrincipalName"] = o.UserPrincipalName.Get()
	}
	if o.UserType.IsSet() {
		toSerialize["userType"] = o.UserType.Get()
	}
	if o.Rubrics != nil {
		toSerialize["rubrics"] = o.Rubrics
	}
	if o.Classes != nil {
		toSerialize["classes"] = o.Classes
	}
	if o.Schools != nil {
		toSerialize["schools"] = o.Schools
	}
	if o.TaughtClasses != nil {
		toSerialize["taughtClasses"] = o.TaughtClasses
	}
	if o.User != nil {
		toSerialize["user"] = o.User
	}
	return json.Marshal(toSerialize)
}

type NullableEducationUser struct {
	value *EducationUser
	isSet bool
}

func (v NullableEducationUser) Get() *EducationUser {
	return v.value
}

func (v *NullableEducationUser) Set(val *EducationUser) {
	v.value = val
	v.isSet = true
}

func (v NullableEducationUser) IsSet() bool {
	return v.isSet
}

func (v *NullableEducationUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEducationUser(val *EducationUser) *NullableEducationUser {
	return &NullableEducationUser{value: val, isSet: true}
}

func (v NullableEducationUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEducationUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


