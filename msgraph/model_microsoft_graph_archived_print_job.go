/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphArchivedPrintJob struct for MicrosoftGraphArchivedPrintJob
type MicrosoftGraphArchivedPrintJob struct {
	// True if the job was acquired by a printer; false otherwise. Read-only.
	AcquiredByPrinter *bool `json:"acquiredByPrinter,omitempty"`
	// The dateTimeOffset when the job was acquired by the printer, if any. Read-only.
	AcquiredDateTime NullableTime `json:"acquiredDateTime,omitempty"`
	// The dateTimeOffset when the job was completed, canceled or aborted. Read-only.
	CompletionDateTime NullableTime `json:"completionDateTime,omitempty"`
	// The number of copies that were printed. Read-only.
	CopiesPrinted *int32 `json:"copiesPrinted,omitempty"`
	// The user who created the print job. Read-only.
	CreatedBy AnyOfmicrosoftGraphUserIdentity `json:"createdBy,omitempty"`
	// The dateTimeOffset when the job was created. Read-only.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// The archived print job's GUID. Read-only.
	Id *string `json:"id,omitempty"`
	// The printer ID that the job was queued for. Read-only.
	PrinterId NullableString `json:"printerId,omitempty"`
	// The print job's final processing state. Read-only.
	ProcessingState AnyOfmicrosoftGraphPrintJobProcessingState `json:"processingState,omitempty"`
}

// NewMicrosoftGraphArchivedPrintJob instantiates a new MicrosoftGraphArchivedPrintJob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphArchivedPrintJob() *MicrosoftGraphArchivedPrintJob {
	this := MicrosoftGraphArchivedPrintJob{}
	return &this
}

// NewMicrosoftGraphArchivedPrintJobWithDefaults instantiates a new MicrosoftGraphArchivedPrintJob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphArchivedPrintJobWithDefaults() *MicrosoftGraphArchivedPrintJob {
	this := MicrosoftGraphArchivedPrintJob{}
	return &this
}

// GetAcquiredByPrinter returns the AcquiredByPrinter field value if set, zero value otherwise.
func (o *MicrosoftGraphArchivedPrintJob) GetAcquiredByPrinter() bool {
	if o == nil || o.AcquiredByPrinter == nil {
		var ret bool
		return ret
	}
	return *o.AcquiredByPrinter
}

// GetAcquiredByPrinterOk returns a tuple with the AcquiredByPrinter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphArchivedPrintJob) GetAcquiredByPrinterOk() (*bool, bool) {
	if o == nil || o.AcquiredByPrinter == nil {
		return nil, false
	}
	return o.AcquiredByPrinter, true
}

// HasAcquiredByPrinter returns a boolean if a field has been set.
func (o *MicrosoftGraphArchivedPrintJob) HasAcquiredByPrinter() bool {
	if o != nil && o.AcquiredByPrinter != nil {
		return true
	}

	return false
}

// SetAcquiredByPrinter gets a reference to the given bool and assigns it to the AcquiredByPrinter field.
func (o *MicrosoftGraphArchivedPrintJob) SetAcquiredByPrinter(v bool) {
	o.AcquiredByPrinter = &v
}

// GetAcquiredDateTime returns the AcquiredDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphArchivedPrintJob) GetAcquiredDateTime() time.Time {
	if o == nil || o.AcquiredDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.AcquiredDateTime.Get()
}

// GetAcquiredDateTimeOk returns a tuple with the AcquiredDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphArchivedPrintJob) GetAcquiredDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AcquiredDateTime.Get(), o.AcquiredDateTime.IsSet()
}

// HasAcquiredDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphArchivedPrintJob) HasAcquiredDateTime() bool {
	if o != nil && o.AcquiredDateTime.IsSet() {
		return true
	}

	return false
}

// SetAcquiredDateTime gets a reference to the given NullableTime and assigns it to the AcquiredDateTime field.
func (o *MicrosoftGraphArchivedPrintJob) SetAcquiredDateTime(v time.Time) {
	o.AcquiredDateTime.Set(&v)
}
// SetAcquiredDateTimeNil sets the value for AcquiredDateTime to be an explicit nil
func (o *MicrosoftGraphArchivedPrintJob) SetAcquiredDateTimeNil() {
	o.AcquiredDateTime.Set(nil)
}

// UnsetAcquiredDateTime ensures that no value is present for AcquiredDateTime, not even an explicit nil
func (o *MicrosoftGraphArchivedPrintJob) UnsetAcquiredDateTime() {
	o.AcquiredDateTime.Unset()
}

// GetCompletionDateTime returns the CompletionDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphArchivedPrintJob) GetCompletionDateTime() time.Time {
	if o == nil || o.CompletionDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.CompletionDateTime.Get()
}

// GetCompletionDateTimeOk returns a tuple with the CompletionDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphArchivedPrintJob) GetCompletionDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CompletionDateTime.Get(), o.CompletionDateTime.IsSet()
}

// HasCompletionDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphArchivedPrintJob) HasCompletionDateTime() bool {
	if o != nil && o.CompletionDateTime.IsSet() {
		return true
	}

	return false
}

// SetCompletionDateTime gets a reference to the given NullableTime and assigns it to the CompletionDateTime field.
func (o *MicrosoftGraphArchivedPrintJob) SetCompletionDateTime(v time.Time) {
	o.CompletionDateTime.Set(&v)
}
// SetCompletionDateTimeNil sets the value for CompletionDateTime to be an explicit nil
func (o *MicrosoftGraphArchivedPrintJob) SetCompletionDateTimeNil() {
	o.CompletionDateTime.Set(nil)
}

// UnsetCompletionDateTime ensures that no value is present for CompletionDateTime, not even an explicit nil
func (o *MicrosoftGraphArchivedPrintJob) UnsetCompletionDateTime() {
	o.CompletionDateTime.Unset()
}

// GetCopiesPrinted returns the CopiesPrinted field value if set, zero value otherwise.
func (o *MicrosoftGraphArchivedPrintJob) GetCopiesPrinted() int32 {
	if o == nil || o.CopiesPrinted == nil {
		var ret int32
		return ret
	}
	return *o.CopiesPrinted
}

// GetCopiesPrintedOk returns a tuple with the CopiesPrinted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphArchivedPrintJob) GetCopiesPrintedOk() (*int32, bool) {
	if o == nil || o.CopiesPrinted == nil {
		return nil, false
	}
	return o.CopiesPrinted, true
}

// HasCopiesPrinted returns a boolean if a field has been set.
func (o *MicrosoftGraphArchivedPrintJob) HasCopiesPrinted() bool {
	if o != nil && o.CopiesPrinted != nil {
		return true
	}

	return false
}

// SetCopiesPrinted gets a reference to the given int32 and assigns it to the CopiesPrinted field.
func (o *MicrosoftGraphArchivedPrintJob) SetCopiesPrinted(v int32) {
	o.CopiesPrinted = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphArchivedPrintJob) GetCreatedBy() AnyOfmicrosoftGraphUserIdentity {
	if o == nil  {
		var ret AnyOfmicrosoftGraphUserIdentity
		return ret
	}
	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphArchivedPrintJob) GetCreatedByOk() (*AnyOfmicrosoftGraphUserIdentity, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *MicrosoftGraphArchivedPrintJob) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given AnyOfmicrosoftGraphUserIdentity and assigns it to the CreatedBy field.
func (o *MicrosoftGraphArchivedPrintJob) SetCreatedBy(v AnyOfmicrosoftGraphUserIdentity) {
	o.CreatedBy = v
}

// GetCreatedDateTime returns the CreatedDateTime field value if set, zero value otherwise.
func (o *MicrosoftGraphArchivedPrintJob) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphArchivedPrintJob) GetCreatedDateTimeOk() (*time.Time, bool) {
	if o == nil || o.CreatedDateTime == nil {
		return nil, false
	}
	return o.CreatedDateTime, true
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphArchivedPrintJob) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime != nil {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given time.Time and assigns it to the CreatedDateTime field.
func (o *MicrosoftGraphArchivedPrintJob) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphArchivedPrintJob) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphArchivedPrintJob) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphArchivedPrintJob) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphArchivedPrintJob) SetId(v string) {
	o.Id = &v
}

// GetPrinterId returns the PrinterId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphArchivedPrintJob) GetPrinterId() string {
	if o == nil || o.PrinterId.Get() == nil {
		var ret string
		return ret
	}
	return *o.PrinterId.Get()
}

// GetPrinterIdOk returns a tuple with the PrinterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphArchivedPrintJob) GetPrinterIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PrinterId.Get(), o.PrinterId.IsSet()
}

// HasPrinterId returns a boolean if a field has been set.
func (o *MicrosoftGraphArchivedPrintJob) HasPrinterId() bool {
	if o != nil && o.PrinterId.IsSet() {
		return true
	}

	return false
}

// SetPrinterId gets a reference to the given NullableString and assigns it to the PrinterId field.
func (o *MicrosoftGraphArchivedPrintJob) SetPrinterId(v string) {
	o.PrinterId.Set(&v)
}
// SetPrinterIdNil sets the value for PrinterId to be an explicit nil
func (o *MicrosoftGraphArchivedPrintJob) SetPrinterIdNil() {
	o.PrinterId.Set(nil)
}

// UnsetPrinterId ensures that no value is present for PrinterId, not even an explicit nil
func (o *MicrosoftGraphArchivedPrintJob) UnsetPrinterId() {
	o.PrinterId.Unset()
}

// GetProcessingState returns the ProcessingState field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphArchivedPrintJob) GetProcessingState() AnyOfmicrosoftGraphPrintJobProcessingState {
	if o == nil  {
		var ret AnyOfmicrosoftGraphPrintJobProcessingState
		return ret
	}
	return o.ProcessingState
}

// GetProcessingStateOk returns a tuple with the ProcessingState field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphArchivedPrintJob) GetProcessingStateOk() (*AnyOfmicrosoftGraphPrintJobProcessingState, bool) {
	if o == nil || o.ProcessingState == nil {
		return nil, false
	}
	return &o.ProcessingState, true
}

// HasProcessingState returns a boolean if a field has been set.
func (o *MicrosoftGraphArchivedPrintJob) HasProcessingState() bool {
	if o != nil && o.ProcessingState != nil {
		return true
	}

	return false
}

// SetProcessingState gets a reference to the given AnyOfmicrosoftGraphPrintJobProcessingState and assigns it to the ProcessingState field.
func (o *MicrosoftGraphArchivedPrintJob) SetProcessingState(v AnyOfmicrosoftGraphPrintJobProcessingState) {
	o.ProcessingState = v
}

func (o MicrosoftGraphArchivedPrintJob) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AcquiredByPrinter != nil {
		toSerialize["acquiredByPrinter"] = o.AcquiredByPrinter
	}
	if o.AcquiredDateTime.IsSet() {
		toSerialize["acquiredDateTime"] = o.AcquiredDateTime.Get()
	}
	if o.CompletionDateTime.IsSet() {
		toSerialize["completionDateTime"] = o.CompletionDateTime.Get()
	}
	if o.CopiesPrinted != nil {
		toSerialize["copiesPrinted"] = o.CopiesPrinted
	}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.CreatedDateTime != nil {
		toSerialize["createdDateTime"] = o.CreatedDateTime
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.PrinterId.IsSet() {
		toSerialize["printerId"] = o.PrinterId.Get()
	}
	if o.ProcessingState != nil {
		toSerialize["processingState"] = o.ProcessingState
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphArchivedPrintJob struct {
	value *MicrosoftGraphArchivedPrintJob
	isSet bool
}

func (v NullableMicrosoftGraphArchivedPrintJob) Get() *MicrosoftGraphArchivedPrintJob {
	return v.value
}

func (v *NullableMicrosoftGraphArchivedPrintJob) Set(val *MicrosoftGraphArchivedPrintJob) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphArchivedPrintJob) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphArchivedPrintJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphArchivedPrintJob(val *MicrosoftGraphArchivedPrintJob) *NullableMicrosoftGraphArchivedPrintJob {
	return &NullableMicrosoftGraphArchivedPrintJob{value: val, isSet: true}
}

func (v NullableMicrosoftGraphArchivedPrintJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphArchivedPrintJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


