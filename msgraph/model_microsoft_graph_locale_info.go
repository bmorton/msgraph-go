/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphLocaleInfo struct for MicrosoftGraphLocaleInfo
type MicrosoftGraphLocaleInfo struct {
	// A name representing the user's locale in natural language, for example, 'English (United States)'.
	DisplayName NullableString `json:"displayName,omitempty"`
	// A locale representation for the user, which includes the user's preferred language and country/region. For example, 'en-us'. The language component follows 2-letter codes as defined in ISO 639-1, and the country component follows 2-letter codes as defined in ISO 3166-1 alpha-2.
	Locale NullableString `json:"locale,omitempty"`
}

// NewMicrosoftGraphLocaleInfo instantiates a new MicrosoftGraphLocaleInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphLocaleInfo() *MicrosoftGraphLocaleInfo {
	this := MicrosoftGraphLocaleInfo{}
	return &this
}

// NewMicrosoftGraphLocaleInfoWithDefaults instantiates a new MicrosoftGraphLocaleInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphLocaleInfoWithDefaults() *MicrosoftGraphLocaleInfo {
	this := MicrosoftGraphLocaleInfo{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphLocaleInfo) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphLocaleInfo) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphLocaleInfo) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *MicrosoftGraphLocaleInfo) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *MicrosoftGraphLocaleInfo) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *MicrosoftGraphLocaleInfo) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetLocale returns the Locale field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphLocaleInfo) GetLocale() string {
	if o == nil || o.Locale.Get() == nil {
		var ret string
		return ret
	}
	return *o.Locale.Get()
}

// GetLocaleOk returns a tuple with the Locale field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphLocaleInfo) GetLocaleOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Locale.Get(), o.Locale.IsSet()
}

// HasLocale returns a boolean if a field has been set.
func (o *MicrosoftGraphLocaleInfo) HasLocale() bool {
	if o != nil && o.Locale.IsSet() {
		return true
	}

	return false
}

// SetLocale gets a reference to the given NullableString and assigns it to the Locale field.
func (o *MicrosoftGraphLocaleInfo) SetLocale(v string) {
	o.Locale.Set(&v)
}
// SetLocaleNil sets the value for Locale to be an explicit nil
func (o *MicrosoftGraphLocaleInfo) SetLocaleNil() {
	o.Locale.Set(nil)
}

// UnsetLocale ensures that no value is present for Locale, not even an explicit nil
func (o *MicrosoftGraphLocaleInfo) UnsetLocale() {
	o.Locale.Unset()
}

func (o MicrosoftGraphLocaleInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.Locale.IsSet() {
		toSerialize["locale"] = o.Locale.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphLocaleInfo struct {
	value *MicrosoftGraphLocaleInfo
	isSet bool
}

func (v NullableMicrosoftGraphLocaleInfo) Get() *MicrosoftGraphLocaleInfo {
	return v.value
}

func (v *NullableMicrosoftGraphLocaleInfo) Set(val *MicrosoftGraphLocaleInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphLocaleInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphLocaleInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphLocaleInfo(val *MicrosoftGraphLocaleInfo) *NullableMicrosoftGraphLocaleInfo {
	return &NullableMicrosoftGraphLocaleInfo{value: val, isSet: true}
}

func (v NullableMicrosoftGraphLocaleInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphLocaleInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


