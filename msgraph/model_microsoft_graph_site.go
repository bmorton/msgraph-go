/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphSite struct for MicrosoftGraphSite
type MicrosoftGraphSite struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// Identity of the user, device, or application which created the item. Read-only.
	CreatedBy AnyOfmicrosoftGraphIdentitySet `json:"createdBy,omitempty"`
	// Date and time of item creation. Read-only.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// Provides a user-visible description of the item. Optional.
	Description NullableString `json:"description,omitempty"`
	// ETag for the item. Read-only.
	ETag NullableString `json:"eTag,omitempty"`
	// Identity of the user, device, and application which last modified the item. Read-only.
	LastModifiedBy AnyOfmicrosoftGraphIdentitySet `json:"lastModifiedBy,omitempty"`
	// Date and time the item was last modified. Read-only.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// The name of the item. Read-write.
	Name NullableString `json:"name,omitempty"`
	// Parent information, if the item has a parent. Read-write.
	ParentReference AnyOfmicrosoftGraphItemReference `json:"parentReference,omitempty"`
	// URL that displays the resource in the browser. Read-only.
	WebUrl NullableString `json:"webUrl,omitempty"`
	// Identity of the user who created the item. Read-only.
	CreatedByUser AnyOfmicrosoftGraphUser `json:"createdByUser,omitempty"`
	// Identity of the user who last modified the item. Read-only.
	LastModifiedByUser AnyOfmicrosoftGraphUser `json:"lastModifiedByUser,omitempty"`
	// The full title for the site. Read-only.
	DisplayName NullableString `json:"displayName,omitempty"`
	Error AnyOfmicrosoftGraphPublicError `json:"error,omitempty"`
	// If present, indicates that this is the root site in the site collection. Read-only.
	Root AnyOfobject `json:"root,omitempty"`
	// Returns identifiers useful for SharePoint REST compatibility. Read-only.
	SharepointIds AnyOfmicrosoftGraphSharepointIds `json:"sharepointIds,omitempty"`
	// Provides details about the site's site collection. Available only on the root site. Read-only.
	SiteCollection AnyOfmicrosoftGraphSiteCollection `json:"siteCollection,omitempty"`
	// Analytics about the view activities that took place in this site.
	Analytics AnyOfmicrosoftGraphItemAnalytics `json:"analytics,omitempty"`
	// The collection of column definitions reusable across lists under this site.
	Columns *[]MicrosoftGraphColumnDefinition `json:"columns,omitempty"`
	// The collection of content types defined for this site.
	ContentTypes *[]MicrosoftGraphContentType `json:"contentTypes,omitempty"`
	// The default drive (document library) for this site.
	Drive AnyOfmicrosoftGraphDrive `json:"drive,omitempty"`
	// The collection of drives (document libraries) under this site.
	Drives *[]MicrosoftGraphDrive `json:"drives,omitempty"`
	// The collection of column definitions available in the site that are referenced from the sites in the parent hierarchy of the current site.
	ExternalColumns *[]MicrosoftGraphColumnDefinition `json:"externalColumns,omitempty"`
	// Used to address any item contained in this site. This collection can't be enumerated.
	Items *[]MicrosoftGraphBaseItem `json:"items,omitempty"`
	// The collection of lists under this site.
	Lists *[]MicrosoftGraphList `json:"lists,omitempty"`
	// The permissions associated with the site. Nullable.
	Permissions *[]MicrosoftGraphPermission `json:"permissions,omitempty"`
	// The collection of the sub-sites under this site.
	Sites *[]MicrosoftGraphSite `json:"sites,omitempty"`
	// The default termStore under this site.
	TermStore AnyOfmicrosoftGraphTermStoreStore `json:"termStore,omitempty"`
	// The collection of termStores under this site.
	TermStores *[]MicrosoftGraphTermStoreStore `json:"termStores,omitempty"`
	// Calls the OneNote service for notebook related operations.
	Onenote AnyOfmicrosoftGraphOnenote `json:"onenote,omitempty"`
}

// NewMicrosoftGraphSite instantiates a new MicrosoftGraphSite object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphSite() *MicrosoftGraphSite {
	this := MicrosoftGraphSite{}
	return &this
}

// NewMicrosoftGraphSiteWithDefaults instantiates a new MicrosoftGraphSite object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphSiteWithDefaults() *MicrosoftGraphSite {
	this := MicrosoftGraphSite{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphSite) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSite) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphSite) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphSite) SetId(v string) {
	o.Id = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSite) GetCreatedBy() AnyOfmicrosoftGraphIdentitySet {
	if o == nil  {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret
	}
	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSite) GetCreatedByOk() (*AnyOfmicrosoftGraphIdentitySet, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *MicrosoftGraphSite) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given AnyOfmicrosoftGraphIdentitySet and assigns it to the CreatedBy field.
func (o *MicrosoftGraphSite) SetCreatedBy(v AnyOfmicrosoftGraphIdentitySet) {
	o.CreatedBy = v
}

// GetCreatedDateTime returns the CreatedDateTime field value if set, zero value otherwise.
func (o *MicrosoftGraphSite) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSite) GetCreatedDateTimeOk() (*time.Time, bool) {
	if o == nil || o.CreatedDateTime == nil {
		return nil, false
	}
	return o.CreatedDateTime, true
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphSite) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime != nil {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given time.Time and assigns it to the CreatedDateTime field.
func (o *MicrosoftGraphSite) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSite) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSite) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *MicrosoftGraphSite) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *MicrosoftGraphSite) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *MicrosoftGraphSite) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *MicrosoftGraphSite) UnsetDescription() {
	o.Description.Unset()
}

// GetETag returns the ETag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSite) GetETag() string {
	if o == nil || o.ETag.Get() == nil {
		var ret string
		return ret
	}
	return *o.ETag.Get()
}

// GetETagOk returns a tuple with the ETag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSite) GetETagOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ETag.Get(), o.ETag.IsSet()
}

// HasETag returns a boolean if a field has been set.
func (o *MicrosoftGraphSite) HasETag() bool {
	if o != nil && o.ETag.IsSet() {
		return true
	}

	return false
}

// SetETag gets a reference to the given NullableString and assigns it to the ETag field.
func (o *MicrosoftGraphSite) SetETag(v string) {
	o.ETag.Set(&v)
}
// SetETagNil sets the value for ETag to be an explicit nil
func (o *MicrosoftGraphSite) SetETagNil() {
	o.ETag.Set(nil)
}

// UnsetETag ensures that no value is present for ETag, not even an explicit nil
func (o *MicrosoftGraphSite) UnsetETag() {
	o.ETag.Unset()
}

// GetLastModifiedBy returns the LastModifiedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSite) GetLastModifiedBy() AnyOfmicrosoftGraphIdentitySet {
	if o == nil  {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret
	}
	return o.LastModifiedBy
}

// GetLastModifiedByOk returns a tuple with the LastModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSite) GetLastModifiedByOk() (*AnyOfmicrosoftGraphIdentitySet, bool) {
	if o == nil || o.LastModifiedBy == nil {
		return nil, false
	}
	return &o.LastModifiedBy, true
}

// HasLastModifiedBy returns a boolean if a field has been set.
func (o *MicrosoftGraphSite) HasLastModifiedBy() bool {
	if o != nil && o.LastModifiedBy != nil {
		return true
	}

	return false
}

// SetLastModifiedBy gets a reference to the given AnyOfmicrosoftGraphIdentitySet and assigns it to the LastModifiedBy field.
func (o *MicrosoftGraphSite) SetLastModifiedBy(v AnyOfmicrosoftGraphIdentitySet) {
	o.LastModifiedBy = v
}

// GetLastModifiedDateTime returns the LastModifiedDateTime field value if set, zero value otherwise.
func (o *MicrosoftGraphSite) GetLastModifiedDateTime() time.Time {
	if o == nil || o.LastModifiedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDateTime
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSite) GetLastModifiedDateTimeOk() (*time.Time, bool) {
	if o == nil || o.LastModifiedDateTime == nil {
		return nil, false
	}
	return o.LastModifiedDateTime, true
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphSite) HasLastModifiedDateTime() bool {
	if o != nil && o.LastModifiedDateTime != nil {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given time.Time and assigns it to the LastModifiedDateTime field.
func (o *MicrosoftGraphSite) SetLastModifiedDateTime(v time.Time) {
	o.LastModifiedDateTime = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSite) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSite) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *MicrosoftGraphSite) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *MicrosoftGraphSite) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *MicrosoftGraphSite) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *MicrosoftGraphSite) UnsetName() {
	o.Name.Unset()
}

// GetParentReference returns the ParentReference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSite) GetParentReference() AnyOfmicrosoftGraphItemReference {
	if o == nil  {
		var ret AnyOfmicrosoftGraphItemReference
		return ret
	}
	return o.ParentReference
}

// GetParentReferenceOk returns a tuple with the ParentReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSite) GetParentReferenceOk() (*AnyOfmicrosoftGraphItemReference, bool) {
	if o == nil || o.ParentReference == nil {
		return nil, false
	}
	return &o.ParentReference, true
}

// HasParentReference returns a boolean if a field has been set.
func (o *MicrosoftGraphSite) HasParentReference() bool {
	if o != nil && o.ParentReference != nil {
		return true
	}

	return false
}

// SetParentReference gets a reference to the given AnyOfmicrosoftGraphItemReference and assigns it to the ParentReference field.
func (o *MicrosoftGraphSite) SetParentReference(v AnyOfmicrosoftGraphItemReference) {
	o.ParentReference = v
}

// GetWebUrl returns the WebUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSite) GetWebUrl() string {
	if o == nil || o.WebUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.WebUrl.Get()
}

// GetWebUrlOk returns a tuple with the WebUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSite) GetWebUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.WebUrl.Get(), o.WebUrl.IsSet()
}

// HasWebUrl returns a boolean if a field has been set.
func (o *MicrosoftGraphSite) HasWebUrl() bool {
	if o != nil && o.WebUrl.IsSet() {
		return true
	}

	return false
}

// SetWebUrl gets a reference to the given NullableString and assigns it to the WebUrl field.
func (o *MicrosoftGraphSite) SetWebUrl(v string) {
	o.WebUrl.Set(&v)
}
// SetWebUrlNil sets the value for WebUrl to be an explicit nil
func (o *MicrosoftGraphSite) SetWebUrlNil() {
	o.WebUrl.Set(nil)
}

// UnsetWebUrl ensures that no value is present for WebUrl, not even an explicit nil
func (o *MicrosoftGraphSite) UnsetWebUrl() {
	o.WebUrl.Unset()
}

// GetCreatedByUser returns the CreatedByUser field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSite) GetCreatedByUser() AnyOfmicrosoftGraphUser {
	if o == nil  {
		var ret AnyOfmicrosoftGraphUser
		return ret
	}
	return o.CreatedByUser
}

// GetCreatedByUserOk returns a tuple with the CreatedByUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSite) GetCreatedByUserOk() (*AnyOfmicrosoftGraphUser, bool) {
	if o == nil || o.CreatedByUser == nil {
		return nil, false
	}
	return &o.CreatedByUser, true
}

// HasCreatedByUser returns a boolean if a field has been set.
func (o *MicrosoftGraphSite) HasCreatedByUser() bool {
	if o != nil && o.CreatedByUser != nil {
		return true
	}

	return false
}

// SetCreatedByUser gets a reference to the given AnyOfmicrosoftGraphUser and assigns it to the CreatedByUser field.
func (o *MicrosoftGraphSite) SetCreatedByUser(v AnyOfmicrosoftGraphUser) {
	o.CreatedByUser = v
}

// GetLastModifiedByUser returns the LastModifiedByUser field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSite) GetLastModifiedByUser() AnyOfmicrosoftGraphUser {
	if o == nil  {
		var ret AnyOfmicrosoftGraphUser
		return ret
	}
	return o.LastModifiedByUser
}

// GetLastModifiedByUserOk returns a tuple with the LastModifiedByUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSite) GetLastModifiedByUserOk() (*AnyOfmicrosoftGraphUser, bool) {
	if o == nil || o.LastModifiedByUser == nil {
		return nil, false
	}
	return &o.LastModifiedByUser, true
}

// HasLastModifiedByUser returns a boolean if a field has been set.
func (o *MicrosoftGraphSite) HasLastModifiedByUser() bool {
	if o != nil && o.LastModifiedByUser != nil {
		return true
	}

	return false
}

// SetLastModifiedByUser gets a reference to the given AnyOfmicrosoftGraphUser and assigns it to the LastModifiedByUser field.
func (o *MicrosoftGraphSite) SetLastModifiedByUser(v AnyOfmicrosoftGraphUser) {
	o.LastModifiedByUser = v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSite) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSite) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphSite) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *MicrosoftGraphSite) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *MicrosoftGraphSite) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *MicrosoftGraphSite) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetError returns the Error field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSite) GetError() AnyOfmicrosoftGraphPublicError {
	if o == nil  {
		var ret AnyOfmicrosoftGraphPublicError
		return ret
	}
	return o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSite) GetErrorOk() (*AnyOfmicrosoftGraphPublicError, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return &o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *MicrosoftGraphSite) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given AnyOfmicrosoftGraphPublicError and assigns it to the Error field.
func (o *MicrosoftGraphSite) SetError(v AnyOfmicrosoftGraphPublicError) {
	o.Error = v
}

// GetRoot returns the Root field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSite) GetRoot() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Root
}

// GetRootOk returns a tuple with the Root field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSite) GetRootOk() (*AnyOfobject, bool) {
	if o == nil || o.Root == nil {
		return nil, false
	}
	return &o.Root, true
}

// HasRoot returns a boolean if a field has been set.
func (o *MicrosoftGraphSite) HasRoot() bool {
	if o != nil && o.Root != nil {
		return true
	}

	return false
}

// SetRoot gets a reference to the given AnyOfobject and assigns it to the Root field.
func (o *MicrosoftGraphSite) SetRoot(v AnyOfobject) {
	o.Root = v
}

// GetSharepointIds returns the SharepointIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSite) GetSharepointIds() AnyOfmicrosoftGraphSharepointIds {
	if o == nil  {
		var ret AnyOfmicrosoftGraphSharepointIds
		return ret
	}
	return o.SharepointIds
}

// GetSharepointIdsOk returns a tuple with the SharepointIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSite) GetSharepointIdsOk() (*AnyOfmicrosoftGraphSharepointIds, bool) {
	if o == nil || o.SharepointIds == nil {
		return nil, false
	}
	return &o.SharepointIds, true
}

// HasSharepointIds returns a boolean if a field has been set.
func (o *MicrosoftGraphSite) HasSharepointIds() bool {
	if o != nil && o.SharepointIds != nil {
		return true
	}

	return false
}

// SetSharepointIds gets a reference to the given AnyOfmicrosoftGraphSharepointIds and assigns it to the SharepointIds field.
func (o *MicrosoftGraphSite) SetSharepointIds(v AnyOfmicrosoftGraphSharepointIds) {
	o.SharepointIds = v
}

// GetSiteCollection returns the SiteCollection field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSite) GetSiteCollection() AnyOfmicrosoftGraphSiteCollection {
	if o == nil  {
		var ret AnyOfmicrosoftGraphSiteCollection
		return ret
	}
	return o.SiteCollection
}

// GetSiteCollectionOk returns a tuple with the SiteCollection field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSite) GetSiteCollectionOk() (*AnyOfmicrosoftGraphSiteCollection, bool) {
	if o == nil || o.SiteCollection == nil {
		return nil, false
	}
	return &o.SiteCollection, true
}

// HasSiteCollection returns a boolean if a field has been set.
func (o *MicrosoftGraphSite) HasSiteCollection() bool {
	if o != nil && o.SiteCollection != nil {
		return true
	}

	return false
}

// SetSiteCollection gets a reference to the given AnyOfmicrosoftGraphSiteCollection and assigns it to the SiteCollection field.
func (o *MicrosoftGraphSite) SetSiteCollection(v AnyOfmicrosoftGraphSiteCollection) {
	o.SiteCollection = v
}

// GetAnalytics returns the Analytics field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSite) GetAnalytics() AnyOfmicrosoftGraphItemAnalytics {
	if o == nil  {
		var ret AnyOfmicrosoftGraphItemAnalytics
		return ret
	}
	return o.Analytics
}

// GetAnalyticsOk returns a tuple with the Analytics field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSite) GetAnalyticsOk() (*AnyOfmicrosoftGraphItemAnalytics, bool) {
	if o == nil || o.Analytics == nil {
		return nil, false
	}
	return &o.Analytics, true
}

// HasAnalytics returns a boolean if a field has been set.
func (o *MicrosoftGraphSite) HasAnalytics() bool {
	if o != nil && o.Analytics != nil {
		return true
	}

	return false
}

// SetAnalytics gets a reference to the given AnyOfmicrosoftGraphItemAnalytics and assigns it to the Analytics field.
func (o *MicrosoftGraphSite) SetAnalytics(v AnyOfmicrosoftGraphItemAnalytics) {
	o.Analytics = v
}

// GetColumns returns the Columns field value if set, zero value otherwise.
func (o *MicrosoftGraphSite) GetColumns() []MicrosoftGraphColumnDefinition {
	if o == nil || o.Columns == nil {
		var ret []MicrosoftGraphColumnDefinition
		return ret
	}
	return *o.Columns
}

// GetColumnsOk returns a tuple with the Columns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSite) GetColumnsOk() (*[]MicrosoftGraphColumnDefinition, bool) {
	if o == nil || o.Columns == nil {
		return nil, false
	}
	return o.Columns, true
}

// HasColumns returns a boolean if a field has been set.
func (o *MicrosoftGraphSite) HasColumns() bool {
	if o != nil && o.Columns != nil {
		return true
	}

	return false
}

// SetColumns gets a reference to the given []MicrosoftGraphColumnDefinition and assigns it to the Columns field.
func (o *MicrosoftGraphSite) SetColumns(v []MicrosoftGraphColumnDefinition) {
	o.Columns = &v
}

// GetContentTypes returns the ContentTypes field value if set, zero value otherwise.
func (o *MicrosoftGraphSite) GetContentTypes() []MicrosoftGraphContentType {
	if o == nil || o.ContentTypes == nil {
		var ret []MicrosoftGraphContentType
		return ret
	}
	return *o.ContentTypes
}

// GetContentTypesOk returns a tuple with the ContentTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSite) GetContentTypesOk() (*[]MicrosoftGraphContentType, bool) {
	if o == nil || o.ContentTypes == nil {
		return nil, false
	}
	return o.ContentTypes, true
}

// HasContentTypes returns a boolean if a field has been set.
func (o *MicrosoftGraphSite) HasContentTypes() bool {
	if o != nil && o.ContentTypes != nil {
		return true
	}

	return false
}

// SetContentTypes gets a reference to the given []MicrosoftGraphContentType and assigns it to the ContentTypes field.
func (o *MicrosoftGraphSite) SetContentTypes(v []MicrosoftGraphContentType) {
	o.ContentTypes = &v
}

// GetDrive returns the Drive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSite) GetDrive() AnyOfmicrosoftGraphDrive {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDrive
		return ret
	}
	return o.Drive
}

// GetDriveOk returns a tuple with the Drive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSite) GetDriveOk() (*AnyOfmicrosoftGraphDrive, bool) {
	if o == nil || o.Drive == nil {
		return nil, false
	}
	return &o.Drive, true
}

// HasDrive returns a boolean if a field has been set.
func (o *MicrosoftGraphSite) HasDrive() bool {
	if o != nil && o.Drive != nil {
		return true
	}

	return false
}

// SetDrive gets a reference to the given AnyOfmicrosoftGraphDrive and assigns it to the Drive field.
func (o *MicrosoftGraphSite) SetDrive(v AnyOfmicrosoftGraphDrive) {
	o.Drive = v
}

// GetDrives returns the Drives field value if set, zero value otherwise.
func (o *MicrosoftGraphSite) GetDrives() []MicrosoftGraphDrive {
	if o == nil || o.Drives == nil {
		var ret []MicrosoftGraphDrive
		return ret
	}
	return *o.Drives
}

// GetDrivesOk returns a tuple with the Drives field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSite) GetDrivesOk() (*[]MicrosoftGraphDrive, bool) {
	if o == nil || o.Drives == nil {
		return nil, false
	}
	return o.Drives, true
}

// HasDrives returns a boolean if a field has been set.
func (o *MicrosoftGraphSite) HasDrives() bool {
	if o != nil && o.Drives != nil {
		return true
	}

	return false
}

// SetDrives gets a reference to the given []MicrosoftGraphDrive and assigns it to the Drives field.
func (o *MicrosoftGraphSite) SetDrives(v []MicrosoftGraphDrive) {
	o.Drives = &v
}

// GetExternalColumns returns the ExternalColumns field value if set, zero value otherwise.
func (o *MicrosoftGraphSite) GetExternalColumns() []MicrosoftGraphColumnDefinition {
	if o == nil || o.ExternalColumns == nil {
		var ret []MicrosoftGraphColumnDefinition
		return ret
	}
	return *o.ExternalColumns
}

// GetExternalColumnsOk returns a tuple with the ExternalColumns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSite) GetExternalColumnsOk() (*[]MicrosoftGraphColumnDefinition, bool) {
	if o == nil || o.ExternalColumns == nil {
		return nil, false
	}
	return o.ExternalColumns, true
}

// HasExternalColumns returns a boolean if a field has been set.
func (o *MicrosoftGraphSite) HasExternalColumns() bool {
	if o != nil && o.ExternalColumns != nil {
		return true
	}

	return false
}

// SetExternalColumns gets a reference to the given []MicrosoftGraphColumnDefinition and assigns it to the ExternalColumns field.
func (o *MicrosoftGraphSite) SetExternalColumns(v []MicrosoftGraphColumnDefinition) {
	o.ExternalColumns = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *MicrosoftGraphSite) GetItems() []MicrosoftGraphBaseItem {
	if o == nil || o.Items == nil {
		var ret []MicrosoftGraphBaseItem
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSite) GetItemsOk() (*[]MicrosoftGraphBaseItem, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *MicrosoftGraphSite) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []MicrosoftGraphBaseItem and assigns it to the Items field.
func (o *MicrosoftGraphSite) SetItems(v []MicrosoftGraphBaseItem) {
	o.Items = &v
}

// GetLists returns the Lists field value if set, zero value otherwise.
func (o *MicrosoftGraphSite) GetLists() []MicrosoftGraphList {
	if o == nil || o.Lists == nil {
		var ret []MicrosoftGraphList
		return ret
	}
	return *o.Lists
}

// GetListsOk returns a tuple with the Lists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSite) GetListsOk() (*[]MicrosoftGraphList, bool) {
	if o == nil || o.Lists == nil {
		return nil, false
	}
	return o.Lists, true
}

// HasLists returns a boolean if a field has been set.
func (o *MicrosoftGraphSite) HasLists() bool {
	if o != nil && o.Lists != nil {
		return true
	}

	return false
}

// SetLists gets a reference to the given []MicrosoftGraphList and assigns it to the Lists field.
func (o *MicrosoftGraphSite) SetLists(v []MicrosoftGraphList) {
	o.Lists = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *MicrosoftGraphSite) GetPermissions() []MicrosoftGraphPermission {
	if o == nil || o.Permissions == nil {
		var ret []MicrosoftGraphPermission
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSite) GetPermissionsOk() (*[]MicrosoftGraphPermission, bool) {
	if o == nil || o.Permissions == nil {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *MicrosoftGraphSite) HasPermissions() bool {
	if o != nil && o.Permissions != nil {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []MicrosoftGraphPermission and assigns it to the Permissions field.
func (o *MicrosoftGraphSite) SetPermissions(v []MicrosoftGraphPermission) {
	o.Permissions = &v
}

// GetSites returns the Sites field value if set, zero value otherwise.
func (o *MicrosoftGraphSite) GetSites() []MicrosoftGraphSite {
	if o == nil || o.Sites == nil {
		var ret []MicrosoftGraphSite
		return ret
	}
	return *o.Sites
}

// GetSitesOk returns a tuple with the Sites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSite) GetSitesOk() (*[]MicrosoftGraphSite, bool) {
	if o == nil || o.Sites == nil {
		return nil, false
	}
	return o.Sites, true
}

// HasSites returns a boolean if a field has been set.
func (o *MicrosoftGraphSite) HasSites() bool {
	if o != nil && o.Sites != nil {
		return true
	}

	return false
}

// SetSites gets a reference to the given []MicrosoftGraphSite and assigns it to the Sites field.
func (o *MicrosoftGraphSite) SetSites(v []MicrosoftGraphSite) {
	o.Sites = &v
}

// GetTermStore returns the TermStore field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSite) GetTermStore() AnyOfmicrosoftGraphTermStoreStore {
	if o == nil  {
		var ret AnyOfmicrosoftGraphTermStoreStore
		return ret
	}
	return o.TermStore
}

// GetTermStoreOk returns a tuple with the TermStore field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSite) GetTermStoreOk() (*AnyOfmicrosoftGraphTermStoreStore, bool) {
	if o == nil || o.TermStore == nil {
		return nil, false
	}
	return &o.TermStore, true
}

// HasTermStore returns a boolean if a field has been set.
func (o *MicrosoftGraphSite) HasTermStore() bool {
	if o != nil && o.TermStore != nil {
		return true
	}

	return false
}

// SetTermStore gets a reference to the given AnyOfmicrosoftGraphTermStoreStore and assigns it to the TermStore field.
func (o *MicrosoftGraphSite) SetTermStore(v AnyOfmicrosoftGraphTermStoreStore) {
	o.TermStore = v
}

// GetTermStores returns the TermStores field value if set, zero value otherwise.
func (o *MicrosoftGraphSite) GetTermStores() []MicrosoftGraphTermStoreStore {
	if o == nil || o.TermStores == nil {
		var ret []MicrosoftGraphTermStoreStore
		return ret
	}
	return *o.TermStores
}

// GetTermStoresOk returns a tuple with the TermStores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSite) GetTermStoresOk() (*[]MicrosoftGraphTermStoreStore, bool) {
	if o == nil || o.TermStores == nil {
		return nil, false
	}
	return o.TermStores, true
}

// HasTermStores returns a boolean if a field has been set.
func (o *MicrosoftGraphSite) HasTermStores() bool {
	if o != nil && o.TermStores != nil {
		return true
	}

	return false
}

// SetTermStores gets a reference to the given []MicrosoftGraphTermStoreStore and assigns it to the TermStores field.
func (o *MicrosoftGraphSite) SetTermStores(v []MicrosoftGraphTermStoreStore) {
	o.TermStores = &v
}

// GetOnenote returns the Onenote field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSite) GetOnenote() AnyOfmicrosoftGraphOnenote {
	if o == nil  {
		var ret AnyOfmicrosoftGraphOnenote
		return ret
	}
	return o.Onenote
}

// GetOnenoteOk returns a tuple with the Onenote field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSite) GetOnenoteOk() (*AnyOfmicrosoftGraphOnenote, bool) {
	if o == nil || o.Onenote == nil {
		return nil, false
	}
	return &o.Onenote, true
}

// HasOnenote returns a boolean if a field has been set.
func (o *MicrosoftGraphSite) HasOnenote() bool {
	if o != nil && o.Onenote != nil {
		return true
	}

	return false
}

// SetOnenote gets a reference to the given AnyOfmicrosoftGraphOnenote and assigns it to the Onenote field.
func (o *MicrosoftGraphSite) SetOnenote(v AnyOfmicrosoftGraphOnenote) {
	o.Onenote = v
}

func (o MicrosoftGraphSite) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.CreatedDateTime != nil {
		toSerialize["createdDateTime"] = o.CreatedDateTime
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.ETag.IsSet() {
		toSerialize["eTag"] = o.ETag.Get()
	}
	if o.LastModifiedBy != nil {
		toSerialize["lastModifiedBy"] = o.LastModifiedBy
	}
	if o.LastModifiedDateTime != nil {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.ParentReference != nil {
		toSerialize["parentReference"] = o.ParentReference
	}
	if o.WebUrl.IsSet() {
		toSerialize["webUrl"] = o.WebUrl.Get()
	}
	if o.CreatedByUser != nil {
		toSerialize["createdByUser"] = o.CreatedByUser
	}
	if o.LastModifiedByUser != nil {
		toSerialize["lastModifiedByUser"] = o.LastModifiedByUser
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	if o.Root != nil {
		toSerialize["root"] = o.Root
	}
	if o.SharepointIds != nil {
		toSerialize["sharepointIds"] = o.SharepointIds
	}
	if o.SiteCollection != nil {
		toSerialize["siteCollection"] = o.SiteCollection
	}
	if o.Analytics != nil {
		toSerialize["analytics"] = o.Analytics
	}
	if o.Columns != nil {
		toSerialize["columns"] = o.Columns
	}
	if o.ContentTypes != nil {
		toSerialize["contentTypes"] = o.ContentTypes
	}
	if o.Drive != nil {
		toSerialize["drive"] = o.Drive
	}
	if o.Drives != nil {
		toSerialize["drives"] = o.Drives
	}
	if o.ExternalColumns != nil {
		toSerialize["externalColumns"] = o.ExternalColumns
	}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	if o.Lists != nil {
		toSerialize["lists"] = o.Lists
	}
	if o.Permissions != nil {
		toSerialize["permissions"] = o.Permissions
	}
	if o.Sites != nil {
		toSerialize["sites"] = o.Sites
	}
	if o.TermStore != nil {
		toSerialize["termStore"] = o.TermStore
	}
	if o.TermStores != nil {
		toSerialize["termStores"] = o.TermStores
	}
	if o.Onenote != nil {
		toSerialize["onenote"] = o.Onenote
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphSite struct {
	value *MicrosoftGraphSite
	isSet bool
}

func (v NullableMicrosoftGraphSite) Get() *MicrosoftGraphSite {
	return v.value
}

func (v *NullableMicrosoftGraphSite) Set(val *MicrosoftGraphSite) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphSite) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphSite) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphSite(val *MicrosoftGraphSite) *NullableMicrosoftGraphSite {
	return &NullableMicrosoftGraphSite{value: val, isSet: true}
}

func (v NullableMicrosoftGraphSite) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphSite) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


