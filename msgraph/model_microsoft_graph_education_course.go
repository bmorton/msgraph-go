/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphEducationCourse struct for MicrosoftGraphEducationCourse
type MicrosoftGraphEducationCourse struct {
	// Unique identifier for the course.
	CourseNumber NullableString `json:"courseNumber,omitempty"`
	// Description of the course.
	Description NullableString `json:"description,omitempty"`
	// Name of the course.
	DisplayName NullableString `json:"displayName,omitempty"`
	// ID of the course from the syncing system.
	ExternalId NullableString `json:"externalId,omitempty"`
	// Subject of the course.
	Subject NullableString `json:"subject,omitempty"`
}

// NewMicrosoftGraphEducationCourse instantiates a new MicrosoftGraphEducationCourse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphEducationCourse() *MicrosoftGraphEducationCourse {
	this := MicrosoftGraphEducationCourse{}
	return &this
}

// NewMicrosoftGraphEducationCourseWithDefaults instantiates a new MicrosoftGraphEducationCourse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphEducationCourseWithDefaults() *MicrosoftGraphEducationCourse {
	this := MicrosoftGraphEducationCourse{}
	return &this
}

// GetCourseNumber returns the CourseNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEducationCourse) GetCourseNumber() string {
	if o == nil || o.CourseNumber.Get() == nil {
		var ret string
		return ret
	}
	return *o.CourseNumber.Get()
}

// GetCourseNumberOk returns a tuple with the CourseNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEducationCourse) GetCourseNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CourseNumber.Get(), o.CourseNumber.IsSet()
}

// HasCourseNumber returns a boolean if a field has been set.
func (o *MicrosoftGraphEducationCourse) HasCourseNumber() bool {
	if o != nil && o.CourseNumber.IsSet() {
		return true
	}

	return false
}

// SetCourseNumber gets a reference to the given NullableString and assigns it to the CourseNumber field.
func (o *MicrosoftGraphEducationCourse) SetCourseNumber(v string) {
	o.CourseNumber.Set(&v)
}
// SetCourseNumberNil sets the value for CourseNumber to be an explicit nil
func (o *MicrosoftGraphEducationCourse) SetCourseNumberNil() {
	o.CourseNumber.Set(nil)
}

// UnsetCourseNumber ensures that no value is present for CourseNumber, not even an explicit nil
func (o *MicrosoftGraphEducationCourse) UnsetCourseNumber() {
	o.CourseNumber.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEducationCourse) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEducationCourse) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *MicrosoftGraphEducationCourse) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *MicrosoftGraphEducationCourse) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *MicrosoftGraphEducationCourse) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *MicrosoftGraphEducationCourse) UnsetDescription() {
	o.Description.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEducationCourse) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEducationCourse) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphEducationCourse) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *MicrosoftGraphEducationCourse) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *MicrosoftGraphEducationCourse) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *MicrosoftGraphEducationCourse) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEducationCourse) GetExternalId() string {
	if o == nil || o.ExternalId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ExternalId.Get()
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEducationCourse) GetExternalIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExternalId.Get(), o.ExternalId.IsSet()
}

// HasExternalId returns a boolean if a field has been set.
func (o *MicrosoftGraphEducationCourse) HasExternalId() bool {
	if o != nil && o.ExternalId.IsSet() {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given NullableString and assigns it to the ExternalId field.
func (o *MicrosoftGraphEducationCourse) SetExternalId(v string) {
	o.ExternalId.Set(&v)
}
// SetExternalIdNil sets the value for ExternalId to be an explicit nil
func (o *MicrosoftGraphEducationCourse) SetExternalIdNil() {
	o.ExternalId.Set(nil)
}

// UnsetExternalId ensures that no value is present for ExternalId, not even an explicit nil
func (o *MicrosoftGraphEducationCourse) UnsetExternalId() {
	o.ExternalId.Unset()
}

// GetSubject returns the Subject field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEducationCourse) GetSubject() string {
	if o == nil || o.Subject.Get() == nil {
		var ret string
		return ret
	}
	return *o.Subject.Get()
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEducationCourse) GetSubjectOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Subject.Get(), o.Subject.IsSet()
}

// HasSubject returns a boolean if a field has been set.
func (o *MicrosoftGraphEducationCourse) HasSubject() bool {
	if o != nil && o.Subject.IsSet() {
		return true
	}

	return false
}

// SetSubject gets a reference to the given NullableString and assigns it to the Subject field.
func (o *MicrosoftGraphEducationCourse) SetSubject(v string) {
	o.Subject.Set(&v)
}
// SetSubjectNil sets the value for Subject to be an explicit nil
func (o *MicrosoftGraphEducationCourse) SetSubjectNil() {
	o.Subject.Set(nil)
}

// UnsetSubject ensures that no value is present for Subject, not even an explicit nil
func (o *MicrosoftGraphEducationCourse) UnsetSubject() {
	o.Subject.Unset()
}

func (o MicrosoftGraphEducationCourse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CourseNumber.IsSet() {
		toSerialize["courseNumber"] = o.CourseNumber.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.ExternalId.IsSet() {
		toSerialize["externalId"] = o.ExternalId.Get()
	}
	if o.Subject.IsSet() {
		toSerialize["subject"] = o.Subject.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphEducationCourse struct {
	value *MicrosoftGraphEducationCourse
	isSet bool
}

func (v NullableMicrosoftGraphEducationCourse) Get() *MicrosoftGraphEducationCourse {
	return v.value
}

func (v *NullableMicrosoftGraphEducationCourse) Set(val *MicrosoftGraphEducationCourse) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphEducationCourse) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphEducationCourse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphEducationCourse(val *MicrosoftGraphEducationCourse) *NullableMicrosoftGraphEducationCourse {
	return &NullableMicrosoftGraphEducationCourse{value: val, isSet: true}
}

func (v NullableMicrosoftGraphEducationCourse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphEducationCourse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


