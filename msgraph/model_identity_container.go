/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IdentityContainer struct for IdentityContainer
type IdentityContainer struct {
	// the entry point for the Conditional Access (CA) object model.
	ConditionalAccess AnyOfmicrosoftGraphConditionalAccessRoot `json:"conditionalAccess,omitempty"`
	// Represents entry point for API connectors.
	ApiConnectors *[]MicrosoftGraphIdentityApiConnector `json:"apiConnectors,omitempty"`
	// Represents entry point for B2X/self-service sign-up identity userflows.
	B2xUserFlows *[]MicrosoftGraphB2xIdentityUserFlow `json:"b2xUserFlows,omitempty"`
	// Represents entry point for identity provider base.
	IdentityProviders *[]MicrosoftGraphIdentityProviderBase `json:"identityProviders,omitempty"`
	// Represents entry point for identity userflow attributes.
	UserFlowAttributes *[]MicrosoftGraphIdentityUserFlowAttribute `json:"userFlowAttributes,omitempty"`
}

// NewIdentityContainer instantiates a new IdentityContainer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityContainer() *IdentityContainer {
	this := IdentityContainer{}
	return &this
}

// NewIdentityContainerWithDefaults instantiates a new IdentityContainer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityContainerWithDefaults() *IdentityContainer {
	this := IdentityContainer{}
	return &this
}

// GetConditionalAccess returns the ConditionalAccess field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentityContainer) GetConditionalAccess() AnyOfmicrosoftGraphConditionalAccessRoot {
	if o == nil  {
		var ret AnyOfmicrosoftGraphConditionalAccessRoot
		return ret
	}
	return o.ConditionalAccess
}

// GetConditionalAccessOk returns a tuple with the ConditionalAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentityContainer) GetConditionalAccessOk() (*AnyOfmicrosoftGraphConditionalAccessRoot, bool) {
	if o == nil || o.ConditionalAccess == nil {
		return nil, false
	}
	return &o.ConditionalAccess, true
}

// HasConditionalAccess returns a boolean if a field has been set.
func (o *IdentityContainer) HasConditionalAccess() bool {
	if o != nil && o.ConditionalAccess != nil {
		return true
	}

	return false
}

// SetConditionalAccess gets a reference to the given AnyOfmicrosoftGraphConditionalAccessRoot and assigns it to the ConditionalAccess field.
func (o *IdentityContainer) SetConditionalAccess(v AnyOfmicrosoftGraphConditionalAccessRoot) {
	o.ConditionalAccess = v
}

// GetApiConnectors returns the ApiConnectors field value if set, zero value otherwise.
func (o *IdentityContainer) GetApiConnectors() []MicrosoftGraphIdentityApiConnector {
	if o == nil || o.ApiConnectors == nil {
		var ret []MicrosoftGraphIdentityApiConnector
		return ret
	}
	return *o.ApiConnectors
}

// GetApiConnectorsOk returns a tuple with the ApiConnectors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityContainer) GetApiConnectorsOk() (*[]MicrosoftGraphIdentityApiConnector, bool) {
	if o == nil || o.ApiConnectors == nil {
		return nil, false
	}
	return o.ApiConnectors, true
}

// HasApiConnectors returns a boolean if a field has been set.
func (o *IdentityContainer) HasApiConnectors() bool {
	if o != nil && o.ApiConnectors != nil {
		return true
	}

	return false
}

// SetApiConnectors gets a reference to the given []MicrosoftGraphIdentityApiConnector and assigns it to the ApiConnectors field.
func (o *IdentityContainer) SetApiConnectors(v []MicrosoftGraphIdentityApiConnector) {
	o.ApiConnectors = &v
}

// GetB2xUserFlows returns the B2xUserFlows field value if set, zero value otherwise.
func (o *IdentityContainer) GetB2xUserFlows() []MicrosoftGraphB2xIdentityUserFlow {
	if o == nil || o.B2xUserFlows == nil {
		var ret []MicrosoftGraphB2xIdentityUserFlow
		return ret
	}
	return *o.B2xUserFlows
}

// GetB2xUserFlowsOk returns a tuple with the B2xUserFlows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityContainer) GetB2xUserFlowsOk() (*[]MicrosoftGraphB2xIdentityUserFlow, bool) {
	if o == nil || o.B2xUserFlows == nil {
		return nil, false
	}
	return o.B2xUserFlows, true
}

// HasB2xUserFlows returns a boolean if a field has been set.
func (o *IdentityContainer) HasB2xUserFlows() bool {
	if o != nil && o.B2xUserFlows != nil {
		return true
	}

	return false
}

// SetB2xUserFlows gets a reference to the given []MicrosoftGraphB2xIdentityUserFlow and assigns it to the B2xUserFlows field.
func (o *IdentityContainer) SetB2xUserFlows(v []MicrosoftGraphB2xIdentityUserFlow) {
	o.B2xUserFlows = &v
}

// GetIdentityProviders returns the IdentityProviders field value if set, zero value otherwise.
func (o *IdentityContainer) GetIdentityProviders() []MicrosoftGraphIdentityProviderBase {
	if o == nil || o.IdentityProviders == nil {
		var ret []MicrosoftGraphIdentityProviderBase
		return ret
	}
	return *o.IdentityProviders
}

// GetIdentityProvidersOk returns a tuple with the IdentityProviders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityContainer) GetIdentityProvidersOk() (*[]MicrosoftGraphIdentityProviderBase, bool) {
	if o == nil || o.IdentityProviders == nil {
		return nil, false
	}
	return o.IdentityProviders, true
}

// HasIdentityProviders returns a boolean if a field has been set.
func (o *IdentityContainer) HasIdentityProviders() bool {
	if o != nil && o.IdentityProviders != nil {
		return true
	}

	return false
}

// SetIdentityProviders gets a reference to the given []MicrosoftGraphIdentityProviderBase and assigns it to the IdentityProviders field.
func (o *IdentityContainer) SetIdentityProviders(v []MicrosoftGraphIdentityProviderBase) {
	o.IdentityProviders = &v
}

// GetUserFlowAttributes returns the UserFlowAttributes field value if set, zero value otherwise.
func (o *IdentityContainer) GetUserFlowAttributes() []MicrosoftGraphIdentityUserFlowAttribute {
	if o == nil || o.UserFlowAttributes == nil {
		var ret []MicrosoftGraphIdentityUserFlowAttribute
		return ret
	}
	return *o.UserFlowAttributes
}

// GetUserFlowAttributesOk returns a tuple with the UserFlowAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityContainer) GetUserFlowAttributesOk() (*[]MicrosoftGraphIdentityUserFlowAttribute, bool) {
	if o == nil || o.UserFlowAttributes == nil {
		return nil, false
	}
	return o.UserFlowAttributes, true
}

// HasUserFlowAttributes returns a boolean if a field has been set.
func (o *IdentityContainer) HasUserFlowAttributes() bool {
	if o != nil && o.UserFlowAttributes != nil {
		return true
	}

	return false
}

// SetUserFlowAttributes gets a reference to the given []MicrosoftGraphIdentityUserFlowAttribute and assigns it to the UserFlowAttributes field.
func (o *IdentityContainer) SetUserFlowAttributes(v []MicrosoftGraphIdentityUserFlowAttribute) {
	o.UserFlowAttributes = &v
}

func (o IdentityContainer) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConditionalAccess != nil {
		toSerialize["conditionalAccess"] = o.ConditionalAccess
	}
	if o.ApiConnectors != nil {
		toSerialize["apiConnectors"] = o.ApiConnectors
	}
	if o.B2xUserFlows != nil {
		toSerialize["b2xUserFlows"] = o.B2xUserFlows
	}
	if o.IdentityProviders != nil {
		toSerialize["identityProviders"] = o.IdentityProviders
	}
	if o.UserFlowAttributes != nil {
		toSerialize["userFlowAttributes"] = o.UserFlowAttributes
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityContainer struct {
	value *IdentityContainer
	isSet bool
}

func (v NullableIdentityContainer) Get() *IdentityContainer {
	return v.value
}

func (v *NullableIdentityContainer) Set(val *IdentityContainer) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityContainer) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityContainer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityContainer(val *IdentityContainer) *NullableIdentityContainer {
	return &NullableIdentityContainer{value: val, isSet: true}
}

func (v NullableIdentityContainer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityContainer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


