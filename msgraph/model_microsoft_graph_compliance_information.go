/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphComplianceInformation struct for MicrosoftGraphComplianceInformation
type MicrosoftGraphComplianceInformation struct {
	// Collection of the certification controls associated with certification
	CertificationControls *[]*AnyOfmicrosoftGraphCertificationControl `json:"certificationControls,omitempty"`
	// Compliance certification name (for example, ISO 27018:2014, GDPR, FedRAMP, NIST 800-171)
	CertificationName NullableString `json:"certificationName,omitempty"`
}

// NewMicrosoftGraphComplianceInformation instantiates a new MicrosoftGraphComplianceInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphComplianceInformation() *MicrosoftGraphComplianceInformation {
	this := MicrosoftGraphComplianceInformation{}
	return &this
}

// NewMicrosoftGraphComplianceInformationWithDefaults instantiates a new MicrosoftGraphComplianceInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphComplianceInformationWithDefaults() *MicrosoftGraphComplianceInformation {
	this := MicrosoftGraphComplianceInformation{}
	return &this
}

// GetCertificationControls returns the CertificationControls field value if set, zero value otherwise.
func (o *MicrosoftGraphComplianceInformation) GetCertificationControls() []*AnyOfmicrosoftGraphCertificationControl {
	if o == nil || o.CertificationControls == nil {
		var ret []*AnyOfmicrosoftGraphCertificationControl
		return ret
	}
	return *o.CertificationControls
}

// GetCertificationControlsOk returns a tuple with the CertificationControls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphComplianceInformation) GetCertificationControlsOk() (*[]*AnyOfmicrosoftGraphCertificationControl, bool) {
	if o == nil || o.CertificationControls == nil {
		return nil, false
	}
	return o.CertificationControls, true
}

// HasCertificationControls returns a boolean if a field has been set.
func (o *MicrosoftGraphComplianceInformation) HasCertificationControls() bool {
	if o != nil && o.CertificationControls != nil {
		return true
	}

	return false
}

// SetCertificationControls gets a reference to the given []*AnyOfmicrosoftGraphCertificationControl and assigns it to the CertificationControls field.
func (o *MicrosoftGraphComplianceInformation) SetCertificationControls(v []*AnyOfmicrosoftGraphCertificationControl) {
	o.CertificationControls = &v
}

// GetCertificationName returns the CertificationName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphComplianceInformation) GetCertificationName() string {
	if o == nil || o.CertificationName.Get() == nil {
		var ret string
		return ret
	}
	return *o.CertificationName.Get()
}

// GetCertificationNameOk returns a tuple with the CertificationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphComplianceInformation) GetCertificationNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CertificationName.Get(), o.CertificationName.IsSet()
}

// HasCertificationName returns a boolean if a field has been set.
func (o *MicrosoftGraphComplianceInformation) HasCertificationName() bool {
	if o != nil && o.CertificationName.IsSet() {
		return true
	}

	return false
}

// SetCertificationName gets a reference to the given NullableString and assigns it to the CertificationName field.
func (o *MicrosoftGraphComplianceInformation) SetCertificationName(v string) {
	o.CertificationName.Set(&v)
}
// SetCertificationNameNil sets the value for CertificationName to be an explicit nil
func (o *MicrosoftGraphComplianceInformation) SetCertificationNameNil() {
	o.CertificationName.Set(nil)
}

// UnsetCertificationName ensures that no value is present for CertificationName, not even an explicit nil
func (o *MicrosoftGraphComplianceInformation) UnsetCertificationName() {
	o.CertificationName.Unset()
}

func (o MicrosoftGraphComplianceInformation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CertificationControls != nil {
		toSerialize["certificationControls"] = o.CertificationControls
	}
	if o.CertificationName.IsSet() {
		toSerialize["certificationName"] = o.CertificationName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphComplianceInformation struct {
	value *MicrosoftGraphComplianceInformation
	isSet bool
}

func (v NullableMicrosoftGraphComplianceInformation) Get() *MicrosoftGraphComplianceInformation {
	return v.value
}

func (v *NullableMicrosoftGraphComplianceInformation) Set(val *MicrosoftGraphComplianceInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphComplianceInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphComplianceInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphComplianceInformation(val *MicrosoftGraphComplianceInformation) *NullableMicrosoftGraphComplianceInformation {
	return &NullableMicrosoftGraphComplianceInformation{value: val, isSet: true}
}

func (v NullableMicrosoftGraphComplianceInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphComplianceInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


