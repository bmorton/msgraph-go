/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphDeviceManagementSettings struct for MicrosoftGraphDeviceManagementSettings
type MicrosoftGraphDeviceManagementSettings struct {
	// The number of days a device is allowed to go without checking in to remain compliant.
	DeviceComplianceCheckinThresholdDays *int32 `json:"deviceComplianceCheckinThresholdDays,omitempty"`
	// Is feature enabled or not for scheduled action for rule.
	IsScheduledActionEnabled *bool `json:"isScheduledActionEnabled,omitempty"`
	// Device should be noncompliant when there is no compliance policy targeted when this is true
	SecureByDefault *bool `json:"secureByDefault,omitempty"`
}

// NewMicrosoftGraphDeviceManagementSettings instantiates a new MicrosoftGraphDeviceManagementSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphDeviceManagementSettings() *MicrosoftGraphDeviceManagementSettings {
	this := MicrosoftGraphDeviceManagementSettings{}
	return &this
}

// NewMicrosoftGraphDeviceManagementSettingsWithDefaults instantiates a new MicrosoftGraphDeviceManagementSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphDeviceManagementSettingsWithDefaults() *MicrosoftGraphDeviceManagementSettings {
	this := MicrosoftGraphDeviceManagementSettings{}
	return &this
}

// GetDeviceComplianceCheckinThresholdDays returns the DeviceComplianceCheckinThresholdDays field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceManagementSettings) GetDeviceComplianceCheckinThresholdDays() int32 {
	if o == nil || o.DeviceComplianceCheckinThresholdDays == nil {
		var ret int32
		return ret
	}
	return *o.DeviceComplianceCheckinThresholdDays
}

// GetDeviceComplianceCheckinThresholdDaysOk returns a tuple with the DeviceComplianceCheckinThresholdDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceManagementSettings) GetDeviceComplianceCheckinThresholdDaysOk() (*int32, bool) {
	if o == nil || o.DeviceComplianceCheckinThresholdDays == nil {
		return nil, false
	}
	return o.DeviceComplianceCheckinThresholdDays, true
}

// HasDeviceComplianceCheckinThresholdDays returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceManagementSettings) HasDeviceComplianceCheckinThresholdDays() bool {
	if o != nil && o.DeviceComplianceCheckinThresholdDays != nil {
		return true
	}

	return false
}

// SetDeviceComplianceCheckinThresholdDays gets a reference to the given int32 and assigns it to the DeviceComplianceCheckinThresholdDays field.
func (o *MicrosoftGraphDeviceManagementSettings) SetDeviceComplianceCheckinThresholdDays(v int32) {
	o.DeviceComplianceCheckinThresholdDays = &v
}

// GetIsScheduledActionEnabled returns the IsScheduledActionEnabled field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceManagementSettings) GetIsScheduledActionEnabled() bool {
	if o == nil || o.IsScheduledActionEnabled == nil {
		var ret bool
		return ret
	}
	return *o.IsScheduledActionEnabled
}

// GetIsScheduledActionEnabledOk returns a tuple with the IsScheduledActionEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceManagementSettings) GetIsScheduledActionEnabledOk() (*bool, bool) {
	if o == nil || o.IsScheduledActionEnabled == nil {
		return nil, false
	}
	return o.IsScheduledActionEnabled, true
}

// HasIsScheduledActionEnabled returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceManagementSettings) HasIsScheduledActionEnabled() bool {
	if o != nil && o.IsScheduledActionEnabled != nil {
		return true
	}

	return false
}

// SetIsScheduledActionEnabled gets a reference to the given bool and assigns it to the IsScheduledActionEnabled field.
func (o *MicrosoftGraphDeviceManagementSettings) SetIsScheduledActionEnabled(v bool) {
	o.IsScheduledActionEnabled = &v
}

// GetSecureByDefault returns the SecureByDefault field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceManagementSettings) GetSecureByDefault() bool {
	if o == nil || o.SecureByDefault == nil {
		var ret bool
		return ret
	}
	return *o.SecureByDefault
}

// GetSecureByDefaultOk returns a tuple with the SecureByDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceManagementSettings) GetSecureByDefaultOk() (*bool, bool) {
	if o == nil || o.SecureByDefault == nil {
		return nil, false
	}
	return o.SecureByDefault, true
}

// HasSecureByDefault returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceManagementSettings) HasSecureByDefault() bool {
	if o != nil && o.SecureByDefault != nil {
		return true
	}

	return false
}

// SetSecureByDefault gets a reference to the given bool and assigns it to the SecureByDefault field.
func (o *MicrosoftGraphDeviceManagementSettings) SetSecureByDefault(v bool) {
	o.SecureByDefault = &v
}

func (o MicrosoftGraphDeviceManagementSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeviceComplianceCheckinThresholdDays != nil {
		toSerialize["deviceComplianceCheckinThresholdDays"] = o.DeviceComplianceCheckinThresholdDays
	}
	if o.IsScheduledActionEnabled != nil {
		toSerialize["isScheduledActionEnabled"] = o.IsScheduledActionEnabled
	}
	if o.SecureByDefault != nil {
		toSerialize["secureByDefault"] = o.SecureByDefault
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphDeviceManagementSettings struct {
	value *MicrosoftGraphDeviceManagementSettings
	isSet bool
}

func (v NullableMicrosoftGraphDeviceManagementSettings) Get() *MicrosoftGraphDeviceManagementSettings {
	return v.value
}

func (v *NullableMicrosoftGraphDeviceManagementSettings) Set(val *MicrosoftGraphDeviceManagementSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphDeviceManagementSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphDeviceManagementSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphDeviceManagementSettings(val *MicrosoftGraphDeviceManagementSettings) *NullableMicrosoftGraphDeviceManagementSettings {
	return &NullableMicrosoftGraphDeviceManagementSettings{value: val, isSet: true}
}

func (v NullableMicrosoftGraphDeviceManagementSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphDeviceManagementSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


