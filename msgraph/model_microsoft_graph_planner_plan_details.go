/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphPlannerPlanDetails struct for MicrosoftGraphPlannerPlanDetails
type MicrosoftGraphPlannerPlanDetails struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// An object that specifies the descriptions of the six categories that can be associated with tasks in the plan
	CategoryDescriptions AnyOfmicrosoftGraphPlannerCategoryDescriptions `json:"categoryDescriptions,omitempty"`
	// Set of user ids that this plan is shared with. If you are leveraging Microsoft 365 groups, use the Groups API to manage group membership to share the group's plan. You can also add existing members of the group to this collection though it is not required for them to access the plan owned by the group.
	SharedWith AnyOfobject `json:"sharedWith,omitempty"`
}

// NewMicrosoftGraphPlannerPlanDetails instantiates a new MicrosoftGraphPlannerPlanDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphPlannerPlanDetails() *MicrosoftGraphPlannerPlanDetails {
	this := MicrosoftGraphPlannerPlanDetails{}
	return &this
}

// NewMicrosoftGraphPlannerPlanDetailsWithDefaults instantiates a new MicrosoftGraphPlannerPlanDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphPlannerPlanDetailsWithDefaults() *MicrosoftGraphPlannerPlanDetails {
	this := MicrosoftGraphPlannerPlanDetails{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphPlannerPlanDetails) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPlannerPlanDetails) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphPlannerPlanDetails) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphPlannerPlanDetails) SetId(v string) {
	o.Id = &v
}

// GetCategoryDescriptions returns the CategoryDescriptions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphPlannerPlanDetails) GetCategoryDescriptions() AnyOfmicrosoftGraphPlannerCategoryDescriptions {
	if o == nil  {
		var ret AnyOfmicrosoftGraphPlannerCategoryDescriptions
		return ret
	}
	return o.CategoryDescriptions
}

// GetCategoryDescriptionsOk returns a tuple with the CategoryDescriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphPlannerPlanDetails) GetCategoryDescriptionsOk() (*AnyOfmicrosoftGraphPlannerCategoryDescriptions, bool) {
	if o == nil || o.CategoryDescriptions == nil {
		return nil, false
	}
	return &o.CategoryDescriptions, true
}

// HasCategoryDescriptions returns a boolean if a field has been set.
func (o *MicrosoftGraphPlannerPlanDetails) HasCategoryDescriptions() bool {
	if o != nil && o.CategoryDescriptions != nil {
		return true
	}

	return false
}

// SetCategoryDescriptions gets a reference to the given AnyOfmicrosoftGraphPlannerCategoryDescriptions and assigns it to the CategoryDescriptions field.
func (o *MicrosoftGraphPlannerPlanDetails) SetCategoryDescriptions(v AnyOfmicrosoftGraphPlannerCategoryDescriptions) {
	o.CategoryDescriptions = v
}

// GetSharedWith returns the SharedWith field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphPlannerPlanDetails) GetSharedWith() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.SharedWith
}

// GetSharedWithOk returns a tuple with the SharedWith field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphPlannerPlanDetails) GetSharedWithOk() (*AnyOfobject, bool) {
	if o == nil || o.SharedWith == nil {
		return nil, false
	}
	return &o.SharedWith, true
}

// HasSharedWith returns a boolean if a field has been set.
func (o *MicrosoftGraphPlannerPlanDetails) HasSharedWith() bool {
	if o != nil && o.SharedWith != nil {
		return true
	}

	return false
}

// SetSharedWith gets a reference to the given AnyOfobject and assigns it to the SharedWith field.
func (o *MicrosoftGraphPlannerPlanDetails) SetSharedWith(v AnyOfobject) {
	o.SharedWith = v
}

func (o MicrosoftGraphPlannerPlanDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.CategoryDescriptions != nil {
		toSerialize["categoryDescriptions"] = o.CategoryDescriptions
	}
	if o.SharedWith != nil {
		toSerialize["sharedWith"] = o.SharedWith
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphPlannerPlanDetails struct {
	value *MicrosoftGraphPlannerPlanDetails
	isSet bool
}

func (v NullableMicrosoftGraphPlannerPlanDetails) Get() *MicrosoftGraphPlannerPlanDetails {
	return v.value
}

func (v *NullableMicrosoftGraphPlannerPlanDetails) Set(val *MicrosoftGraphPlannerPlanDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphPlannerPlanDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphPlannerPlanDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphPlannerPlanDetails(val *MicrosoftGraphPlannerPlanDetails) *NullableMicrosoftGraphPlannerPlanDetails {
	return &NullableMicrosoftGraphPlannerPlanDetails{value: val, isSet: true}
}

func (v NullableMicrosoftGraphPlannerPlanDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphPlannerPlanDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


