/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Teamwork struct for Teamwork
type Teamwork struct {
	WorkforceIntegrations *[]MicrosoftGraphWorkforceIntegration `json:"workforceIntegrations,omitempty"`
}

// NewTeamwork instantiates a new Teamwork object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTeamwork() *Teamwork {
	this := Teamwork{}
	return &this
}

// NewTeamworkWithDefaults instantiates a new Teamwork object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTeamworkWithDefaults() *Teamwork {
	this := Teamwork{}
	return &this
}

// GetWorkforceIntegrations returns the WorkforceIntegrations field value if set, zero value otherwise.
func (o *Teamwork) GetWorkforceIntegrations() []MicrosoftGraphWorkforceIntegration {
	if o == nil || o.WorkforceIntegrations == nil {
		var ret []MicrosoftGraphWorkforceIntegration
		return ret
	}
	return *o.WorkforceIntegrations
}

// GetWorkforceIntegrationsOk returns a tuple with the WorkforceIntegrations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Teamwork) GetWorkforceIntegrationsOk() (*[]MicrosoftGraphWorkforceIntegration, bool) {
	if o == nil || o.WorkforceIntegrations == nil {
		return nil, false
	}
	return o.WorkforceIntegrations, true
}

// HasWorkforceIntegrations returns a boolean if a field has been set.
func (o *Teamwork) HasWorkforceIntegrations() bool {
	if o != nil && o.WorkforceIntegrations != nil {
		return true
	}

	return false
}

// SetWorkforceIntegrations gets a reference to the given []MicrosoftGraphWorkforceIntegration and assigns it to the WorkforceIntegrations field.
func (o *Teamwork) SetWorkforceIntegrations(v []MicrosoftGraphWorkforceIntegration) {
	o.WorkforceIntegrations = &v
}

func (o Teamwork) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.WorkforceIntegrations != nil {
		toSerialize["workforceIntegrations"] = o.WorkforceIntegrations
	}
	return json.Marshal(toSerialize)
}

type NullableTeamwork struct {
	value *Teamwork
	isSet bool
}

func (v NullableTeamwork) Get() *Teamwork {
	return v.value
}

func (v *NullableTeamwork) Set(val *Teamwork) {
	v.value = val
	v.isSet = true
}

func (v NullableTeamwork) IsSet() bool {
	return v.isSet
}

func (v *NullableTeamwork) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTeamwork(val *Teamwork) *NullableTeamwork {
	return &NullableTeamwork{value: val, isSet: true}
}

func (v NullableTeamwork) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTeamwork) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


