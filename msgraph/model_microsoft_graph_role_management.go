/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphRoleManagement struct for MicrosoftGraphRoleManagement
type MicrosoftGraphRoleManagement struct {
	// Read-only. Nullable.
	Directory AnyOfmicrosoftGraphRbacApplication `json:"directory,omitempty"`
	// Container for all entitlement management resources in Azure AD identity governance.
	EntitlementManagement AnyOfmicrosoftGraphRbacApplication `json:"entitlementManagement,omitempty"`
}

// NewMicrosoftGraphRoleManagement instantiates a new MicrosoftGraphRoleManagement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphRoleManagement() *MicrosoftGraphRoleManagement {
	this := MicrosoftGraphRoleManagement{}
	return &this
}

// NewMicrosoftGraphRoleManagementWithDefaults instantiates a new MicrosoftGraphRoleManagement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphRoleManagementWithDefaults() *MicrosoftGraphRoleManagement {
	this := MicrosoftGraphRoleManagement{}
	return &this
}

// GetDirectory returns the Directory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRoleManagement) GetDirectory() AnyOfmicrosoftGraphRbacApplication {
	if o == nil  {
		var ret AnyOfmicrosoftGraphRbacApplication
		return ret
	}
	return o.Directory
}

// GetDirectoryOk returns a tuple with the Directory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRoleManagement) GetDirectoryOk() (*AnyOfmicrosoftGraphRbacApplication, bool) {
	if o == nil || o.Directory == nil {
		return nil, false
	}
	return &o.Directory, true
}

// HasDirectory returns a boolean if a field has been set.
func (o *MicrosoftGraphRoleManagement) HasDirectory() bool {
	if o != nil && o.Directory != nil {
		return true
	}

	return false
}

// SetDirectory gets a reference to the given AnyOfmicrosoftGraphRbacApplication and assigns it to the Directory field.
func (o *MicrosoftGraphRoleManagement) SetDirectory(v AnyOfmicrosoftGraphRbacApplication) {
	o.Directory = v
}

// GetEntitlementManagement returns the EntitlementManagement field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRoleManagement) GetEntitlementManagement() AnyOfmicrosoftGraphRbacApplication {
	if o == nil  {
		var ret AnyOfmicrosoftGraphRbacApplication
		return ret
	}
	return o.EntitlementManagement
}

// GetEntitlementManagementOk returns a tuple with the EntitlementManagement field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRoleManagement) GetEntitlementManagementOk() (*AnyOfmicrosoftGraphRbacApplication, bool) {
	if o == nil || o.EntitlementManagement == nil {
		return nil, false
	}
	return &o.EntitlementManagement, true
}

// HasEntitlementManagement returns a boolean if a field has been set.
func (o *MicrosoftGraphRoleManagement) HasEntitlementManagement() bool {
	if o != nil && o.EntitlementManagement != nil {
		return true
	}

	return false
}

// SetEntitlementManagement gets a reference to the given AnyOfmicrosoftGraphRbacApplication and assigns it to the EntitlementManagement field.
func (o *MicrosoftGraphRoleManagement) SetEntitlementManagement(v AnyOfmicrosoftGraphRbacApplication) {
	o.EntitlementManagement = v
}

func (o MicrosoftGraphRoleManagement) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Directory != nil {
		toSerialize["directory"] = o.Directory
	}
	if o.EntitlementManagement != nil {
		toSerialize["entitlementManagement"] = o.EntitlementManagement
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphRoleManagement struct {
	value *MicrosoftGraphRoleManagement
	isSet bool
}

func (v NullableMicrosoftGraphRoleManagement) Get() *MicrosoftGraphRoleManagement {
	return v.value
}

func (v *NullableMicrosoftGraphRoleManagement) Set(val *MicrosoftGraphRoleManagement) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphRoleManagement) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphRoleManagement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphRoleManagement(val *MicrosoftGraphRoleManagement) *NullableMicrosoftGraphRoleManagement {
	return &NullableMicrosoftGraphRoleManagement{value: val, isSet: true}
}

func (v NullableMicrosoftGraphRoleManagement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphRoleManagement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


