/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphFolder struct for MicrosoftGraphFolder
type MicrosoftGraphFolder struct {
	// Number of children contained immediately within this container.
	ChildCount NullableInt32 `json:"childCount,omitempty"`
	// A collection of properties defining the recommended view for the folder.
	View AnyOfmicrosoftGraphFolderView `json:"view,omitempty"`
}

// NewMicrosoftGraphFolder instantiates a new MicrosoftGraphFolder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphFolder() *MicrosoftGraphFolder {
	this := MicrosoftGraphFolder{}
	return &this
}

// NewMicrosoftGraphFolderWithDefaults instantiates a new MicrosoftGraphFolder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphFolderWithDefaults() *MicrosoftGraphFolder {
	this := MicrosoftGraphFolder{}
	return &this
}

// GetChildCount returns the ChildCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphFolder) GetChildCount() int32 {
	if o == nil || o.ChildCount.Get() == nil {
		var ret int32
		return ret
	}
	return *o.ChildCount.Get()
}

// GetChildCountOk returns a tuple with the ChildCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphFolder) GetChildCountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ChildCount.Get(), o.ChildCount.IsSet()
}

// HasChildCount returns a boolean if a field has been set.
func (o *MicrosoftGraphFolder) HasChildCount() bool {
	if o != nil && o.ChildCount.IsSet() {
		return true
	}

	return false
}

// SetChildCount gets a reference to the given NullableInt32 and assigns it to the ChildCount field.
func (o *MicrosoftGraphFolder) SetChildCount(v int32) {
	o.ChildCount.Set(&v)
}
// SetChildCountNil sets the value for ChildCount to be an explicit nil
func (o *MicrosoftGraphFolder) SetChildCountNil() {
	o.ChildCount.Set(nil)
}

// UnsetChildCount ensures that no value is present for ChildCount, not even an explicit nil
func (o *MicrosoftGraphFolder) UnsetChildCount() {
	o.ChildCount.Unset()
}

// GetView returns the View field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphFolder) GetView() AnyOfmicrosoftGraphFolderView {
	if o == nil  {
		var ret AnyOfmicrosoftGraphFolderView
		return ret
	}
	return o.View
}

// GetViewOk returns a tuple with the View field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphFolder) GetViewOk() (*AnyOfmicrosoftGraphFolderView, bool) {
	if o == nil || o.View == nil {
		return nil, false
	}
	return &o.View, true
}

// HasView returns a boolean if a field has been set.
func (o *MicrosoftGraphFolder) HasView() bool {
	if o != nil && o.View != nil {
		return true
	}

	return false
}

// SetView gets a reference to the given AnyOfmicrosoftGraphFolderView and assigns it to the View field.
func (o *MicrosoftGraphFolder) SetView(v AnyOfmicrosoftGraphFolderView) {
	o.View = v
}

func (o MicrosoftGraphFolder) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ChildCount.IsSet() {
		toSerialize["childCount"] = o.ChildCount.Get()
	}
	if o.View != nil {
		toSerialize["view"] = o.View
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphFolder struct {
	value *MicrosoftGraphFolder
	isSet bool
}

func (v NullableMicrosoftGraphFolder) Get() *MicrosoftGraphFolder {
	return v.value
}

func (v *NullableMicrosoftGraphFolder) Set(val *MicrosoftGraphFolder) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphFolder) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphFolder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphFolder(val *MicrosoftGraphFolder) *NullableMicrosoftGraphFolder {
	return &NullableMicrosoftGraphFolder{value: val, isSet: true}
}

func (v NullableMicrosoftGraphFolder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphFolder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


