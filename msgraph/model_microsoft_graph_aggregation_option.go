/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphAggregationOption struct for MicrosoftGraphAggregationOption
type MicrosoftGraphAggregationOption struct {
	BucketDefinition *MicrosoftGraphBucketAggregationDefinition `json:"bucketDefinition,omitempty"`
	// Computes aggregation on the field while the field exists in current entity type. Required.
	Field *string `json:"field,omitempty"`
	// The number of searchBucket resources to be returned. This is not required when the range is provided manually in the search request. Optional.
	Size NullableInt32 `json:"size,omitempty"`
}

// NewMicrosoftGraphAggregationOption instantiates a new MicrosoftGraphAggregationOption object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphAggregationOption() *MicrosoftGraphAggregationOption {
	this := MicrosoftGraphAggregationOption{}
	return &this
}

// NewMicrosoftGraphAggregationOptionWithDefaults instantiates a new MicrosoftGraphAggregationOption object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphAggregationOptionWithDefaults() *MicrosoftGraphAggregationOption {
	this := MicrosoftGraphAggregationOption{}
	return &this
}

// GetBucketDefinition returns the BucketDefinition field value if set, zero value otherwise.
func (o *MicrosoftGraphAggregationOption) GetBucketDefinition() MicrosoftGraphBucketAggregationDefinition {
	if o == nil || o.BucketDefinition == nil {
		var ret MicrosoftGraphBucketAggregationDefinition
		return ret
	}
	return *o.BucketDefinition
}

// GetBucketDefinitionOk returns a tuple with the BucketDefinition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAggregationOption) GetBucketDefinitionOk() (*MicrosoftGraphBucketAggregationDefinition, bool) {
	if o == nil || o.BucketDefinition == nil {
		return nil, false
	}
	return o.BucketDefinition, true
}

// HasBucketDefinition returns a boolean if a field has been set.
func (o *MicrosoftGraphAggregationOption) HasBucketDefinition() bool {
	if o != nil && o.BucketDefinition != nil {
		return true
	}

	return false
}

// SetBucketDefinition gets a reference to the given MicrosoftGraphBucketAggregationDefinition and assigns it to the BucketDefinition field.
func (o *MicrosoftGraphAggregationOption) SetBucketDefinition(v MicrosoftGraphBucketAggregationDefinition) {
	o.BucketDefinition = &v
}

// GetField returns the Field field value if set, zero value otherwise.
func (o *MicrosoftGraphAggregationOption) GetField() string {
	if o == nil || o.Field == nil {
		var ret string
		return ret
	}
	return *o.Field
}

// GetFieldOk returns a tuple with the Field field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAggregationOption) GetFieldOk() (*string, bool) {
	if o == nil || o.Field == nil {
		return nil, false
	}
	return o.Field, true
}

// HasField returns a boolean if a field has been set.
func (o *MicrosoftGraphAggregationOption) HasField() bool {
	if o != nil && o.Field != nil {
		return true
	}

	return false
}

// SetField gets a reference to the given string and assigns it to the Field field.
func (o *MicrosoftGraphAggregationOption) SetField(v string) {
	o.Field = &v
}

// GetSize returns the Size field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAggregationOption) GetSize() int32 {
	if o == nil || o.Size.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Size.Get()
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAggregationOption) GetSizeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Size.Get(), o.Size.IsSet()
}

// HasSize returns a boolean if a field has been set.
func (o *MicrosoftGraphAggregationOption) HasSize() bool {
	if o != nil && o.Size.IsSet() {
		return true
	}

	return false
}

// SetSize gets a reference to the given NullableInt32 and assigns it to the Size field.
func (o *MicrosoftGraphAggregationOption) SetSize(v int32) {
	o.Size.Set(&v)
}
// SetSizeNil sets the value for Size to be an explicit nil
func (o *MicrosoftGraphAggregationOption) SetSizeNil() {
	o.Size.Set(nil)
}

// UnsetSize ensures that no value is present for Size, not even an explicit nil
func (o *MicrosoftGraphAggregationOption) UnsetSize() {
	o.Size.Unset()
}

func (o MicrosoftGraphAggregationOption) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BucketDefinition != nil {
		toSerialize["bucketDefinition"] = o.BucketDefinition
	}
	if o.Field != nil {
		toSerialize["field"] = o.Field
	}
	if o.Size.IsSet() {
		toSerialize["size"] = o.Size.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphAggregationOption struct {
	value *MicrosoftGraphAggregationOption
	isSet bool
}

func (v NullableMicrosoftGraphAggregationOption) Get() *MicrosoftGraphAggregationOption {
	return v.value
}

func (v *NullableMicrosoftGraphAggregationOption) Set(val *MicrosoftGraphAggregationOption) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphAggregationOption) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphAggregationOption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphAggregationOption(val *MicrosoftGraphAggregationOption) *NullableMicrosoftGraphAggregationOption {
	return &NullableMicrosoftGraphAggregationOption{value: val, isSet: true}
}

func (v NullableMicrosoftGraphAggregationOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphAggregationOption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


