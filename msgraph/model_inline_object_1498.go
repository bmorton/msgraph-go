/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// InlineObject1498 struct for InlineObject1498
type InlineObject1498 struct {
	X AnyOfobject `json:"x,omitempty"`
	N AnyOfobject `json:"n,omitempty"`
	M AnyOfobject `json:"m,omitempty"`
	Coefficients AnyOfobject `json:"coefficients,omitempty"`
}

// NewInlineObject1498 instantiates a new InlineObject1498 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject1498() *InlineObject1498 {
	this := InlineObject1498{}
	return &this
}

// NewInlineObject1498WithDefaults instantiates a new InlineObject1498 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject1498WithDefaults() *InlineObject1498 {
	this := InlineObject1498{}
	return &this
}

// GetX returns the X field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1498) GetX() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.X
}

// GetXOk returns a tuple with the X field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1498) GetXOk() (*AnyOfobject, bool) {
	if o == nil || o.X == nil {
		return nil, false
	}
	return &o.X, true
}

// HasX returns a boolean if a field has been set.
func (o *InlineObject1498) HasX() bool {
	if o != nil && o.X != nil {
		return true
	}

	return false
}

// SetX gets a reference to the given AnyOfobject and assigns it to the X field.
func (o *InlineObject1498) SetX(v AnyOfobject) {
	o.X = v
}

// GetN returns the N field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1498) GetN() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.N
}

// GetNOk returns a tuple with the N field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1498) GetNOk() (*AnyOfobject, bool) {
	if o == nil || o.N == nil {
		return nil, false
	}
	return &o.N, true
}

// HasN returns a boolean if a field has been set.
func (o *InlineObject1498) HasN() bool {
	if o != nil && o.N != nil {
		return true
	}

	return false
}

// SetN gets a reference to the given AnyOfobject and assigns it to the N field.
func (o *InlineObject1498) SetN(v AnyOfobject) {
	o.N = v
}

// GetM returns the M field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1498) GetM() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.M
}

// GetMOk returns a tuple with the M field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1498) GetMOk() (*AnyOfobject, bool) {
	if o == nil || o.M == nil {
		return nil, false
	}
	return &o.M, true
}

// HasM returns a boolean if a field has been set.
func (o *InlineObject1498) HasM() bool {
	if o != nil && o.M != nil {
		return true
	}

	return false
}

// SetM gets a reference to the given AnyOfobject and assigns it to the M field.
func (o *InlineObject1498) SetM(v AnyOfobject) {
	o.M = v
}

// GetCoefficients returns the Coefficients field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1498) GetCoefficients() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Coefficients
}

// GetCoefficientsOk returns a tuple with the Coefficients field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1498) GetCoefficientsOk() (*AnyOfobject, bool) {
	if o == nil || o.Coefficients == nil {
		return nil, false
	}
	return &o.Coefficients, true
}

// HasCoefficients returns a boolean if a field has been set.
func (o *InlineObject1498) HasCoefficients() bool {
	if o != nil && o.Coefficients != nil {
		return true
	}

	return false
}

// SetCoefficients gets a reference to the given AnyOfobject and assigns it to the Coefficients field.
func (o *InlineObject1498) SetCoefficients(v AnyOfobject) {
	o.Coefficients = v
}

func (o InlineObject1498) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.X != nil {
		toSerialize["x"] = o.X
	}
	if o.N != nil {
		toSerialize["n"] = o.N
	}
	if o.M != nil {
		toSerialize["m"] = o.M
	}
	if o.Coefficients != nil {
		toSerialize["coefficients"] = o.Coefficients
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject1498 struct {
	value *InlineObject1498
	isSet bool
}

func (v NullableInlineObject1498) Get() *InlineObject1498 {
	return v.value
}

func (v *NullableInlineObject1498) Set(val *InlineObject1498) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject1498) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject1498) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject1498(val *InlineObject1498) *NullableInlineObject1498 {
	return &NullableInlineObject1498{value: val, isSet: true}
}

func (v NullableInlineObject1498) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject1498) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


