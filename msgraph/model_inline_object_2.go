/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject2 struct for InlineObject2
type InlineObject2 struct {
	MessageIds *[]*string `json:"messageIds,omitempty"`
}

// NewInlineObject2 instantiates a new InlineObject2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject2() *InlineObject2 {
	this := InlineObject2{}
	return &this
}

// NewInlineObject2WithDefaults instantiates a new InlineObject2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject2WithDefaults() *InlineObject2 {
	this := InlineObject2{}
	return &this
}

// GetMessageIds returns the MessageIds field value if set, zero value otherwise.
func (o *InlineObject2) GetMessageIds() []*string {
	if o == nil || o.MessageIds == nil {
		var ret []*string
		return ret
	}
	return *o.MessageIds
}

// GetMessageIdsOk returns a tuple with the MessageIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject2) GetMessageIdsOk() (*[]*string, bool) {
	if o == nil || o.MessageIds == nil {
		return nil, false
	}
	return o.MessageIds, true
}

// HasMessageIds returns a boolean if a field has been set.
func (o *InlineObject2) HasMessageIds() bool {
	if o != nil && o.MessageIds != nil {
		return true
	}

	return false
}

// SetMessageIds gets a reference to the given []*string and assigns it to the MessageIds field.
func (o *InlineObject2) SetMessageIds(v []*string) {
	o.MessageIds = &v
}

func (o InlineObject2) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MessageIds != nil {
		toSerialize["messageIds"] = o.MessageIds
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject2 struct {
	value *InlineObject2
	isSet bool
}

func (v NullableInlineObject2) Get() *InlineObject2 {
	return v.value
}

func (v *NullableInlineObject2) Set(val *InlineObject2) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject2) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject2(val *InlineObject2) *NullableInlineObject2 {
	return &NullableInlineObject2{value: val, isSet: true}
}

func (v NullableInlineObject2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


