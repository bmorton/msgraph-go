/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphSchemaExtension struct for MicrosoftGraphSchemaExtension
type MicrosoftGraphSchemaExtension struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// Description for the schema extension. Supports $filter (eq).
	Description NullableString `json:"description,omitempty"`
	// The appId of the application that is the owner of the schema extension. This property can be supplied on creation, to set the owner.  If not supplied, then the calling application's appId will be set as the owner. In either case, the signed-in user must be the owner of the application. So, for example, if creating a new schema extension definition using Graph Explorer, you must supply the owner property. Once set, this property is read-only and cannot be changed. Supports $filter (eq).
	Owner *string `json:"owner,omitempty"`
	// The collection of property names and types that make up the schema extension definition.
	Properties *[]MicrosoftGraphExtensionSchemaProperty `json:"properties,omitempty"`
	// The lifecycle state of the schema extension. Possible states are InDevelopment, Available, and Deprecated. Automatically set to InDevelopment on creation. Schema extensions provides more information on the possible state transitions and behaviors. Supports $filter (eq).
	Status *string `json:"status,omitempty"`
	// Set of Microsoft Graph types (that can support extensions) that the schema extension can be applied to. Select from contact, device, event, group, message, organization, post, or user.
	TargetTypes *[]string `json:"targetTypes,omitempty"`
}

// NewMicrosoftGraphSchemaExtension instantiates a new MicrosoftGraphSchemaExtension object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphSchemaExtension() *MicrosoftGraphSchemaExtension {
	this := MicrosoftGraphSchemaExtension{}
	return &this
}

// NewMicrosoftGraphSchemaExtensionWithDefaults instantiates a new MicrosoftGraphSchemaExtension object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphSchemaExtensionWithDefaults() *MicrosoftGraphSchemaExtension {
	this := MicrosoftGraphSchemaExtension{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphSchemaExtension) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSchemaExtension) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphSchemaExtension) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphSchemaExtension) SetId(v string) {
	o.Id = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSchemaExtension) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSchemaExtension) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *MicrosoftGraphSchemaExtension) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *MicrosoftGraphSchemaExtension) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *MicrosoftGraphSchemaExtension) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *MicrosoftGraphSchemaExtension) UnsetDescription() {
	o.Description.Unset()
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *MicrosoftGraphSchemaExtension) GetOwner() string {
	if o == nil || o.Owner == nil {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSchemaExtension) GetOwnerOk() (*string, bool) {
	if o == nil || o.Owner == nil {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *MicrosoftGraphSchemaExtension) HasOwner() bool {
	if o != nil && o.Owner != nil {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *MicrosoftGraphSchemaExtension) SetOwner(v string) {
	o.Owner = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *MicrosoftGraphSchemaExtension) GetProperties() []MicrosoftGraphExtensionSchemaProperty {
	if o == nil || o.Properties == nil {
		var ret []MicrosoftGraphExtensionSchemaProperty
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSchemaExtension) GetPropertiesOk() (*[]MicrosoftGraphExtensionSchemaProperty, bool) {
	if o == nil || o.Properties == nil {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *MicrosoftGraphSchemaExtension) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

// SetProperties gets a reference to the given []MicrosoftGraphExtensionSchemaProperty and assigns it to the Properties field.
func (o *MicrosoftGraphSchemaExtension) SetProperties(v []MicrosoftGraphExtensionSchemaProperty) {
	o.Properties = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *MicrosoftGraphSchemaExtension) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSchemaExtension) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MicrosoftGraphSchemaExtension) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *MicrosoftGraphSchemaExtension) SetStatus(v string) {
	o.Status = &v
}

// GetTargetTypes returns the TargetTypes field value if set, zero value otherwise.
func (o *MicrosoftGraphSchemaExtension) GetTargetTypes() []string {
	if o == nil || o.TargetTypes == nil {
		var ret []string
		return ret
	}
	return *o.TargetTypes
}

// GetTargetTypesOk returns a tuple with the TargetTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSchemaExtension) GetTargetTypesOk() (*[]string, bool) {
	if o == nil || o.TargetTypes == nil {
		return nil, false
	}
	return o.TargetTypes, true
}

// HasTargetTypes returns a boolean if a field has been set.
func (o *MicrosoftGraphSchemaExtension) HasTargetTypes() bool {
	if o != nil && o.TargetTypes != nil {
		return true
	}

	return false
}

// SetTargetTypes gets a reference to the given []string and assigns it to the TargetTypes field.
func (o *MicrosoftGraphSchemaExtension) SetTargetTypes(v []string) {
	o.TargetTypes = &v
}

func (o MicrosoftGraphSchemaExtension) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Owner != nil {
		toSerialize["owner"] = o.Owner
	}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.TargetTypes != nil {
		toSerialize["targetTypes"] = o.TargetTypes
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphSchemaExtension struct {
	value *MicrosoftGraphSchemaExtension
	isSet bool
}

func (v NullableMicrosoftGraphSchemaExtension) Get() *MicrosoftGraphSchemaExtension {
	return v.value
}

func (v *NullableMicrosoftGraphSchemaExtension) Set(val *MicrosoftGraphSchemaExtension) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphSchemaExtension) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphSchemaExtension) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphSchemaExtension(val *MicrosoftGraphSchemaExtension) *NullableMicrosoftGraphSchemaExtension {
	return &NullableMicrosoftGraphSchemaExtension{value: val, isSet: true}
}

func (v NullableMicrosoftGraphSchemaExtension) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphSchemaExtension) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


