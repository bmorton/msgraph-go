/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// InlineObject1205 struct for InlineObject1205
type InlineObject1205 struct {
	CalculationType *string `json:"calculationType,omitempty"`
}

// NewInlineObject1205 instantiates a new InlineObject1205 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject1205() *InlineObject1205 {
	this := InlineObject1205{}
	return &this
}

// NewInlineObject1205WithDefaults instantiates a new InlineObject1205 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject1205WithDefaults() *InlineObject1205 {
	this := InlineObject1205{}
	return &this
}

// GetCalculationType returns the CalculationType field value if set, zero value otherwise.
func (o *InlineObject1205) GetCalculationType() string {
	if o == nil || o.CalculationType == nil {
		var ret string
		return ret
	}
	return *o.CalculationType
}

// GetCalculationTypeOk returns a tuple with the CalculationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject1205) GetCalculationTypeOk() (*string, bool) {
	if o == nil || o.CalculationType == nil {
		return nil, false
	}
	return o.CalculationType, true
}

// HasCalculationType returns a boolean if a field has been set.
func (o *InlineObject1205) HasCalculationType() bool {
	if o != nil && o.CalculationType != nil {
		return true
	}

	return false
}

// SetCalculationType gets a reference to the given string and assigns it to the CalculationType field.
func (o *InlineObject1205) SetCalculationType(v string) {
	o.CalculationType = &v
}

func (o InlineObject1205) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CalculationType != nil {
		toSerialize["calculationType"] = o.CalculationType
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject1205 struct {
	value *InlineObject1205
	isSet bool
}

func (v NullableInlineObject1205) Get() *InlineObject1205 {
	return v.value
}

func (v *NullableInlineObject1205) Set(val *InlineObject1205) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject1205) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject1205) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject1205(val *InlineObject1205) *NullableInlineObject1205 {
	return &NullableInlineObject1205{value: val, isSet: true}
}

func (v NullableInlineObject1205) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject1205) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


