/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphServiceHealthIssue struct for MicrosoftGraphServiceHealthIssue
type MicrosoftGraphServiceHealthIssue struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// Additional details about service event. This property doesn't support filters.
	Details *[]*AnyOfmicrosoftGraphKeyValuePair `json:"details,omitempty"`
	// The end time of the service event.
	EndDateTime NullableTime `json:"endDateTime,omitempty"`
	// The last modified time of the service event.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// The start time of the service event.
	StartDateTime *time.Time `json:"startDateTime,omitempty"`
	// The title of the service event.
	Title *string `json:"title,omitempty"`
	// The type of service health issue. Possible values are: advisory, incident, unknownFutureValue.
	Classification AnyOfmicrosoftGraphServiceHealthClassificationType `json:"classification,omitempty"`
	// The feature name of the service issue.
	Feature NullableString `json:"feature,omitempty"`
	// The feature group name of the service issue.
	FeatureGroup NullableString `json:"featureGroup,omitempty"`
	// The description of the service issue impact.
	ImpactDescription *string `json:"impactDescription,omitempty"`
	// Indicates whether the issue is resolved.
	IsResolved *bool `json:"isResolved,omitempty"`
	// Indicates the origin of the service issue. Possible values are: microsoft, thirdParty, customer, unknownFutureValue.
	Origin AnyOfmicrosoftGraphServiceHealthOrigin `json:"origin,omitempty"`
	// Collection of historical posts for the service issue.
	Posts *[]MicrosoftGraphServiceHealthIssuePost `json:"posts,omitempty"`
	// Indicates the service affected by the issue.
	Service *string `json:"service,omitempty"`
	// The status of the service issue. Possible values are: serviceOperational, investigating, restoringService, verifyingService, serviceRestored, postIncidentReviewPublished, serviceDegradation, serviceInterruption, extendedRecovery, falsePositive, investigationSuspended, resolved, mitigatedExternal, mitigated, resolvedExternal, confirmed, reported, unknownFutureValue.
	Status AnyOfmicrosoftGraphServiceHealthStatus `json:"status,omitempty"`
}

// NewMicrosoftGraphServiceHealthIssue instantiates a new MicrosoftGraphServiceHealthIssue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphServiceHealthIssue() *MicrosoftGraphServiceHealthIssue {
	this := MicrosoftGraphServiceHealthIssue{}
	return &this
}

// NewMicrosoftGraphServiceHealthIssueWithDefaults instantiates a new MicrosoftGraphServiceHealthIssue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphServiceHealthIssueWithDefaults() *MicrosoftGraphServiceHealthIssue {
	this := MicrosoftGraphServiceHealthIssue{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphServiceHealthIssue) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphServiceHealthIssue) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphServiceHealthIssue) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphServiceHealthIssue) SetId(v string) {
	o.Id = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *MicrosoftGraphServiceHealthIssue) GetDetails() []*AnyOfmicrosoftGraphKeyValuePair {
	if o == nil || o.Details == nil {
		var ret []*AnyOfmicrosoftGraphKeyValuePair
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphServiceHealthIssue) GetDetailsOk() (*[]*AnyOfmicrosoftGraphKeyValuePair, bool) {
	if o == nil || o.Details == nil {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *MicrosoftGraphServiceHealthIssue) HasDetails() bool {
	if o != nil && o.Details != nil {
		return true
	}

	return false
}

// SetDetails gets a reference to the given []*AnyOfmicrosoftGraphKeyValuePair and assigns it to the Details field.
func (o *MicrosoftGraphServiceHealthIssue) SetDetails(v []*AnyOfmicrosoftGraphKeyValuePair) {
	o.Details = &v
}

// GetEndDateTime returns the EndDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphServiceHealthIssue) GetEndDateTime() time.Time {
	if o == nil || o.EndDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.EndDateTime.Get()
}

// GetEndDateTimeOk returns a tuple with the EndDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphServiceHealthIssue) GetEndDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EndDateTime.Get(), o.EndDateTime.IsSet()
}

// HasEndDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphServiceHealthIssue) HasEndDateTime() bool {
	if o != nil && o.EndDateTime.IsSet() {
		return true
	}

	return false
}

// SetEndDateTime gets a reference to the given NullableTime and assigns it to the EndDateTime field.
func (o *MicrosoftGraphServiceHealthIssue) SetEndDateTime(v time.Time) {
	o.EndDateTime.Set(&v)
}
// SetEndDateTimeNil sets the value for EndDateTime to be an explicit nil
func (o *MicrosoftGraphServiceHealthIssue) SetEndDateTimeNil() {
	o.EndDateTime.Set(nil)
}

// UnsetEndDateTime ensures that no value is present for EndDateTime, not even an explicit nil
func (o *MicrosoftGraphServiceHealthIssue) UnsetEndDateTime() {
	o.EndDateTime.Unset()
}

// GetLastModifiedDateTime returns the LastModifiedDateTime field value if set, zero value otherwise.
func (o *MicrosoftGraphServiceHealthIssue) GetLastModifiedDateTime() time.Time {
	if o == nil || o.LastModifiedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDateTime
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphServiceHealthIssue) GetLastModifiedDateTimeOk() (*time.Time, bool) {
	if o == nil || o.LastModifiedDateTime == nil {
		return nil, false
	}
	return o.LastModifiedDateTime, true
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphServiceHealthIssue) HasLastModifiedDateTime() bool {
	if o != nil && o.LastModifiedDateTime != nil {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given time.Time and assigns it to the LastModifiedDateTime field.
func (o *MicrosoftGraphServiceHealthIssue) SetLastModifiedDateTime(v time.Time) {
	o.LastModifiedDateTime = &v
}

// GetStartDateTime returns the StartDateTime field value if set, zero value otherwise.
func (o *MicrosoftGraphServiceHealthIssue) GetStartDateTime() time.Time {
	if o == nil || o.StartDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.StartDateTime
}

// GetStartDateTimeOk returns a tuple with the StartDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphServiceHealthIssue) GetStartDateTimeOk() (*time.Time, bool) {
	if o == nil || o.StartDateTime == nil {
		return nil, false
	}
	return o.StartDateTime, true
}

// HasStartDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphServiceHealthIssue) HasStartDateTime() bool {
	if o != nil && o.StartDateTime != nil {
		return true
	}

	return false
}

// SetStartDateTime gets a reference to the given time.Time and assigns it to the StartDateTime field.
func (o *MicrosoftGraphServiceHealthIssue) SetStartDateTime(v time.Time) {
	o.StartDateTime = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *MicrosoftGraphServiceHealthIssue) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphServiceHealthIssue) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *MicrosoftGraphServiceHealthIssue) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *MicrosoftGraphServiceHealthIssue) SetTitle(v string) {
	o.Title = &v
}

// GetClassification returns the Classification field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphServiceHealthIssue) GetClassification() AnyOfmicrosoftGraphServiceHealthClassificationType {
	if o == nil  {
		var ret AnyOfmicrosoftGraphServiceHealthClassificationType
		return ret
	}
	return o.Classification
}

// GetClassificationOk returns a tuple with the Classification field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphServiceHealthIssue) GetClassificationOk() (*AnyOfmicrosoftGraphServiceHealthClassificationType, bool) {
	if o == nil || o.Classification == nil {
		return nil, false
	}
	return &o.Classification, true
}

// HasClassification returns a boolean if a field has been set.
func (o *MicrosoftGraphServiceHealthIssue) HasClassification() bool {
	if o != nil && o.Classification != nil {
		return true
	}

	return false
}

// SetClassification gets a reference to the given AnyOfmicrosoftGraphServiceHealthClassificationType and assigns it to the Classification field.
func (o *MicrosoftGraphServiceHealthIssue) SetClassification(v AnyOfmicrosoftGraphServiceHealthClassificationType) {
	o.Classification = v
}

// GetFeature returns the Feature field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphServiceHealthIssue) GetFeature() string {
	if o == nil || o.Feature.Get() == nil {
		var ret string
		return ret
	}
	return *o.Feature.Get()
}

// GetFeatureOk returns a tuple with the Feature field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphServiceHealthIssue) GetFeatureOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Feature.Get(), o.Feature.IsSet()
}

// HasFeature returns a boolean if a field has been set.
func (o *MicrosoftGraphServiceHealthIssue) HasFeature() bool {
	if o != nil && o.Feature.IsSet() {
		return true
	}

	return false
}

// SetFeature gets a reference to the given NullableString and assigns it to the Feature field.
func (o *MicrosoftGraphServiceHealthIssue) SetFeature(v string) {
	o.Feature.Set(&v)
}
// SetFeatureNil sets the value for Feature to be an explicit nil
func (o *MicrosoftGraphServiceHealthIssue) SetFeatureNil() {
	o.Feature.Set(nil)
}

// UnsetFeature ensures that no value is present for Feature, not even an explicit nil
func (o *MicrosoftGraphServiceHealthIssue) UnsetFeature() {
	o.Feature.Unset()
}

// GetFeatureGroup returns the FeatureGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphServiceHealthIssue) GetFeatureGroup() string {
	if o == nil || o.FeatureGroup.Get() == nil {
		var ret string
		return ret
	}
	return *o.FeatureGroup.Get()
}

// GetFeatureGroupOk returns a tuple with the FeatureGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphServiceHealthIssue) GetFeatureGroupOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FeatureGroup.Get(), o.FeatureGroup.IsSet()
}

// HasFeatureGroup returns a boolean if a field has been set.
func (o *MicrosoftGraphServiceHealthIssue) HasFeatureGroup() bool {
	if o != nil && o.FeatureGroup.IsSet() {
		return true
	}

	return false
}

// SetFeatureGroup gets a reference to the given NullableString and assigns it to the FeatureGroup field.
func (o *MicrosoftGraphServiceHealthIssue) SetFeatureGroup(v string) {
	o.FeatureGroup.Set(&v)
}
// SetFeatureGroupNil sets the value for FeatureGroup to be an explicit nil
func (o *MicrosoftGraphServiceHealthIssue) SetFeatureGroupNil() {
	o.FeatureGroup.Set(nil)
}

// UnsetFeatureGroup ensures that no value is present for FeatureGroup, not even an explicit nil
func (o *MicrosoftGraphServiceHealthIssue) UnsetFeatureGroup() {
	o.FeatureGroup.Unset()
}

// GetImpactDescription returns the ImpactDescription field value if set, zero value otherwise.
func (o *MicrosoftGraphServiceHealthIssue) GetImpactDescription() string {
	if o == nil || o.ImpactDescription == nil {
		var ret string
		return ret
	}
	return *o.ImpactDescription
}

// GetImpactDescriptionOk returns a tuple with the ImpactDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphServiceHealthIssue) GetImpactDescriptionOk() (*string, bool) {
	if o == nil || o.ImpactDescription == nil {
		return nil, false
	}
	return o.ImpactDescription, true
}

// HasImpactDescription returns a boolean if a field has been set.
func (o *MicrosoftGraphServiceHealthIssue) HasImpactDescription() bool {
	if o != nil && o.ImpactDescription != nil {
		return true
	}

	return false
}

// SetImpactDescription gets a reference to the given string and assigns it to the ImpactDescription field.
func (o *MicrosoftGraphServiceHealthIssue) SetImpactDescription(v string) {
	o.ImpactDescription = &v
}

// GetIsResolved returns the IsResolved field value if set, zero value otherwise.
func (o *MicrosoftGraphServiceHealthIssue) GetIsResolved() bool {
	if o == nil || o.IsResolved == nil {
		var ret bool
		return ret
	}
	return *o.IsResolved
}

// GetIsResolvedOk returns a tuple with the IsResolved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphServiceHealthIssue) GetIsResolvedOk() (*bool, bool) {
	if o == nil || o.IsResolved == nil {
		return nil, false
	}
	return o.IsResolved, true
}

// HasIsResolved returns a boolean if a field has been set.
func (o *MicrosoftGraphServiceHealthIssue) HasIsResolved() bool {
	if o != nil && o.IsResolved != nil {
		return true
	}

	return false
}

// SetIsResolved gets a reference to the given bool and assigns it to the IsResolved field.
func (o *MicrosoftGraphServiceHealthIssue) SetIsResolved(v bool) {
	o.IsResolved = &v
}

// GetOrigin returns the Origin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphServiceHealthIssue) GetOrigin() AnyOfmicrosoftGraphServiceHealthOrigin {
	if o == nil  {
		var ret AnyOfmicrosoftGraphServiceHealthOrigin
		return ret
	}
	return o.Origin
}

// GetOriginOk returns a tuple with the Origin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphServiceHealthIssue) GetOriginOk() (*AnyOfmicrosoftGraphServiceHealthOrigin, bool) {
	if o == nil || o.Origin == nil {
		return nil, false
	}
	return &o.Origin, true
}

// HasOrigin returns a boolean if a field has been set.
func (o *MicrosoftGraphServiceHealthIssue) HasOrigin() bool {
	if o != nil && o.Origin != nil {
		return true
	}

	return false
}

// SetOrigin gets a reference to the given AnyOfmicrosoftGraphServiceHealthOrigin and assigns it to the Origin field.
func (o *MicrosoftGraphServiceHealthIssue) SetOrigin(v AnyOfmicrosoftGraphServiceHealthOrigin) {
	o.Origin = v
}

// GetPosts returns the Posts field value if set, zero value otherwise.
func (o *MicrosoftGraphServiceHealthIssue) GetPosts() []MicrosoftGraphServiceHealthIssuePost {
	if o == nil || o.Posts == nil {
		var ret []MicrosoftGraphServiceHealthIssuePost
		return ret
	}
	return *o.Posts
}

// GetPostsOk returns a tuple with the Posts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphServiceHealthIssue) GetPostsOk() (*[]MicrosoftGraphServiceHealthIssuePost, bool) {
	if o == nil || o.Posts == nil {
		return nil, false
	}
	return o.Posts, true
}

// HasPosts returns a boolean if a field has been set.
func (o *MicrosoftGraphServiceHealthIssue) HasPosts() bool {
	if o != nil && o.Posts != nil {
		return true
	}

	return false
}

// SetPosts gets a reference to the given []MicrosoftGraphServiceHealthIssuePost and assigns it to the Posts field.
func (o *MicrosoftGraphServiceHealthIssue) SetPosts(v []MicrosoftGraphServiceHealthIssuePost) {
	o.Posts = &v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *MicrosoftGraphServiceHealthIssue) GetService() string {
	if o == nil || o.Service == nil {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphServiceHealthIssue) GetServiceOk() (*string, bool) {
	if o == nil || o.Service == nil {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *MicrosoftGraphServiceHealthIssue) HasService() bool {
	if o != nil && o.Service != nil {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the Service field.
func (o *MicrosoftGraphServiceHealthIssue) SetService(v string) {
	o.Service = &v
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphServiceHealthIssue) GetStatus() AnyOfmicrosoftGraphServiceHealthStatus {
	if o == nil  {
		var ret AnyOfmicrosoftGraphServiceHealthStatus
		return ret
	}
	return o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphServiceHealthIssue) GetStatusOk() (*AnyOfmicrosoftGraphServiceHealthStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return &o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MicrosoftGraphServiceHealthIssue) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given AnyOfmicrosoftGraphServiceHealthStatus and assigns it to the Status field.
func (o *MicrosoftGraphServiceHealthIssue) SetStatus(v AnyOfmicrosoftGraphServiceHealthStatus) {
	o.Status = v
}

func (o MicrosoftGraphServiceHealthIssue) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Details != nil {
		toSerialize["details"] = o.Details
	}
	if o.EndDateTime.IsSet() {
		toSerialize["endDateTime"] = o.EndDateTime.Get()
	}
	if o.LastModifiedDateTime != nil {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime
	}
	if o.StartDateTime != nil {
		toSerialize["startDateTime"] = o.StartDateTime
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.Classification != nil {
		toSerialize["classification"] = o.Classification
	}
	if o.Feature.IsSet() {
		toSerialize["feature"] = o.Feature.Get()
	}
	if o.FeatureGroup.IsSet() {
		toSerialize["featureGroup"] = o.FeatureGroup.Get()
	}
	if o.ImpactDescription != nil {
		toSerialize["impactDescription"] = o.ImpactDescription
	}
	if o.IsResolved != nil {
		toSerialize["isResolved"] = o.IsResolved
	}
	if o.Origin != nil {
		toSerialize["origin"] = o.Origin
	}
	if o.Posts != nil {
		toSerialize["posts"] = o.Posts
	}
	if o.Service != nil {
		toSerialize["service"] = o.Service
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphServiceHealthIssue struct {
	value *MicrosoftGraphServiceHealthIssue
	isSet bool
}

func (v NullableMicrosoftGraphServiceHealthIssue) Get() *MicrosoftGraphServiceHealthIssue {
	return v.value
}

func (v *NullableMicrosoftGraphServiceHealthIssue) Set(val *MicrosoftGraphServiceHealthIssue) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphServiceHealthIssue) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphServiceHealthIssue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphServiceHealthIssue(val *MicrosoftGraphServiceHealthIssue) *NullableMicrosoftGraphServiceHealthIssue {
	return &NullableMicrosoftGraphServiceHealthIssue{value: val, isSet: true}
}

func (v NullableMicrosoftGraphServiceHealthIssue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphServiceHealthIssue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


