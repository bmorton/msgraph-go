/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphAdvancedConfigState the model 'MicrosoftGraphAdvancedConfigState'
type MicrosoftGraphAdvancedConfigState string

// List of microsoft.graph.advancedConfigState
const (
	DEFAULT MicrosoftGraphAdvancedConfigState = "default"
	ENABLED MicrosoftGraphAdvancedConfigState = "enabled"
	DISABLED MicrosoftGraphAdvancedConfigState = "disabled"
	UNKNOWN_FUTURE_VALUE MicrosoftGraphAdvancedConfigState = "unknownFutureValue"
)

// All allowed values of MicrosoftGraphAdvancedConfigState enum
var AllowedMicrosoftGraphAdvancedConfigStateEnumValues = []MicrosoftGraphAdvancedConfigState{
	"default",
	"enabled",
	"disabled",
	"unknownFutureValue",
}

func (v *MicrosoftGraphAdvancedConfigState) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphAdvancedConfigState(value)
	for _, existing := range AllowedMicrosoftGraphAdvancedConfigStateEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphAdvancedConfigState", value)
}

// NewMicrosoftGraphAdvancedConfigStateFromValue returns a pointer to a valid MicrosoftGraphAdvancedConfigState
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphAdvancedConfigStateFromValue(v string) (*MicrosoftGraphAdvancedConfigState, error) {
	ev := MicrosoftGraphAdvancedConfigState(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphAdvancedConfigState: valid values are %v", v, AllowedMicrosoftGraphAdvancedConfigStateEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphAdvancedConfigState) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphAdvancedConfigStateEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.advancedConfigState value
func (v MicrosoftGraphAdvancedConfigState) Ptr() *MicrosoftGraphAdvancedConfigState {
	return &v
}

type NullableMicrosoftGraphAdvancedConfigState struct {
	value *MicrosoftGraphAdvancedConfigState
	isSet bool
}

func (v NullableMicrosoftGraphAdvancedConfigState) Get() *MicrosoftGraphAdvancedConfigState {
	return v.value
}

func (v *NullableMicrosoftGraphAdvancedConfigState) Set(val *MicrosoftGraphAdvancedConfigState) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphAdvancedConfigState) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphAdvancedConfigState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphAdvancedConfigState(val *MicrosoftGraphAdvancedConfigState) *NullableMicrosoftGraphAdvancedConfigState {
	return &NullableMicrosoftGraphAdvancedConfigState{value: val, isSet: true}
}

func (v NullableMicrosoftGraphAdvancedConfigState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphAdvancedConfigState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

