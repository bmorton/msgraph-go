/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphInvitation struct for MicrosoftGraphInvitation
type MicrosoftGraphInvitation struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// The display name of the user being invited.
	InvitedUserDisplayName NullableString `json:"invitedUserDisplayName,omitempty"`
	// The email address of the user being invited. Required. The following special characters are not permitted in the email address:Tilde (~)Exclamation point (!)Number sign (#)Dollar sign ($)Percent (%)Circumflex (^)Ampersand (&)Asterisk (*)Parentheses (( ))Plus sign (+)Equal sign (=)Brackets ([ ])Braces ({ })Backslash (/)Slash mark (/)Pipe (/|)Semicolon (;)Colon (:)Quotation marks (')Angle brackets (< >)Question mark (?)Comma (,)However, the following exceptions apply:A period (.) or a hyphen (-) is permitted anywhere in the user name, except at the beginning or end of the name.An underscore (_) is permitted anywhere in the user name. This includes at the beginning or end of the name.
	InvitedUserEmailAddress *string `json:"invitedUserEmailAddress,omitempty"`
	// Additional configuration for the message being sent to the invited user, including customizing message text, language and cc recipient list.
	InvitedUserMessageInfo AnyOfmicrosoftGraphInvitedUserMessageInfo `json:"invitedUserMessageInfo,omitempty"`
	// The userType of the user being invited. By default, this is Guest. You can invite as Member if you are a company administrator.
	InvitedUserType NullableString `json:"invitedUserType,omitempty"`
	// The URL the user can use to redeem their invitation. Read-only.
	InviteRedeemUrl NullableString `json:"inviteRedeemUrl,omitempty"`
	// The URL the user should be redirected to once the invitation is redeemed. Required.
	InviteRedirectUrl *string `json:"inviteRedirectUrl,omitempty"`
	// Indicates whether an email should be sent to the user being invited. The default is false.
	SendInvitationMessage NullableBool `json:"sendInvitationMessage,omitempty"`
	// The status of the invitation. Possible values are: PendingAcceptance, Completed, InProgress, and Error.
	Status NullableString `json:"status,omitempty"`
	// The user created as part of the invitation creation. Read-Only
	InvitedUser AnyOfmicrosoftGraphUser `json:"invitedUser,omitempty"`
}

// NewMicrosoftGraphInvitation instantiates a new MicrosoftGraphInvitation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphInvitation() *MicrosoftGraphInvitation {
	this := MicrosoftGraphInvitation{}
	return &this
}

// NewMicrosoftGraphInvitationWithDefaults instantiates a new MicrosoftGraphInvitation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphInvitationWithDefaults() *MicrosoftGraphInvitation {
	this := MicrosoftGraphInvitation{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphInvitation) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphInvitation) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphInvitation) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphInvitation) SetId(v string) {
	o.Id = &v
}

// GetInvitedUserDisplayName returns the InvitedUserDisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphInvitation) GetInvitedUserDisplayName() string {
	if o == nil || o.InvitedUserDisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.InvitedUserDisplayName.Get()
}

// GetInvitedUserDisplayNameOk returns a tuple with the InvitedUserDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphInvitation) GetInvitedUserDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InvitedUserDisplayName.Get(), o.InvitedUserDisplayName.IsSet()
}

// HasInvitedUserDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphInvitation) HasInvitedUserDisplayName() bool {
	if o != nil && o.InvitedUserDisplayName.IsSet() {
		return true
	}

	return false
}

// SetInvitedUserDisplayName gets a reference to the given NullableString and assigns it to the InvitedUserDisplayName field.
func (o *MicrosoftGraphInvitation) SetInvitedUserDisplayName(v string) {
	o.InvitedUserDisplayName.Set(&v)
}
// SetInvitedUserDisplayNameNil sets the value for InvitedUserDisplayName to be an explicit nil
func (o *MicrosoftGraphInvitation) SetInvitedUserDisplayNameNil() {
	o.InvitedUserDisplayName.Set(nil)
}

// UnsetInvitedUserDisplayName ensures that no value is present for InvitedUserDisplayName, not even an explicit nil
func (o *MicrosoftGraphInvitation) UnsetInvitedUserDisplayName() {
	o.InvitedUserDisplayName.Unset()
}

// GetInvitedUserEmailAddress returns the InvitedUserEmailAddress field value if set, zero value otherwise.
func (o *MicrosoftGraphInvitation) GetInvitedUserEmailAddress() string {
	if o == nil || o.InvitedUserEmailAddress == nil {
		var ret string
		return ret
	}
	return *o.InvitedUserEmailAddress
}

// GetInvitedUserEmailAddressOk returns a tuple with the InvitedUserEmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphInvitation) GetInvitedUserEmailAddressOk() (*string, bool) {
	if o == nil || o.InvitedUserEmailAddress == nil {
		return nil, false
	}
	return o.InvitedUserEmailAddress, true
}

// HasInvitedUserEmailAddress returns a boolean if a field has been set.
func (o *MicrosoftGraphInvitation) HasInvitedUserEmailAddress() bool {
	if o != nil && o.InvitedUserEmailAddress != nil {
		return true
	}

	return false
}

// SetInvitedUserEmailAddress gets a reference to the given string and assigns it to the InvitedUserEmailAddress field.
func (o *MicrosoftGraphInvitation) SetInvitedUserEmailAddress(v string) {
	o.InvitedUserEmailAddress = &v
}

// GetInvitedUserMessageInfo returns the InvitedUserMessageInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphInvitation) GetInvitedUserMessageInfo() AnyOfmicrosoftGraphInvitedUserMessageInfo {
	if o == nil  {
		var ret AnyOfmicrosoftGraphInvitedUserMessageInfo
		return ret
	}
	return o.InvitedUserMessageInfo
}

// GetInvitedUserMessageInfoOk returns a tuple with the InvitedUserMessageInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphInvitation) GetInvitedUserMessageInfoOk() (*AnyOfmicrosoftGraphInvitedUserMessageInfo, bool) {
	if o == nil || o.InvitedUserMessageInfo == nil {
		return nil, false
	}
	return &o.InvitedUserMessageInfo, true
}

// HasInvitedUserMessageInfo returns a boolean if a field has been set.
func (o *MicrosoftGraphInvitation) HasInvitedUserMessageInfo() bool {
	if o != nil && o.InvitedUserMessageInfo != nil {
		return true
	}

	return false
}

// SetInvitedUserMessageInfo gets a reference to the given AnyOfmicrosoftGraphInvitedUserMessageInfo and assigns it to the InvitedUserMessageInfo field.
func (o *MicrosoftGraphInvitation) SetInvitedUserMessageInfo(v AnyOfmicrosoftGraphInvitedUserMessageInfo) {
	o.InvitedUserMessageInfo = v
}

// GetInvitedUserType returns the InvitedUserType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphInvitation) GetInvitedUserType() string {
	if o == nil || o.InvitedUserType.Get() == nil {
		var ret string
		return ret
	}
	return *o.InvitedUserType.Get()
}

// GetInvitedUserTypeOk returns a tuple with the InvitedUserType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphInvitation) GetInvitedUserTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InvitedUserType.Get(), o.InvitedUserType.IsSet()
}

// HasInvitedUserType returns a boolean if a field has been set.
func (o *MicrosoftGraphInvitation) HasInvitedUserType() bool {
	if o != nil && o.InvitedUserType.IsSet() {
		return true
	}

	return false
}

// SetInvitedUserType gets a reference to the given NullableString and assigns it to the InvitedUserType field.
func (o *MicrosoftGraphInvitation) SetInvitedUserType(v string) {
	o.InvitedUserType.Set(&v)
}
// SetInvitedUserTypeNil sets the value for InvitedUserType to be an explicit nil
func (o *MicrosoftGraphInvitation) SetInvitedUserTypeNil() {
	o.InvitedUserType.Set(nil)
}

// UnsetInvitedUserType ensures that no value is present for InvitedUserType, not even an explicit nil
func (o *MicrosoftGraphInvitation) UnsetInvitedUserType() {
	o.InvitedUserType.Unset()
}

// GetInviteRedeemUrl returns the InviteRedeemUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphInvitation) GetInviteRedeemUrl() string {
	if o == nil || o.InviteRedeemUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.InviteRedeemUrl.Get()
}

// GetInviteRedeemUrlOk returns a tuple with the InviteRedeemUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphInvitation) GetInviteRedeemUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InviteRedeemUrl.Get(), o.InviteRedeemUrl.IsSet()
}

// HasInviteRedeemUrl returns a boolean if a field has been set.
func (o *MicrosoftGraphInvitation) HasInviteRedeemUrl() bool {
	if o != nil && o.InviteRedeemUrl.IsSet() {
		return true
	}

	return false
}

// SetInviteRedeemUrl gets a reference to the given NullableString and assigns it to the InviteRedeemUrl field.
func (o *MicrosoftGraphInvitation) SetInviteRedeemUrl(v string) {
	o.InviteRedeemUrl.Set(&v)
}
// SetInviteRedeemUrlNil sets the value for InviteRedeemUrl to be an explicit nil
func (o *MicrosoftGraphInvitation) SetInviteRedeemUrlNil() {
	o.InviteRedeemUrl.Set(nil)
}

// UnsetInviteRedeemUrl ensures that no value is present for InviteRedeemUrl, not even an explicit nil
func (o *MicrosoftGraphInvitation) UnsetInviteRedeemUrl() {
	o.InviteRedeemUrl.Unset()
}

// GetInviteRedirectUrl returns the InviteRedirectUrl field value if set, zero value otherwise.
func (o *MicrosoftGraphInvitation) GetInviteRedirectUrl() string {
	if o == nil || o.InviteRedirectUrl == nil {
		var ret string
		return ret
	}
	return *o.InviteRedirectUrl
}

// GetInviteRedirectUrlOk returns a tuple with the InviteRedirectUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphInvitation) GetInviteRedirectUrlOk() (*string, bool) {
	if o == nil || o.InviteRedirectUrl == nil {
		return nil, false
	}
	return o.InviteRedirectUrl, true
}

// HasInviteRedirectUrl returns a boolean if a field has been set.
func (o *MicrosoftGraphInvitation) HasInviteRedirectUrl() bool {
	if o != nil && o.InviteRedirectUrl != nil {
		return true
	}

	return false
}

// SetInviteRedirectUrl gets a reference to the given string and assigns it to the InviteRedirectUrl field.
func (o *MicrosoftGraphInvitation) SetInviteRedirectUrl(v string) {
	o.InviteRedirectUrl = &v
}

// GetSendInvitationMessage returns the SendInvitationMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphInvitation) GetSendInvitationMessage() bool {
	if o == nil || o.SendInvitationMessage.Get() == nil {
		var ret bool
		return ret
	}
	return *o.SendInvitationMessage.Get()
}

// GetSendInvitationMessageOk returns a tuple with the SendInvitationMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphInvitation) GetSendInvitationMessageOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SendInvitationMessage.Get(), o.SendInvitationMessage.IsSet()
}

// HasSendInvitationMessage returns a boolean if a field has been set.
func (o *MicrosoftGraphInvitation) HasSendInvitationMessage() bool {
	if o != nil && o.SendInvitationMessage.IsSet() {
		return true
	}

	return false
}

// SetSendInvitationMessage gets a reference to the given NullableBool and assigns it to the SendInvitationMessage field.
func (o *MicrosoftGraphInvitation) SetSendInvitationMessage(v bool) {
	o.SendInvitationMessage.Set(&v)
}
// SetSendInvitationMessageNil sets the value for SendInvitationMessage to be an explicit nil
func (o *MicrosoftGraphInvitation) SetSendInvitationMessageNil() {
	o.SendInvitationMessage.Set(nil)
}

// UnsetSendInvitationMessage ensures that no value is present for SendInvitationMessage, not even an explicit nil
func (o *MicrosoftGraphInvitation) UnsetSendInvitationMessage() {
	o.SendInvitationMessage.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphInvitation) GetStatus() string {
	if o == nil || o.Status.Get() == nil {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphInvitation) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *MicrosoftGraphInvitation) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *MicrosoftGraphInvitation) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *MicrosoftGraphInvitation) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *MicrosoftGraphInvitation) UnsetStatus() {
	o.Status.Unset()
}

// GetInvitedUser returns the InvitedUser field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphInvitation) GetInvitedUser() AnyOfmicrosoftGraphUser {
	if o == nil  {
		var ret AnyOfmicrosoftGraphUser
		return ret
	}
	return o.InvitedUser
}

// GetInvitedUserOk returns a tuple with the InvitedUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphInvitation) GetInvitedUserOk() (*AnyOfmicrosoftGraphUser, bool) {
	if o == nil || o.InvitedUser == nil {
		return nil, false
	}
	return &o.InvitedUser, true
}

// HasInvitedUser returns a boolean if a field has been set.
func (o *MicrosoftGraphInvitation) HasInvitedUser() bool {
	if o != nil && o.InvitedUser != nil {
		return true
	}

	return false
}

// SetInvitedUser gets a reference to the given AnyOfmicrosoftGraphUser and assigns it to the InvitedUser field.
func (o *MicrosoftGraphInvitation) SetInvitedUser(v AnyOfmicrosoftGraphUser) {
	o.InvitedUser = v
}

func (o MicrosoftGraphInvitation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.InvitedUserDisplayName.IsSet() {
		toSerialize["invitedUserDisplayName"] = o.InvitedUserDisplayName.Get()
	}
	if o.InvitedUserEmailAddress != nil {
		toSerialize["invitedUserEmailAddress"] = o.InvitedUserEmailAddress
	}
	if o.InvitedUserMessageInfo != nil {
		toSerialize["invitedUserMessageInfo"] = o.InvitedUserMessageInfo
	}
	if o.InvitedUserType.IsSet() {
		toSerialize["invitedUserType"] = o.InvitedUserType.Get()
	}
	if o.InviteRedeemUrl.IsSet() {
		toSerialize["inviteRedeemUrl"] = o.InviteRedeemUrl.Get()
	}
	if o.InviteRedirectUrl != nil {
		toSerialize["inviteRedirectUrl"] = o.InviteRedirectUrl
	}
	if o.SendInvitationMessage.IsSet() {
		toSerialize["sendInvitationMessage"] = o.SendInvitationMessage.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.InvitedUser != nil {
		toSerialize["invitedUser"] = o.InvitedUser
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphInvitation struct {
	value *MicrosoftGraphInvitation
	isSet bool
}

func (v NullableMicrosoftGraphInvitation) Get() *MicrosoftGraphInvitation {
	return v.value
}

func (v *NullableMicrosoftGraphInvitation) Set(val *MicrosoftGraphInvitation) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphInvitation) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphInvitation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphInvitation(val *MicrosoftGraphInvitation) *NullableMicrosoftGraphInvitation {
	return &NullableMicrosoftGraphInvitation{value: val, isSet: true}
}

func (v NullableMicrosoftGraphInvitation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphInvitation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


