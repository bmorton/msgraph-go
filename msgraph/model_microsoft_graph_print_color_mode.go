/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphPrintColorMode the model 'MicrosoftGraphPrintColorMode'
type MicrosoftGraphPrintColorMode string

// List of microsoft.graph.printColorMode
const (
	BLACK_AND_WHITE MicrosoftGraphPrintColorMode = "blackAndWhite"
	GRAYSCALE MicrosoftGraphPrintColorMode = "grayscale"
	COLOR MicrosoftGraphPrintColorMode = "color"
	AUTO MicrosoftGraphPrintColorMode = "auto"
	UNKNOWN_FUTURE_VALUE MicrosoftGraphPrintColorMode = "unknownFutureValue"
)

// All allowed values of MicrosoftGraphPrintColorMode enum
var AllowedMicrosoftGraphPrintColorModeEnumValues = []MicrosoftGraphPrintColorMode{
	"blackAndWhite",
	"grayscale",
	"color",
	"auto",
	"unknownFutureValue",
}

func (v *MicrosoftGraphPrintColorMode) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphPrintColorMode(value)
	for _, existing := range AllowedMicrosoftGraphPrintColorModeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphPrintColorMode", value)
}

// NewMicrosoftGraphPrintColorModeFromValue returns a pointer to a valid MicrosoftGraphPrintColorMode
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphPrintColorModeFromValue(v string) (*MicrosoftGraphPrintColorMode, error) {
	ev := MicrosoftGraphPrintColorMode(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphPrintColorMode: valid values are %v", v, AllowedMicrosoftGraphPrintColorModeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphPrintColorMode) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphPrintColorModeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.printColorMode value
func (v MicrosoftGraphPrintColorMode) Ptr() *MicrosoftGraphPrintColorMode {
	return &v
}

type NullableMicrosoftGraphPrintColorMode struct {
	value *MicrosoftGraphPrintColorMode
	isSet bool
}

func (v NullableMicrosoftGraphPrintColorMode) Get() *MicrosoftGraphPrintColorMode {
	return v.value
}

func (v *NullableMicrosoftGraphPrintColorMode) Set(val *MicrosoftGraphPrintColorMode) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphPrintColorMode) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphPrintColorMode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphPrintColorMode(val *MicrosoftGraphPrintColorMode) *NullableMicrosoftGraphPrintColorMode {
	return &NullableMicrosoftGraphPrintColorMode{value: val, isSet: true}
}

func (v NullableMicrosoftGraphPrintColorMode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphPrintColorMode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

