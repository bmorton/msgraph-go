/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphStoragePlanInformation struct for MicrosoftGraphStoragePlanInformation
type MicrosoftGraphStoragePlanInformation struct {
	// Indicates whether there are higher storage quota plans available. Read-only.
	UpgradeAvailable NullableBool `json:"upgradeAvailable,omitempty"`
}

// NewMicrosoftGraphStoragePlanInformation instantiates a new MicrosoftGraphStoragePlanInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphStoragePlanInformation() *MicrosoftGraphStoragePlanInformation {
	this := MicrosoftGraphStoragePlanInformation{}
	return &this
}

// NewMicrosoftGraphStoragePlanInformationWithDefaults instantiates a new MicrosoftGraphStoragePlanInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphStoragePlanInformationWithDefaults() *MicrosoftGraphStoragePlanInformation {
	this := MicrosoftGraphStoragePlanInformation{}
	return &this
}

// GetUpgradeAvailable returns the UpgradeAvailable field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphStoragePlanInformation) GetUpgradeAvailable() bool {
	if o == nil || o.UpgradeAvailable.Get() == nil {
		var ret bool
		return ret
	}
	return *o.UpgradeAvailable.Get()
}

// GetUpgradeAvailableOk returns a tuple with the UpgradeAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphStoragePlanInformation) GetUpgradeAvailableOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UpgradeAvailable.Get(), o.UpgradeAvailable.IsSet()
}

// HasUpgradeAvailable returns a boolean if a field has been set.
func (o *MicrosoftGraphStoragePlanInformation) HasUpgradeAvailable() bool {
	if o != nil && o.UpgradeAvailable.IsSet() {
		return true
	}

	return false
}

// SetUpgradeAvailable gets a reference to the given NullableBool and assigns it to the UpgradeAvailable field.
func (o *MicrosoftGraphStoragePlanInformation) SetUpgradeAvailable(v bool) {
	o.UpgradeAvailable.Set(&v)
}
// SetUpgradeAvailableNil sets the value for UpgradeAvailable to be an explicit nil
func (o *MicrosoftGraphStoragePlanInformation) SetUpgradeAvailableNil() {
	o.UpgradeAvailable.Set(nil)
}

// UnsetUpgradeAvailable ensures that no value is present for UpgradeAvailable, not even an explicit nil
func (o *MicrosoftGraphStoragePlanInformation) UnsetUpgradeAvailable() {
	o.UpgradeAvailable.Unset()
}

func (o MicrosoftGraphStoragePlanInformation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UpgradeAvailable.IsSet() {
		toSerialize["upgradeAvailable"] = o.UpgradeAvailable.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphStoragePlanInformation struct {
	value *MicrosoftGraphStoragePlanInformation
	isSet bool
}

func (v NullableMicrosoftGraphStoragePlanInformation) Get() *MicrosoftGraphStoragePlanInformation {
	return v.value
}

func (v *NullableMicrosoftGraphStoragePlanInformation) Set(val *MicrosoftGraphStoragePlanInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphStoragePlanInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphStoragePlanInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphStoragePlanInformation(val *MicrosoftGraphStoragePlanInformation) *NullableMicrosoftGraphStoragePlanInformation {
	return &NullableMicrosoftGraphStoragePlanInformation{value: val, isSet: true}
}

func (v NullableMicrosoftGraphStoragePlanInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphStoragePlanInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


