/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphToneInfo struct for MicrosoftGraphToneInfo
type MicrosoftGraphToneInfo struct {
	// An incremental identifier used for ordering DTMF events.
	SequenceId *int64 `json:"sequenceId,omitempty"`
	// Possible values are: tone0, tone1, tone2, tone3, tone4, tone5, tone6, tone7, tone8, tone9, star, pound, a, b, c, d, flash.
	Tone AnyOfmicrosoftGraphTone `json:"tone,omitempty"`
}

// NewMicrosoftGraphToneInfo instantiates a new MicrosoftGraphToneInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphToneInfo() *MicrosoftGraphToneInfo {
	this := MicrosoftGraphToneInfo{}
	return &this
}

// NewMicrosoftGraphToneInfoWithDefaults instantiates a new MicrosoftGraphToneInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphToneInfoWithDefaults() *MicrosoftGraphToneInfo {
	this := MicrosoftGraphToneInfo{}
	return &this
}

// GetSequenceId returns the SequenceId field value if set, zero value otherwise.
func (o *MicrosoftGraphToneInfo) GetSequenceId() int64 {
	if o == nil || o.SequenceId == nil {
		var ret int64
		return ret
	}
	return *o.SequenceId
}

// GetSequenceIdOk returns a tuple with the SequenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphToneInfo) GetSequenceIdOk() (*int64, bool) {
	if o == nil || o.SequenceId == nil {
		return nil, false
	}
	return o.SequenceId, true
}

// HasSequenceId returns a boolean if a field has been set.
func (o *MicrosoftGraphToneInfo) HasSequenceId() bool {
	if o != nil && o.SequenceId != nil {
		return true
	}

	return false
}

// SetSequenceId gets a reference to the given int64 and assigns it to the SequenceId field.
func (o *MicrosoftGraphToneInfo) SetSequenceId(v int64) {
	o.SequenceId = &v
}

// GetTone returns the Tone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphToneInfo) GetTone() AnyOfmicrosoftGraphTone {
	if o == nil  {
		var ret AnyOfmicrosoftGraphTone
		return ret
	}
	return o.Tone
}

// GetToneOk returns a tuple with the Tone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphToneInfo) GetToneOk() (*AnyOfmicrosoftGraphTone, bool) {
	if o == nil || o.Tone == nil {
		return nil, false
	}
	return &o.Tone, true
}

// HasTone returns a boolean if a field has been set.
func (o *MicrosoftGraphToneInfo) HasTone() bool {
	if o != nil && o.Tone != nil {
		return true
	}

	return false
}

// SetTone gets a reference to the given AnyOfmicrosoftGraphTone and assigns it to the Tone field.
func (o *MicrosoftGraphToneInfo) SetTone(v AnyOfmicrosoftGraphTone) {
	o.Tone = v
}

func (o MicrosoftGraphToneInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SequenceId != nil {
		toSerialize["sequenceId"] = o.SequenceId
	}
	if o.Tone != nil {
		toSerialize["tone"] = o.Tone
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphToneInfo struct {
	value *MicrosoftGraphToneInfo
	isSet bool
}

func (v NullableMicrosoftGraphToneInfo) Get() *MicrosoftGraphToneInfo {
	return v.value
}

func (v *NullableMicrosoftGraphToneInfo) Set(val *MicrosoftGraphToneInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphToneInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphToneInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphToneInfo(val *MicrosoftGraphToneInfo) *NullableMicrosoftGraphToneInfo {
	return &NullableMicrosoftGraphToneInfo{value: val, isSet: true}
}

func (v NullableMicrosoftGraphToneInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphToneInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


