/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphAssignmentOrder struct for MicrosoftGraphAssignmentOrder
type MicrosoftGraphAssignmentOrder struct {
	// A list of identityUserFlowAttribute object identifiers that determine the order in which attributes should be collected within a user flow.
	Order *[]*string `json:"order,omitempty"`
}

// NewMicrosoftGraphAssignmentOrder instantiates a new MicrosoftGraphAssignmentOrder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphAssignmentOrder() *MicrosoftGraphAssignmentOrder {
	this := MicrosoftGraphAssignmentOrder{}
	return &this
}

// NewMicrosoftGraphAssignmentOrderWithDefaults instantiates a new MicrosoftGraphAssignmentOrder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphAssignmentOrderWithDefaults() *MicrosoftGraphAssignmentOrder {
	this := MicrosoftGraphAssignmentOrder{}
	return &this
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *MicrosoftGraphAssignmentOrder) GetOrder() []*string {
	if o == nil || o.Order == nil {
		var ret []*string
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAssignmentOrder) GetOrderOk() (*[]*string, bool) {
	if o == nil || o.Order == nil {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *MicrosoftGraphAssignmentOrder) HasOrder() bool {
	if o != nil && o.Order != nil {
		return true
	}

	return false
}

// SetOrder gets a reference to the given []*string and assigns it to the Order field.
func (o *MicrosoftGraphAssignmentOrder) SetOrder(v []*string) {
	o.Order = &v
}

func (o MicrosoftGraphAssignmentOrder) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Order != nil {
		toSerialize["order"] = o.Order
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphAssignmentOrder struct {
	value *MicrosoftGraphAssignmentOrder
	isSet bool
}

func (v NullableMicrosoftGraphAssignmentOrder) Get() *MicrosoftGraphAssignmentOrder {
	return v.value
}

func (v *NullableMicrosoftGraphAssignmentOrder) Set(val *MicrosoftGraphAssignmentOrder) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphAssignmentOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphAssignmentOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphAssignmentOrder(val *MicrosoftGraphAssignmentOrder) *NullableMicrosoftGraphAssignmentOrder {
	return &NullableMicrosoftGraphAssignmentOrder{value: val, isSet: true}
}

func (v NullableMicrosoftGraphAssignmentOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphAssignmentOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


