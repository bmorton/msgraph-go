/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// AndroidManagedAppProtection Policy used to configure detailed management settings targeted to specific security groups and for a specified set of apps on an Android device
type AndroidManagedAppProtection struct {
	// Friendly name of the preferred custom browser to open weblink on Android. When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
	CustomBrowserDisplayName NullableString `json:"customBrowserDisplayName,omitempty"`
	// Unique identifier of the preferred custom browser to open weblink on Android. When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
	CustomBrowserPackageId NullableString `json:"customBrowserPackageId,omitempty"`
	// Count of apps to which the current policy is deployed.
	DeployedAppCount *int32 `json:"deployedAppCount,omitempty"`
	// When this setting is enabled, app level encryption is disabled if device level encryption is enabled
	DisableAppEncryptionIfDeviceEncryptionIsEnabled *bool `json:"disableAppEncryptionIfDeviceEncryptionIsEnabled,omitempty"`
	// Indicates whether application data for managed apps should be encrypted
	EncryptAppData *bool `json:"encryptAppData,omitempty"`
	// Define the oldest required Android security patch level a user can have to gain secure access to the app.
	MinimumRequiredPatchVersion NullableString `json:"minimumRequiredPatchVersion,omitempty"`
	// Define the oldest recommended Android security patch level a user can have for secure access to the app.
	MinimumWarningPatchVersion NullableString `json:"minimumWarningPatchVersion,omitempty"`
	// Indicates whether a managed user can take screen captures of managed apps
	ScreenCaptureBlocked *bool `json:"screenCaptureBlocked,omitempty"`
	// List of apps to which the policy is deployed.
	Apps *[]MicrosoftGraphManagedMobileApp `json:"apps,omitempty"`
	// Navigation property to deployment summary of the configuration.
	DeploymentSummary AnyOfmicrosoftGraphManagedAppPolicyDeploymentSummary `json:"deploymentSummary,omitempty"`
}

// NewAndroidManagedAppProtection instantiates a new AndroidManagedAppProtection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAndroidManagedAppProtection() *AndroidManagedAppProtection {
	this := AndroidManagedAppProtection{}
	return &this
}

// NewAndroidManagedAppProtectionWithDefaults instantiates a new AndroidManagedAppProtection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAndroidManagedAppProtectionWithDefaults() *AndroidManagedAppProtection {
	this := AndroidManagedAppProtection{}
	return &this
}

// GetCustomBrowserDisplayName returns the CustomBrowserDisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AndroidManagedAppProtection) GetCustomBrowserDisplayName() string {
	if o == nil || o.CustomBrowserDisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.CustomBrowserDisplayName.Get()
}

// GetCustomBrowserDisplayNameOk returns a tuple with the CustomBrowserDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AndroidManagedAppProtection) GetCustomBrowserDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CustomBrowserDisplayName.Get(), o.CustomBrowserDisplayName.IsSet()
}

// HasCustomBrowserDisplayName returns a boolean if a field has been set.
func (o *AndroidManagedAppProtection) HasCustomBrowserDisplayName() bool {
	if o != nil && o.CustomBrowserDisplayName.IsSet() {
		return true
	}

	return false
}

// SetCustomBrowserDisplayName gets a reference to the given NullableString and assigns it to the CustomBrowserDisplayName field.
func (o *AndroidManagedAppProtection) SetCustomBrowserDisplayName(v string) {
	o.CustomBrowserDisplayName.Set(&v)
}
// SetCustomBrowserDisplayNameNil sets the value for CustomBrowserDisplayName to be an explicit nil
func (o *AndroidManagedAppProtection) SetCustomBrowserDisplayNameNil() {
	o.CustomBrowserDisplayName.Set(nil)
}

// UnsetCustomBrowserDisplayName ensures that no value is present for CustomBrowserDisplayName, not even an explicit nil
func (o *AndroidManagedAppProtection) UnsetCustomBrowserDisplayName() {
	o.CustomBrowserDisplayName.Unset()
}

// GetCustomBrowserPackageId returns the CustomBrowserPackageId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AndroidManagedAppProtection) GetCustomBrowserPackageId() string {
	if o == nil || o.CustomBrowserPackageId.Get() == nil {
		var ret string
		return ret
	}
	return *o.CustomBrowserPackageId.Get()
}

// GetCustomBrowserPackageIdOk returns a tuple with the CustomBrowserPackageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AndroidManagedAppProtection) GetCustomBrowserPackageIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CustomBrowserPackageId.Get(), o.CustomBrowserPackageId.IsSet()
}

// HasCustomBrowserPackageId returns a boolean if a field has been set.
func (o *AndroidManagedAppProtection) HasCustomBrowserPackageId() bool {
	if o != nil && o.CustomBrowserPackageId.IsSet() {
		return true
	}

	return false
}

// SetCustomBrowserPackageId gets a reference to the given NullableString and assigns it to the CustomBrowserPackageId field.
func (o *AndroidManagedAppProtection) SetCustomBrowserPackageId(v string) {
	o.CustomBrowserPackageId.Set(&v)
}
// SetCustomBrowserPackageIdNil sets the value for CustomBrowserPackageId to be an explicit nil
func (o *AndroidManagedAppProtection) SetCustomBrowserPackageIdNil() {
	o.CustomBrowserPackageId.Set(nil)
}

// UnsetCustomBrowserPackageId ensures that no value is present for CustomBrowserPackageId, not even an explicit nil
func (o *AndroidManagedAppProtection) UnsetCustomBrowserPackageId() {
	o.CustomBrowserPackageId.Unset()
}

// GetDeployedAppCount returns the DeployedAppCount field value if set, zero value otherwise.
func (o *AndroidManagedAppProtection) GetDeployedAppCount() int32 {
	if o == nil || o.DeployedAppCount == nil {
		var ret int32
		return ret
	}
	return *o.DeployedAppCount
}

// GetDeployedAppCountOk returns a tuple with the DeployedAppCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AndroidManagedAppProtection) GetDeployedAppCountOk() (*int32, bool) {
	if o == nil || o.DeployedAppCount == nil {
		return nil, false
	}
	return o.DeployedAppCount, true
}

// HasDeployedAppCount returns a boolean if a field has been set.
func (o *AndroidManagedAppProtection) HasDeployedAppCount() bool {
	if o != nil && o.DeployedAppCount != nil {
		return true
	}

	return false
}

// SetDeployedAppCount gets a reference to the given int32 and assigns it to the DeployedAppCount field.
func (o *AndroidManagedAppProtection) SetDeployedAppCount(v int32) {
	o.DeployedAppCount = &v
}

// GetDisableAppEncryptionIfDeviceEncryptionIsEnabled returns the DisableAppEncryptionIfDeviceEncryptionIsEnabled field value if set, zero value otherwise.
func (o *AndroidManagedAppProtection) GetDisableAppEncryptionIfDeviceEncryptionIsEnabled() bool {
	if o == nil || o.DisableAppEncryptionIfDeviceEncryptionIsEnabled == nil {
		var ret bool
		return ret
	}
	return *o.DisableAppEncryptionIfDeviceEncryptionIsEnabled
}

// GetDisableAppEncryptionIfDeviceEncryptionIsEnabledOk returns a tuple with the DisableAppEncryptionIfDeviceEncryptionIsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AndroidManagedAppProtection) GetDisableAppEncryptionIfDeviceEncryptionIsEnabledOk() (*bool, bool) {
	if o == nil || o.DisableAppEncryptionIfDeviceEncryptionIsEnabled == nil {
		return nil, false
	}
	return o.DisableAppEncryptionIfDeviceEncryptionIsEnabled, true
}

// HasDisableAppEncryptionIfDeviceEncryptionIsEnabled returns a boolean if a field has been set.
func (o *AndroidManagedAppProtection) HasDisableAppEncryptionIfDeviceEncryptionIsEnabled() bool {
	if o != nil && o.DisableAppEncryptionIfDeviceEncryptionIsEnabled != nil {
		return true
	}

	return false
}

// SetDisableAppEncryptionIfDeviceEncryptionIsEnabled gets a reference to the given bool and assigns it to the DisableAppEncryptionIfDeviceEncryptionIsEnabled field.
func (o *AndroidManagedAppProtection) SetDisableAppEncryptionIfDeviceEncryptionIsEnabled(v bool) {
	o.DisableAppEncryptionIfDeviceEncryptionIsEnabled = &v
}

// GetEncryptAppData returns the EncryptAppData field value if set, zero value otherwise.
func (o *AndroidManagedAppProtection) GetEncryptAppData() bool {
	if o == nil || o.EncryptAppData == nil {
		var ret bool
		return ret
	}
	return *o.EncryptAppData
}

// GetEncryptAppDataOk returns a tuple with the EncryptAppData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AndroidManagedAppProtection) GetEncryptAppDataOk() (*bool, bool) {
	if o == nil || o.EncryptAppData == nil {
		return nil, false
	}
	return o.EncryptAppData, true
}

// HasEncryptAppData returns a boolean if a field has been set.
func (o *AndroidManagedAppProtection) HasEncryptAppData() bool {
	if o != nil && o.EncryptAppData != nil {
		return true
	}

	return false
}

// SetEncryptAppData gets a reference to the given bool and assigns it to the EncryptAppData field.
func (o *AndroidManagedAppProtection) SetEncryptAppData(v bool) {
	o.EncryptAppData = &v
}

// GetMinimumRequiredPatchVersion returns the MinimumRequiredPatchVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AndroidManagedAppProtection) GetMinimumRequiredPatchVersion() string {
	if o == nil || o.MinimumRequiredPatchVersion.Get() == nil {
		var ret string
		return ret
	}
	return *o.MinimumRequiredPatchVersion.Get()
}

// GetMinimumRequiredPatchVersionOk returns a tuple with the MinimumRequiredPatchVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AndroidManagedAppProtection) GetMinimumRequiredPatchVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MinimumRequiredPatchVersion.Get(), o.MinimumRequiredPatchVersion.IsSet()
}

// HasMinimumRequiredPatchVersion returns a boolean if a field has been set.
func (o *AndroidManagedAppProtection) HasMinimumRequiredPatchVersion() bool {
	if o != nil && o.MinimumRequiredPatchVersion.IsSet() {
		return true
	}

	return false
}

// SetMinimumRequiredPatchVersion gets a reference to the given NullableString and assigns it to the MinimumRequiredPatchVersion field.
func (o *AndroidManagedAppProtection) SetMinimumRequiredPatchVersion(v string) {
	o.MinimumRequiredPatchVersion.Set(&v)
}
// SetMinimumRequiredPatchVersionNil sets the value for MinimumRequiredPatchVersion to be an explicit nil
func (o *AndroidManagedAppProtection) SetMinimumRequiredPatchVersionNil() {
	o.MinimumRequiredPatchVersion.Set(nil)
}

// UnsetMinimumRequiredPatchVersion ensures that no value is present for MinimumRequiredPatchVersion, not even an explicit nil
func (o *AndroidManagedAppProtection) UnsetMinimumRequiredPatchVersion() {
	o.MinimumRequiredPatchVersion.Unset()
}

// GetMinimumWarningPatchVersion returns the MinimumWarningPatchVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AndroidManagedAppProtection) GetMinimumWarningPatchVersion() string {
	if o == nil || o.MinimumWarningPatchVersion.Get() == nil {
		var ret string
		return ret
	}
	return *o.MinimumWarningPatchVersion.Get()
}

// GetMinimumWarningPatchVersionOk returns a tuple with the MinimumWarningPatchVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AndroidManagedAppProtection) GetMinimumWarningPatchVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MinimumWarningPatchVersion.Get(), o.MinimumWarningPatchVersion.IsSet()
}

// HasMinimumWarningPatchVersion returns a boolean if a field has been set.
func (o *AndroidManagedAppProtection) HasMinimumWarningPatchVersion() bool {
	if o != nil && o.MinimumWarningPatchVersion.IsSet() {
		return true
	}

	return false
}

// SetMinimumWarningPatchVersion gets a reference to the given NullableString and assigns it to the MinimumWarningPatchVersion field.
func (o *AndroidManagedAppProtection) SetMinimumWarningPatchVersion(v string) {
	o.MinimumWarningPatchVersion.Set(&v)
}
// SetMinimumWarningPatchVersionNil sets the value for MinimumWarningPatchVersion to be an explicit nil
func (o *AndroidManagedAppProtection) SetMinimumWarningPatchVersionNil() {
	o.MinimumWarningPatchVersion.Set(nil)
}

// UnsetMinimumWarningPatchVersion ensures that no value is present for MinimumWarningPatchVersion, not even an explicit nil
func (o *AndroidManagedAppProtection) UnsetMinimumWarningPatchVersion() {
	o.MinimumWarningPatchVersion.Unset()
}

// GetScreenCaptureBlocked returns the ScreenCaptureBlocked field value if set, zero value otherwise.
func (o *AndroidManagedAppProtection) GetScreenCaptureBlocked() bool {
	if o == nil || o.ScreenCaptureBlocked == nil {
		var ret bool
		return ret
	}
	return *o.ScreenCaptureBlocked
}

// GetScreenCaptureBlockedOk returns a tuple with the ScreenCaptureBlocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AndroidManagedAppProtection) GetScreenCaptureBlockedOk() (*bool, bool) {
	if o == nil || o.ScreenCaptureBlocked == nil {
		return nil, false
	}
	return o.ScreenCaptureBlocked, true
}

// HasScreenCaptureBlocked returns a boolean if a field has been set.
func (o *AndroidManagedAppProtection) HasScreenCaptureBlocked() bool {
	if o != nil && o.ScreenCaptureBlocked != nil {
		return true
	}

	return false
}

// SetScreenCaptureBlocked gets a reference to the given bool and assigns it to the ScreenCaptureBlocked field.
func (o *AndroidManagedAppProtection) SetScreenCaptureBlocked(v bool) {
	o.ScreenCaptureBlocked = &v
}

// GetApps returns the Apps field value if set, zero value otherwise.
func (o *AndroidManagedAppProtection) GetApps() []MicrosoftGraphManagedMobileApp {
	if o == nil || o.Apps == nil {
		var ret []MicrosoftGraphManagedMobileApp
		return ret
	}
	return *o.Apps
}

// GetAppsOk returns a tuple with the Apps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AndroidManagedAppProtection) GetAppsOk() (*[]MicrosoftGraphManagedMobileApp, bool) {
	if o == nil || o.Apps == nil {
		return nil, false
	}
	return o.Apps, true
}

// HasApps returns a boolean if a field has been set.
func (o *AndroidManagedAppProtection) HasApps() bool {
	if o != nil && o.Apps != nil {
		return true
	}

	return false
}

// SetApps gets a reference to the given []MicrosoftGraphManagedMobileApp and assigns it to the Apps field.
func (o *AndroidManagedAppProtection) SetApps(v []MicrosoftGraphManagedMobileApp) {
	o.Apps = &v
}

// GetDeploymentSummary returns the DeploymentSummary field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AndroidManagedAppProtection) GetDeploymentSummary() AnyOfmicrosoftGraphManagedAppPolicyDeploymentSummary {
	if o == nil  {
		var ret AnyOfmicrosoftGraphManagedAppPolicyDeploymentSummary
		return ret
	}
	return o.DeploymentSummary
}

// GetDeploymentSummaryOk returns a tuple with the DeploymentSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AndroidManagedAppProtection) GetDeploymentSummaryOk() (*AnyOfmicrosoftGraphManagedAppPolicyDeploymentSummary, bool) {
	if o == nil || o.DeploymentSummary == nil {
		return nil, false
	}
	return &o.DeploymentSummary, true
}

// HasDeploymentSummary returns a boolean if a field has been set.
func (o *AndroidManagedAppProtection) HasDeploymentSummary() bool {
	if o != nil && o.DeploymentSummary != nil {
		return true
	}

	return false
}

// SetDeploymentSummary gets a reference to the given AnyOfmicrosoftGraphManagedAppPolicyDeploymentSummary and assigns it to the DeploymentSummary field.
func (o *AndroidManagedAppProtection) SetDeploymentSummary(v AnyOfmicrosoftGraphManagedAppPolicyDeploymentSummary) {
	o.DeploymentSummary = v
}

func (o AndroidManagedAppProtection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CustomBrowserDisplayName.IsSet() {
		toSerialize["customBrowserDisplayName"] = o.CustomBrowserDisplayName.Get()
	}
	if o.CustomBrowserPackageId.IsSet() {
		toSerialize["customBrowserPackageId"] = o.CustomBrowserPackageId.Get()
	}
	if o.DeployedAppCount != nil {
		toSerialize["deployedAppCount"] = o.DeployedAppCount
	}
	if o.DisableAppEncryptionIfDeviceEncryptionIsEnabled != nil {
		toSerialize["disableAppEncryptionIfDeviceEncryptionIsEnabled"] = o.DisableAppEncryptionIfDeviceEncryptionIsEnabled
	}
	if o.EncryptAppData != nil {
		toSerialize["encryptAppData"] = o.EncryptAppData
	}
	if o.MinimumRequiredPatchVersion.IsSet() {
		toSerialize["minimumRequiredPatchVersion"] = o.MinimumRequiredPatchVersion.Get()
	}
	if o.MinimumWarningPatchVersion.IsSet() {
		toSerialize["minimumWarningPatchVersion"] = o.MinimumWarningPatchVersion.Get()
	}
	if o.ScreenCaptureBlocked != nil {
		toSerialize["screenCaptureBlocked"] = o.ScreenCaptureBlocked
	}
	if o.Apps != nil {
		toSerialize["apps"] = o.Apps
	}
	if o.DeploymentSummary != nil {
		toSerialize["deploymentSummary"] = o.DeploymentSummary
	}
	return json.Marshal(toSerialize)
}

type NullableAndroidManagedAppProtection struct {
	value *AndroidManagedAppProtection
	isSet bool
}

func (v NullableAndroidManagedAppProtection) Get() *AndroidManagedAppProtection {
	return v.value
}

func (v *NullableAndroidManagedAppProtection) Set(val *AndroidManagedAppProtection) {
	v.value = val
	v.isSet = true
}

func (v NullableAndroidManagedAppProtection) IsSet() bool {
	return v.isSet
}

func (v *NullableAndroidManagedAppProtection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAndroidManagedAppProtection(val *AndroidManagedAppProtection) *NullableAndroidManagedAppProtection {
	return &NullableAndroidManagedAppProtection{value: val, isSet: true}
}

func (v NullableAndroidManagedAppProtection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAndroidManagedAppProtection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


