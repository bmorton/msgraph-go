/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphRolePermission Contains the set of ResourceActions determining the allowed and not allowed permissions for each role.
type MicrosoftGraphRolePermission struct {
	// Resource Actions each containing a set of allowed and not allowed permissions.
	ResourceActions *[]*AnyOfmicrosoftGraphResourceAction `json:"resourceActions,omitempty"`
}

// NewMicrosoftGraphRolePermission instantiates a new MicrosoftGraphRolePermission object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphRolePermission() *MicrosoftGraphRolePermission {
	this := MicrosoftGraphRolePermission{}
	return &this
}

// NewMicrosoftGraphRolePermissionWithDefaults instantiates a new MicrosoftGraphRolePermission object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphRolePermissionWithDefaults() *MicrosoftGraphRolePermission {
	this := MicrosoftGraphRolePermission{}
	return &this
}

// GetResourceActions returns the ResourceActions field value if set, zero value otherwise.
func (o *MicrosoftGraphRolePermission) GetResourceActions() []*AnyOfmicrosoftGraphResourceAction {
	if o == nil || o.ResourceActions == nil {
		var ret []*AnyOfmicrosoftGraphResourceAction
		return ret
	}
	return *o.ResourceActions
}

// GetResourceActionsOk returns a tuple with the ResourceActions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphRolePermission) GetResourceActionsOk() (*[]*AnyOfmicrosoftGraphResourceAction, bool) {
	if o == nil || o.ResourceActions == nil {
		return nil, false
	}
	return o.ResourceActions, true
}

// HasResourceActions returns a boolean if a field has been set.
func (o *MicrosoftGraphRolePermission) HasResourceActions() bool {
	if o != nil && o.ResourceActions != nil {
		return true
	}

	return false
}

// SetResourceActions gets a reference to the given []*AnyOfmicrosoftGraphResourceAction and assigns it to the ResourceActions field.
func (o *MicrosoftGraphRolePermission) SetResourceActions(v []*AnyOfmicrosoftGraphResourceAction) {
	o.ResourceActions = &v
}

func (o MicrosoftGraphRolePermission) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResourceActions != nil {
		toSerialize["resourceActions"] = o.ResourceActions
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphRolePermission struct {
	value *MicrosoftGraphRolePermission
	isSet bool
}

func (v NullableMicrosoftGraphRolePermission) Get() *MicrosoftGraphRolePermission {
	return v.value
}

func (v *NullableMicrosoftGraphRolePermission) Set(val *MicrosoftGraphRolePermission) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphRolePermission) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphRolePermission) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphRolePermission(val *MicrosoftGraphRolePermission) *NullableMicrosoftGraphRolePermission {
	return &NullableMicrosoftGraphRolePermission{value: val, isSet: true}
}

func (v NullableMicrosoftGraphRolePermission) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphRolePermission) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


