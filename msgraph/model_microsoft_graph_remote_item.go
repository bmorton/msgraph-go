/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphRemoteItem struct for MicrosoftGraphRemoteItem
type MicrosoftGraphRemoteItem struct {
	// Identity of the user, device, and application which created the item. Read-only.
	CreatedBy AnyOfmicrosoftGraphIdentitySet `json:"createdBy,omitempty"`
	// Date and time of item creation. Read-only.
	CreatedDateTime NullableTime `json:"createdDateTime,omitempty"`
	// Indicates that the remote item is a file. Read-only.
	File AnyOfmicrosoftGraphFile `json:"file,omitempty"`
	// Information about the remote item from the local file system. Read-only.
	FileSystemInfo AnyOfmicrosoftGraphFileSystemInfo `json:"fileSystemInfo,omitempty"`
	// Indicates that the remote item is a folder. Read-only.
	Folder AnyOfmicrosoftGraphFolder `json:"folder,omitempty"`
	// Unique identifier for the remote item in its drive. Read-only.
	Id NullableString `json:"id,omitempty"`
	// Image metadata, if the item is an image. Read-only.
	Image AnyOfmicrosoftGraphImage `json:"image,omitempty"`
	// Identity of the user, device, and application which last modified the item. Read-only.
	LastModifiedBy AnyOfmicrosoftGraphIdentitySet `json:"lastModifiedBy,omitempty"`
	// Date and time the item was last modified. Read-only.
	LastModifiedDateTime NullableTime `json:"lastModifiedDateTime,omitempty"`
	// Optional. Filename of the remote item. Read-only.
	Name NullableString `json:"name,omitempty"`
	// If present, indicates that this item is a package instead of a folder or file. Packages are treated like files in some contexts and folders in others. Read-only.
	Package AnyOfmicrosoftGraphPackage `json:"package,omitempty"`
	// Properties of the parent of the remote item. Read-only.
	ParentReference AnyOfmicrosoftGraphItemReference `json:"parentReference,omitempty"`
	// Indicates that the item has been shared with others and provides information about the shared state of the item. Read-only.
	Shared AnyOfmicrosoftGraphShared `json:"shared,omitempty"`
	// Provides interop between items in OneDrive for Business and SharePoint with the full set of item identifiers. Read-only.
	SharepointIds AnyOfmicrosoftGraphSharepointIds `json:"sharepointIds,omitempty"`
	// Size of the remote item. Read-only.
	Size NullableInt64 `json:"size,omitempty"`
	// If the current item is also available as a special folder, this facet is returned. Read-only.
	SpecialFolder AnyOfmicrosoftGraphSpecialFolder `json:"specialFolder,omitempty"`
	// Video metadata, if the item is a video. Read-only.
	Video AnyOfmicrosoftGraphVideo `json:"video,omitempty"`
	// DAV compatible URL for the item.
	WebDavUrl NullableString `json:"webDavUrl,omitempty"`
	// URL that displays the resource in the browser. Read-only.
	WebUrl NullableString `json:"webUrl,omitempty"`
}

// NewMicrosoftGraphRemoteItem instantiates a new MicrosoftGraphRemoteItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphRemoteItem() *MicrosoftGraphRemoteItem {
	this := MicrosoftGraphRemoteItem{}
	return &this
}

// NewMicrosoftGraphRemoteItemWithDefaults instantiates a new MicrosoftGraphRemoteItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphRemoteItemWithDefaults() *MicrosoftGraphRemoteItem {
	this := MicrosoftGraphRemoteItem{}
	return &this
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRemoteItem) GetCreatedBy() AnyOfmicrosoftGraphIdentitySet {
	if o == nil  {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret
	}
	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRemoteItem) GetCreatedByOk() (*AnyOfmicrosoftGraphIdentitySet, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *MicrosoftGraphRemoteItem) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given AnyOfmicrosoftGraphIdentitySet and assigns it to the CreatedBy field.
func (o *MicrosoftGraphRemoteItem) SetCreatedBy(v AnyOfmicrosoftGraphIdentitySet) {
	o.CreatedBy = v
}

// GetCreatedDateTime returns the CreatedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRemoteItem) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime.Get()
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRemoteItem) GetCreatedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatedDateTime.Get(), o.CreatedDateTime.IsSet()
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphRemoteItem) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime.IsSet() {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given NullableTime and assigns it to the CreatedDateTime field.
func (o *MicrosoftGraphRemoteItem) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime.Set(&v)
}
// SetCreatedDateTimeNil sets the value for CreatedDateTime to be an explicit nil
func (o *MicrosoftGraphRemoteItem) SetCreatedDateTimeNil() {
	o.CreatedDateTime.Set(nil)
}

// UnsetCreatedDateTime ensures that no value is present for CreatedDateTime, not even an explicit nil
func (o *MicrosoftGraphRemoteItem) UnsetCreatedDateTime() {
	o.CreatedDateTime.Unset()
}

// GetFile returns the File field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRemoteItem) GetFile() AnyOfmicrosoftGraphFile {
	if o == nil  {
		var ret AnyOfmicrosoftGraphFile
		return ret
	}
	return o.File
}

// GetFileOk returns a tuple with the File field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRemoteItem) GetFileOk() (*AnyOfmicrosoftGraphFile, bool) {
	if o == nil || o.File == nil {
		return nil, false
	}
	return &o.File, true
}

// HasFile returns a boolean if a field has been set.
func (o *MicrosoftGraphRemoteItem) HasFile() bool {
	if o != nil && o.File != nil {
		return true
	}

	return false
}

// SetFile gets a reference to the given AnyOfmicrosoftGraphFile and assigns it to the File field.
func (o *MicrosoftGraphRemoteItem) SetFile(v AnyOfmicrosoftGraphFile) {
	o.File = v
}

// GetFileSystemInfo returns the FileSystemInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRemoteItem) GetFileSystemInfo() AnyOfmicrosoftGraphFileSystemInfo {
	if o == nil  {
		var ret AnyOfmicrosoftGraphFileSystemInfo
		return ret
	}
	return o.FileSystemInfo
}

// GetFileSystemInfoOk returns a tuple with the FileSystemInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRemoteItem) GetFileSystemInfoOk() (*AnyOfmicrosoftGraphFileSystemInfo, bool) {
	if o == nil || o.FileSystemInfo == nil {
		return nil, false
	}
	return &o.FileSystemInfo, true
}

// HasFileSystemInfo returns a boolean if a field has been set.
func (o *MicrosoftGraphRemoteItem) HasFileSystemInfo() bool {
	if o != nil && o.FileSystemInfo != nil {
		return true
	}

	return false
}

// SetFileSystemInfo gets a reference to the given AnyOfmicrosoftGraphFileSystemInfo and assigns it to the FileSystemInfo field.
func (o *MicrosoftGraphRemoteItem) SetFileSystemInfo(v AnyOfmicrosoftGraphFileSystemInfo) {
	o.FileSystemInfo = v
}

// GetFolder returns the Folder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRemoteItem) GetFolder() AnyOfmicrosoftGraphFolder {
	if o == nil  {
		var ret AnyOfmicrosoftGraphFolder
		return ret
	}
	return o.Folder
}

// GetFolderOk returns a tuple with the Folder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRemoteItem) GetFolderOk() (*AnyOfmicrosoftGraphFolder, bool) {
	if o == nil || o.Folder == nil {
		return nil, false
	}
	return &o.Folder, true
}

// HasFolder returns a boolean if a field has been set.
func (o *MicrosoftGraphRemoteItem) HasFolder() bool {
	if o != nil && o.Folder != nil {
		return true
	}

	return false
}

// SetFolder gets a reference to the given AnyOfmicrosoftGraphFolder and assigns it to the Folder field.
func (o *MicrosoftGraphRemoteItem) SetFolder(v AnyOfmicrosoftGraphFolder) {
	o.Folder = v
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRemoteItem) GetId() string {
	if o == nil || o.Id.Get() == nil {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRemoteItem) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphRemoteItem) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *MicrosoftGraphRemoteItem) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *MicrosoftGraphRemoteItem) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *MicrosoftGraphRemoteItem) UnsetId() {
	o.Id.Unset()
}

// GetImage returns the Image field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRemoteItem) GetImage() AnyOfmicrosoftGraphImage {
	if o == nil  {
		var ret AnyOfmicrosoftGraphImage
		return ret
	}
	return o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRemoteItem) GetImageOk() (*AnyOfmicrosoftGraphImage, bool) {
	if o == nil || o.Image == nil {
		return nil, false
	}
	return &o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *MicrosoftGraphRemoteItem) HasImage() bool {
	if o != nil && o.Image != nil {
		return true
	}

	return false
}

// SetImage gets a reference to the given AnyOfmicrosoftGraphImage and assigns it to the Image field.
func (o *MicrosoftGraphRemoteItem) SetImage(v AnyOfmicrosoftGraphImage) {
	o.Image = v
}

// GetLastModifiedBy returns the LastModifiedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRemoteItem) GetLastModifiedBy() AnyOfmicrosoftGraphIdentitySet {
	if o == nil  {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret
	}
	return o.LastModifiedBy
}

// GetLastModifiedByOk returns a tuple with the LastModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRemoteItem) GetLastModifiedByOk() (*AnyOfmicrosoftGraphIdentitySet, bool) {
	if o == nil || o.LastModifiedBy == nil {
		return nil, false
	}
	return &o.LastModifiedBy, true
}

// HasLastModifiedBy returns a boolean if a field has been set.
func (o *MicrosoftGraphRemoteItem) HasLastModifiedBy() bool {
	if o != nil && o.LastModifiedBy != nil {
		return true
	}

	return false
}

// SetLastModifiedBy gets a reference to the given AnyOfmicrosoftGraphIdentitySet and assigns it to the LastModifiedBy field.
func (o *MicrosoftGraphRemoteItem) SetLastModifiedBy(v AnyOfmicrosoftGraphIdentitySet) {
	o.LastModifiedBy = v
}

// GetLastModifiedDateTime returns the LastModifiedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRemoteItem) GetLastModifiedDateTime() time.Time {
	if o == nil || o.LastModifiedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDateTime.Get()
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRemoteItem) GetLastModifiedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastModifiedDateTime.Get(), o.LastModifiedDateTime.IsSet()
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphRemoteItem) HasLastModifiedDateTime() bool {
	if o != nil && o.LastModifiedDateTime.IsSet() {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given NullableTime and assigns it to the LastModifiedDateTime field.
func (o *MicrosoftGraphRemoteItem) SetLastModifiedDateTime(v time.Time) {
	o.LastModifiedDateTime.Set(&v)
}
// SetLastModifiedDateTimeNil sets the value for LastModifiedDateTime to be an explicit nil
func (o *MicrosoftGraphRemoteItem) SetLastModifiedDateTimeNil() {
	o.LastModifiedDateTime.Set(nil)
}

// UnsetLastModifiedDateTime ensures that no value is present for LastModifiedDateTime, not even an explicit nil
func (o *MicrosoftGraphRemoteItem) UnsetLastModifiedDateTime() {
	o.LastModifiedDateTime.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRemoteItem) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRemoteItem) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *MicrosoftGraphRemoteItem) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *MicrosoftGraphRemoteItem) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *MicrosoftGraphRemoteItem) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *MicrosoftGraphRemoteItem) UnsetName() {
	o.Name.Unset()
}

// GetPackage returns the Package field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRemoteItem) GetPackage() AnyOfmicrosoftGraphPackage {
	if o == nil  {
		var ret AnyOfmicrosoftGraphPackage
		return ret
	}
	return o.Package
}

// GetPackageOk returns a tuple with the Package field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRemoteItem) GetPackageOk() (*AnyOfmicrosoftGraphPackage, bool) {
	if o == nil || o.Package == nil {
		return nil, false
	}
	return &o.Package, true
}

// HasPackage returns a boolean if a field has been set.
func (o *MicrosoftGraphRemoteItem) HasPackage() bool {
	if o != nil && o.Package != nil {
		return true
	}

	return false
}

// SetPackage gets a reference to the given AnyOfmicrosoftGraphPackage and assigns it to the Package field.
func (o *MicrosoftGraphRemoteItem) SetPackage(v AnyOfmicrosoftGraphPackage) {
	o.Package = v
}

// GetParentReference returns the ParentReference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRemoteItem) GetParentReference() AnyOfmicrosoftGraphItemReference {
	if o == nil  {
		var ret AnyOfmicrosoftGraphItemReference
		return ret
	}
	return o.ParentReference
}

// GetParentReferenceOk returns a tuple with the ParentReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRemoteItem) GetParentReferenceOk() (*AnyOfmicrosoftGraphItemReference, bool) {
	if o == nil || o.ParentReference == nil {
		return nil, false
	}
	return &o.ParentReference, true
}

// HasParentReference returns a boolean if a field has been set.
func (o *MicrosoftGraphRemoteItem) HasParentReference() bool {
	if o != nil && o.ParentReference != nil {
		return true
	}

	return false
}

// SetParentReference gets a reference to the given AnyOfmicrosoftGraphItemReference and assigns it to the ParentReference field.
func (o *MicrosoftGraphRemoteItem) SetParentReference(v AnyOfmicrosoftGraphItemReference) {
	o.ParentReference = v
}

// GetShared returns the Shared field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRemoteItem) GetShared() AnyOfmicrosoftGraphShared {
	if o == nil  {
		var ret AnyOfmicrosoftGraphShared
		return ret
	}
	return o.Shared
}

// GetSharedOk returns a tuple with the Shared field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRemoteItem) GetSharedOk() (*AnyOfmicrosoftGraphShared, bool) {
	if o == nil || o.Shared == nil {
		return nil, false
	}
	return &o.Shared, true
}

// HasShared returns a boolean if a field has been set.
func (o *MicrosoftGraphRemoteItem) HasShared() bool {
	if o != nil && o.Shared != nil {
		return true
	}

	return false
}

// SetShared gets a reference to the given AnyOfmicrosoftGraphShared and assigns it to the Shared field.
func (o *MicrosoftGraphRemoteItem) SetShared(v AnyOfmicrosoftGraphShared) {
	o.Shared = v
}

// GetSharepointIds returns the SharepointIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRemoteItem) GetSharepointIds() AnyOfmicrosoftGraphSharepointIds {
	if o == nil  {
		var ret AnyOfmicrosoftGraphSharepointIds
		return ret
	}
	return o.SharepointIds
}

// GetSharepointIdsOk returns a tuple with the SharepointIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRemoteItem) GetSharepointIdsOk() (*AnyOfmicrosoftGraphSharepointIds, bool) {
	if o == nil || o.SharepointIds == nil {
		return nil, false
	}
	return &o.SharepointIds, true
}

// HasSharepointIds returns a boolean if a field has been set.
func (o *MicrosoftGraphRemoteItem) HasSharepointIds() bool {
	if o != nil && o.SharepointIds != nil {
		return true
	}

	return false
}

// SetSharepointIds gets a reference to the given AnyOfmicrosoftGraphSharepointIds and assigns it to the SharepointIds field.
func (o *MicrosoftGraphRemoteItem) SetSharepointIds(v AnyOfmicrosoftGraphSharepointIds) {
	o.SharepointIds = v
}

// GetSize returns the Size field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRemoteItem) GetSize() int64 {
	if o == nil || o.Size.Get() == nil {
		var ret int64
		return ret
	}
	return *o.Size.Get()
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRemoteItem) GetSizeOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Size.Get(), o.Size.IsSet()
}

// HasSize returns a boolean if a field has been set.
func (o *MicrosoftGraphRemoteItem) HasSize() bool {
	if o != nil && o.Size.IsSet() {
		return true
	}

	return false
}

// SetSize gets a reference to the given NullableInt64 and assigns it to the Size field.
func (o *MicrosoftGraphRemoteItem) SetSize(v int64) {
	o.Size.Set(&v)
}
// SetSizeNil sets the value for Size to be an explicit nil
func (o *MicrosoftGraphRemoteItem) SetSizeNil() {
	o.Size.Set(nil)
}

// UnsetSize ensures that no value is present for Size, not even an explicit nil
func (o *MicrosoftGraphRemoteItem) UnsetSize() {
	o.Size.Unset()
}

// GetSpecialFolder returns the SpecialFolder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRemoteItem) GetSpecialFolder() AnyOfmicrosoftGraphSpecialFolder {
	if o == nil  {
		var ret AnyOfmicrosoftGraphSpecialFolder
		return ret
	}
	return o.SpecialFolder
}

// GetSpecialFolderOk returns a tuple with the SpecialFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRemoteItem) GetSpecialFolderOk() (*AnyOfmicrosoftGraphSpecialFolder, bool) {
	if o == nil || o.SpecialFolder == nil {
		return nil, false
	}
	return &o.SpecialFolder, true
}

// HasSpecialFolder returns a boolean if a field has been set.
func (o *MicrosoftGraphRemoteItem) HasSpecialFolder() bool {
	if o != nil && o.SpecialFolder != nil {
		return true
	}

	return false
}

// SetSpecialFolder gets a reference to the given AnyOfmicrosoftGraphSpecialFolder and assigns it to the SpecialFolder field.
func (o *MicrosoftGraphRemoteItem) SetSpecialFolder(v AnyOfmicrosoftGraphSpecialFolder) {
	o.SpecialFolder = v
}

// GetVideo returns the Video field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRemoteItem) GetVideo() AnyOfmicrosoftGraphVideo {
	if o == nil  {
		var ret AnyOfmicrosoftGraphVideo
		return ret
	}
	return o.Video
}

// GetVideoOk returns a tuple with the Video field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRemoteItem) GetVideoOk() (*AnyOfmicrosoftGraphVideo, bool) {
	if o == nil || o.Video == nil {
		return nil, false
	}
	return &o.Video, true
}

// HasVideo returns a boolean if a field has been set.
func (o *MicrosoftGraphRemoteItem) HasVideo() bool {
	if o != nil && o.Video != nil {
		return true
	}

	return false
}

// SetVideo gets a reference to the given AnyOfmicrosoftGraphVideo and assigns it to the Video field.
func (o *MicrosoftGraphRemoteItem) SetVideo(v AnyOfmicrosoftGraphVideo) {
	o.Video = v
}

// GetWebDavUrl returns the WebDavUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRemoteItem) GetWebDavUrl() string {
	if o == nil || o.WebDavUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.WebDavUrl.Get()
}

// GetWebDavUrlOk returns a tuple with the WebDavUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRemoteItem) GetWebDavUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.WebDavUrl.Get(), o.WebDavUrl.IsSet()
}

// HasWebDavUrl returns a boolean if a field has been set.
func (o *MicrosoftGraphRemoteItem) HasWebDavUrl() bool {
	if o != nil && o.WebDavUrl.IsSet() {
		return true
	}

	return false
}

// SetWebDavUrl gets a reference to the given NullableString and assigns it to the WebDavUrl field.
func (o *MicrosoftGraphRemoteItem) SetWebDavUrl(v string) {
	o.WebDavUrl.Set(&v)
}
// SetWebDavUrlNil sets the value for WebDavUrl to be an explicit nil
func (o *MicrosoftGraphRemoteItem) SetWebDavUrlNil() {
	o.WebDavUrl.Set(nil)
}

// UnsetWebDavUrl ensures that no value is present for WebDavUrl, not even an explicit nil
func (o *MicrosoftGraphRemoteItem) UnsetWebDavUrl() {
	o.WebDavUrl.Unset()
}

// GetWebUrl returns the WebUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRemoteItem) GetWebUrl() string {
	if o == nil || o.WebUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.WebUrl.Get()
}

// GetWebUrlOk returns a tuple with the WebUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRemoteItem) GetWebUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.WebUrl.Get(), o.WebUrl.IsSet()
}

// HasWebUrl returns a boolean if a field has been set.
func (o *MicrosoftGraphRemoteItem) HasWebUrl() bool {
	if o != nil && o.WebUrl.IsSet() {
		return true
	}

	return false
}

// SetWebUrl gets a reference to the given NullableString and assigns it to the WebUrl field.
func (o *MicrosoftGraphRemoteItem) SetWebUrl(v string) {
	o.WebUrl.Set(&v)
}
// SetWebUrlNil sets the value for WebUrl to be an explicit nil
func (o *MicrosoftGraphRemoteItem) SetWebUrlNil() {
	o.WebUrl.Set(nil)
}

// UnsetWebUrl ensures that no value is present for WebUrl, not even an explicit nil
func (o *MicrosoftGraphRemoteItem) UnsetWebUrl() {
	o.WebUrl.Unset()
}

func (o MicrosoftGraphRemoteItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.CreatedDateTime.IsSet() {
		toSerialize["createdDateTime"] = o.CreatedDateTime.Get()
	}
	if o.File != nil {
		toSerialize["file"] = o.File
	}
	if o.FileSystemInfo != nil {
		toSerialize["fileSystemInfo"] = o.FileSystemInfo
	}
	if o.Folder != nil {
		toSerialize["folder"] = o.Folder
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Image != nil {
		toSerialize["image"] = o.Image
	}
	if o.LastModifiedBy != nil {
		toSerialize["lastModifiedBy"] = o.LastModifiedBy
	}
	if o.LastModifiedDateTime.IsSet() {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Package != nil {
		toSerialize["package"] = o.Package
	}
	if o.ParentReference != nil {
		toSerialize["parentReference"] = o.ParentReference
	}
	if o.Shared != nil {
		toSerialize["shared"] = o.Shared
	}
	if o.SharepointIds != nil {
		toSerialize["sharepointIds"] = o.SharepointIds
	}
	if o.Size.IsSet() {
		toSerialize["size"] = o.Size.Get()
	}
	if o.SpecialFolder != nil {
		toSerialize["specialFolder"] = o.SpecialFolder
	}
	if o.Video != nil {
		toSerialize["video"] = o.Video
	}
	if o.WebDavUrl.IsSet() {
		toSerialize["webDavUrl"] = o.WebDavUrl.Get()
	}
	if o.WebUrl.IsSet() {
		toSerialize["webUrl"] = o.WebUrl.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphRemoteItem struct {
	value *MicrosoftGraphRemoteItem
	isSet bool
}

func (v NullableMicrosoftGraphRemoteItem) Get() *MicrosoftGraphRemoteItem {
	return v.value
}

func (v *NullableMicrosoftGraphRemoteItem) Set(val *MicrosoftGraphRemoteItem) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphRemoteItem) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphRemoteItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphRemoteItem(val *MicrosoftGraphRemoteItem) *NullableMicrosoftGraphRemoteItem {
	return &NullableMicrosoftGraphRemoteItem{value: val, isSet: true}
}

func (v NullableMicrosoftGraphRemoteItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphRemoteItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


