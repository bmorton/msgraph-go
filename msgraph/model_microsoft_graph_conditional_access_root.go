/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphConditionalAccessRoot struct for MicrosoftGraphConditionalAccessRoot
type MicrosoftGraphConditionalAccessRoot struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// Read-only. Nullable. Returns a collection of the specified named locations.
	NamedLocations *[]MicrosoftGraphNamedLocation `json:"namedLocations,omitempty"`
	// Read-only. Nullable. Returns a collection of the specified Conditional Access (CA) policies.
	Policies *[]MicrosoftGraphConditionalAccessPolicy `json:"policies,omitempty"`
}

// NewMicrosoftGraphConditionalAccessRoot instantiates a new MicrosoftGraphConditionalAccessRoot object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphConditionalAccessRoot() *MicrosoftGraphConditionalAccessRoot {
	this := MicrosoftGraphConditionalAccessRoot{}
	return &this
}

// NewMicrosoftGraphConditionalAccessRootWithDefaults instantiates a new MicrosoftGraphConditionalAccessRoot object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphConditionalAccessRootWithDefaults() *MicrosoftGraphConditionalAccessRoot {
	this := MicrosoftGraphConditionalAccessRoot{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphConditionalAccessRoot) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphConditionalAccessRoot) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphConditionalAccessRoot) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphConditionalAccessRoot) SetId(v string) {
	o.Id = &v
}

// GetNamedLocations returns the NamedLocations field value if set, zero value otherwise.
func (o *MicrosoftGraphConditionalAccessRoot) GetNamedLocations() []MicrosoftGraphNamedLocation {
	if o == nil || o.NamedLocations == nil {
		var ret []MicrosoftGraphNamedLocation
		return ret
	}
	return *o.NamedLocations
}

// GetNamedLocationsOk returns a tuple with the NamedLocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphConditionalAccessRoot) GetNamedLocationsOk() (*[]MicrosoftGraphNamedLocation, bool) {
	if o == nil || o.NamedLocations == nil {
		return nil, false
	}
	return o.NamedLocations, true
}

// HasNamedLocations returns a boolean if a field has been set.
func (o *MicrosoftGraphConditionalAccessRoot) HasNamedLocations() bool {
	if o != nil && o.NamedLocations != nil {
		return true
	}

	return false
}

// SetNamedLocations gets a reference to the given []MicrosoftGraphNamedLocation and assigns it to the NamedLocations field.
func (o *MicrosoftGraphConditionalAccessRoot) SetNamedLocations(v []MicrosoftGraphNamedLocation) {
	o.NamedLocations = &v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *MicrosoftGraphConditionalAccessRoot) GetPolicies() []MicrosoftGraphConditionalAccessPolicy {
	if o == nil || o.Policies == nil {
		var ret []MicrosoftGraphConditionalAccessPolicy
		return ret
	}
	return *o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphConditionalAccessRoot) GetPoliciesOk() (*[]MicrosoftGraphConditionalAccessPolicy, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *MicrosoftGraphConditionalAccessRoot) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []MicrosoftGraphConditionalAccessPolicy and assigns it to the Policies field.
func (o *MicrosoftGraphConditionalAccessRoot) SetPolicies(v []MicrosoftGraphConditionalAccessPolicy) {
	o.Policies = &v
}

func (o MicrosoftGraphConditionalAccessRoot) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.NamedLocations != nil {
		toSerialize["namedLocations"] = o.NamedLocations
	}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphConditionalAccessRoot struct {
	value *MicrosoftGraphConditionalAccessRoot
	isSet bool
}

func (v NullableMicrosoftGraphConditionalAccessRoot) Get() *MicrosoftGraphConditionalAccessRoot {
	return v.value
}

func (v *NullableMicrosoftGraphConditionalAccessRoot) Set(val *MicrosoftGraphConditionalAccessRoot) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphConditionalAccessRoot) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphConditionalAccessRoot) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphConditionalAccessRoot(val *MicrosoftGraphConditionalAccessRoot) *NullableMicrosoftGraphConditionalAccessRoot {
	return &NullableMicrosoftGraphConditionalAccessRoot{value: val, isSet: true}
}

func (v NullableMicrosoftGraphConditionalAccessRoot) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphConditionalAccessRoot) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


