/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphConnectionStatus the model 'MicrosoftGraphConnectionStatus'
type MicrosoftGraphConnectionStatus string

// List of microsoft.graph.connectionStatus
const (
	UNKNOWN MicrosoftGraphConnectionStatus = "unknown"
	ATTEMPTED MicrosoftGraphConnectionStatus = "attempted"
	SUCCEEDED MicrosoftGraphConnectionStatus = "succeeded"
	BLOCKED MicrosoftGraphConnectionStatus = "blocked"
	FAILED MicrosoftGraphConnectionStatus = "failed"
	UNKNOWN_FUTURE_VALUE MicrosoftGraphConnectionStatus = "unknownFutureValue"
)

// All allowed values of MicrosoftGraphConnectionStatus enum
var AllowedMicrosoftGraphConnectionStatusEnumValues = []MicrosoftGraphConnectionStatus{
	"unknown",
	"attempted",
	"succeeded",
	"blocked",
	"failed",
	"unknownFutureValue",
}

func (v *MicrosoftGraphConnectionStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphConnectionStatus(value)
	for _, existing := range AllowedMicrosoftGraphConnectionStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphConnectionStatus", value)
}

// NewMicrosoftGraphConnectionStatusFromValue returns a pointer to a valid MicrosoftGraphConnectionStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphConnectionStatusFromValue(v string) (*MicrosoftGraphConnectionStatus, error) {
	ev := MicrosoftGraphConnectionStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphConnectionStatus: valid values are %v", v, AllowedMicrosoftGraphConnectionStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphConnectionStatus) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphConnectionStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.connectionStatus value
func (v MicrosoftGraphConnectionStatus) Ptr() *MicrosoftGraphConnectionStatus {
	return &v
}

type NullableMicrosoftGraphConnectionStatus struct {
	value *MicrosoftGraphConnectionStatus
	isSet bool
}

func (v NullableMicrosoftGraphConnectionStatus) Get() *MicrosoftGraphConnectionStatus {
	return v.value
}

func (v *NullableMicrosoftGraphConnectionStatus) Set(val *MicrosoftGraphConnectionStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphConnectionStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphConnectionStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphConnectionStatus(val *MicrosoftGraphConnectionStatus) *NullableMicrosoftGraphConnectionStatus {
	return &NullableMicrosoftGraphConnectionStatus{value: val, isSet: true}
}

func (v NullableMicrosoftGraphConnectionStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphConnectionStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

