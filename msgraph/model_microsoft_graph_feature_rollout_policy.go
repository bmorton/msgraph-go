/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphFeatureRolloutPolicy struct for MicrosoftGraphFeatureRolloutPolicy
type MicrosoftGraphFeatureRolloutPolicy struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// A description for this feature rollout policy.
	Description NullableString `json:"description,omitempty"`
	// The display name for this  feature rollout policy.
	DisplayName *string `json:"displayName,omitempty"`
	// Possible values are: passthroughAuthentication, seamlessSso, passwordHashSync, emailAsAlternateId, unknownFutureValue.
	Feature AnyOfmicrosoftGraphStagedFeatureName `json:"feature,omitempty"`
	// Indicates whether this feature rollout policy should be applied to the entire organization.
	IsAppliedToOrganization *bool `json:"isAppliedToOrganization,omitempty"`
	// Indicates whether the feature rollout is enabled.
	IsEnabled *bool `json:"isEnabled,omitempty"`
	// Nullable. Specifies a list of directoryObjects that feature is enabled for.
	AppliesTo *[]MicrosoftGraphDirectoryObject `json:"appliesTo,omitempty"`
}

// NewMicrosoftGraphFeatureRolloutPolicy instantiates a new MicrosoftGraphFeatureRolloutPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphFeatureRolloutPolicy() *MicrosoftGraphFeatureRolloutPolicy {
	this := MicrosoftGraphFeatureRolloutPolicy{}
	return &this
}

// NewMicrosoftGraphFeatureRolloutPolicyWithDefaults instantiates a new MicrosoftGraphFeatureRolloutPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphFeatureRolloutPolicyWithDefaults() *MicrosoftGraphFeatureRolloutPolicy {
	this := MicrosoftGraphFeatureRolloutPolicy{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphFeatureRolloutPolicy) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphFeatureRolloutPolicy) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphFeatureRolloutPolicy) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphFeatureRolloutPolicy) SetId(v string) {
	o.Id = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphFeatureRolloutPolicy) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphFeatureRolloutPolicy) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *MicrosoftGraphFeatureRolloutPolicy) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *MicrosoftGraphFeatureRolloutPolicy) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *MicrosoftGraphFeatureRolloutPolicy) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *MicrosoftGraphFeatureRolloutPolicy) UnsetDescription() {
	o.Description.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *MicrosoftGraphFeatureRolloutPolicy) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphFeatureRolloutPolicy) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphFeatureRolloutPolicy) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *MicrosoftGraphFeatureRolloutPolicy) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetFeature returns the Feature field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphFeatureRolloutPolicy) GetFeature() AnyOfmicrosoftGraphStagedFeatureName {
	if o == nil  {
		var ret AnyOfmicrosoftGraphStagedFeatureName
		return ret
	}
	return o.Feature
}

// GetFeatureOk returns a tuple with the Feature field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphFeatureRolloutPolicy) GetFeatureOk() (*AnyOfmicrosoftGraphStagedFeatureName, bool) {
	if o == nil || o.Feature == nil {
		return nil, false
	}
	return &o.Feature, true
}

// HasFeature returns a boolean if a field has been set.
func (o *MicrosoftGraphFeatureRolloutPolicy) HasFeature() bool {
	if o != nil && o.Feature != nil {
		return true
	}

	return false
}

// SetFeature gets a reference to the given AnyOfmicrosoftGraphStagedFeatureName and assigns it to the Feature field.
func (o *MicrosoftGraphFeatureRolloutPolicy) SetFeature(v AnyOfmicrosoftGraphStagedFeatureName) {
	o.Feature = v
}

// GetIsAppliedToOrganization returns the IsAppliedToOrganization field value if set, zero value otherwise.
func (o *MicrosoftGraphFeatureRolloutPolicy) GetIsAppliedToOrganization() bool {
	if o == nil || o.IsAppliedToOrganization == nil {
		var ret bool
		return ret
	}
	return *o.IsAppliedToOrganization
}

// GetIsAppliedToOrganizationOk returns a tuple with the IsAppliedToOrganization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphFeatureRolloutPolicy) GetIsAppliedToOrganizationOk() (*bool, bool) {
	if o == nil || o.IsAppliedToOrganization == nil {
		return nil, false
	}
	return o.IsAppliedToOrganization, true
}

// HasIsAppliedToOrganization returns a boolean if a field has been set.
func (o *MicrosoftGraphFeatureRolloutPolicy) HasIsAppliedToOrganization() bool {
	if o != nil && o.IsAppliedToOrganization != nil {
		return true
	}

	return false
}

// SetIsAppliedToOrganization gets a reference to the given bool and assigns it to the IsAppliedToOrganization field.
func (o *MicrosoftGraphFeatureRolloutPolicy) SetIsAppliedToOrganization(v bool) {
	o.IsAppliedToOrganization = &v
}

// GetIsEnabled returns the IsEnabled field value if set, zero value otherwise.
func (o *MicrosoftGraphFeatureRolloutPolicy) GetIsEnabled() bool {
	if o == nil || o.IsEnabled == nil {
		var ret bool
		return ret
	}
	return *o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphFeatureRolloutPolicy) GetIsEnabledOk() (*bool, bool) {
	if o == nil || o.IsEnabled == nil {
		return nil, false
	}
	return o.IsEnabled, true
}

// HasIsEnabled returns a boolean if a field has been set.
func (o *MicrosoftGraphFeatureRolloutPolicy) HasIsEnabled() bool {
	if o != nil && o.IsEnabled != nil {
		return true
	}

	return false
}

// SetIsEnabled gets a reference to the given bool and assigns it to the IsEnabled field.
func (o *MicrosoftGraphFeatureRolloutPolicy) SetIsEnabled(v bool) {
	o.IsEnabled = &v
}

// GetAppliesTo returns the AppliesTo field value if set, zero value otherwise.
func (o *MicrosoftGraphFeatureRolloutPolicy) GetAppliesTo() []MicrosoftGraphDirectoryObject {
	if o == nil || o.AppliesTo == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret
	}
	return *o.AppliesTo
}

// GetAppliesToOk returns a tuple with the AppliesTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphFeatureRolloutPolicy) GetAppliesToOk() (*[]MicrosoftGraphDirectoryObject, bool) {
	if o == nil || o.AppliesTo == nil {
		return nil, false
	}
	return o.AppliesTo, true
}

// HasAppliesTo returns a boolean if a field has been set.
func (o *MicrosoftGraphFeatureRolloutPolicy) HasAppliesTo() bool {
	if o != nil && o.AppliesTo != nil {
		return true
	}

	return false
}

// SetAppliesTo gets a reference to the given []MicrosoftGraphDirectoryObject and assigns it to the AppliesTo field.
func (o *MicrosoftGraphFeatureRolloutPolicy) SetAppliesTo(v []MicrosoftGraphDirectoryObject) {
	o.AppliesTo = &v
}

func (o MicrosoftGraphFeatureRolloutPolicy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.Feature != nil {
		toSerialize["feature"] = o.Feature
	}
	if o.IsAppliedToOrganization != nil {
		toSerialize["isAppliedToOrganization"] = o.IsAppliedToOrganization
	}
	if o.IsEnabled != nil {
		toSerialize["isEnabled"] = o.IsEnabled
	}
	if o.AppliesTo != nil {
		toSerialize["appliesTo"] = o.AppliesTo
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphFeatureRolloutPolicy struct {
	value *MicrosoftGraphFeatureRolloutPolicy
	isSet bool
}

func (v NullableMicrosoftGraphFeatureRolloutPolicy) Get() *MicrosoftGraphFeatureRolloutPolicy {
	return v.value
}

func (v *NullableMicrosoftGraphFeatureRolloutPolicy) Set(val *MicrosoftGraphFeatureRolloutPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphFeatureRolloutPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphFeatureRolloutPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphFeatureRolloutPolicy(val *MicrosoftGraphFeatureRolloutPolicy) *NullableMicrosoftGraphFeatureRolloutPolicy {
	return &NullableMicrosoftGraphFeatureRolloutPolicy{value: val, isSet: true}
}

func (v NullableMicrosoftGraphFeatureRolloutPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphFeatureRolloutPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


