/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// RoleAssignment The Role Assignment resource. Role assignments tie together a role definition with members and scopes. There can be one or more role assignments per role. This applies to custom and built-in roles.
type RoleAssignment struct {
	// Description of the Role Assignment.
	Description NullableString `json:"description,omitempty"`
	// The display or friendly name of the role Assignment.
	DisplayName NullableString `json:"displayName,omitempty"`
	// List of ids of role scope member security groups.  These are IDs from Azure Active Directory.
	ResourceScopes *[]*string `json:"resourceScopes,omitempty"`
	// Role definition this assignment is part of.
	RoleDefinition AnyOfmicrosoftGraphRoleDefinition `json:"roleDefinition,omitempty"`
}

// NewRoleAssignment instantiates a new RoleAssignment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleAssignment() *RoleAssignment {
	this := RoleAssignment{}
	return &this
}

// NewRoleAssignmentWithDefaults instantiates a new RoleAssignment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleAssignmentWithDefaults() *RoleAssignment {
	this := RoleAssignment{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RoleAssignment) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RoleAssignment) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *RoleAssignment) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *RoleAssignment) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *RoleAssignment) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *RoleAssignment) UnsetDescription() {
	o.Description.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RoleAssignment) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RoleAssignment) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *RoleAssignment) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *RoleAssignment) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *RoleAssignment) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *RoleAssignment) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetResourceScopes returns the ResourceScopes field value if set, zero value otherwise.
func (o *RoleAssignment) GetResourceScopes() []*string {
	if o == nil || o.ResourceScopes == nil {
		var ret []*string
		return ret
	}
	return *o.ResourceScopes
}

// GetResourceScopesOk returns a tuple with the ResourceScopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleAssignment) GetResourceScopesOk() (*[]*string, bool) {
	if o == nil || o.ResourceScopes == nil {
		return nil, false
	}
	return o.ResourceScopes, true
}

// HasResourceScopes returns a boolean if a field has been set.
func (o *RoleAssignment) HasResourceScopes() bool {
	if o != nil && o.ResourceScopes != nil {
		return true
	}

	return false
}

// SetResourceScopes gets a reference to the given []*string and assigns it to the ResourceScopes field.
func (o *RoleAssignment) SetResourceScopes(v []*string) {
	o.ResourceScopes = &v
}

// GetRoleDefinition returns the RoleDefinition field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RoleAssignment) GetRoleDefinition() AnyOfmicrosoftGraphRoleDefinition {
	if o == nil  {
		var ret AnyOfmicrosoftGraphRoleDefinition
		return ret
	}
	return o.RoleDefinition
}

// GetRoleDefinitionOk returns a tuple with the RoleDefinition field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RoleAssignment) GetRoleDefinitionOk() (*AnyOfmicrosoftGraphRoleDefinition, bool) {
	if o == nil || o.RoleDefinition == nil {
		return nil, false
	}
	return &o.RoleDefinition, true
}

// HasRoleDefinition returns a boolean if a field has been set.
func (o *RoleAssignment) HasRoleDefinition() bool {
	if o != nil && o.RoleDefinition != nil {
		return true
	}

	return false
}

// SetRoleDefinition gets a reference to the given AnyOfmicrosoftGraphRoleDefinition and assigns it to the RoleDefinition field.
func (o *RoleAssignment) SetRoleDefinition(v AnyOfmicrosoftGraphRoleDefinition) {
	o.RoleDefinition = v
}

func (o RoleAssignment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.ResourceScopes != nil {
		toSerialize["resourceScopes"] = o.ResourceScopes
	}
	if o.RoleDefinition != nil {
		toSerialize["roleDefinition"] = o.RoleDefinition
	}
	return json.Marshal(toSerialize)
}

type NullableRoleAssignment struct {
	value *RoleAssignment
	isSet bool
}

func (v NullableRoleAssignment) Get() *RoleAssignment {
	return v.value
}

func (v *NullableRoleAssignment) Set(val *RoleAssignment) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleAssignment) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleAssignment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleAssignment(val *RoleAssignment) *NullableRoleAssignment {
	return &NullableRoleAssignment{value: val, isSet: true}
}

func (v NullableRoleAssignment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleAssignment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


