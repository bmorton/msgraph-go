/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphMessageRulePredicates struct for MicrosoftGraphMessageRulePredicates
type MicrosoftGraphMessageRulePredicates struct {
	// Represents the strings that should appear in the body of an incoming message in order for the condition or exception to apply.
	BodyContains *[]*string `json:"bodyContains,omitempty"`
	// Represents the strings that should appear in the body or subject of an incoming message in order for the condition or exception to apply.
	BodyOrSubjectContains *[]*string `json:"bodyOrSubjectContains,omitempty"`
	// Represents the categories that an incoming message should be labeled with in order for the condition or exception to apply.
	Categories *[]*string `json:"categories,omitempty"`
	// Represents the specific sender email addresses of an incoming message in order for the condition or exception to apply.
	FromAddresses *[]*AnyOfmicrosoftGraphRecipient `json:"fromAddresses,omitempty"`
	// Indicates whether an incoming message must have attachments in order for the condition or exception to apply.
	HasAttachments NullableBool `json:"hasAttachments,omitempty"`
	// Represents the strings that appear in the headers of an incoming message in order for the condition or exception to apply.
	HeaderContains *[]*string `json:"headerContains,omitempty"`
	// The importance that is stamped on an incoming message in order for the condition or exception to apply: low, normal, high.
	Importance AnyOfmicrosoftGraphImportance `json:"importance,omitempty"`
	// Indicates whether an incoming message must be an approval request in order for the condition or exception to apply.
	IsApprovalRequest NullableBool `json:"isApprovalRequest,omitempty"`
	// Indicates whether an incoming message must be automatically forwarded in order for the condition or exception to apply.
	IsAutomaticForward NullableBool `json:"isAutomaticForward,omitempty"`
	// Indicates whether an incoming message must be an auto reply in order for the condition or exception to apply.
	IsAutomaticReply NullableBool `json:"isAutomaticReply,omitempty"`
	// Indicates whether an incoming message must be encrypted in order for the condition or exception to apply.
	IsEncrypted NullableBool `json:"isEncrypted,omitempty"`
	// Indicates whether an incoming message must be a meeting request in order for the condition or exception to apply.
	IsMeetingRequest NullableBool `json:"isMeetingRequest,omitempty"`
	// Indicates whether an incoming message must be a meeting response in order for the condition or exception to apply.
	IsMeetingResponse NullableBool `json:"isMeetingResponse,omitempty"`
	// Indicates whether an incoming message must be a non-delivery report in order for the condition or exception to apply.
	IsNonDeliveryReport NullableBool `json:"isNonDeliveryReport,omitempty"`
	// Indicates whether an incoming message must be permission controlled (RMS-protected) in order for the condition or exception to apply.
	IsPermissionControlled NullableBool `json:"isPermissionControlled,omitempty"`
	// Indicates whether an incoming message must be a read receipt in order for the condition or exception to apply.
	IsReadReceipt NullableBool `json:"isReadReceipt,omitempty"`
	// Indicates whether an incoming message must be S/MIME-signed in order for the condition or exception to apply.
	IsSigned NullableBool `json:"isSigned,omitempty"`
	// Indicates whether an incoming message must be a voice mail in order for the condition or exception to apply.
	IsVoicemail NullableBool `json:"isVoicemail,omitempty"`
	// Represents the flag-for-action value that appears on an incoming message in order for the condition or exception to apply. The possible values are: any, call, doNotForward, followUp, fyi, forward, noResponseNecessary, read, reply, replyToAll, review.
	MessageActionFlag AnyOfmicrosoftGraphMessageActionFlag `json:"messageActionFlag,omitempty"`
	// Indicates whether the owner of the mailbox must not be a recipient of an incoming message in order for the condition or exception to apply.
	NotSentToMe NullableBool `json:"notSentToMe,omitempty"`
	// Represents the strings that appear in either the toRecipients or ccRecipients properties of an incoming message in order for the condition or exception to apply.
	RecipientContains *[]*string `json:"recipientContains,omitempty"`
	// Represents the strings that appear in the from property of an incoming message in order for the condition or exception to apply.
	SenderContains *[]*string `json:"senderContains,omitempty"`
	// Represents the sensitivity level that must be stamped on an incoming message in order for the condition or exception to apply. The possible values are: normal, personal, private, confidential.
	Sensitivity AnyOfmicrosoftGraphSensitivity `json:"sensitivity,omitempty"`
	// Indicates whether the owner of the mailbox must be in the ccRecipients property of an incoming message in order for the condition or exception to apply.
	SentCcMe NullableBool `json:"sentCcMe,omitempty"`
	// Indicates whether the owner of the mailbox must be the only recipient in an incoming message in order for the condition or exception to apply.
	SentOnlyToMe NullableBool `json:"sentOnlyToMe,omitempty"`
	// Represents the email addresses that an incoming message must have been sent to in order for the condition or exception to apply.
	SentToAddresses *[]*AnyOfmicrosoftGraphRecipient `json:"sentToAddresses,omitempty"`
	// Indicates whether the owner of the mailbox must be in the toRecipients property of an incoming message in order for the condition or exception to apply.
	SentToMe NullableBool `json:"sentToMe,omitempty"`
	// Indicates whether the owner of the mailbox must be in either a toRecipients or ccRecipients property of an incoming message in order for the condition or exception to apply.
	SentToOrCcMe NullableBool `json:"sentToOrCcMe,omitempty"`
	// Represents the strings that appear in the subject of an incoming message in order for the condition or exception to apply.
	SubjectContains *[]*string `json:"subjectContains,omitempty"`
	// Represents the minimum and maximum sizes (in kilobytes) that an incoming message must fall in between in order for the condition or exception to apply.
	WithinSizeRange AnyOfmicrosoftGraphSizeRange `json:"withinSizeRange,omitempty"`
}

// NewMicrosoftGraphMessageRulePredicates instantiates a new MicrosoftGraphMessageRulePredicates object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphMessageRulePredicates() *MicrosoftGraphMessageRulePredicates {
	this := MicrosoftGraphMessageRulePredicates{}
	return &this
}

// NewMicrosoftGraphMessageRulePredicatesWithDefaults instantiates a new MicrosoftGraphMessageRulePredicates object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphMessageRulePredicatesWithDefaults() *MicrosoftGraphMessageRulePredicates {
	this := MicrosoftGraphMessageRulePredicates{}
	return &this
}

// GetBodyContains returns the BodyContains field value if set, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetBodyContains() []*string {
	if o == nil || o.BodyContains == nil {
		var ret []*string
		return ret
	}
	return *o.BodyContains
}

// GetBodyContainsOk returns a tuple with the BodyContains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetBodyContainsOk() (*[]*string, bool) {
	if o == nil || o.BodyContains == nil {
		return nil, false
	}
	return o.BodyContains, true
}

// HasBodyContains returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasBodyContains() bool {
	if o != nil && o.BodyContains != nil {
		return true
	}

	return false
}

// SetBodyContains gets a reference to the given []*string and assigns it to the BodyContains field.
func (o *MicrosoftGraphMessageRulePredicates) SetBodyContains(v []*string) {
	o.BodyContains = &v
}

// GetBodyOrSubjectContains returns the BodyOrSubjectContains field value if set, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetBodyOrSubjectContains() []*string {
	if o == nil || o.BodyOrSubjectContains == nil {
		var ret []*string
		return ret
	}
	return *o.BodyOrSubjectContains
}

// GetBodyOrSubjectContainsOk returns a tuple with the BodyOrSubjectContains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetBodyOrSubjectContainsOk() (*[]*string, bool) {
	if o == nil || o.BodyOrSubjectContains == nil {
		return nil, false
	}
	return o.BodyOrSubjectContains, true
}

// HasBodyOrSubjectContains returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasBodyOrSubjectContains() bool {
	if o != nil && o.BodyOrSubjectContains != nil {
		return true
	}

	return false
}

// SetBodyOrSubjectContains gets a reference to the given []*string and assigns it to the BodyOrSubjectContains field.
func (o *MicrosoftGraphMessageRulePredicates) SetBodyOrSubjectContains(v []*string) {
	o.BodyOrSubjectContains = &v
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetCategories() []*string {
	if o == nil || o.Categories == nil {
		var ret []*string
		return ret
	}
	return *o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetCategoriesOk() (*[]*string, bool) {
	if o == nil || o.Categories == nil {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasCategories() bool {
	if o != nil && o.Categories != nil {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []*string and assigns it to the Categories field.
func (o *MicrosoftGraphMessageRulePredicates) SetCategories(v []*string) {
	o.Categories = &v
}

// GetFromAddresses returns the FromAddresses field value if set, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetFromAddresses() []*AnyOfmicrosoftGraphRecipient {
	if o == nil || o.FromAddresses == nil {
		var ret []*AnyOfmicrosoftGraphRecipient
		return ret
	}
	return *o.FromAddresses
}

// GetFromAddressesOk returns a tuple with the FromAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetFromAddressesOk() (*[]*AnyOfmicrosoftGraphRecipient, bool) {
	if o == nil || o.FromAddresses == nil {
		return nil, false
	}
	return o.FromAddresses, true
}

// HasFromAddresses returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasFromAddresses() bool {
	if o != nil && o.FromAddresses != nil {
		return true
	}

	return false
}

// SetFromAddresses gets a reference to the given []*AnyOfmicrosoftGraphRecipient and assigns it to the FromAddresses field.
func (o *MicrosoftGraphMessageRulePredicates) SetFromAddresses(v []*AnyOfmicrosoftGraphRecipient) {
	o.FromAddresses = &v
}

// GetHasAttachments returns the HasAttachments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMessageRulePredicates) GetHasAttachments() bool {
	if o == nil || o.HasAttachments.Get() == nil {
		var ret bool
		return ret
	}
	return *o.HasAttachments.Get()
}

// GetHasAttachmentsOk returns a tuple with the HasAttachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMessageRulePredicates) GetHasAttachmentsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HasAttachments.Get(), o.HasAttachments.IsSet()
}

// HasHasAttachments returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasHasAttachments() bool {
	if o != nil && o.HasAttachments.IsSet() {
		return true
	}

	return false
}

// SetHasAttachments gets a reference to the given NullableBool and assigns it to the HasAttachments field.
func (o *MicrosoftGraphMessageRulePredicates) SetHasAttachments(v bool) {
	o.HasAttachments.Set(&v)
}
// SetHasAttachmentsNil sets the value for HasAttachments to be an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) SetHasAttachmentsNil() {
	o.HasAttachments.Set(nil)
}

// UnsetHasAttachments ensures that no value is present for HasAttachments, not even an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) UnsetHasAttachments() {
	o.HasAttachments.Unset()
}

// GetHeaderContains returns the HeaderContains field value if set, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetHeaderContains() []*string {
	if o == nil || o.HeaderContains == nil {
		var ret []*string
		return ret
	}
	return *o.HeaderContains
}

// GetHeaderContainsOk returns a tuple with the HeaderContains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetHeaderContainsOk() (*[]*string, bool) {
	if o == nil || o.HeaderContains == nil {
		return nil, false
	}
	return o.HeaderContains, true
}

// HasHeaderContains returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasHeaderContains() bool {
	if o != nil && o.HeaderContains != nil {
		return true
	}

	return false
}

// SetHeaderContains gets a reference to the given []*string and assigns it to the HeaderContains field.
func (o *MicrosoftGraphMessageRulePredicates) SetHeaderContains(v []*string) {
	o.HeaderContains = &v
}

// GetImportance returns the Importance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMessageRulePredicates) GetImportance() AnyOfmicrosoftGraphImportance {
	if o == nil  {
		var ret AnyOfmicrosoftGraphImportance
		return ret
	}
	return o.Importance
}

// GetImportanceOk returns a tuple with the Importance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMessageRulePredicates) GetImportanceOk() (*AnyOfmicrosoftGraphImportance, bool) {
	if o == nil || o.Importance == nil {
		return nil, false
	}
	return &o.Importance, true
}

// HasImportance returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasImportance() bool {
	if o != nil && o.Importance != nil {
		return true
	}

	return false
}

// SetImportance gets a reference to the given AnyOfmicrosoftGraphImportance and assigns it to the Importance field.
func (o *MicrosoftGraphMessageRulePredicates) SetImportance(v AnyOfmicrosoftGraphImportance) {
	o.Importance = v
}

// GetIsApprovalRequest returns the IsApprovalRequest field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMessageRulePredicates) GetIsApprovalRequest() bool {
	if o == nil || o.IsApprovalRequest.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsApprovalRequest.Get()
}

// GetIsApprovalRequestOk returns a tuple with the IsApprovalRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMessageRulePredicates) GetIsApprovalRequestOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsApprovalRequest.Get(), o.IsApprovalRequest.IsSet()
}

// HasIsApprovalRequest returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasIsApprovalRequest() bool {
	if o != nil && o.IsApprovalRequest.IsSet() {
		return true
	}

	return false
}

// SetIsApprovalRequest gets a reference to the given NullableBool and assigns it to the IsApprovalRequest field.
func (o *MicrosoftGraphMessageRulePredicates) SetIsApprovalRequest(v bool) {
	o.IsApprovalRequest.Set(&v)
}
// SetIsApprovalRequestNil sets the value for IsApprovalRequest to be an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) SetIsApprovalRequestNil() {
	o.IsApprovalRequest.Set(nil)
}

// UnsetIsApprovalRequest ensures that no value is present for IsApprovalRequest, not even an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) UnsetIsApprovalRequest() {
	o.IsApprovalRequest.Unset()
}

// GetIsAutomaticForward returns the IsAutomaticForward field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMessageRulePredicates) GetIsAutomaticForward() bool {
	if o == nil || o.IsAutomaticForward.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsAutomaticForward.Get()
}

// GetIsAutomaticForwardOk returns a tuple with the IsAutomaticForward field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMessageRulePredicates) GetIsAutomaticForwardOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsAutomaticForward.Get(), o.IsAutomaticForward.IsSet()
}

// HasIsAutomaticForward returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasIsAutomaticForward() bool {
	if o != nil && o.IsAutomaticForward.IsSet() {
		return true
	}

	return false
}

// SetIsAutomaticForward gets a reference to the given NullableBool and assigns it to the IsAutomaticForward field.
func (o *MicrosoftGraphMessageRulePredicates) SetIsAutomaticForward(v bool) {
	o.IsAutomaticForward.Set(&v)
}
// SetIsAutomaticForwardNil sets the value for IsAutomaticForward to be an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) SetIsAutomaticForwardNil() {
	o.IsAutomaticForward.Set(nil)
}

// UnsetIsAutomaticForward ensures that no value is present for IsAutomaticForward, not even an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) UnsetIsAutomaticForward() {
	o.IsAutomaticForward.Unset()
}

// GetIsAutomaticReply returns the IsAutomaticReply field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMessageRulePredicates) GetIsAutomaticReply() bool {
	if o == nil || o.IsAutomaticReply.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsAutomaticReply.Get()
}

// GetIsAutomaticReplyOk returns a tuple with the IsAutomaticReply field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMessageRulePredicates) GetIsAutomaticReplyOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsAutomaticReply.Get(), o.IsAutomaticReply.IsSet()
}

// HasIsAutomaticReply returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasIsAutomaticReply() bool {
	if o != nil && o.IsAutomaticReply.IsSet() {
		return true
	}

	return false
}

// SetIsAutomaticReply gets a reference to the given NullableBool and assigns it to the IsAutomaticReply field.
func (o *MicrosoftGraphMessageRulePredicates) SetIsAutomaticReply(v bool) {
	o.IsAutomaticReply.Set(&v)
}
// SetIsAutomaticReplyNil sets the value for IsAutomaticReply to be an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) SetIsAutomaticReplyNil() {
	o.IsAutomaticReply.Set(nil)
}

// UnsetIsAutomaticReply ensures that no value is present for IsAutomaticReply, not even an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) UnsetIsAutomaticReply() {
	o.IsAutomaticReply.Unset()
}

// GetIsEncrypted returns the IsEncrypted field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMessageRulePredicates) GetIsEncrypted() bool {
	if o == nil || o.IsEncrypted.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsEncrypted.Get()
}

// GetIsEncryptedOk returns a tuple with the IsEncrypted field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMessageRulePredicates) GetIsEncryptedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsEncrypted.Get(), o.IsEncrypted.IsSet()
}

// HasIsEncrypted returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasIsEncrypted() bool {
	if o != nil && o.IsEncrypted.IsSet() {
		return true
	}

	return false
}

// SetIsEncrypted gets a reference to the given NullableBool and assigns it to the IsEncrypted field.
func (o *MicrosoftGraphMessageRulePredicates) SetIsEncrypted(v bool) {
	o.IsEncrypted.Set(&v)
}
// SetIsEncryptedNil sets the value for IsEncrypted to be an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) SetIsEncryptedNil() {
	o.IsEncrypted.Set(nil)
}

// UnsetIsEncrypted ensures that no value is present for IsEncrypted, not even an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) UnsetIsEncrypted() {
	o.IsEncrypted.Unset()
}

// GetIsMeetingRequest returns the IsMeetingRequest field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMessageRulePredicates) GetIsMeetingRequest() bool {
	if o == nil || o.IsMeetingRequest.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsMeetingRequest.Get()
}

// GetIsMeetingRequestOk returns a tuple with the IsMeetingRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMessageRulePredicates) GetIsMeetingRequestOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsMeetingRequest.Get(), o.IsMeetingRequest.IsSet()
}

// HasIsMeetingRequest returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasIsMeetingRequest() bool {
	if o != nil && o.IsMeetingRequest.IsSet() {
		return true
	}

	return false
}

// SetIsMeetingRequest gets a reference to the given NullableBool and assigns it to the IsMeetingRequest field.
func (o *MicrosoftGraphMessageRulePredicates) SetIsMeetingRequest(v bool) {
	o.IsMeetingRequest.Set(&v)
}
// SetIsMeetingRequestNil sets the value for IsMeetingRequest to be an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) SetIsMeetingRequestNil() {
	o.IsMeetingRequest.Set(nil)
}

// UnsetIsMeetingRequest ensures that no value is present for IsMeetingRequest, not even an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) UnsetIsMeetingRequest() {
	o.IsMeetingRequest.Unset()
}

// GetIsMeetingResponse returns the IsMeetingResponse field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMessageRulePredicates) GetIsMeetingResponse() bool {
	if o == nil || o.IsMeetingResponse.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsMeetingResponse.Get()
}

// GetIsMeetingResponseOk returns a tuple with the IsMeetingResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMessageRulePredicates) GetIsMeetingResponseOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsMeetingResponse.Get(), o.IsMeetingResponse.IsSet()
}

// HasIsMeetingResponse returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasIsMeetingResponse() bool {
	if o != nil && o.IsMeetingResponse.IsSet() {
		return true
	}

	return false
}

// SetIsMeetingResponse gets a reference to the given NullableBool and assigns it to the IsMeetingResponse field.
func (o *MicrosoftGraphMessageRulePredicates) SetIsMeetingResponse(v bool) {
	o.IsMeetingResponse.Set(&v)
}
// SetIsMeetingResponseNil sets the value for IsMeetingResponse to be an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) SetIsMeetingResponseNil() {
	o.IsMeetingResponse.Set(nil)
}

// UnsetIsMeetingResponse ensures that no value is present for IsMeetingResponse, not even an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) UnsetIsMeetingResponse() {
	o.IsMeetingResponse.Unset()
}

// GetIsNonDeliveryReport returns the IsNonDeliveryReport field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMessageRulePredicates) GetIsNonDeliveryReport() bool {
	if o == nil || o.IsNonDeliveryReport.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsNonDeliveryReport.Get()
}

// GetIsNonDeliveryReportOk returns a tuple with the IsNonDeliveryReport field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMessageRulePredicates) GetIsNonDeliveryReportOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsNonDeliveryReport.Get(), o.IsNonDeliveryReport.IsSet()
}

// HasIsNonDeliveryReport returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasIsNonDeliveryReport() bool {
	if o != nil && o.IsNonDeliveryReport.IsSet() {
		return true
	}

	return false
}

// SetIsNonDeliveryReport gets a reference to the given NullableBool and assigns it to the IsNonDeliveryReport field.
func (o *MicrosoftGraphMessageRulePredicates) SetIsNonDeliveryReport(v bool) {
	o.IsNonDeliveryReport.Set(&v)
}
// SetIsNonDeliveryReportNil sets the value for IsNonDeliveryReport to be an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) SetIsNonDeliveryReportNil() {
	o.IsNonDeliveryReport.Set(nil)
}

// UnsetIsNonDeliveryReport ensures that no value is present for IsNonDeliveryReport, not even an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) UnsetIsNonDeliveryReport() {
	o.IsNonDeliveryReport.Unset()
}

// GetIsPermissionControlled returns the IsPermissionControlled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMessageRulePredicates) GetIsPermissionControlled() bool {
	if o == nil || o.IsPermissionControlled.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsPermissionControlled.Get()
}

// GetIsPermissionControlledOk returns a tuple with the IsPermissionControlled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMessageRulePredicates) GetIsPermissionControlledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsPermissionControlled.Get(), o.IsPermissionControlled.IsSet()
}

// HasIsPermissionControlled returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasIsPermissionControlled() bool {
	if o != nil && o.IsPermissionControlled.IsSet() {
		return true
	}

	return false
}

// SetIsPermissionControlled gets a reference to the given NullableBool and assigns it to the IsPermissionControlled field.
func (o *MicrosoftGraphMessageRulePredicates) SetIsPermissionControlled(v bool) {
	o.IsPermissionControlled.Set(&v)
}
// SetIsPermissionControlledNil sets the value for IsPermissionControlled to be an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) SetIsPermissionControlledNil() {
	o.IsPermissionControlled.Set(nil)
}

// UnsetIsPermissionControlled ensures that no value is present for IsPermissionControlled, not even an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) UnsetIsPermissionControlled() {
	o.IsPermissionControlled.Unset()
}

// GetIsReadReceipt returns the IsReadReceipt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMessageRulePredicates) GetIsReadReceipt() bool {
	if o == nil || o.IsReadReceipt.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsReadReceipt.Get()
}

// GetIsReadReceiptOk returns a tuple with the IsReadReceipt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMessageRulePredicates) GetIsReadReceiptOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsReadReceipt.Get(), o.IsReadReceipt.IsSet()
}

// HasIsReadReceipt returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasIsReadReceipt() bool {
	if o != nil && o.IsReadReceipt.IsSet() {
		return true
	}

	return false
}

// SetIsReadReceipt gets a reference to the given NullableBool and assigns it to the IsReadReceipt field.
func (o *MicrosoftGraphMessageRulePredicates) SetIsReadReceipt(v bool) {
	o.IsReadReceipt.Set(&v)
}
// SetIsReadReceiptNil sets the value for IsReadReceipt to be an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) SetIsReadReceiptNil() {
	o.IsReadReceipt.Set(nil)
}

// UnsetIsReadReceipt ensures that no value is present for IsReadReceipt, not even an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) UnsetIsReadReceipt() {
	o.IsReadReceipt.Unset()
}

// GetIsSigned returns the IsSigned field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMessageRulePredicates) GetIsSigned() bool {
	if o == nil || o.IsSigned.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsSigned.Get()
}

// GetIsSignedOk returns a tuple with the IsSigned field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMessageRulePredicates) GetIsSignedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsSigned.Get(), o.IsSigned.IsSet()
}

// HasIsSigned returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasIsSigned() bool {
	if o != nil && o.IsSigned.IsSet() {
		return true
	}

	return false
}

// SetIsSigned gets a reference to the given NullableBool and assigns it to the IsSigned field.
func (o *MicrosoftGraphMessageRulePredicates) SetIsSigned(v bool) {
	o.IsSigned.Set(&v)
}
// SetIsSignedNil sets the value for IsSigned to be an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) SetIsSignedNil() {
	o.IsSigned.Set(nil)
}

// UnsetIsSigned ensures that no value is present for IsSigned, not even an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) UnsetIsSigned() {
	o.IsSigned.Unset()
}

// GetIsVoicemail returns the IsVoicemail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMessageRulePredicates) GetIsVoicemail() bool {
	if o == nil || o.IsVoicemail.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsVoicemail.Get()
}

// GetIsVoicemailOk returns a tuple with the IsVoicemail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMessageRulePredicates) GetIsVoicemailOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsVoicemail.Get(), o.IsVoicemail.IsSet()
}

// HasIsVoicemail returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasIsVoicemail() bool {
	if o != nil && o.IsVoicemail.IsSet() {
		return true
	}

	return false
}

// SetIsVoicemail gets a reference to the given NullableBool and assigns it to the IsVoicemail field.
func (o *MicrosoftGraphMessageRulePredicates) SetIsVoicemail(v bool) {
	o.IsVoicemail.Set(&v)
}
// SetIsVoicemailNil sets the value for IsVoicemail to be an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) SetIsVoicemailNil() {
	o.IsVoicemail.Set(nil)
}

// UnsetIsVoicemail ensures that no value is present for IsVoicemail, not even an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) UnsetIsVoicemail() {
	o.IsVoicemail.Unset()
}

// GetMessageActionFlag returns the MessageActionFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMessageRulePredicates) GetMessageActionFlag() AnyOfmicrosoftGraphMessageActionFlag {
	if o == nil  {
		var ret AnyOfmicrosoftGraphMessageActionFlag
		return ret
	}
	return o.MessageActionFlag
}

// GetMessageActionFlagOk returns a tuple with the MessageActionFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMessageRulePredicates) GetMessageActionFlagOk() (*AnyOfmicrosoftGraphMessageActionFlag, bool) {
	if o == nil || o.MessageActionFlag == nil {
		return nil, false
	}
	return &o.MessageActionFlag, true
}

// HasMessageActionFlag returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasMessageActionFlag() bool {
	if o != nil && o.MessageActionFlag != nil {
		return true
	}

	return false
}

// SetMessageActionFlag gets a reference to the given AnyOfmicrosoftGraphMessageActionFlag and assigns it to the MessageActionFlag field.
func (o *MicrosoftGraphMessageRulePredicates) SetMessageActionFlag(v AnyOfmicrosoftGraphMessageActionFlag) {
	o.MessageActionFlag = v
}

// GetNotSentToMe returns the NotSentToMe field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMessageRulePredicates) GetNotSentToMe() bool {
	if o == nil || o.NotSentToMe.Get() == nil {
		var ret bool
		return ret
	}
	return *o.NotSentToMe.Get()
}

// GetNotSentToMeOk returns a tuple with the NotSentToMe field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMessageRulePredicates) GetNotSentToMeOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NotSentToMe.Get(), o.NotSentToMe.IsSet()
}

// HasNotSentToMe returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasNotSentToMe() bool {
	if o != nil && o.NotSentToMe.IsSet() {
		return true
	}

	return false
}

// SetNotSentToMe gets a reference to the given NullableBool and assigns it to the NotSentToMe field.
func (o *MicrosoftGraphMessageRulePredicates) SetNotSentToMe(v bool) {
	o.NotSentToMe.Set(&v)
}
// SetNotSentToMeNil sets the value for NotSentToMe to be an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) SetNotSentToMeNil() {
	o.NotSentToMe.Set(nil)
}

// UnsetNotSentToMe ensures that no value is present for NotSentToMe, not even an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) UnsetNotSentToMe() {
	o.NotSentToMe.Unset()
}

// GetRecipientContains returns the RecipientContains field value if set, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetRecipientContains() []*string {
	if o == nil || o.RecipientContains == nil {
		var ret []*string
		return ret
	}
	return *o.RecipientContains
}

// GetRecipientContainsOk returns a tuple with the RecipientContains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetRecipientContainsOk() (*[]*string, bool) {
	if o == nil || o.RecipientContains == nil {
		return nil, false
	}
	return o.RecipientContains, true
}

// HasRecipientContains returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasRecipientContains() bool {
	if o != nil && o.RecipientContains != nil {
		return true
	}

	return false
}

// SetRecipientContains gets a reference to the given []*string and assigns it to the RecipientContains field.
func (o *MicrosoftGraphMessageRulePredicates) SetRecipientContains(v []*string) {
	o.RecipientContains = &v
}

// GetSenderContains returns the SenderContains field value if set, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetSenderContains() []*string {
	if o == nil || o.SenderContains == nil {
		var ret []*string
		return ret
	}
	return *o.SenderContains
}

// GetSenderContainsOk returns a tuple with the SenderContains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetSenderContainsOk() (*[]*string, bool) {
	if o == nil || o.SenderContains == nil {
		return nil, false
	}
	return o.SenderContains, true
}

// HasSenderContains returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasSenderContains() bool {
	if o != nil && o.SenderContains != nil {
		return true
	}

	return false
}

// SetSenderContains gets a reference to the given []*string and assigns it to the SenderContains field.
func (o *MicrosoftGraphMessageRulePredicates) SetSenderContains(v []*string) {
	o.SenderContains = &v
}

// GetSensitivity returns the Sensitivity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMessageRulePredicates) GetSensitivity() AnyOfmicrosoftGraphSensitivity {
	if o == nil  {
		var ret AnyOfmicrosoftGraphSensitivity
		return ret
	}
	return o.Sensitivity
}

// GetSensitivityOk returns a tuple with the Sensitivity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMessageRulePredicates) GetSensitivityOk() (*AnyOfmicrosoftGraphSensitivity, bool) {
	if o == nil || o.Sensitivity == nil {
		return nil, false
	}
	return &o.Sensitivity, true
}

// HasSensitivity returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasSensitivity() bool {
	if o != nil && o.Sensitivity != nil {
		return true
	}

	return false
}

// SetSensitivity gets a reference to the given AnyOfmicrosoftGraphSensitivity and assigns it to the Sensitivity field.
func (o *MicrosoftGraphMessageRulePredicates) SetSensitivity(v AnyOfmicrosoftGraphSensitivity) {
	o.Sensitivity = v
}

// GetSentCcMe returns the SentCcMe field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMessageRulePredicates) GetSentCcMe() bool {
	if o == nil || o.SentCcMe.Get() == nil {
		var ret bool
		return ret
	}
	return *o.SentCcMe.Get()
}

// GetSentCcMeOk returns a tuple with the SentCcMe field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMessageRulePredicates) GetSentCcMeOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SentCcMe.Get(), o.SentCcMe.IsSet()
}

// HasSentCcMe returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasSentCcMe() bool {
	if o != nil && o.SentCcMe.IsSet() {
		return true
	}

	return false
}

// SetSentCcMe gets a reference to the given NullableBool and assigns it to the SentCcMe field.
func (o *MicrosoftGraphMessageRulePredicates) SetSentCcMe(v bool) {
	o.SentCcMe.Set(&v)
}
// SetSentCcMeNil sets the value for SentCcMe to be an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) SetSentCcMeNil() {
	o.SentCcMe.Set(nil)
}

// UnsetSentCcMe ensures that no value is present for SentCcMe, not even an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) UnsetSentCcMe() {
	o.SentCcMe.Unset()
}

// GetSentOnlyToMe returns the SentOnlyToMe field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMessageRulePredicates) GetSentOnlyToMe() bool {
	if o == nil || o.SentOnlyToMe.Get() == nil {
		var ret bool
		return ret
	}
	return *o.SentOnlyToMe.Get()
}

// GetSentOnlyToMeOk returns a tuple with the SentOnlyToMe field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMessageRulePredicates) GetSentOnlyToMeOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SentOnlyToMe.Get(), o.SentOnlyToMe.IsSet()
}

// HasSentOnlyToMe returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasSentOnlyToMe() bool {
	if o != nil && o.SentOnlyToMe.IsSet() {
		return true
	}

	return false
}

// SetSentOnlyToMe gets a reference to the given NullableBool and assigns it to the SentOnlyToMe field.
func (o *MicrosoftGraphMessageRulePredicates) SetSentOnlyToMe(v bool) {
	o.SentOnlyToMe.Set(&v)
}
// SetSentOnlyToMeNil sets the value for SentOnlyToMe to be an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) SetSentOnlyToMeNil() {
	o.SentOnlyToMe.Set(nil)
}

// UnsetSentOnlyToMe ensures that no value is present for SentOnlyToMe, not even an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) UnsetSentOnlyToMe() {
	o.SentOnlyToMe.Unset()
}

// GetSentToAddresses returns the SentToAddresses field value if set, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetSentToAddresses() []*AnyOfmicrosoftGraphRecipient {
	if o == nil || o.SentToAddresses == nil {
		var ret []*AnyOfmicrosoftGraphRecipient
		return ret
	}
	return *o.SentToAddresses
}

// GetSentToAddressesOk returns a tuple with the SentToAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetSentToAddressesOk() (*[]*AnyOfmicrosoftGraphRecipient, bool) {
	if o == nil || o.SentToAddresses == nil {
		return nil, false
	}
	return o.SentToAddresses, true
}

// HasSentToAddresses returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasSentToAddresses() bool {
	if o != nil && o.SentToAddresses != nil {
		return true
	}

	return false
}

// SetSentToAddresses gets a reference to the given []*AnyOfmicrosoftGraphRecipient and assigns it to the SentToAddresses field.
func (o *MicrosoftGraphMessageRulePredicates) SetSentToAddresses(v []*AnyOfmicrosoftGraphRecipient) {
	o.SentToAddresses = &v
}

// GetSentToMe returns the SentToMe field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMessageRulePredicates) GetSentToMe() bool {
	if o == nil || o.SentToMe.Get() == nil {
		var ret bool
		return ret
	}
	return *o.SentToMe.Get()
}

// GetSentToMeOk returns a tuple with the SentToMe field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMessageRulePredicates) GetSentToMeOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SentToMe.Get(), o.SentToMe.IsSet()
}

// HasSentToMe returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasSentToMe() bool {
	if o != nil && o.SentToMe.IsSet() {
		return true
	}

	return false
}

// SetSentToMe gets a reference to the given NullableBool and assigns it to the SentToMe field.
func (o *MicrosoftGraphMessageRulePredicates) SetSentToMe(v bool) {
	o.SentToMe.Set(&v)
}
// SetSentToMeNil sets the value for SentToMe to be an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) SetSentToMeNil() {
	o.SentToMe.Set(nil)
}

// UnsetSentToMe ensures that no value is present for SentToMe, not even an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) UnsetSentToMe() {
	o.SentToMe.Unset()
}

// GetSentToOrCcMe returns the SentToOrCcMe field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMessageRulePredicates) GetSentToOrCcMe() bool {
	if o == nil || o.SentToOrCcMe.Get() == nil {
		var ret bool
		return ret
	}
	return *o.SentToOrCcMe.Get()
}

// GetSentToOrCcMeOk returns a tuple with the SentToOrCcMe field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMessageRulePredicates) GetSentToOrCcMeOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SentToOrCcMe.Get(), o.SentToOrCcMe.IsSet()
}

// HasSentToOrCcMe returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasSentToOrCcMe() bool {
	if o != nil && o.SentToOrCcMe.IsSet() {
		return true
	}

	return false
}

// SetSentToOrCcMe gets a reference to the given NullableBool and assigns it to the SentToOrCcMe field.
func (o *MicrosoftGraphMessageRulePredicates) SetSentToOrCcMe(v bool) {
	o.SentToOrCcMe.Set(&v)
}
// SetSentToOrCcMeNil sets the value for SentToOrCcMe to be an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) SetSentToOrCcMeNil() {
	o.SentToOrCcMe.Set(nil)
}

// UnsetSentToOrCcMe ensures that no value is present for SentToOrCcMe, not even an explicit nil
func (o *MicrosoftGraphMessageRulePredicates) UnsetSentToOrCcMe() {
	o.SentToOrCcMe.Unset()
}

// GetSubjectContains returns the SubjectContains field value if set, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetSubjectContains() []*string {
	if o == nil || o.SubjectContains == nil {
		var ret []*string
		return ret
	}
	return *o.SubjectContains
}

// GetSubjectContainsOk returns a tuple with the SubjectContains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetSubjectContainsOk() (*[]*string, bool) {
	if o == nil || o.SubjectContains == nil {
		return nil, false
	}
	return o.SubjectContains, true
}

// HasSubjectContains returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasSubjectContains() bool {
	if o != nil && o.SubjectContains != nil {
		return true
	}

	return false
}

// SetSubjectContains gets a reference to the given []*string and assigns it to the SubjectContains field.
func (o *MicrosoftGraphMessageRulePredicates) SetSubjectContains(v []*string) {
	o.SubjectContains = &v
}

// GetWithinSizeRange returns the WithinSizeRange field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMessageRulePredicates) GetWithinSizeRange() AnyOfmicrosoftGraphSizeRange {
	if o == nil  {
		var ret AnyOfmicrosoftGraphSizeRange
		return ret
	}
	return o.WithinSizeRange
}

// GetWithinSizeRangeOk returns a tuple with the WithinSizeRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMessageRulePredicates) GetWithinSizeRangeOk() (*AnyOfmicrosoftGraphSizeRange, bool) {
	if o == nil || o.WithinSizeRange == nil {
		return nil, false
	}
	return &o.WithinSizeRange, true
}

// HasWithinSizeRange returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasWithinSizeRange() bool {
	if o != nil && o.WithinSizeRange != nil {
		return true
	}

	return false
}

// SetWithinSizeRange gets a reference to the given AnyOfmicrosoftGraphSizeRange and assigns it to the WithinSizeRange field.
func (o *MicrosoftGraphMessageRulePredicates) SetWithinSizeRange(v AnyOfmicrosoftGraphSizeRange) {
	o.WithinSizeRange = v
}

func (o MicrosoftGraphMessageRulePredicates) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BodyContains != nil {
		toSerialize["bodyContains"] = o.BodyContains
	}
	if o.BodyOrSubjectContains != nil {
		toSerialize["bodyOrSubjectContains"] = o.BodyOrSubjectContains
	}
	if o.Categories != nil {
		toSerialize["categories"] = o.Categories
	}
	if o.FromAddresses != nil {
		toSerialize["fromAddresses"] = o.FromAddresses
	}
	if o.HasAttachments.IsSet() {
		toSerialize["hasAttachments"] = o.HasAttachments.Get()
	}
	if o.HeaderContains != nil {
		toSerialize["headerContains"] = o.HeaderContains
	}
	if o.Importance != nil {
		toSerialize["importance"] = o.Importance
	}
	if o.IsApprovalRequest.IsSet() {
		toSerialize["isApprovalRequest"] = o.IsApprovalRequest.Get()
	}
	if o.IsAutomaticForward.IsSet() {
		toSerialize["isAutomaticForward"] = o.IsAutomaticForward.Get()
	}
	if o.IsAutomaticReply.IsSet() {
		toSerialize["isAutomaticReply"] = o.IsAutomaticReply.Get()
	}
	if o.IsEncrypted.IsSet() {
		toSerialize["isEncrypted"] = o.IsEncrypted.Get()
	}
	if o.IsMeetingRequest.IsSet() {
		toSerialize["isMeetingRequest"] = o.IsMeetingRequest.Get()
	}
	if o.IsMeetingResponse.IsSet() {
		toSerialize["isMeetingResponse"] = o.IsMeetingResponse.Get()
	}
	if o.IsNonDeliveryReport.IsSet() {
		toSerialize["isNonDeliveryReport"] = o.IsNonDeliveryReport.Get()
	}
	if o.IsPermissionControlled.IsSet() {
		toSerialize["isPermissionControlled"] = o.IsPermissionControlled.Get()
	}
	if o.IsReadReceipt.IsSet() {
		toSerialize["isReadReceipt"] = o.IsReadReceipt.Get()
	}
	if o.IsSigned.IsSet() {
		toSerialize["isSigned"] = o.IsSigned.Get()
	}
	if o.IsVoicemail.IsSet() {
		toSerialize["isVoicemail"] = o.IsVoicemail.Get()
	}
	if o.MessageActionFlag != nil {
		toSerialize["messageActionFlag"] = o.MessageActionFlag
	}
	if o.NotSentToMe.IsSet() {
		toSerialize["notSentToMe"] = o.NotSentToMe.Get()
	}
	if o.RecipientContains != nil {
		toSerialize["recipientContains"] = o.RecipientContains
	}
	if o.SenderContains != nil {
		toSerialize["senderContains"] = o.SenderContains
	}
	if o.Sensitivity != nil {
		toSerialize["sensitivity"] = o.Sensitivity
	}
	if o.SentCcMe.IsSet() {
		toSerialize["sentCcMe"] = o.SentCcMe.Get()
	}
	if o.SentOnlyToMe.IsSet() {
		toSerialize["sentOnlyToMe"] = o.SentOnlyToMe.Get()
	}
	if o.SentToAddresses != nil {
		toSerialize["sentToAddresses"] = o.SentToAddresses
	}
	if o.SentToMe.IsSet() {
		toSerialize["sentToMe"] = o.SentToMe.Get()
	}
	if o.SentToOrCcMe.IsSet() {
		toSerialize["sentToOrCcMe"] = o.SentToOrCcMe.Get()
	}
	if o.SubjectContains != nil {
		toSerialize["subjectContains"] = o.SubjectContains
	}
	if o.WithinSizeRange != nil {
		toSerialize["withinSizeRange"] = o.WithinSizeRange
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphMessageRulePredicates struct {
	value *MicrosoftGraphMessageRulePredicates
	isSet bool
}

func (v NullableMicrosoftGraphMessageRulePredicates) Get() *MicrosoftGraphMessageRulePredicates {
	return v.value
}

func (v *NullableMicrosoftGraphMessageRulePredicates) Set(val *MicrosoftGraphMessageRulePredicates) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphMessageRulePredicates) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphMessageRulePredicates) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphMessageRulePredicates(val *MicrosoftGraphMessageRulePredicates) *NullableMicrosoftGraphMessageRulePredicates {
	return &NullableMicrosoftGraphMessageRulePredicates{value: val, isSet: true}
}

func (v NullableMicrosoftGraphMessageRulePredicates) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphMessageRulePredicates) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


