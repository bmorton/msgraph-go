/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// IdentityUserFlow struct for IdentityUserFlow
type IdentityUserFlow struct {
	UserFlowType AnyOfmicrosoftGraphUserFlowType `json:"userFlowType,omitempty"`
	UserFlowTypeVersion AnyOfnumberstringstring `json:"userFlowTypeVersion,omitempty"`
}

// NewIdentityUserFlow instantiates a new IdentityUserFlow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityUserFlow() *IdentityUserFlow {
	this := IdentityUserFlow{}
	return &this
}

// NewIdentityUserFlowWithDefaults instantiates a new IdentityUserFlow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityUserFlowWithDefaults() *IdentityUserFlow {
	this := IdentityUserFlow{}
	return &this
}

// GetUserFlowType returns the UserFlowType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentityUserFlow) GetUserFlowType() AnyOfmicrosoftGraphUserFlowType {
	if o == nil  {
		var ret AnyOfmicrosoftGraphUserFlowType
		return ret
	}
	return o.UserFlowType
}

// GetUserFlowTypeOk returns a tuple with the UserFlowType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentityUserFlow) GetUserFlowTypeOk() (*AnyOfmicrosoftGraphUserFlowType, bool) {
	if o == nil || o.UserFlowType == nil {
		return nil, false
	}
	return &o.UserFlowType, true
}

// HasUserFlowType returns a boolean if a field has been set.
func (o *IdentityUserFlow) HasUserFlowType() bool {
	if o != nil && o.UserFlowType != nil {
		return true
	}

	return false
}

// SetUserFlowType gets a reference to the given AnyOfmicrosoftGraphUserFlowType and assigns it to the UserFlowType field.
func (o *IdentityUserFlow) SetUserFlowType(v AnyOfmicrosoftGraphUserFlowType) {
	o.UserFlowType = v
}

// GetUserFlowTypeVersion returns the UserFlowTypeVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentityUserFlow) GetUserFlowTypeVersion() AnyOfnumberstringstring {
	if o == nil  {
		var ret AnyOfnumberstringstring
		return ret
	}
	return o.UserFlowTypeVersion
}

// GetUserFlowTypeVersionOk returns a tuple with the UserFlowTypeVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentityUserFlow) GetUserFlowTypeVersionOk() (*AnyOfnumberstringstring, bool) {
	if o == nil || o.UserFlowTypeVersion == nil {
		return nil, false
	}
	return &o.UserFlowTypeVersion, true
}

// HasUserFlowTypeVersion returns a boolean if a field has been set.
func (o *IdentityUserFlow) HasUserFlowTypeVersion() bool {
	if o != nil && o.UserFlowTypeVersion != nil {
		return true
	}

	return false
}

// SetUserFlowTypeVersion gets a reference to the given AnyOfnumberstringstring and assigns it to the UserFlowTypeVersion field.
func (o *IdentityUserFlow) SetUserFlowTypeVersion(v AnyOfnumberstringstring) {
	o.UserFlowTypeVersion = v
}

func (o IdentityUserFlow) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UserFlowType != nil {
		toSerialize["userFlowType"] = o.UserFlowType
	}
	if o.UserFlowTypeVersion != nil {
		toSerialize["userFlowTypeVersion"] = o.UserFlowTypeVersion
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityUserFlow struct {
	value *IdentityUserFlow
	isSet bool
}

func (v NullableIdentityUserFlow) Get() *IdentityUserFlow {
	return v.value
}

func (v *NullableIdentityUserFlow) Set(val *IdentityUserFlow) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityUserFlow) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityUserFlow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityUserFlow(val *IdentityUserFlow) *NullableIdentityUserFlow {
	return &NullableIdentityUserFlow{value: val, isSet: true}
}

func (v NullableIdentityUserFlow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityUserFlow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


