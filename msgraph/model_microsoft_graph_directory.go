/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphDirectory struct for MicrosoftGraphDirectory
type MicrosoftGraphDirectory struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// Conceptual container for user and group directory objects.
	AdministrativeUnits *[]MicrosoftGraphAdministrativeUnit `json:"administrativeUnits,omitempty"`
	// Recently deleted items. Read-only. Nullable.
	DeletedItems *[]MicrosoftGraphDirectoryObject `json:"deletedItems,omitempty"`
}

// NewMicrosoftGraphDirectory instantiates a new MicrosoftGraphDirectory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphDirectory() *MicrosoftGraphDirectory {
	this := MicrosoftGraphDirectory{}
	return &this
}

// NewMicrosoftGraphDirectoryWithDefaults instantiates a new MicrosoftGraphDirectory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphDirectoryWithDefaults() *MicrosoftGraphDirectory {
	this := MicrosoftGraphDirectory{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphDirectory) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDirectory) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphDirectory) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphDirectory) SetId(v string) {
	o.Id = &v
}

// GetAdministrativeUnits returns the AdministrativeUnits field value if set, zero value otherwise.
func (o *MicrosoftGraphDirectory) GetAdministrativeUnits() []MicrosoftGraphAdministrativeUnit {
	if o == nil || o.AdministrativeUnits == nil {
		var ret []MicrosoftGraphAdministrativeUnit
		return ret
	}
	return *o.AdministrativeUnits
}

// GetAdministrativeUnitsOk returns a tuple with the AdministrativeUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDirectory) GetAdministrativeUnitsOk() (*[]MicrosoftGraphAdministrativeUnit, bool) {
	if o == nil || o.AdministrativeUnits == nil {
		return nil, false
	}
	return o.AdministrativeUnits, true
}

// HasAdministrativeUnits returns a boolean if a field has been set.
func (o *MicrosoftGraphDirectory) HasAdministrativeUnits() bool {
	if o != nil && o.AdministrativeUnits != nil {
		return true
	}

	return false
}

// SetAdministrativeUnits gets a reference to the given []MicrosoftGraphAdministrativeUnit and assigns it to the AdministrativeUnits field.
func (o *MicrosoftGraphDirectory) SetAdministrativeUnits(v []MicrosoftGraphAdministrativeUnit) {
	o.AdministrativeUnits = &v
}

// GetDeletedItems returns the DeletedItems field value if set, zero value otherwise.
func (o *MicrosoftGraphDirectory) GetDeletedItems() []MicrosoftGraphDirectoryObject {
	if o == nil || o.DeletedItems == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret
	}
	return *o.DeletedItems
}

// GetDeletedItemsOk returns a tuple with the DeletedItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDirectory) GetDeletedItemsOk() (*[]MicrosoftGraphDirectoryObject, bool) {
	if o == nil || o.DeletedItems == nil {
		return nil, false
	}
	return o.DeletedItems, true
}

// HasDeletedItems returns a boolean if a field has been set.
func (o *MicrosoftGraphDirectory) HasDeletedItems() bool {
	if o != nil && o.DeletedItems != nil {
		return true
	}

	return false
}

// SetDeletedItems gets a reference to the given []MicrosoftGraphDirectoryObject and assigns it to the DeletedItems field.
func (o *MicrosoftGraphDirectory) SetDeletedItems(v []MicrosoftGraphDirectoryObject) {
	o.DeletedItems = &v
}

func (o MicrosoftGraphDirectory) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.AdministrativeUnits != nil {
		toSerialize["administrativeUnits"] = o.AdministrativeUnits
	}
	if o.DeletedItems != nil {
		toSerialize["deletedItems"] = o.DeletedItems
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphDirectory struct {
	value *MicrosoftGraphDirectory
	isSet bool
}

func (v NullableMicrosoftGraphDirectory) Get() *MicrosoftGraphDirectory {
	return v.value
}

func (v *NullableMicrosoftGraphDirectory) Set(val *MicrosoftGraphDirectory) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphDirectory) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphDirectory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphDirectory(val *MicrosoftGraphDirectory) *NullableMicrosoftGraphDirectory {
	return &NullableMicrosoftGraphDirectory{value: val, isSet: true}
}

func (v NullableMicrosoftGraphDirectory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphDirectory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


