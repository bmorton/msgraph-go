/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphCallRecordsMediaStreamDirection the model 'MicrosoftGraphCallRecordsMediaStreamDirection'
type MicrosoftGraphCallRecordsMediaStreamDirection string

// List of microsoft.graph.callRecords.mediaStreamDirection
const (
	CALLER_TO_CALLEE MicrosoftGraphCallRecordsMediaStreamDirection = "callerToCallee"
	CALLEE_TO_CALLER MicrosoftGraphCallRecordsMediaStreamDirection = "calleeToCaller"
)

// All allowed values of MicrosoftGraphCallRecordsMediaStreamDirection enum
var AllowedMicrosoftGraphCallRecordsMediaStreamDirectionEnumValues = []MicrosoftGraphCallRecordsMediaStreamDirection{
	"callerToCallee",
	"calleeToCaller",
}

func (v *MicrosoftGraphCallRecordsMediaStreamDirection) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphCallRecordsMediaStreamDirection(value)
	for _, existing := range AllowedMicrosoftGraphCallRecordsMediaStreamDirectionEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphCallRecordsMediaStreamDirection", value)
}

// NewMicrosoftGraphCallRecordsMediaStreamDirectionFromValue returns a pointer to a valid MicrosoftGraphCallRecordsMediaStreamDirection
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphCallRecordsMediaStreamDirectionFromValue(v string) (*MicrosoftGraphCallRecordsMediaStreamDirection, error) {
	ev := MicrosoftGraphCallRecordsMediaStreamDirection(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphCallRecordsMediaStreamDirection: valid values are %v", v, AllowedMicrosoftGraphCallRecordsMediaStreamDirectionEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphCallRecordsMediaStreamDirection) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphCallRecordsMediaStreamDirectionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.callRecords.mediaStreamDirection value
func (v MicrosoftGraphCallRecordsMediaStreamDirection) Ptr() *MicrosoftGraphCallRecordsMediaStreamDirection {
	return &v
}

type NullableMicrosoftGraphCallRecordsMediaStreamDirection struct {
	value *MicrosoftGraphCallRecordsMediaStreamDirection
	isSet bool
}

func (v NullableMicrosoftGraphCallRecordsMediaStreamDirection) Get() *MicrosoftGraphCallRecordsMediaStreamDirection {
	return v.value
}

func (v *NullableMicrosoftGraphCallRecordsMediaStreamDirection) Set(val *MicrosoftGraphCallRecordsMediaStreamDirection) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphCallRecordsMediaStreamDirection) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphCallRecordsMediaStreamDirection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphCallRecordsMediaStreamDirection(val *MicrosoftGraphCallRecordsMediaStreamDirection) *NullableMicrosoftGraphCallRecordsMediaStreamDirection {
	return &NullableMicrosoftGraphCallRecordsMediaStreamDirection{value: val, isSet: true}
}

func (v NullableMicrosoftGraphCallRecordsMediaStreamDirection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphCallRecordsMediaStreamDirection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

