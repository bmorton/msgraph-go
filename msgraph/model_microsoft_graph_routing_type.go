/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphRoutingType the model 'MicrosoftGraphRoutingType'
type MicrosoftGraphRoutingType string

// List of microsoft.graph.routingType
const (
	FORWARDED MicrosoftGraphRoutingType = "forwarded"
	LOOKUP MicrosoftGraphRoutingType = "lookup"
	SELF_FORK MicrosoftGraphRoutingType = "selfFork"
	UNKNOWN_FUTURE_VALUE MicrosoftGraphRoutingType = "unknownFutureValue"
)

// All allowed values of MicrosoftGraphRoutingType enum
var AllowedMicrosoftGraphRoutingTypeEnumValues = []MicrosoftGraphRoutingType{
	"forwarded",
	"lookup",
	"selfFork",
	"unknownFutureValue",
}

func (v *MicrosoftGraphRoutingType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphRoutingType(value)
	for _, existing := range AllowedMicrosoftGraphRoutingTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphRoutingType", value)
}

// NewMicrosoftGraphRoutingTypeFromValue returns a pointer to a valid MicrosoftGraphRoutingType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphRoutingTypeFromValue(v string) (*MicrosoftGraphRoutingType, error) {
	ev := MicrosoftGraphRoutingType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphRoutingType: valid values are %v", v, AllowedMicrosoftGraphRoutingTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphRoutingType) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphRoutingTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.routingType value
func (v MicrosoftGraphRoutingType) Ptr() *MicrosoftGraphRoutingType {
	return &v
}

type NullableMicrosoftGraphRoutingType struct {
	value *MicrosoftGraphRoutingType
	isSet bool
}

func (v NullableMicrosoftGraphRoutingType) Get() *MicrosoftGraphRoutingType {
	return v.value
}

func (v *NullableMicrosoftGraphRoutingType) Set(val *MicrosoftGraphRoutingType) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphRoutingType) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphRoutingType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphRoutingType(val *MicrosoftGraphRoutingType) *NullableMicrosoftGraphRoutingType {
	return &NullableMicrosoftGraphRoutingType{value: val, isSet: true}
}

func (v NullableMicrosoftGraphRoutingType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphRoutingType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

