/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject1090 struct for InlineObject1090
type InlineObject1090 struct {
	DeviceTag NullableString `json:"deviceTag,omitempty"`
}

// NewInlineObject1090 instantiates a new InlineObject1090 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject1090() *InlineObject1090 {
	this := InlineObject1090{}
	return &this
}

// NewInlineObject1090WithDefaults instantiates a new InlineObject1090 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject1090WithDefaults() *InlineObject1090 {
	this := InlineObject1090{}
	return &this
}

// GetDeviceTag returns the DeviceTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1090) GetDeviceTag() string {
	if o == nil || o.DeviceTag.Get() == nil {
		var ret string
		return ret
	}
	return *o.DeviceTag.Get()
}

// GetDeviceTagOk returns a tuple with the DeviceTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1090) GetDeviceTagOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DeviceTag.Get(), o.DeviceTag.IsSet()
}

// HasDeviceTag returns a boolean if a field has been set.
func (o *InlineObject1090) HasDeviceTag() bool {
	if o != nil && o.DeviceTag.IsSet() {
		return true
	}

	return false
}

// SetDeviceTag gets a reference to the given NullableString and assigns it to the DeviceTag field.
func (o *InlineObject1090) SetDeviceTag(v string) {
	o.DeviceTag.Set(&v)
}
// SetDeviceTagNil sets the value for DeviceTag to be an explicit nil
func (o *InlineObject1090) SetDeviceTagNil() {
	o.DeviceTag.Set(nil)
}

// UnsetDeviceTag ensures that no value is present for DeviceTag, not even an explicit nil
func (o *InlineObject1090) UnsetDeviceTag() {
	o.DeviceTag.Unset()
}

func (o InlineObject1090) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeviceTag.IsSet() {
		toSerialize["deviceTag"] = o.DeviceTag.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject1090 struct {
	value *InlineObject1090
	isSet bool
}

func (v NullableInlineObject1090) Get() *InlineObject1090 {
	return v.value
}

func (v *NullableInlineObject1090) Set(val *InlineObject1090) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject1090) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject1090) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject1090(val *InlineObject1090) *NullableInlineObject1090 {
	return &NullableInlineObject1090{value: val, isSet: true}
}

func (v NullableInlineObject1090) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject1090) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


