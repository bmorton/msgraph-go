/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"time"
)

// ManagedEBook An abstract class containing the base properties for Managed eBook.
type ManagedEBook struct {
	// The date and time when the eBook file was created.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// Description.
	Description NullableString `json:"description,omitempty"`
	// Name of the eBook.
	DisplayName *string `json:"displayName,omitempty"`
	// The more information Url.
	InformationUrl NullableString `json:"informationUrl,omitempty"`
	// Book cover.
	LargeCover AnyOfmicrosoftGraphMimeContent `json:"largeCover,omitempty"`
	// The date and time when the eBook was last modified.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// The privacy statement Url.
	PrivacyInformationUrl NullableString `json:"privacyInformationUrl,omitempty"`
	// The date and time when the eBook was published.
	PublishedDateTime *time.Time `json:"publishedDateTime,omitempty"`
	// Publisher.
	Publisher NullableString `json:"publisher,omitempty"`
	// The list of assignments for this eBook.
	Assignments *[]MicrosoftGraphManagedEBookAssignment `json:"assignments,omitempty"`
	// The list of installation states for this eBook.
	DeviceStates *[]MicrosoftGraphDeviceInstallState `json:"deviceStates,omitempty"`
	// Mobile App Install Summary.
	InstallSummary AnyOfmicrosoftGraphEBookInstallSummary `json:"installSummary,omitempty"`
	// The list of installation states for this eBook.
	UserStateSummary *[]MicrosoftGraphUserInstallStateSummary `json:"userStateSummary,omitempty"`
}

// NewManagedEBook instantiates a new ManagedEBook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagedEBook() *ManagedEBook {
	this := ManagedEBook{}
	return &this
}

// NewManagedEBookWithDefaults instantiates a new ManagedEBook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagedEBookWithDefaults() *ManagedEBook {
	this := ManagedEBook{}
	return &this
}

// GetCreatedDateTime returns the CreatedDateTime field value if set, zero value otherwise.
func (o *ManagedEBook) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedEBook) GetCreatedDateTimeOk() (*time.Time, bool) {
	if o == nil || o.CreatedDateTime == nil {
		return nil, false
	}
	return o.CreatedDateTime, true
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *ManagedEBook) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime != nil {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given time.Time and assigns it to the CreatedDateTime field.
func (o *ManagedEBook) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ManagedEBook) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedEBook) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *ManagedEBook) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *ManagedEBook) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *ManagedEBook) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *ManagedEBook) UnsetDescription() {
	o.Description.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ManagedEBook) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedEBook) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ManagedEBook) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ManagedEBook) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetInformationUrl returns the InformationUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ManagedEBook) GetInformationUrl() string {
	if o == nil || o.InformationUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.InformationUrl.Get()
}

// GetInformationUrlOk returns a tuple with the InformationUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedEBook) GetInformationUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InformationUrl.Get(), o.InformationUrl.IsSet()
}

// HasInformationUrl returns a boolean if a field has been set.
func (o *ManagedEBook) HasInformationUrl() bool {
	if o != nil && o.InformationUrl.IsSet() {
		return true
	}

	return false
}

// SetInformationUrl gets a reference to the given NullableString and assigns it to the InformationUrl field.
func (o *ManagedEBook) SetInformationUrl(v string) {
	o.InformationUrl.Set(&v)
}
// SetInformationUrlNil sets the value for InformationUrl to be an explicit nil
func (o *ManagedEBook) SetInformationUrlNil() {
	o.InformationUrl.Set(nil)
}

// UnsetInformationUrl ensures that no value is present for InformationUrl, not even an explicit nil
func (o *ManagedEBook) UnsetInformationUrl() {
	o.InformationUrl.Unset()
}

// GetLargeCover returns the LargeCover field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ManagedEBook) GetLargeCover() AnyOfmicrosoftGraphMimeContent {
	if o == nil  {
		var ret AnyOfmicrosoftGraphMimeContent
		return ret
	}
	return o.LargeCover
}

// GetLargeCoverOk returns a tuple with the LargeCover field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedEBook) GetLargeCoverOk() (*AnyOfmicrosoftGraphMimeContent, bool) {
	if o == nil || o.LargeCover == nil {
		return nil, false
	}
	return &o.LargeCover, true
}

// HasLargeCover returns a boolean if a field has been set.
func (o *ManagedEBook) HasLargeCover() bool {
	if o != nil && o.LargeCover != nil {
		return true
	}

	return false
}

// SetLargeCover gets a reference to the given AnyOfmicrosoftGraphMimeContent and assigns it to the LargeCover field.
func (o *ManagedEBook) SetLargeCover(v AnyOfmicrosoftGraphMimeContent) {
	o.LargeCover = v
}

// GetLastModifiedDateTime returns the LastModifiedDateTime field value if set, zero value otherwise.
func (o *ManagedEBook) GetLastModifiedDateTime() time.Time {
	if o == nil || o.LastModifiedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDateTime
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedEBook) GetLastModifiedDateTimeOk() (*time.Time, bool) {
	if o == nil || o.LastModifiedDateTime == nil {
		return nil, false
	}
	return o.LastModifiedDateTime, true
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *ManagedEBook) HasLastModifiedDateTime() bool {
	if o != nil && o.LastModifiedDateTime != nil {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given time.Time and assigns it to the LastModifiedDateTime field.
func (o *ManagedEBook) SetLastModifiedDateTime(v time.Time) {
	o.LastModifiedDateTime = &v
}

// GetPrivacyInformationUrl returns the PrivacyInformationUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ManagedEBook) GetPrivacyInformationUrl() string {
	if o == nil || o.PrivacyInformationUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.PrivacyInformationUrl.Get()
}

// GetPrivacyInformationUrlOk returns a tuple with the PrivacyInformationUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedEBook) GetPrivacyInformationUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PrivacyInformationUrl.Get(), o.PrivacyInformationUrl.IsSet()
}

// HasPrivacyInformationUrl returns a boolean if a field has been set.
func (o *ManagedEBook) HasPrivacyInformationUrl() bool {
	if o != nil && o.PrivacyInformationUrl.IsSet() {
		return true
	}

	return false
}

// SetPrivacyInformationUrl gets a reference to the given NullableString and assigns it to the PrivacyInformationUrl field.
func (o *ManagedEBook) SetPrivacyInformationUrl(v string) {
	o.PrivacyInformationUrl.Set(&v)
}
// SetPrivacyInformationUrlNil sets the value for PrivacyInformationUrl to be an explicit nil
func (o *ManagedEBook) SetPrivacyInformationUrlNil() {
	o.PrivacyInformationUrl.Set(nil)
}

// UnsetPrivacyInformationUrl ensures that no value is present for PrivacyInformationUrl, not even an explicit nil
func (o *ManagedEBook) UnsetPrivacyInformationUrl() {
	o.PrivacyInformationUrl.Unset()
}

// GetPublishedDateTime returns the PublishedDateTime field value if set, zero value otherwise.
func (o *ManagedEBook) GetPublishedDateTime() time.Time {
	if o == nil || o.PublishedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.PublishedDateTime
}

// GetPublishedDateTimeOk returns a tuple with the PublishedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedEBook) GetPublishedDateTimeOk() (*time.Time, bool) {
	if o == nil || o.PublishedDateTime == nil {
		return nil, false
	}
	return o.PublishedDateTime, true
}

// HasPublishedDateTime returns a boolean if a field has been set.
func (o *ManagedEBook) HasPublishedDateTime() bool {
	if o != nil && o.PublishedDateTime != nil {
		return true
	}

	return false
}

// SetPublishedDateTime gets a reference to the given time.Time and assigns it to the PublishedDateTime field.
func (o *ManagedEBook) SetPublishedDateTime(v time.Time) {
	o.PublishedDateTime = &v
}

// GetPublisher returns the Publisher field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ManagedEBook) GetPublisher() string {
	if o == nil || o.Publisher.Get() == nil {
		var ret string
		return ret
	}
	return *o.Publisher.Get()
}

// GetPublisherOk returns a tuple with the Publisher field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedEBook) GetPublisherOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Publisher.Get(), o.Publisher.IsSet()
}

// HasPublisher returns a boolean if a field has been set.
func (o *ManagedEBook) HasPublisher() bool {
	if o != nil && o.Publisher.IsSet() {
		return true
	}

	return false
}

// SetPublisher gets a reference to the given NullableString and assigns it to the Publisher field.
func (o *ManagedEBook) SetPublisher(v string) {
	o.Publisher.Set(&v)
}
// SetPublisherNil sets the value for Publisher to be an explicit nil
func (o *ManagedEBook) SetPublisherNil() {
	o.Publisher.Set(nil)
}

// UnsetPublisher ensures that no value is present for Publisher, not even an explicit nil
func (o *ManagedEBook) UnsetPublisher() {
	o.Publisher.Unset()
}

// GetAssignments returns the Assignments field value if set, zero value otherwise.
func (o *ManagedEBook) GetAssignments() []MicrosoftGraphManagedEBookAssignment {
	if o == nil || o.Assignments == nil {
		var ret []MicrosoftGraphManagedEBookAssignment
		return ret
	}
	return *o.Assignments
}

// GetAssignmentsOk returns a tuple with the Assignments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedEBook) GetAssignmentsOk() (*[]MicrosoftGraphManagedEBookAssignment, bool) {
	if o == nil || o.Assignments == nil {
		return nil, false
	}
	return o.Assignments, true
}

// HasAssignments returns a boolean if a field has been set.
func (o *ManagedEBook) HasAssignments() bool {
	if o != nil && o.Assignments != nil {
		return true
	}

	return false
}

// SetAssignments gets a reference to the given []MicrosoftGraphManagedEBookAssignment and assigns it to the Assignments field.
func (o *ManagedEBook) SetAssignments(v []MicrosoftGraphManagedEBookAssignment) {
	o.Assignments = &v
}

// GetDeviceStates returns the DeviceStates field value if set, zero value otherwise.
func (o *ManagedEBook) GetDeviceStates() []MicrosoftGraphDeviceInstallState {
	if o == nil || o.DeviceStates == nil {
		var ret []MicrosoftGraphDeviceInstallState
		return ret
	}
	return *o.DeviceStates
}

// GetDeviceStatesOk returns a tuple with the DeviceStates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedEBook) GetDeviceStatesOk() (*[]MicrosoftGraphDeviceInstallState, bool) {
	if o == nil || o.DeviceStates == nil {
		return nil, false
	}
	return o.DeviceStates, true
}

// HasDeviceStates returns a boolean if a field has been set.
func (o *ManagedEBook) HasDeviceStates() bool {
	if o != nil && o.DeviceStates != nil {
		return true
	}

	return false
}

// SetDeviceStates gets a reference to the given []MicrosoftGraphDeviceInstallState and assigns it to the DeviceStates field.
func (o *ManagedEBook) SetDeviceStates(v []MicrosoftGraphDeviceInstallState) {
	o.DeviceStates = &v
}

// GetInstallSummary returns the InstallSummary field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ManagedEBook) GetInstallSummary() AnyOfmicrosoftGraphEBookInstallSummary {
	if o == nil  {
		var ret AnyOfmicrosoftGraphEBookInstallSummary
		return ret
	}
	return o.InstallSummary
}

// GetInstallSummaryOk returns a tuple with the InstallSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedEBook) GetInstallSummaryOk() (*AnyOfmicrosoftGraphEBookInstallSummary, bool) {
	if o == nil || o.InstallSummary == nil {
		return nil, false
	}
	return &o.InstallSummary, true
}

// HasInstallSummary returns a boolean if a field has been set.
func (o *ManagedEBook) HasInstallSummary() bool {
	if o != nil && o.InstallSummary != nil {
		return true
	}

	return false
}

// SetInstallSummary gets a reference to the given AnyOfmicrosoftGraphEBookInstallSummary and assigns it to the InstallSummary field.
func (o *ManagedEBook) SetInstallSummary(v AnyOfmicrosoftGraphEBookInstallSummary) {
	o.InstallSummary = v
}

// GetUserStateSummary returns the UserStateSummary field value if set, zero value otherwise.
func (o *ManagedEBook) GetUserStateSummary() []MicrosoftGraphUserInstallStateSummary {
	if o == nil || o.UserStateSummary == nil {
		var ret []MicrosoftGraphUserInstallStateSummary
		return ret
	}
	return *o.UserStateSummary
}

// GetUserStateSummaryOk returns a tuple with the UserStateSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedEBook) GetUserStateSummaryOk() (*[]MicrosoftGraphUserInstallStateSummary, bool) {
	if o == nil || o.UserStateSummary == nil {
		return nil, false
	}
	return o.UserStateSummary, true
}

// HasUserStateSummary returns a boolean if a field has been set.
func (o *ManagedEBook) HasUserStateSummary() bool {
	if o != nil && o.UserStateSummary != nil {
		return true
	}

	return false
}

// SetUserStateSummary gets a reference to the given []MicrosoftGraphUserInstallStateSummary and assigns it to the UserStateSummary field.
func (o *ManagedEBook) SetUserStateSummary(v []MicrosoftGraphUserInstallStateSummary) {
	o.UserStateSummary = &v
}

func (o ManagedEBook) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedDateTime != nil {
		toSerialize["createdDateTime"] = o.CreatedDateTime
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.InformationUrl.IsSet() {
		toSerialize["informationUrl"] = o.InformationUrl.Get()
	}
	if o.LargeCover != nil {
		toSerialize["largeCover"] = o.LargeCover
	}
	if o.LastModifiedDateTime != nil {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime
	}
	if o.PrivacyInformationUrl.IsSet() {
		toSerialize["privacyInformationUrl"] = o.PrivacyInformationUrl.Get()
	}
	if o.PublishedDateTime != nil {
		toSerialize["publishedDateTime"] = o.PublishedDateTime
	}
	if o.Publisher.IsSet() {
		toSerialize["publisher"] = o.Publisher.Get()
	}
	if o.Assignments != nil {
		toSerialize["assignments"] = o.Assignments
	}
	if o.DeviceStates != nil {
		toSerialize["deviceStates"] = o.DeviceStates
	}
	if o.InstallSummary != nil {
		toSerialize["installSummary"] = o.InstallSummary
	}
	if o.UserStateSummary != nil {
		toSerialize["userStateSummary"] = o.UserStateSummary
	}
	return json.Marshal(toSerialize)
}

type NullableManagedEBook struct {
	value *ManagedEBook
	isSet bool
}

func (v NullableManagedEBook) Get() *ManagedEBook {
	return v.value
}

func (v *NullableManagedEBook) Set(val *ManagedEBook) {
	v.value = val
	v.isSet = true
}

func (v NullableManagedEBook) IsSet() bool {
	return v.isSet
}

func (v *NullableManagedEBook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagedEBook(val *ManagedEBook) *NullableManagedEBook {
	return &NullableManagedEBook{value: val, isSet: true}
}

func (v NullableManagedEBook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagedEBook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


