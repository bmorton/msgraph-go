/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphApplicationServicePrincipal struct for MicrosoftGraphApplicationServicePrincipal
type MicrosoftGraphApplicationServicePrincipal struct {
	Application AnyOfmicrosoftGraphApplication `json:"application,omitempty"`
	ServicePrincipal AnyOfmicrosoftGraphServicePrincipal `json:"servicePrincipal,omitempty"`
}

// NewMicrosoftGraphApplicationServicePrincipal instantiates a new MicrosoftGraphApplicationServicePrincipal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphApplicationServicePrincipal() *MicrosoftGraphApplicationServicePrincipal {
	this := MicrosoftGraphApplicationServicePrincipal{}
	return &this
}

// NewMicrosoftGraphApplicationServicePrincipalWithDefaults instantiates a new MicrosoftGraphApplicationServicePrincipal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphApplicationServicePrincipalWithDefaults() *MicrosoftGraphApplicationServicePrincipal {
	this := MicrosoftGraphApplicationServicePrincipal{}
	return &this
}

// GetApplication returns the Application field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphApplicationServicePrincipal) GetApplication() AnyOfmicrosoftGraphApplication {
	if o == nil  {
		var ret AnyOfmicrosoftGraphApplication
		return ret
	}
	return o.Application
}

// GetApplicationOk returns a tuple with the Application field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphApplicationServicePrincipal) GetApplicationOk() (*AnyOfmicrosoftGraphApplication, bool) {
	if o == nil || o.Application == nil {
		return nil, false
	}
	return &o.Application, true
}

// HasApplication returns a boolean if a field has been set.
func (o *MicrosoftGraphApplicationServicePrincipal) HasApplication() bool {
	if o != nil && o.Application != nil {
		return true
	}

	return false
}

// SetApplication gets a reference to the given AnyOfmicrosoftGraphApplication and assigns it to the Application field.
func (o *MicrosoftGraphApplicationServicePrincipal) SetApplication(v AnyOfmicrosoftGraphApplication) {
	o.Application = v
}

// GetServicePrincipal returns the ServicePrincipal field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphApplicationServicePrincipal) GetServicePrincipal() AnyOfmicrosoftGraphServicePrincipal {
	if o == nil  {
		var ret AnyOfmicrosoftGraphServicePrincipal
		return ret
	}
	return o.ServicePrincipal
}

// GetServicePrincipalOk returns a tuple with the ServicePrincipal field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphApplicationServicePrincipal) GetServicePrincipalOk() (*AnyOfmicrosoftGraphServicePrincipal, bool) {
	if o == nil || o.ServicePrincipal == nil {
		return nil, false
	}
	return &o.ServicePrincipal, true
}

// HasServicePrincipal returns a boolean if a field has been set.
func (o *MicrosoftGraphApplicationServicePrincipal) HasServicePrincipal() bool {
	if o != nil && o.ServicePrincipal != nil {
		return true
	}

	return false
}

// SetServicePrincipal gets a reference to the given AnyOfmicrosoftGraphServicePrincipal and assigns it to the ServicePrincipal field.
func (o *MicrosoftGraphApplicationServicePrincipal) SetServicePrincipal(v AnyOfmicrosoftGraphServicePrincipal) {
	o.ServicePrincipal = v
}

func (o MicrosoftGraphApplicationServicePrincipal) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Application != nil {
		toSerialize["application"] = o.Application
	}
	if o.ServicePrincipal != nil {
		toSerialize["servicePrincipal"] = o.ServicePrincipal
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphApplicationServicePrincipal struct {
	value *MicrosoftGraphApplicationServicePrincipal
	isSet bool
}

func (v NullableMicrosoftGraphApplicationServicePrincipal) Get() *MicrosoftGraphApplicationServicePrincipal {
	return v.value
}

func (v *NullableMicrosoftGraphApplicationServicePrincipal) Set(val *MicrosoftGraphApplicationServicePrincipal) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphApplicationServicePrincipal) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphApplicationServicePrincipal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphApplicationServicePrincipal(val *MicrosoftGraphApplicationServicePrincipal) *NullableMicrosoftGraphApplicationServicePrincipal {
	return &NullableMicrosoftGraphApplicationServicePrincipal{value: val, isSet: true}
}

func (v NullableMicrosoftGraphApplicationServicePrincipal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphApplicationServicePrincipal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


