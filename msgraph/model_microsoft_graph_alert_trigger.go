/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphAlertTrigger struct for MicrosoftGraphAlertTrigger
type MicrosoftGraphAlertTrigger struct {
	// Name of the property serving as a detection trigger.
	Name NullableString `json:"name,omitempty"`
	// Type of the property in the key:value pair for interpretation. For example, String, Boolean etc.
	Type NullableString `json:"type,omitempty"`
	// Value of the property serving as a detection trigger.
	Value NullableString `json:"value,omitempty"`
}

// NewMicrosoftGraphAlertTrigger instantiates a new MicrosoftGraphAlertTrigger object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphAlertTrigger() *MicrosoftGraphAlertTrigger {
	this := MicrosoftGraphAlertTrigger{}
	return &this
}

// NewMicrosoftGraphAlertTriggerWithDefaults instantiates a new MicrosoftGraphAlertTrigger object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphAlertTriggerWithDefaults() *MicrosoftGraphAlertTrigger {
	this := MicrosoftGraphAlertTrigger{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAlertTrigger) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAlertTrigger) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *MicrosoftGraphAlertTrigger) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *MicrosoftGraphAlertTrigger) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *MicrosoftGraphAlertTrigger) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *MicrosoftGraphAlertTrigger) UnsetName() {
	o.Name.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAlertTrigger) GetType() string {
	if o == nil || o.Type.Get() == nil {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAlertTrigger) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *MicrosoftGraphAlertTrigger) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *MicrosoftGraphAlertTrigger) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *MicrosoftGraphAlertTrigger) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *MicrosoftGraphAlertTrigger) UnsetType() {
	o.Type.Unset()
}

// GetValue returns the Value field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAlertTrigger) GetValue() string {
	if o == nil || o.Value.Get() == nil {
		var ret string
		return ret
	}
	return *o.Value.Get()
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAlertTrigger) GetValueOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Value.Get(), o.Value.IsSet()
}

// HasValue returns a boolean if a field has been set.
func (o *MicrosoftGraphAlertTrigger) HasValue() bool {
	if o != nil && o.Value.IsSet() {
		return true
	}

	return false
}

// SetValue gets a reference to the given NullableString and assigns it to the Value field.
func (o *MicrosoftGraphAlertTrigger) SetValue(v string) {
	o.Value.Set(&v)
}
// SetValueNil sets the value for Value to be an explicit nil
func (o *MicrosoftGraphAlertTrigger) SetValueNil() {
	o.Value.Set(nil)
}

// UnsetValue ensures that no value is present for Value, not even an explicit nil
func (o *MicrosoftGraphAlertTrigger) UnsetValue() {
	o.Value.Unset()
}

func (o MicrosoftGraphAlertTrigger) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.Value.IsSet() {
		toSerialize["value"] = o.Value.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphAlertTrigger struct {
	value *MicrosoftGraphAlertTrigger
	isSet bool
}

func (v NullableMicrosoftGraphAlertTrigger) Get() *MicrosoftGraphAlertTrigger {
	return v.value
}

func (v *NullableMicrosoftGraphAlertTrigger) Set(val *MicrosoftGraphAlertTrigger) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphAlertTrigger) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphAlertTrigger) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphAlertTrigger(val *MicrosoftGraphAlertTrigger) *NullableMicrosoftGraphAlertTrigger {
	return &NullableMicrosoftGraphAlertTrigger{value: val, isSet: true}
}

func (v NullableMicrosoftGraphAlertTrigger) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphAlertTrigger) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


