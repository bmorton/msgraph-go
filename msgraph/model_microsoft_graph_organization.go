/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphOrganization struct for MicrosoftGraphOrganization
type MicrosoftGraphOrganization struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	DeletedDateTime NullableTime `json:"deletedDateTime,omitempty"`
	// The collection of service plans associated with the tenant. Not nullable.
	AssignedPlans *[]MicrosoftGraphAssignedPlan `json:"assignedPlans,omitempty"`
	// Telephone number for the organization. Although this is a string collection, only one number can be set for this property.
	BusinessPhones *[]string `json:"businessPhones,omitempty"`
	// City name of the address for the organization.
	City NullableString `json:"city,omitempty"`
	// Country/region name of the address for the organization.
	Country NullableString `json:"country,omitempty"`
	// Country or region abbreviation for the organization in ISO 3166-2 format.
	CountryLetterCode NullableString `json:"countryLetterCode,omitempty"`
	// Timestamp of when the organization was created. The value cannot be modified and is automatically populated when the organization is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
	CreatedDateTime NullableTime `json:"createdDateTime,omitempty"`
	// The display name for the tenant.
	DisplayName NullableString `json:"displayName,omitempty"`
	// Not nullable.
	MarketingNotificationEmails *[]string `json:"marketingNotificationEmails,omitempty"`
	// The time and date at which the tenant was last synced with the on-premises directory. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
	OnPremisesLastSyncDateTime NullableTime `json:"onPremisesLastSyncDateTime,omitempty"`
	// true if this object is synced from an on-premises directory; false if this object was originally synced from an on-premises directory but is no longer synced. Nullable. null if this object has never been synced from an on-premises directory (default).
	OnPremisesSyncEnabled NullableBool `json:"onPremisesSyncEnabled,omitempty"`
	// Postal code of the address for the organization.
	PostalCode NullableString `json:"postalCode,omitempty"`
	// The preferred language for the organization. Should follow ISO 639-1 Code; for example, en.
	PreferredLanguage NullableString `json:"preferredLanguage,omitempty"`
	// The privacy profile of an organization.
	PrivacyProfile AnyOfmicrosoftGraphPrivacyProfile `json:"privacyProfile,omitempty"`
	// Not nullable.
	ProvisionedPlans *[]MicrosoftGraphProvisionedPlan `json:"provisionedPlans,omitempty"`
	SecurityComplianceNotificationMails *[]string `json:"securityComplianceNotificationMails,omitempty"`
	SecurityComplianceNotificationPhones *[]string `json:"securityComplianceNotificationPhones,omitempty"`
	// State name of the address for the organization.
	State NullableString `json:"state,omitempty"`
	// Street name of the address for organization.
	Street NullableString `json:"street,omitempty"`
	// Not nullable.
	TechnicalNotificationMails *[]string `json:"technicalNotificationMails,omitempty"`
	TenantType NullableString `json:"tenantType,omitempty"`
	// The collection of domains associated with this tenant. Not nullable.
	VerifiedDomains *[]MicrosoftGraphVerifiedDomain `json:"verifiedDomains,omitempty"`
	// Mobile device management authority. Possible values are: unknown, intune, sccm, office365.
	MobileDeviceManagementAuthority AnyOfmicrosoftGraphMdmAuthority `json:"mobileDeviceManagementAuthority,omitempty"`
	Branding AnyOfmicrosoftGraphOrganizationalBranding `json:"branding,omitempty"`
	// Navigation property to manage certificate-based authentication configuration. Only a single instance of certificateBasedAuthConfiguration can be created in the collection.
	CertificateBasedAuthConfiguration *[]MicrosoftGraphCertificateBasedAuthConfiguration `json:"certificateBasedAuthConfiguration,omitempty"`
	// The collection of open extensions defined for the organization. Read-only. Nullable.
	Extensions *[]MicrosoftGraphExtension `json:"extensions,omitempty"`
}

// NewMicrosoftGraphOrganization instantiates a new MicrosoftGraphOrganization object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphOrganization() *MicrosoftGraphOrganization {
	this := MicrosoftGraphOrganization{}
	return &this
}

// NewMicrosoftGraphOrganizationWithDefaults instantiates a new MicrosoftGraphOrganization object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphOrganizationWithDefaults() *MicrosoftGraphOrganization {
	this := MicrosoftGraphOrganization{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphOrganization) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphOrganization) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphOrganization) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphOrganization) SetId(v string) {
	o.Id = &v
}

// GetDeletedDateTime returns the DeletedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOrganization) GetDeletedDateTime() time.Time {
	if o == nil || o.DeletedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.DeletedDateTime.Get()
}

// GetDeletedDateTimeOk returns a tuple with the DeletedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOrganization) GetDeletedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DeletedDateTime.Get(), o.DeletedDateTime.IsSet()
}

// HasDeletedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphOrganization) HasDeletedDateTime() bool {
	if o != nil && o.DeletedDateTime.IsSet() {
		return true
	}

	return false
}

// SetDeletedDateTime gets a reference to the given NullableTime and assigns it to the DeletedDateTime field.
func (o *MicrosoftGraphOrganization) SetDeletedDateTime(v time.Time) {
	o.DeletedDateTime.Set(&v)
}
// SetDeletedDateTimeNil sets the value for DeletedDateTime to be an explicit nil
func (o *MicrosoftGraphOrganization) SetDeletedDateTimeNil() {
	o.DeletedDateTime.Set(nil)
}

// UnsetDeletedDateTime ensures that no value is present for DeletedDateTime, not even an explicit nil
func (o *MicrosoftGraphOrganization) UnsetDeletedDateTime() {
	o.DeletedDateTime.Unset()
}

// GetAssignedPlans returns the AssignedPlans field value if set, zero value otherwise.
func (o *MicrosoftGraphOrganization) GetAssignedPlans() []MicrosoftGraphAssignedPlan {
	if o == nil || o.AssignedPlans == nil {
		var ret []MicrosoftGraphAssignedPlan
		return ret
	}
	return *o.AssignedPlans
}

// GetAssignedPlansOk returns a tuple with the AssignedPlans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphOrganization) GetAssignedPlansOk() (*[]MicrosoftGraphAssignedPlan, bool) {
	if o == nil || o.AssignedPlans == nil {
		return nil, false
	}
	return o.AssignedPlans, true
}

// HasAssignedPlans returns a boolean if a field has been set.
func (o *MicrosoftGraphOrganization) HasAssignedPlans() bool {
	if o != nil && o.AssignedPlans != nil {
		return true
	}

	return false
}

// SetAssignedPlans gets a reference to the given []MicrosoftGraphAssignedPlan and assigns it to the AssignedPlans field.
func (o *MicrosoftGraphOrganization) SetAssignedPlans(v []MicrosoftGraphAssignedPlan) {
	o.AssignedPlans = &v
}

// GetBusinessPhones returns the BusinessPhones field value if set, zero value otherwise.
func (o *MicrosoftGraphOrganization) GetBusinessPhones() []string {
	if o == nil || o.BusinessPhones == nil {
		var ret []string
		return ret
	}
	return *o.BusinessPhones
}

// GetBusinessPhonesOk returns a tuple with the BusinessPhones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphOrganization) GetBusinessPhonesOk() (*[]string, bool) {
	if o == nil || o.BusinessPhones == nil {
		return nil, false
	}
	return o.BusinessPhones, true
}

// HasBusinessPhones returns a boolean if a field has been set.
func (o *MicrosoftGraphOrganization) HasBusinessPhones() bool {
	if o != nil && o.BusinessPhones != nil {
		return true
	}

	return false
}

// SetBusinessPhones gets a reference to the given []string and assigns it to the BusinessPhones field.
func (o *MicrosoftGraphOrganization) SetBusinessPhones(v []string) {
	o.BusinessPhones = &v
}

// GetCity returns the City field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOrganization) GetCity() string {
	if o == nil || o.City.Get() == nil {
		var ret string
		return ret
	}
	return *o.City.Get()
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOrganization) GetCityOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.City.Get(), o.City.IsSet()
}

// HasCity returns a boolean if a field has been set.
func (o *MicrosoftGraphOrganization) HasCity() bool {
	if o != nil && o.City.IsSet() {
		return true
	}

	return false
}

// SetCity gets a reference to the given NullableString and assigns it to the City field.
func (o *MicrosoftGraphOrganization) SetCity(v string) {
	o.City.Set(&v)
}
// SetCityNil sets the value for City to be an explicit nil
func (o *MicrosoftGraphOrganization) SetCityNil() {
	o.City.Set(nil)
}

// UnsetCity ensures that no value is present for City, not even an explicit nil
func (o *MicrosoftGraphOrganization) UnsetCity() {
	o.City.Unset()
}

// GetCountry returns the Country field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOrganization) GetCountry() string {
	if o == nil || o.Country.Get() == nil {
		var ret string
		return ret
	}
	return *o.Country.Get()
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOrganization) GetCountryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Country.Get(), o.Country.IsSet()
}

// HasCountry returns a boolean if a field has been set.
func (o *MicrosoftGraphOrganization) HasCountry() bool {
	if o != nil && o.Country.IsSet() {
		return true
	}

	return false
}

// SetCountry gets a reference to the given NullableString and assigns it to the Country field.
func (o *MicrosoftGraphOrganization) SetCountry(v string) {
	o.Country.Set(&v)
}
// SetCountryNil sets the value for Country to be an explicit nil
func (o *MicrosoftGraphOrganization) SetCountryNil() {
	o.Country.Set(nil)
}

// UnsetCountry ensures that no value is present for Country, not even an explicit nil
func (o *MicrosoftGraphOrganization) UnsetCountry() {
	o.Country.Unset()
}

// GetCountryLetterCode returns the CountryLetterCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOrganization) GetCountryLetterCode() string {
	if o == nil || o.CountryLetterCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.CountryLetterCode.Get()
}

// GetCountryLetterCodeOk returns a tuple with the CountryLetterCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOrganization) GetCountryLetterCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CountryLetterCode.Get(), o.CountryLetterCode.IsSet()
}

// HasCountryLetterCode returns a boolean if a field has been set.
func (o *MicrosoftGraphOrganization) HasCountryLetterCode() bool {
	if o != nil && o.CountryLetterCode.IsSet() {
		return true
	}

	return false
}

// SetCountryLetterCode gets a reference to the given NullableString and assigns it to the CountryLetterCode field.
func (o *MicrosoftGraphOrganization) SetCountryLetterCode(v string) {
	o.CountryLetterCode.Set(&v)
}
// SetCountryLetterCodeNil sets the value for CountryLetterCode to be an explicit nil
func (o *MicrosoftGraphOrganization) SetCountryLetterCodeNil() {
	o.CountryLetterCode.Set(nil)
}

// UnsetCountryLetterCode ensures that no value is present for CountryLetterCode, not even an explicit nil
func (o *MicrosoftGraphOrganization) UnsetCountryLetterCode() {
	o.CountryLetterCode.Unset()
}

// GetCreatedDateTime returns the CreatedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOrganization) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime.Get()
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOrganization) GetCreatedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatedDateTime.Get(), o.CreatedDateTime.IsSet()
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphOrganization) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime.IsSet() {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given NullableTime and assigns it to the CreatedDateTime field.
func (o *MicrosoftGraphOrganization) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime.Set(&v)
}
// SetCreatedDateTimeNil sets the value for CreatedDateTime to be an explicit nil
func (o *MicrosoftGraphOrganization) SetCreatedDateTimeNil() {
	o.CreatedDateTime.Set(nil)
}

// UnsetCreatedDateTime ensures that no value is present for CreatedDateTime, not even an explicit nil
func (o *MicrosoftGraphOrganization) UnsetCreatedDateTime() {
	o.CreatedDateTime.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOrganization) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOrganization) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphOrganization) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *MicrosoftGraphOrganization) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *MicrosoftGraphOrganization) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *MicrosoftGraphOrganization) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetMarketingNotificationEmails returns the MarketingNotificationEmails field value if set, zero value otherwise.
func (o *MicrosoftGraphOrganization) GetMarketingNotificationEmails() []string {
	if o == nil || o.MarketingNotificationEmails == nil {
		var ret []string
		return ret
	}
	return *o.MarketingNotificationEmails
}

// GetMarketingNotificationEmailsOk returns a tuple with the MarketingNotificationEmails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphOrganization) GetMarketingNotificationEmailsOk() (*[]string, bool) {
	if o == nil || o.MarketingNotificationEmails == nil {
		return nil, false
	}
	return o.MarketingNotificationEmails, true
}

// HasMarketingNotificationEmails returns a boolean if a field has been set.
func (o *MicrosoftGraphOrganization) HasMarketingNotificationEmails() bool {
	if o != nil && o.MarketingNotificationEmails != nil {
		return true
	}

	return false
}

// SetMarketingNotificationEmails gets a reference to the given []string and assigns it to the MarketingNotificationEmails field.
func (o *MicrosoftGraphOrganization) SetMarketingNotificationEmails(v []string) {
	o.MarketingNotificationEmails = &v
}

// GetOnPremisesLastSyncDateTime returns the OnPremisesLastSyncDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOrganization) GetOnPremisesLastSyncDateTime() time.Time {
	if o == nil || o.OnPremisesLastSyncDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.OnPremisesLastSyncDateTime.Get()
}

// GetOnPremisesLastSyncDateTimeOk returns a tuple with the OnPremisesLastSyncDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOrganization) GetOnPremisesLastSyncDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OnPremisesLastSyncDateTime.Get(), o.OnPremisesLastSyncDateTime.IsSet()
}

// HasOnPremisesLastSyncDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphOrganization) HasOnPremisesLastSyncDateTime() bool {
	if o != nil && o.OnPremisesLastSyncDateTime.IsSet() {
		return true
	}

	return false
}

// SetOnPremisesLastSyncDateTime gets a reference to the given NullableTime and assigns it to the OnPremisesLastSyncDateTime field.
func (o *MicrosoftGraphOrganization) SetOnPremisesLastSyncDateTime(v time.Time) {
	o.OnPremisesLastSyncDateTime.Set(&v)
}
// SetOnPremisesLastSyncDateTimeNil sets the value for OnPremisesLastSyncDateTime to be an explicit nil
func (o *MicrosoftGraphOrganization) SetOnPremisesLastSyncDateTimeNil() {
	o.OnPremisesLastSyncDateTime.Set(nil)
}

// UnsetOnPremisesLastSyncDateTime ensures that no value is present for OnPremisesLastSyncDateTime, not even an explicit nil
func (o *MicrosoftGraphOrganization) UnsetOnPremisesLastSyncDateTime() {
	o.OnPremisesLastSyncDateTime.Unset()
}

// GetOnPremisesSyncEnabled returns the OnPremisesSyncEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOrganization) GetOnPremisesSyncEnabled() bool {
	if o == nil || o.OnPremisesSyncEnabled.Get() == nil {
		var ret bool
		return ret
	}
	return *o.OnPremisesSyncEnabled.Get()
}

// GetOnPremisesSyncEnabledOk returns a tuple with the OnPremisesSyncEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOrganization) GetOnPremisesSyncEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OnPremisesSyncEnabled.Get(), o.OnPremisesSyncEnabled.IsSet()
}

// HasOnPremisesSyncEnabled returns a boolean if a field has been set.
func (o *MicrosoftGraphOrganization) HasOnPremisesSyncEnabled() bool {
	if o != nil && o.OnPremisesSyncEnabled.IsSet() {
		return true
	}

	return false
}

// SetOnPremisesSyncEnabled gets a reference to the given NullableBool and assigns it to the OnPremisesSyncEnabled field.
func (o *MicrosoftGraphOrganization) SetOnPremisesSyncEnabled(v bool) {
	o.OnPremisesSyncEnabled.Set(&v)
}
// SetOnPremisesSyncEnabledNil sets the value for OnPremisesSyncEnabled to be an explicit nil
func (o *MicrosoftGraphOrganization) SetOnPremisesSyncEnabledNil() {
	o.OnPremisesSyncEnabled.Set(nil)
}

// UnsetOnPremisesSyncEnabled ensures that no value is present for OnPremisesSyncEnabled, not even an explicit nil
func (o *MicrosoftGraphOrganization) UnsetOnPremisesSyncEnabled() {
	o.OnPremisesSyncEnabled.Unset()
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOrganization) GetPostalCode() string {
	if o == nil || o.PostalCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.PostalCode.Get()
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOrganization) GetPostalCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PostalCode.Get(), o.PostalCode.IsSet()
}

// HasPostalCode returns a boolean if a field has been set.
func (o *MicrosoftGraphOrganization) HasPostalCode() bool {
	if o != nil && o.PostalCode.IsSet() {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given NullableString and assigns it to the PostalCode field.
func (o *MicrosoftGraphOrganization) SetPostalCode(v string) {
	o.PostalCode.Set(&v)
}
// SetPostalCodeNil sets the value for PostalCode to be an explicit nil
func (o *MicrosoftGraphOrganization) SetPostalCodeNil() {
	o.PostalCode.Set(nil)
}

// UnsetPostalCode ensures that no value is present for PostalCode, not even an explicit nil
func (o *MicrosoftGraphOrganization) UnsetPostalCode() {
	o.PostalCode.Unset()
}

// GetPreferredLanguage returns the PreferredLanguage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOrganization) GetPreferredLanguage() string {
	if o == nil || o.PreferredLanguage.Get() == nil {
		var ret string
		return ret
	}
	return *o.PreferredLanguage.Get()
}

// GetPreferredLanguageOk returns a tuple with the PreferredLanguage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOrganization) GetPreferredLanguageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PreferredLanguage.Get(), o.PreferredLanguage.IsSet()
}

// HasPreferredLanguage returns a boolean if a field has been set.
func (o *MicrosoftGraphOrganization) HasPreferredLanguage() bool {
	if o != nil && o.PreferredLanguage.IsSet() {
		return true
	}

	return false
}

// SetPreferredLanguage gets a reference to the given NullableString and assigns it to the PreferredLanguage field.
func (o *MicrosoftGraphOrganization) SetPreferredLanguage(v string) {
	o.PreferredLanguage.Set(&v)
}
// SetPreferredLanguageNil sets the value for PreferredLanguage to be an explicit nil
func (o *MicrosoftGraphOrganization) SetPreferredLanguageNil() {
	o.PreferredLanguage.Set(nil)
}

// UnsetPreferredLanguage ensures that no value is present for PreferredLanguage, not even an explicit nil
func (o *MicrosoftGraphOrganization) UnsetPreferredLanguage() {
	o.PreferredLanguage.Unset()
}

// GetPrivacyProfile returns the PrivacyProfile field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOrganization) GetPrivacyProfile() AnyOfmicrosoftGraphPrivacyProfile {
	if o == nil  {
		var ret AnyOfmicrosoftGraphPrivacyProfile
		return ret
	}
	return o.PrivacyProfile
}

// GetPrivacyProfileOk returns a tuple with the PrivacyProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOrganization) GetPrivacyProfileOk() (*AnyOfmicrosoftGraphPrivacyProfile, bool) {
	if o == nil || o.PrivacyProfile == nil {
		return nil, false
	}
	return &o.PrivacyProfile, true
}

// HasPrivacyProfile returns a boolean if a field has been set.
func (o *MicrosoftGraphOrganization) HasPrivacyProfile() bool {
	if o != nil && o.PrivacyProfile != nil {
		return true
	}

	return false
}

// SetPrivacyProfile gets a reference to the given AnyOfmicrosoftGraphPrivacyProfile and assigns it to the PrivacyProfile field.
func (o *MicrosoftGraphOrganization) SetPrivacyProfile(v AnyOfmicrosoftGraphPrivacyProfile) {
	o.PrivacyProfile = v
}

// GetProvisionedPlans returns the ProvisionedPlans field value if set, zero value otherwise.
func (o *MicrosoftGraphOrganization) GetProvisionedPlans() []MicrosoftGraphProvisionedPlan {
	if o == nil || o.ProvisionedPlans == nil {
		var ret []MicrosoftGraphProvisionedPlan
		return ret
	}
	return *o.ProvisionedPlans
}

// GetProvisionedPlansOk returns a tuple with the ProvisionedPlans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphOrganization) GetProvisionedPlansOk() (*[]MicrosoftGraphProvisionedPlan, bool) {
	if o == nil || o.ProvisionedPlans == nil {
		return nil, false
	}
	return o.ProvisionedPlans, true
}

// HasProvisionedPlans returns a boolean if a field has been set.
func (o *MicrosoftGraphOrganization) HasProvisionedPlans() bool {
	if o != nil && o.ProvisionedPlans != nil {
		return true
	}

	return false
}

// SetProvisionedPlans gets a reference to the given []MicrosoftGraphProvisionedPlan and assigns it to the ProvisionedPlans field.
func (o *MicrosoftGraphOrganization) SetProvisionedPlans(v []MicrosoftGraphProvisionedPlan) {
	o.ProvisionedPlans = &v
}

// GetSecurityComplianceNotificationMails returns the SecurityComplianceNotificationMails field value if set, zero value otherwise.
func (o *MicrosoftGraphOrganization) GetSecurityComplianceNotificationMails() []string {
	if o == nil || o.SecurityComplianceNotificationMails == nil {
		var ret []string
		return ret
	}
	return *o.SecurityComplianceNotificationMails
}

// GetSecurityComplianceNotificationMailsOk returns a tuple with the SecurityComplianceNotificationMails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphOrganization) GetSecurityComplianceNotificationMailsOk() (*[]string, bool) {
	if o == nil || o.SecurityComplianceNotificationMails == nil {
		return nil, false
	}
	return o.SecurityComplianceNotificationMails, true
}

// HasSecurityComplianceNotificationMails returns a boolean if a field has been set.
func (o *MicrosoftGraphOrganization) HasSecurityComplianceNotificationMails() bool {
	if o != nil && o.SecurityComplianceNotificationMails != nil {
		return true
	}

	return false
}

// SetSecurityComplianceNotificationMails gets a reference to the given []string and assigns it to the SecurityComplianceNotificationMails field.
func (o *MicrosoftGraphOrganization) SetSecurityComplianceNotificationMails(v []string) {
	o.SecurityComplianceNotificationMails = &v
}

// GetSecurityComplianceNotificationPhones returns the SecurityComplianceNotificationPhones field value if set, zero value otherwise.
func (o *MicrosoftGraphOrganization) GetSecurityComplianceNotificationPhones() []string {
	if o == nil || o.SecurityComplianceNotificationPhones == nil {
		var ret []string
		return ret
	}
	return *o.SecurityComplianceNotificationPhones
}

// GetSecurityComplianceNotificationPhonesOk returns a tuple with the SecurityComplianceNotificationPhones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphOrganization) GetSecurityComplianceNotificationPhonesOk() (*[]string, bool) {
	if o == nil || o.SecurityComplianceNotificationPhones == nil {
		return nil, false
	}
	return o.SecurityComplianceNotificationPhones, true
}

// HasSecurityComplianceNotificationPhones returns a boolean if a field has been set.
func (o *MicrosoftGraphOrganization) HasSecurityComplianceNotificationPhones() bool {
	if o != nil && o.SecurityComplianceNotificationPhones != nil {
		return true
	}

	return false
}

// SetSecurityComplianceNotificationPhones gets a reference to the given []string and assigns it to the SecurityComplianceNotificationPhones field.
func (o *MicrosoftGraphOrganization) SetSecurityComplianceNotificationPhones(v []string) {
	o.SecurityComplianceNotificationPhones = &v
}

// GetState returns the State field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOrganization) GetState() string {
	if o == nil || o.State.Get() == nil {
		var ret string
		return ret
	}
	return *o.State.Get()
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOrganization) GetStateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.State.Get(), o.State.IsSet()
}

// HasState returns a boolean if a field has been set.
func (o *MicrosoftGraphOrganization) HasState() bool {
	if o != nil && o.State.IsSet() {
		return true
	}

	return false
}

// SetState gets a reference to the given NullableString and assigns it to the State field.
func (o *MicrosoftGraphOrganization) SetState(v string) {
	o.State.Set(&v)
}
// SetStateNil sets the value for State to be an explicit nil
func (o *MicrosoftGraphOrganization) SetStateNil() {
	o.State.Set(nil)
}

// UnsetState ensures that no value is present for State, not even an explicit nil
func (o *MicrosoftGraphOrganization) UnsetState() {
	o.State.Unset()
}

// GetStreet returns the Street field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOrganization) GetStreet() string {
	if o == nil || o.Street.Get() == nil {
		var ret string
		return ret
	}
	return *o.Street.Get()
}

// GetStreetOk returns a tuple with the Street field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOrganization) GetStreetOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Street.Get(), o.Street.IsSet()
}

// HasStreet returns a boolean if a field has been set.
func (o *MicrosoftGraphOrganization) HasStreet() bool {
	if o != nil && o.Street.IsSet() {
		return true
	}

	return false
}

// SetStreet gets a reference to the given NullableString and assigns it to the Street field.
func (o *MicrosoftGraphOrganization) SetStreet(v string) {
	o.Street.Set(&v)
}
// SetStreetNil sets the value for Street to be an explicit nil
func (o *MicrosoftGraphOrganization) SetStreetNil() {
	o.Street.Set(nil)
}

// UnsetStreet ensures that no value is present for Street, not even an explicit nil
func (o *MicrosoftGraphOrganization) UnsetStreet() {
	o.Street.Unset()
}

// GetTechnicalNotificationMails returns the TechnicalNotificationMails field value if set, zero value otherwise.
func (o *MicrosoftGraphOrganization) GetTechnicalNotificationMails() []string {
	if o == nil || o.TechnicalNotificationMails == nil {
		var ret []string
		return ret
	}
	return *o.TechnicalNotificationMails
}

// GetTechnicalNotificationMailsOk returns a tuple with the TechnicalNotificationMails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphOrganization) GetTechnicalNotificationMailsOk() (*[]string, bool) {
	if o == nil || o.TechnicalNotificationMails == nil {
		return nil, false
	}
	return o.TechnicalNotificationMails, true
}

// HasTechnicalNotificationMails returns a boolean if a field has been set.
func (o *MicrosoftGraphOrganization) HasTechnicalNotificationMails() bool {
	if o != nil && o.TechnicalNotificationMails != nil {
		return true
	}

	return false
}

// SetTechnicalNotificationMails gets a reference to the given []string and assigns it to the TechnicalNotificationMails field.
func (o *MicrosoftGraphOrganization) SetTechnicalNotificationMails(v []string) {
	o.TechnicalNotificationMails = &v
}

// GetTenantType returns the TenantType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOrganization) GetTenantType() string {
	if o == nil || o.TenantType.Get() == nil {
		var ret string
		return ret
	}
	return *o.TenantType.Get()
}

// GetTenantTypeOk returns a tuple with the TenantType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOrganization) GetTenantTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TenantType.Get(), o.TenantType.IsSet()
}

// HasTenantType returns a boolean if a field has been set.
func (o *MicrosoftGraphOrganization) HasTenantType() bool {
	if o != nil && o.TenantType.IsSet() {
		return true
	}

	return false
}

// SetTenantType gets a reference to the given NullableString and assigns it to the TenantType field.
func (o *MicrosoftGraphOrganization) SetTenantType(v string) {
	o.TenantType.Set(&v)
}
// SetTenantTypeNil sets the value for TenantType to be an explicit nil
func (o *MicrosoftGraphOrganization) SetTenantTypeNil() {
	o.TenantType.Set(nil)
}

// UnsetTenantType ensures that no value is present for TenantType, not even an explicit nil
func (o *MicrosoftGraphOrganization) UnsetTenantType() {
	o.TenantType.Unset()
}

// GetVerifiedDomains returns the VerifiedDomains field value if set, zero value otherwise.
func (o *MicrosoftGraphOrganization) GetVerifiedDomains() []MicrosoftGraphVerifiedDomain {
	if o == nil || o.VerifiedDomains == nil {
		var ret []MicrosoftGraphVerifiedDomain
		return ret
	}
	return *o.VerifiedDomains
}

// GetVerifiedDomainsOk returns a tuple with the VerifiedDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphOrganization) GetVerifiedDomainsOk() (*[]MicrosoftGraphVerifiedDomain, bool) {
	if o == nil || o.VerifiedDomains == nil {
		return nil, false
	}
	return o.VerifiedDomains, true
}

// HasVerifiedDomains returns a boolean if a field has been set.
func (o *MicrosoftGraphOrganization) HasVerifiedDomains() bool {
	if o != nil && o.VerifiedDomains != nil {
		return true
	}

	return false
}

// SetVerifiedDomains gets a reference to the given []MicrosoftGraphVerifiedDomain and assigns it to the VerifiedDomains field.
func (o *MicrosoftGraphOrganization) SetVerifiedDomains(v []MicrosoftGraphVerifiedDomain) {
	o.VerifiedDomains = &v
}

// GetMobileDeviceManagementAuthority returns the MobileDeviceManagementAuthority field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOrganization) GetMobileDeviceManagementAuthority() AnyOfmicrosoftGraphMdmAuthority {
	if o == nil  {
		var ret AnyOfmicrosoftGraphMdmAuthority
		return ret
	}
	return o.MobileDeviceManagementAuthority
}

// GetMobileDeviceManagementAuthorityOk returns a tuple with the MobileDeviceManagementAuthority field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOrganization) GetMobileDeviceManagementAuthorityOk() (*AnyOfmicrosoftGraphMdmAuthority, bool) {
	if o == nil || o.MobileDeviceManagementAuthority == nil {
		return nil, false
	}
	return &o.MobileDeviceManagementAuthority, true
}

// HasMobileDeviceManagementAuthority returns a boolean if a field has been set.
func (o *MicrosoftGraphOrganization) HasMobileDeviceManagementAuthority() bool {
	if o != nil && o.MobileDeviceManagementAuthority != nil {
		return true
	}

	return false
}

// SetMobileDeviceManagementAuthority gets a reference to the given AnyOfmicrosoftGraphMdmAuthority and assigns it to the MobileDeviceManagementAuthority field.
func (o *MicrosoftGraphOrganization) SetMobileDeviceManagementAuthority(v AnyOfmicrosoftGraphMdmAuthority) {
	o.MobileDeviceManagementAuthority = v
}

// GetBranding returns the Branding field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOrganization) GetBranding() AnyOfmicrosoftGraphOrganizationalBranding {
	if o == nil  {
		var ret AnyOfmicrosoftGraphOrganizationalBranding
		return ret
	}
	return o.Branding
}

// GetBrandingOk returns a tuple with the Branding field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOrganization) GetBrandingOk() (*AnyOfmicrosoftGraphOrganizationalBranding, bool) {
	if o == nil || o.Branding == nil {
		return nil, false
	}
	return &o.Branding, true
}

// HasBranding returns a boolean if a field has been set.
func (o *MicrosoftGraphOrganization) HasBranding() bool {
	if o != nil && o.Branding != nil {
		return true
	}

	return false
}

// SetBranding gets a reference to the given AnyOfmicrosoftGraphOrganizationalBranding and assigns it to the Branding field.
func (o *MicrosoftGraphOrganization) SetBranding(v AnyOfmicrosoftGraphOrganizationalBranding) {
	o.Branding = v
}

// GetCertificateBasedAuthConfiguration returns the CertificateBasedAuthConfiguration field value if set, zero value otherwise.
func (o *MicrosoftGraphOrganization) GetCertificateBasedAuthConfiguration() []MicrosoftGraphCertificateBasedAuthConfiguration {
	if o == nil || o.CertificateBasedAuthConfiguration == nil {
		var ret []MicrosoftGraphCertificateBasedAuthConfiguration
		return ret
	}
	return *o.CertificateBasedAuthConfiguration
}

// GetCertificateBasedAuthConfigurationOk returns a tuple with the CertificateBasedAuthConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphOrganization) GetCertificateBasedAuthConfigurationOk() (*[]MicrosoftGraphCertificateBasedAuthConfiguration, bool) {
	if o == nil || o.CertificateBasedAuthConfiguration == nil {
		return nil, false
	}
	return o.CertificateBasedAuthConfiguration, true
}

// HasCertificateBasedAuthConfiguration returns a boolean if a field has been set.
func (o *MicrosoftGraphOrganization) HasCertificateBasedAuthConfiguration() bool {
	if o != nil && o.CertificateBasedAuthConfiguration != nil {
		return true
	}

	return false
}

// SetCertificateBasedAuthConfiguration gets a reference to the given []MicrosoftGraphCertificateBasedAuthConfiguration and assigns it to the CertificateBasedAuthConfiguration field.
func (o *MicrosoftGraphOrganization) SetCertificateBasedAuthConfiguration(v []MicrosoftGraphCertificateBasedAuthConfiguration) {
	o.CertificateBasedAuthConfiguration = &v
}

// GetExtensions returns the Extensions field value if set, zero value otherwise.
func (o *MicrosoftGraphOrganization) GetExtensions() []MicrosoftGraphExtension {
	if o == nil || o.Extensions == nil {
		var ret []MicrosoftGraphExtension
		return ret
	}
	return *o.Extensions
}

// GetExtensionsOk returns a tuple with the Extensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphOrganization) GetExtensionsOk() (*[]MicrosoftGraphExtension, bool) {
	if o == nil || o.Extensions == nil {
		return nil, false
	}
	return o.Extensions, true
}

// HasExtensions returns a boolean if a field has been set.
func (o *MicrosoftGraphOrganization) HasExtensions() bool {
	if o != nil && o.Extensions != nil {
		return true
	}

	return false
}

// SetExtensions gets a reference to the given []MicrosoftGraphExtension and assigns it to the Extensions field.
func (o *MicrosoftGraphOrganization) SetExtensions(v []MicrosoftGraphExtension) {
	o.Extensions = &v
}

func (o MicrosoftGraphOrganization) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.DeletedDateTime.IsSet() {
		toSerialize["deletedDateTime"] = o.DeletedDateTime.Get()
	}
	if o.AssignedPlans != nil {
		toSerialize["assignedPlans"] = o.AssignedPlans
	}
	if o.BusinessPhones != nil {
		toSerialize["businessPhones"] = o.BusinessPhones
	}
	if o.City.IsSet() {
		toSerialize["city"] = o.City.Get()
	}
	if o.Country.IsSet() {
		toSerialize["country"] = o.Country.Get()
	}
	if o.CountryLetterCode.IsSet() {
		toSerialize["countryLetterCode"] = o.CountryLetterCode.Get()
	}
	if o.CreatedDateTime.IsSet() {
		toSerialize["createdDateTime"] = o.CreatedDateTime.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.MarketingNotificationEmails != nil {
		toSerialize["marketingNotificationEmails"] = o.MarketingNotificationEmails
	}
	if o.OnPremisesLastSyncDateTime.IsSet() {
		toSerialize["onPremisesLastSyncDateTime"] = o.OnPremisesLastSyncDateTime.Get()
	}
	if o.OnPremisesSyncEnabled.IsSet() {
		toSerialize["onPremisesSyncEnabled"] = o.OnPremisesSyncEnabled.Get()
	}
	if o.PostalCode.IsSet() {
		toSerialize["postalCode"] = o.PostalCode.Get()
	}
	if o.PreferredLanguage.IsSet() {
		toSerialize["preferredLanguage"] = o.PreferredLanguage.Get()
	}
	if o.PrivacyProfile != nil {
		toSerialize["privacyProfile"] = o.PrivacyProfile
	}
	if o.ProvisionedPlans != nil {
		toSerialize["provisionedPlans"] = o.ProvisionedPlans
	}
	if o.SecurityComplianceNotificationMails != nil {
		toSerialize["securityComplianceNotificationMails"] = o.SecurityComplianceNotificationMails
	}
	if o.SecurityComplianceNotificationPhones != nil {
		toSerialize["securityComplianceNotificationPhones"] = o.SecurityComplianceNotificationPhones
	}
	if o.State.IsSet() {
		toSerialize["state"] = o.State.Get()
	}
	if o.Street.IsSet() {
		toSerialize["street"] = o.Street.Get()
	}
	if o.TechnicalNotificationMails != nil {
		toSerialize["technicalNotificationMails"] = o.TechnicalNotificationMails
	}
	if o.TenantType.IsSet() {
		toSerialize["tenantType"] = o.TenantType.Get()
	}
	if o.VerifiedDomains != nil {
		toSerialize["verifiedDomains"] = o.VerifiedDomains
	}
	if o.MobileDeviceManagementAuthority != nil {
		toSerialize["mobileDeviceManagementAuthority"] = o.MobileDeviceManagementAuthority
	}
	if o.Branding != nil {
		toSerialize["branding"] = o.Branding
	}
	if o.CertificateBasedAuthConfiguration != nil {
		toSerialize["certificateBasedAuthConfiguration"] = o.CertificateBasedAuthConfiguration
	}
	if o.Extensions != nil {
		toSerialize["extensions"] = o.Extensions
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphOrganization struct {
	value *MicrosoftGraphOrganization
	isSet bool
}

func (v NullableMicrosoftGraphOrganization) Get() *MicrosoftGraphOrganization {
	return v.value
}

func (v *NullableMicrosoftGraphOrganization) Set(val *MicrosoftGraphOrganization) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphOrganization) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphOrganization) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphOrganization(val *MicrosoftGraphOrganization) *NullableMicrosoftGraphOrganization {
	return &NullableMicrosoftGraphOrganization{value: val, isSet: true}
}

func (v NullableMicrosoftGraphOrganization) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphOrganization) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


