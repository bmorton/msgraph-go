/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphCallRecordsSegment struct for MicrosoftGraphCallRecordsSegment
type MicrosoftGraphCallRecordsSegment struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// Endpoint that answered this segment.
	Callee AnyOfmicrosoftGraphCallRecordsEndpoint `json:"callee,omitempty"`
	// Endpoint that initiated this segment.
	Caller AnyOfmicrosoftGraphCallRecordsEndpoint `json:"caller,omitempty"`
	// UTC time when the segment ended. The DateTimeOffset type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
	EndDateTime *time.Time `json:"endDateTime,omitempty"`
	// Failure information associated with the segment if it failed.
	FailureInfo AnyOfmicrosoftGraphCallRecordsFailureInfo `json:"failureInfo,omitempty"`
	// Media associated with this segment.
	Media *[]*AnyOfmicrosoftGraphCallRecordsMedia `json:"media,omitempty"`
	// UTC time when the segment started. The DateTimeOffset type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
	StartDateTime *time.Time `json:"startDateTime,omitempty"`
}

// NewMicrosoftGraphCallRecordsSegment instantiates a new MicrosoftGraphCallRecordsSegment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphCallRecordsSegment() *MicrosoftGraphCallRecordsSegment {
	this := MicrosoftGraphCallRecordsSegment{}
	return &this
}

// NewMicrosoftGraphCallRecordsSegmentWithDefaults instantiates a new MicrosoftGraphCallRecordsSegment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphCallRecordsSegmentWithDefaults() *MicrosoftGraphCallRecordsSegment {
	this := MicrosoftGraphCallRecordsSegment{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphCallRecordsSegment) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphCallRecordsSegment) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsSegment) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphCallRecordsSegment) SetId(v string) {
	o.Id = &v
}

// GetCallee returns the Callee field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsSegment) GetCallee() AnyOfmicrosoftGraphCallRecordsEndpoint {
	if o == nil  {
		var ret AnyOfmicrosoftGraphCallRecordsEndpoint
		return ret
	}
	return o.Callee
}

// GetCalleeOk returns a tuple with the Callee field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsSegment) GetCalleeOk() (*AnyOfmicrosoftGraphCallRecordsEndpoint, bool) {
	if o == nil || o.Callee == nil {
		return nil, false
	}
	return &o.Callee, true
}

// HasCallee returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsSegment) HasCallee() bool {
	if o != nil && o.Callee != nil {
		return true
	}

	return false
}

// SetCallee gets a reference to the given AnyOfmicrosoftGraphCallRecordsEndpoint and assigns it to the Callee field.
func (o *MicrosoftGraphCallRecordsSegment) SetCallee(v AnyOfmicrosoftGraphCallRecordsEndpoint) {
	o.Callee = v
}

// GetCaller returns the Caller field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsSegment) GetCaller() AnyOfmicrosoftGraphCallRecordsEndpoint {
	if o == nil  {
		var ret AnyOfmicrosoftGraphCallRecordsEndpoint
		return ret
	}
	return o.Caller
}

// GetCallerOk returns a tuple with the Caller field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsSegment) GetCallerOk() (*AnyOfmicrosoftGraphCallRecordsEndpoint, bool) {
	if o == nil || o.Caller == nil {
		return nil, false
	}
	return &o.Caller, true
}

// HasCaller returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsSegment) HasCaller() bool {
	if o != nil && o.Caller != nil {
		return true
	}

	return false
}

// SetCaller gets a reference to the given AnyOfmicrosoftGraphCallRecordsEndpoint and assigns it to the Caller field.
func (o *MicrosoftGraphCallRecordsSegment) SetCaller(v AnyOfmicrosoftGraphCallRecordsEndpoint) {
	o.Caller = v
}

// GetEndDateTime returns the EndDateTime field value if set, zero value otherwise.
func (o *MicrosoftGraphCallRecordsSegment) GetEndDateTime() time.Time {
	if o == nil || o.EndDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.EndDateTime
}

// GetEndDateTimeOk returns a tuple with the EndDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphCallRecordsSegment) GetEndDateTimeOk() (*time.Time, bool) {
	if o == nil || o.EndDateTime == nil {
		return nil, false
	}
	return o.EndDateTime, true
}

// HasEndDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsSegment) HasEndDateTime() bool {
	if o != nil && o.EndDateTime != nil {
		return true
	}

	return false
}

// SetEndDateTime gets a reference to the given time.Time and assigns it to the EndDateTime field.
func (o *MicrosoftGraphCallRecordsSegment) SetEndDateTime(v time.Time) {
	o.EndDateTime = &v
}

// GetFailureInfo returns the FailureInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsSegment) GetFailureInfo() AnyOfmicrosoftGraphCallRecordsFailureInfo {
	if o == nil  {
		var ret AnyOfmicrosoftGraphCallRecordsFailureInfo
		return ret
	}
	return o.FailureInfo
}

// GetFailureInfoOk returns a tuple with the FailureInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsSegment) GetFailureInfoOk() (*AnyOfmicrosoftGraphCallRecordsFailureInfo, bool) {
	if o == nil || o.FailureInfo == nil {
		return nil, false
	}
	return &o.FailureInfo, true
}

// HasFailureInfo returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsSegment) HasFailureInfo() bool {
	if o != nil && o.FailureInfo != nil {
		return true
	}

	return false
}

// SetFailureInfo gets a reference to the given AnyOfmicrosoftGraphCallRecordsFailureInfo and assigns it to the FailureInfo field.
func (o *MicrosoftGraphCallRecordsSegment) SetFailureInfo(v AnyOfmicrosoftGraphCallRecordsFailureInfo) {
	o.FailureInfo = v
}

// GetMedia returns the Media field value if set, zero value otherwise.
func (o *MicrosoftGraphCallRecordsSegment) GetMedia() []*AnyOfmicrosoftGraphCallRecordsMedia {
	if o == nil || o.Media == nil {
		var ret []*AnyOfmicrosoftGraphCallRecordsMedia
		return ret
	}
	return *o.Media
}

// GetMediaOk returns a tuple with the Media field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphCallRecordsSegment) GetMediaOk() (*[]*AnyOfmicrosoftGraphCallRecordsMedia, bool) {
	if o == nil || o.Media == nil {
		return nil, false
	}
	return o.Media, true
}

// HasMedia returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsSegment) HasMedia() bool {
	if o != nil && o.Media != nil {
		return true
	}

	return false
}

// SetMedia gets a reference to the given []*AnyOfmicrosoftGraphCallRecordsMedia and assigns it to the Media field.
func (o *MicrosoftGraphCallRecordsSegment) SetMedia(v []*AnyOfmicrosoftGraphCallRecordsMedia) {
	o.Media = &v
}

// GetStartDateTime returns the StartDateTime field value if set, zero value otherwise.
func (o *MicrosoftGraphCallRecordsSegment) GetStartDateTime() time.Time {
	if o == nil || o.StartDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.StartDateTime
}

// GetStartDateTimeOk returns a tuple with the StartDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphCallRecordsSegment) GetStartDateTimeOk() (*time.Time, bool) {
	if o == nil || o.StartDateTime == nil {
		return nil, false
	}
	return o.StartDateTime, true
}

// HasStartDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsSegment) HasStartDateTime() bool {
	if o != nil && o.StartDateTime != nil {
		return true
	}

	return false
}

// SetStartDateTime gets a reference to the given time.Time and assigns it to the StartDateTime field.
func (o *MicrosoftGraphCallRecordsSegment) SetStartDateTime(v time.Time) {
	o.StartDateTime = &v
}

func (o MicrosoftGraphCallRecordsSegment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Callee != nil {
		toSerialize["callee"] = o.Callee
	}
	if o.Caller != nil {
		toSerialize["caller"] = o.Caller
	}
	if o.EndDateTime != nil {
		toSerialize["endDateTime"] = o.EndDateTime
	}
	if o.FailureInfo != nil {
		toSerialize["failureInfo"] = o.FailureInfo
	}
	if o.Media != nil {
		toSerialize["media"] = o.Media
	}
	if o.StartDateTime != nil {
		toSerialize["startDateTime"] = o.StartDateTime
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphCallRecordsSegment struct {
	value *MicrosoftGraphCallRecordsSegment
	isSet bool
}

func (v NullableMicrosoftGraphCallRecordsSegment) Get() *MicrosoftGraphCallRecordsSegment {
	return v.value
}

func (v *NullableMicrosoftGraphCallRecordsSegment) Set(val *MicrosoftGraphCallRecordsSegment) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphCallRecordsSegment) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphCallRecordsSegment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphCallRecordsSegment(val *MicrosoftGraphCallRecordsSegment) *NullableMicrosoftGraphCallRecordsSegment {
	return &NullableMicrosoftGraphCallRecordsSegment{value: val, isSet: true}
}

func (v NullableMicrosoftGraphCallRecordsSegment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphCallRecordsSegment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


