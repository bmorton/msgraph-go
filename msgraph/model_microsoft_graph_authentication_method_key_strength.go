/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphAuthenticationMethodKeyStrength the model 'MicrosoftGraphAuthenticationMethodKeyStrength'
type MicrosoftGraphAuthenticationMethodKeyStrength string

// List of microsoft.graph.authenticationMethodKeyStrength
const (
	NORMAL MicrosoftGraphAuthenticationMethodKeyStrength = "normal"
	WEAK MicrosoftGraphAuthenticationMethodKeyStrength = "weak"
	UNKNOWN MicrosoftGraphAuthenticationMethodKeyStrength = "unknown"
)

// All allowed values of MicrosoftGraphAuthenticationMethodKeyStrength enum
var AllowedMicrosoftGraphAuthenticationMethodKeyStrengthEnumValues = []MicrosoftGraphAuthenticationMethodKeyStrength{
	"normal",
	"weak",
	"unknown",
}

func (v *MicrosoftGraphAuthenticationMethodKeyStrength) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphAuthenticationMethodKeyStrength(value)
	for _, existing := range AllowedMicrosoftGraphAuthenticationMethodKeyStrengthEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphAuthenticationMethodKeyStrength", value)
}

// NewMicrosoftGraphAuthenticationMethodKeyStrengthFromValue returns a pointer to a valid MicrosoftGraphAuthenticationMethodKeyStrength
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphAuthenticationMethodKeyStrengthFromValue(v string) (*MicrosoftGraphAuthenticationMethodKeyStrength, error) {
	ev := MicrosoftGraphAuthenticationMethodKeyStrength(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphAuthenticationMethodKeyStrength: valid values are %v", v, AllowedMicrosoftGraphAuthenticationMethodKeyStrengthEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphAuthenticationMethodKeyStrength) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphAuthenticationMethodKeyStrengthEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.authenticationMethodKeyStrength value
func (v MicrosoftGraphAuthenticationMethodKeyStrength) Ptr() *MicrosoftGraphAuthenticationMethodKeyStrength {
	return &v
}

type NullableMicrosoftGraphAuthenticationMethodKeyStrength struct {
	value *MicrosoftGraphAuthenticationMethodKeyStrength
	isSet bool
}

func (v NullableMicrosoftGraphAuthenticationMethodKeyStrength) Get() *MicrosoftGraphAuthenticationMethodKeyStrength {
	return v.value
}

func (v *NullableMicrosoftGraphAuthenticationMethodKeyStrength) Set(val *MicrosoftGraphAuthenticationMethodKeyStrength) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphAuthenticationMethodKeyStrength) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphAuthenticationMethodKeyStrength) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphAuthenticationMethodKeyStrength(val *MicrosoftGraphAuthenticationMethodKeyStrength) *NullableMicrosoftGraphAuthenticationMethodKeyStrength {
	return &NullableMicrosoftGraphAuthenticationMethodKeyStrength{value: val, isSet: true}
}

func (v NullableMicrosoftGraphAuthenticationMethodKeyStrength) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphAuthenticationMethodKeyStrength) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

