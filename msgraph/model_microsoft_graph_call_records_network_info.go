/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphCallRecordsNetworkInfo struct for MicrosoftGraphCallRecordsNetworkInfo
type MicrosoftGraphCallRecordsNetworkInfo struct {
	// Fraction of the call that the media endpoint detected the available bandwidth or bandwidth policy was low enough to cause poor quality of the audio sent.
	BandwidthLowEventRatio AnyOfnumberstringstring `json:"bandwidthLowEventRatio,omitempty"`
	// The wireless LAN basic service set identifier of the media endpoint used to connect to the network.
	BasicServiceSetIdentifier NullableString `json:"basicServiceSetIdentifier,omitempty"`
	// Type of network used by the media endpoint. Possible values are: unknown, wired, wifi, mobile, tunnel, unknownFutureValue.
	ConnectionType AnyOfmicrosoftGraphCallRecordsNetworkConnectionType `json:"connectionType,omitempty"`
	// Fraction of the call that the media endpoint detected the network delay was significant enough to impact the ability to have real-time two-way communication.
	DelayEventRatio AnyOfnumberstringstring `json:"delayEventRatio,omitempty"`
	// DNS suffix associated with the network adapter of the media endpoint.
	DnsSuffix NullableString `json:"dnsSuffix,omitempty"`
	// IP address of the media endpoint.
	IpAddress NullableString `json:"ipAddress,omitempty"`
	// Link speed in bits per second reported by the network adapter used by the media endpoint.
	LinkSpeed NullableInt64 `json:"linkSpeed,omitempty"`
	// The media access control (MAC) address of the media endpoint's network device.
	MacAddress NullableString `json:"macAddress,omitempty"`
	// Network port number used by media endpoint.
	Port NullableInt32 `json:"port,omitempty"`
	// Fraction of the call that the media endpoint detected the network was causing poor quality of the audio received.
	ReceivedQualityEventRatio AnyOfnumberstringstring `json:"receivedQualityEventRatio,omitempty"`
	// IP address of the media endpoint as seen by the media relay server. This is typically the public internet IP address associated to the endpoint.
	ReflexiveIPAddress NullableString `json:"reflexiveIPAddress,omitempty"`
	// IP address of the media relay server allocated by the media endpoint.
	RelayIPAddress NullableString `json:"relayIPAddress,omitempty"`
	// Network port number allocated on the media relay server by the media endpoint.
	RelayPort NullableInt32 `json:"relayPort,omitempty"`
	// Fraction of the call that the media endpoint detected the network was causing poor quality of the audio sent.
	SentQualityEventRatio AnyOfnumberstringstring `json:"sentQualityEventRatio,omitempty"`
	// Subnet used for media stream by the media endpoint.
	Subnet NullableString `json:"subnet,omitempty"`
	// WiFi band used by the media endpoint. Possible values are: unknown, frequency24GHz, frequency50GHz, frequency60GHz, unknownFutureValue.
	WifiBand AnyOfmicrosoftGraphCallRecordsWifiBand `json:"wifiBand,omitempty"`
	// Estimated remaining battery charge in percentage reported by the media endpoint.
	WifiBatteryCharge NullableInt32 `json:"wifiBatteryCharge,omitempty"`
	// WiFi channel used by the media endpoint.
	WifiChannel NullableInt32 `json:"wifiChannel,omitempty"`
	// Name of the Microsoft WiFi driver used by the media endpoint. Value may be localized based on the language used by endpoint.
	WifiMicrosoftDriver NullableString `json:"wifiMicrosoftDriver,omitempty"`
	// Version of the Microsoft WiFi driver used by the media endpoint.
	WifiMicrosoftDriverVersion NullableString `json:"wifiMicrosoftDriverVersion,omitempty"`
	// Type of WiFi radio used by the media endpoint. Possible values are: unknown, wifi80211a, wifi80211b, wifi80211g, wifi80211n, wifi80211ac, wifi80211ax, unknownFutureValue.
	WifiRadioType AnyOfmicrosoftGraphCallRecordsWifiRadioType `json:"wifiRadioType,omitempty"`
	// WiFi signal strength in percentage reported by the media endpoint.
	WifiSignalStrength NullableInt32 `json:"wifiSignalStrength,omitempty"`
	// Name of the WiFi driver used by the media endpoint. Value may be localized based on the language used by endpoint.
	WifiVendorDriver NullableString `json:"wifiVendorDriver,omitempty"`
	// Version of the WiFi driver used by the media endpoint.
	WifiVendorDriverVersion NullableString `json:"wifiVendorDriverVersion,omitempty"`
}

// NewMicrosoftGraphCallRecordsNetworkInfo instantiates a new MicrosoftGraphCallRecordsNetworkInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphCallRecordsNetworkInfo() *MicrosoftGraphCallRecordsNetworkInfo {
	this := MicrosoftGraphCallRecordsNetworkInfo{}
	return &this
}

// NewMicrosoftGraphCallRecordsNetworkInfoWithDefaults instantiates a new MicrosoftGraphCallRecordsNetworkInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphCallRecordsNetworkInfoWithDefaults() *MicrosoftGraphCallRecordsNetworkInfo {
	this := MicrosoftGraphCallRecordsNetworkInfo{}
	return &this
}

// GetBandwidthLowEventRatio returns the BandwidthLowEventRatio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetBandwidthLowEventRatio() AnyOfnumberstringstring {
	if o == nil  {
		var ret AnyOfnumberstringstring
		return ret
	}
	return o.BandwidthLowEventRatio
}

// GetBandwidthLowEventRatioOk returns a tuple with the BandwidthLowEventRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetBandwidthLowEventRatioOk() (*AnyOfnumberstringstring, bool) {
	if o == nil || o.BandwidthLowEventRatio == nil {
		return nil, false
	}
	return &o.BandwidthLowEventRatio, true
}

// HasBandwidthLowEventRatio returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsNetworkInfo) HasBandwidthLowEventRatio() bool {
	if o != nil && o.BandwidthLowEventRatio != nil {
		return true
	}

	return false
}

// SetBandwidthLowEventRatio gets a reference to the given AnyOfnumberstringstring and assigns it to the BandwidthLowEventRatio field.
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetBandwidthLowEventRatio(v AnyOfnumberstringstring) {
	o.BandwidthLowEventRatio = v
}

// GetBasicServiceSetIdentifier returns the BasicServiceSetIdentifier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetBasicServiceSetIdentifier() string {
	if o == nil || o.BasicServiceSetIdentifier.Get() == nil {
		var ret string
		return ret
	}
	return *o.BasicServiceSetIdentifier.Get()
}

// GetBasicServiceSetIdentifierOk returns a tuple with the BasicServiceSetIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetBasicServiceSetIdentifierOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BasicServiceSetIdentifier.Get(), o.BasicServiceSetIdentifier.IsSet()
}

// HasBasicServiceSetIdentifier returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsNetworkInfo) HasBasicServiceSetIdentifier() bool {
	if o != nil && o.BasicServiceSetIdentifier.IsSet() {
		return true
	}

	return false
}

// SetBasicServiceSetIdentifier gets a reference to the given NullableString and assigns it to the BasicServiceSetIdentifier field.
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetBasicServiceSetIdentifier(v string) {
	o.BasicServiceSetIdentifier.Set(&v)
}
// SetBasicServiceSetIdentifierNil sets the value for BasicServiceSetIdentifier to be an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetBasicServiceSetIdentifierNil() {
	o.BasicServiceSetIdentifier.Set(nil)
}

// UnsetBasicServiceSetIdentifier ensures that no value is present for BasicServiceSetIdentifier, not even an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) UnsetBasicServiceSetIdentifier() {
	o.BasicServiceSetIdentifier.Unset()
}

// GetConnectionType returns the ConnectionType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetConnectionType() AnyOfmicrosoftGraphCallRecordsNetworkConnectionType {
	if o == nil  {
		var ret AnyOfmicrosoftGraphCallRecordsNetworkConnectionType
		return ret
	}
	return o.ConnectionType
}

// GetConnectionTypeOk returns a tuple with the ConnectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetConnectionTypeOk() (*AnyOfmicrosoftGraphCallRecordsNetworkConnectionType, bool) {
	if o == nil || o.ConnectionType == nil {
		return nil, false
	}
	return &o.ConnectionType, true
}

// HasConnectionType returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsNetworkInfo) HasConnectionType() bool {
	if o != nil && o.ConnectionType != nil {
		return true
	}

	return false
}

// SetConnectionType gets a reference to the given AnyOfmicrosoftGraphCallRecordsNetworkConnectionType and assigns it to the ConnectionType field.
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetConnectionType(v AnyOfmicrosoftGraphCallRecordsNetworkConnectionType) {
	o.ConnectionType = v
}

// GetDelayEventRatio returns the DelayEventRatio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetDelayEventRatio() AnyOfnumberstringstring {
	if o == nil  {
		var ret AnyOfnumberstringstring
		return ret
	}
	return o.DelayEventRatio
}

// GetDelayEventRatioOk returns a tuple with the DelayEventRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetDelayEventRatioOk() (*AnyOfnumberstringstring, bool) {
	if o == nil || o.DelayEventRatio == nil {
		return nil, false
	}
	return &o.DelayEventRatio, true
}

// HasDelayEventRatio returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsNetworkInfo) HasDelayEventRatio() bool {
	if o != nil && o.DelayEventRatio != nil {
		return true
	}

	return false
}

// SetDelayEventRatio gets a reference to the given AnyOfnumberstringstring and assigns it to the DelayEventRatio field.
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetDelayEventRatio(v AnyOfnumberstringstring) {
	o.DelayEventRatio = v
}

// GetDnsSuffix returns the DnsSuffix field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetDnsSuffix() string {
	if o == nil || o.DnsSuffix.Get() == nil {
		var ret string
		return ret
	}
	return *o.DnsSuffix.Get()
}

// GetDnsSuffixOk returns a tuple with the DnsSuffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetDnsSuffixOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DnsSuffix.Get(), o.DnsSuffix.IsSet()
}

// HasDnsSuffix returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsNetworkInfo) HasDnsSuffix() bool {
	if o != nil && o.DnsSuffix.IsSet() {
		return true
	}

	return false
}

// SetDnsSuffix gets a reference to the given NullableString and assigns it to the DnsSuffix field.
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetDnsSuffix(v string) {
	o.DnsSuffix.Set(&v)
}
// SetDnsSuffixNil sets the value for DnsSuffix to be an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetDnsSuffixNil() {
	o.DnsSuffix.Set(nil)
}

// UnsetDnsSuffix ensures that no value is present for DnsSuffix, not even an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) UnsetDnsSuffix() {
	o.DnsSuffix.Unset()
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetIpAddress() string {
	if o == nil || o.IpAddress.Get() == nil {
		var ret string
		return ret
	}
	return *o.IpAddress.Get()
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetIpAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IpAddress.Get(), o.IpAddress.IsSet()
}

// HasIpAddress returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsNetworkInfo) HasIpAddress() bool {
	if o != nil && o.IpAddress.IsSet() {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given NullableString and assigns it to the IpAddress field.
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetIpAddress(v string) {
	o.IpAddress.Set(&v)
}
// SetIpAddressNil sets the value for IpAddress to be an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetIpAddressNil() {
	o.IpAddress.Set(nil)
}

// UnsetIpAddress ensures that no value is present for IpAddress, not even an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) UnsetIpAddress() {
	o.IpAddress.Unset()
}

// GetLinkSpeed returns the LinkSpeed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetLinkSpeed() int64 {
	if o == nil || o.LinkSpeed.Get() == nil {
		var ret int64
		return ret
	}
	return *o.LinkSpeed.Get()
}

// GetLinkSpeedOk returns a tuple with the LinkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetLinkSpeedOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LinkSpeed.Get(), o.LinkSpeed.IsSet()
}

// HasLinkSpeed returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsNetworkInfo) HasLinkSpeed() bool {
	if o != nil && o.LinkSpeed.IsSet() {
		return true
	}

	return false
}

// SetLinkSpeed gets a reference to the given NullableInt64 and assigns it to the LinkSpeed field.
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetLinkSpeed(v int64) {
	o.LinkSpeed.Set(&v)
}
// SetLinkSpeedNil sets the value for LinkSpeed to be an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetLinkSpeedNil() {
	o.LinkSpeed.Set(nil)
}

// UnsetLinkSpeed ensures that no value is present for LinkSpeed, not even an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) UnsetLinkSpeed() {
	o.LinkSpeed.Unset()
}

// GetMacAddress returns the MacAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetMacAddress() string {
	if o == nil || o.MacAddress.Get() == nil {
		var ret string
		return ret
	}
	return *o.MacAddress.Get()
}

// GetMacAddressOk returns a tuple with the MacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetMacAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MacAddress.Get(), o.MacAddress.IsSet()
}

// HasMacAddress returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsNetworkInfo) HasMacAddress() bool {
	if o != nil && o.MacAddress.IsSet() {
		return true
	}

	return false
}

// SetMacAddress gets a reference to the given NullableString and assigns it to the MacAddress field.
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetMacAddress(v string) {
	o.MacAddress.Set(&v)
}
// SetMacAddressNil sets the value for MacAddress to be an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetMacAddressNil() {
	o.MacAddress.Set(nil)
}

// UnsetMacAddress ensures that no value is present for MacAddress, not even an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) UnsetMacAddress() {
	o.MacAddress.Unset()
}

// GetPort returns the Port field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetPort() int32 {
	if o == nil || o.Port.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Port.Get()
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetPortOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Port.Get(), o.Port.IsSet()
}

// HasPort returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsNetworkInfo) HasPort() bool {
	if o != nil && o.Port.IsSet() {
		return true
	}

	return false
}

// SetPort gets a reference to the given NullableInt32 and assigns it to the Port field.
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetPort(v int32) {
	o.Port.Set(&v)
}
// SetPortNil sets the value for Port to be an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetPortNil() {
	o.Port.Set(nil)
}

// UnsetPort ensures that no value is present for Port, not even an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) UnsetPort() {
	o.Port.Unset()
}

// GetReceivedQualityEventRatio returns the ReceivedQualityEventRatio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetReceivedQualityEventRatio() AnyOfnumberstringstring {
	if o == nil  {
		var ret AnyOfnumberstringstring
		return ret
	}
	return o.ReceivedQualityEventRatio
}

// GetReceivedQualityEventRatioOk returns a tuple with the ReceivedQualityEventRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetReceivedQualityEventRatioOk() (*AnyOfnumberstringstring, bool) {
	if o == nil || o.ReceivedQualityEventRatio == nil {
		return nil, false
	}
	return &o.ReceivedQualityEventRatio, true
}

// HasReceivedQualityEventRatio returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsNetworkInfo) HasReceivedQualityEventRatio() bool {
	if o != nil && o.ReceivedQualityEventRatio != nil {
		return true
	}

	return false
}

// SetReceivedQualityEventRatio gets a reference to the given AnyOfnumberstringstring and assigns it to the ReceivedQualityEventRatio field.
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetReceivedQualityEventRatio(v AnyOfnumberstringstring) {
	o.ReceivedQualityEventRatio = v
}

// GetReflexiveIPAddress returns the ReflexiveIPAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetReflexiveIPAddress() string {
	if o == nil || o.ReflexiveIPAddress.Get() == nil {
		var ret string
		return ret
	}
	return *o.ReflexiveIPAddress.Get()
}

// GetReflexiveIPAddressOk returns a tuple with the ReflexiveIPAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetReflexiveIPAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ReflexiveIPAddress.Get(), o.ReflexiveIPAddress.IsSet()
}

// HasReflexiveIPAddress returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsNetworkInfo) HasReflexiveIPAddress() bool {
	if o != nil && o.ReflexiveIPAddress.IsSet() {
		return true
	}

	return false
}

// SetReflexiveIPAddress gets a reference to the given NullableString and assigns it to the ReflexiveIPAddress field.
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetReflexiveIPAddress(v string) {
	o.ReflexiveIPAddress.Set(&v)
}
// SetReflexiveIPAddressNil sets the value for ReflexiveIPAddress to be an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetReflexiveIPAddressNil() {
	o.ReflexiveIPAddress.Set(nil)
}

// UnsetReflexiveIPAddress ensures that no value is present for ReflexiveIPAddress, not even an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) UnsetReflexiveIPAddress() {
	o.ReflexiveIPAddress.Unset()
}

// GetRelayIPAddress returns the RelayIPAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetRelayIPAddress() string {
	if o == nil || o.RelayIPAddress.Get() == nil {
		var ret string
		return ret
	}
	return *o.RelayIPAddress.Get()
}

// GetRelayIPAddressOk returns a tuple with the RelayIPAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetRelayIPAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RelayIPAddress.Get(), o.RelayIPAddress.IsSet()
}

// HasRelayIPAddress returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsNetworkInfo) HasRelayIPAddress() bool {
	if o != nil && o.RelayIPAddress.IsSet() {
		return true
	}

	return false
}

// SetRelayIPAddress gets a reference to the given NullableString and assigns it to the RelayIPAddress field.
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetRelayIPAddress(v string) {
	o.RelayIPAddress.Set(&v)
}
// SetRelayIPAddressNil sets the value for RelayIPAddress to be an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetRelayIPAddressNil() {
	o.RelayIPAddress.Set(nil)
}

// UnsetRelayIPAddress ensures that no value is present for RelayIPAddress, not even an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) UnsetRelayIPAddress() {
	o.RelayIPAddress.Unset()
}

// GetRelayPort returns the RelayPort field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetRelayPort() int32 {
	if o == nil || o.RelayPort.Get() == nil {
		var ret int32
		return ret
	}
	return *o.RelayPort.Get()
}

// GetRelayPortOk returns a tuple with the RelayPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetRelayPortOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RelayPort.Get(), o.RelayPort.IsSet()
}

// HasRelayPort returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsNetworkInfo) HasRelayPort() bool {
	if o != nil && o.RelayPort.IsSet() {
		return true
	}

	return false
}

// SetRelayPort gets a reference to the given NullableInt32 and assigns it to the RelayPort field.
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetRelayPort(v int32) {
	o.RelayPort.Set(&v)
}
// SetRelayPortNil sets the value for RelayPort to be an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetRelayPortNil() {
	o.RelayPort.Set(nil)
}

// UnsetRelayPort ensures that no value is present for RelayPort, not even an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) UnsetRelayPort() {
	o.RelayPort.Unset()
}

// GetSentQualityEventRatio returns the SentQualityEventRatio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetSentQualityEventRatio() AnyOfnumberstringstring {
	if o == nil  {
		var ret AnyOfnumberstringstring
		return ret
	}
	return o.SentQualityEventRatio
}

// GetSentQualityEventRatioOk returns a tuple with the SentQualityEventRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetSentQualityEventRatioOk() (*AnyOfnumberstringstring, bool) {
	if o == nil || o.SentQualityEventRatio == nil {
		return nil, false
	}
	return &o.SentQualityEventRatio, true
}

// HasSentQualityEventRatio returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsNetworkInfo) HasSentQualityEventRatio() bool {
	if o != nil && o.SentQualityEventRatio != nil {
		return true
	}

	return false
}

// SetSentQualityEventRatio gets a reference to the given AnyOfnumberstringstring and assigns it to the SentQualityEventRatio field.
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetSentQualityEventRatio(v AnyOfnumberstringstring) {
	o.SentQualityEventRatio = v
}

// GetSubnet returns the Subnet field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetSubnet() string {
	if o == nil || o.Subnet.Get() == nil {
		var ret string
		return ret
	}
	return *o.Subnet.Get()
}

// GetSubnetOk returns a tuple with the Subnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetSubnetOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Subnet.Get(), o.Subnet.IsSet()
}

// HasSubnet returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsNetworkInfo) HasSubnet() bool {
	if o != nil && o.Subnet.IsSet() {
		return true
	}

	return false
}

// SetSubnet gets a reference to the given NullableString and assigns it to the Subnet field.
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetSubnet(v string) {
	o.Subnet.Set(&v)
}
// SetSubnetNil sets the value for Subnet to be an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetSubnetNil() {
	o.Subnet.Set(nil)
}

// UnsetSubnet ensures that no value is present for Subnet, not even an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) UnsetSubnet() {
	o.Subnet.Unset()
}

// GetWifiBand returns the WifiBand field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetWifiBand() AnyOfmicrosoftGraphCallRecordsWifiBand {
	if o == nil  {
		var ret AnyOfmicrosoftGraphCallRecordsWifiBand
		return ret
	}
	return o.WifiBand
}

// GetWifiBandOk returns a tuple with the WifiBand field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetWifiBandOk() (*AnyOfmicrosoftGraphCallRecordsWifiBand, bool) {
	if o == nil || o.WifiBand == nil {
		return nil, false
	}
	return &o.WifiBand, true
}

// HasWifiBand returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsNetworkInfo) HasWifiBand() bool {
	if o != nil && o.WifiBand != nil {
		return true
	}

	return false
}

// SetWifiBand gets a reference to the given AnyOfmicrosoftGraphCallRecordsWifiBand and assigns it to the WifiBand field.
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetWifiBand(v AnyOfmicrosoftGraphCallRecordsWifiBand) {
	o.WifiBand = v
}

// GetWifiBatteryCharge returns the WifiBatteryCharge field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetWifiBatteryCharge() int32 {
	if o == nil || o.WifiBatteryCharge.Get() == nil {
		var ret int32
		return ret
	}
	return *o.WifiBatteryCharge.Get()
}

// GetWifiBatteryChargeOk returns a tuple with the WifiBatteryCharge field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetWifiBatteryChargeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.WifiBatteryCharge.Get(), o.WifiBatteryCharge.IsSet()
}

// HasWifiBatteryCharge returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsNetworkInfo) HasWifiBatteryCharge() bool {
	if o != nil && o.WifiBatteryCharge.IsSet() {
		return true
	}

	return false
}

// SetWifiBatteryCharge gets a reference to the given NullableInt32 and assigns it to the WifiBatteryCharge field.
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetWifiBatteryCharge(v int32) {
	o.WifiBatteryCharge.Set(&v)
}
// SetWifiBatteryChargeNil sets the value for WifiBatteryCharge to be an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetWifiBatteryChargeNil() {
	o.WifiBatteryCharge.Set(nil)
}

// UnsetWifiBatteryCharge ensures that no value is present for WifiBatteryCharge, not even an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) UnsetWifiBatteryCharge() {
	o.WifiBatteryCharge.Unset()
}

// GetWifiChannel returns the WifiChannel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetWifiChannel() int32 {
	if o == nil || o.WifiChannel.Get() == nil {
		var ret int32
		return ret
	}
	return *o.WifiChannel.Get()
}

// GetWifiChannelOk returns a tuple with the WifiChannel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetWifiChannelOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.WifiChannel.Get(), o.WifiChannel.IsSet()
}

// HasWifiChannel returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsNetworkInfo) HasWifiChannel() bool {
	if o != nil && o.WifiChannel.IsSet() {
		return true
	}

	return false
}

// SetWifiChannel gets a reference to the given NullableInt32 and assigns it to the WifiChannel field.
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetWifiChannel(v int32) {
	o.WifiChannel.Set(&v)
}
// SetWifiChannelNil sets the value for WifiChannel to be an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetWifiChannelNil() {
	o.WifiChannel.Set(nil)
}

// UnsetWifiChannel ensures that no value is present for WifiChannel, not even an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) UnsetWifiChannel() {
	o.WifiChannel.Unset()
}

// GetWifiMicrosoftDriver returns the WifiMicrosoftDriver field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetWifiMicrosoftDriver() string {
	if o == nil || o.WifiMicrosoftDriver.Get() == nil {
		var ret string
		return ret
	}
	return *o.WifiMicrosoftDriver.Get()
}

// GetWifiMicrosoftDriverOk returns a tuple with the WifiMicrosoftDriver field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetWifiMicrosoftDriverOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.WifiMicrosoftDriver.Get(), o.WifiMicrosoftDriver.IsSet()
}

// HasWifiMicrosoftDriver returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsNetworkInfo) HasWifiMicrosoftDriver() bool {
	if o != nil && o.WifiMicrosoftDriver.IsSet() {
		return true
	}

	return false
}

// SetWifiMicrosoftDriver gets a reference to the given NullableString and assigns it to the WifiMicrosoftDriver field.
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetWifiMicrosoftDriver(v string) {
	o.WifiMicrosoftDriver.Set(&v)
}
// SetWifiMicrosoftDriverNil sets the value for WifiMicrosoftDriver to be an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetWifiMicrosoftDriverNil() {
	o.WifiMicrosoftDriver.Set(nil)
}

// UnsetWifiMicrosoftDriver ensures that no value is present for WifiMicrosoftDriver, not even an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) UnsetWifiMicrosoftDriver() {
	o.WifiMicrosoftDriver.Unset()
}

// GetWifiMicrosoftDriverVersion returns the WifiMicrosoftDriverVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetWifiMicrosoftDriverVersion() string {
	if o == nil || o.WifiMicrosoftDriverVersion.Get() == nil {
		var ret string
		return ret
	}
	return *o.WifiMicrosoftDriverVersion.Get()
}

// GetWifiMicrosoftDriverVersionOk returns a tuple with the WifiMicrosoftDriverVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetWifiMicrosoftDriverVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.WifiMicrosoftDriverVersion.Get(), o.WifiMicrosoftDriverVersion.IsSet()
}

// HasWifiMicrosoftDriverVersion returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsNetworkInfo) HasWifiMicrosoftDriverVersion() bool {
	if o != nil && o.WifiMicrosoftDriverVersion.IsSet() {
		return true
	}

	return false
}

// SetWifiMicrosoftDriverVersion gets a reference to the given NullableString and assigns it to the WifiMicrosoftDriverVersion field.
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetWifiMicrosoftDriverVersion(v string) {
	o.WifiMicrosoftDriverVersion.Set(&v)
}
// SetWifiMicrosoftDriverVersionNil sets the value for WifiMicrosoftDriverVersion to be an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetWifiMicrosoftDriverVersionNil() {
	o.WifiMicrosoftDriverVersion.Set(nil)
}

// UnsetWifiMicrosoftDriverVersion ensures that no value is present for WifiMicrosoftDriverVersion, not even an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) UnsetWifiMicrosoftDriverVersion() {
	o.WifiMicrosoftDriverVersion.Unset()
}

// GetWifiRadioType returns the WifiRadioType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetWifiRadioType() AnyOfmicrosoftGraphCallRecordsWifiRadioType {
	if o == nil  {
		var ret AnyOfmicrosoftGraphCallRecordsWifiRadioType
		return ret
	}
	return o.WifiRadioType
}

// GetWifiRadioTypeOk returns a tuple with the WifiRadioType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetWifiRadioTypeOk() (*AnyOfmicrosoftGraphCallRecordsWifiRadioType, bool) {
	if o == nil || o.WifiRadioType == nil {
		return nil, false
	}
	return &o.WifiRadioType, true
}

// HasWifiRadioType returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsNetworkInfo) HasWifiRadioType() bool {
	if o != nil && o.WifiRadioType != nil {
		return true
	}

	return false
}

// SetWifiRadioType gets a reference to the given AnyOfmicrosoftGraphCallRecordsWifiRadioType and assigns it to the WifiRadioType field.
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetWifiRadioType(v AnyOfmicrosoftGraphCallRecordsWifiRadioType) {
	o.WifiRadioType = v
}

// GetWifiSignalStrength returns the WifiSignalStrength field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetWifiSignalStrength() int32 {
	if o == nil || o.WifiSignalStrength.Get() == nil {
		var ret int32
		return ret
	}
	return *o.WifiSignalStrength.Get()
}

// GetWifiSignalStrengthOk returns a tuple with the WifiSignalStrength field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetWifiSignalStrengthOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.WifiSignalStrength.Get(), o.WifiSignalStrength.IsSet()
}

// HasWifiSignalStrength returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsNetworkInfo) HasWifiSignalStrength() bool {
	if o != nil && o.WifiSignalStrength.IsSet() {
		return true
	}

	return false
}

// SetWifiSignalStrength gets a reference to the given NullableInt32 and assigns it to the WifiSignalStrength field.
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetWifiSignalStrength(v int32) {
	o.WifiSignalStrength.Set(&v)
}
// SetWifiSignalStrengthNil sets the value for WifiSignalStrength to be an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetWifiSignalStrengthNil() {
	o.WifiSignalStrength.Set(nil)
}

// UnsetWifiSignalStrength ensures that no value is present for WifiSignalStrength, not even an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) UnsetWifiSignalStrength() {
	o.WifiSignalStrength.Unset()
}

// GetWifiVendorDriver returns the WifiVendorDriver field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetWifiVendorDriver() string {
	if o == nil || o.WifiVendorDriver.Get() == nil {
		var ret string
		return ret
	}
	return *o.WifiVendorDriver.Get()
}

// GetWifiVendorDriverOk returns a tuple with the WifiVendorDriver field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetWifiVendorDriverOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.WifiVendorDriver.Get(), o.WifiVendorDriver.IsSet()
}

// HasWifiVendorDriver returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsNetworkInfo) HasWifiVendorDriver() bool {
	if o != nil && o.WifiVendorDriver.IsSet() {
		return true
	}

	return false
}

// SetWifiVendorDriver gets a reference to the given NullableString and assigns it to the WifiVendorDriver field.
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetWifiVendorDriver(v string) {
	o.WifiVendorDriver.Set(&v)
}
// SetWifiVendorDriverNil sets the value for WifiVendorDriver to be an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetWifiVendorDriverNil() {
	o.WifiVendorDriver.Set(nil)
}

// UnsetWifiVendorDriver ensures that no value is present for WifiVendorDriver, not even an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) UnsetWifiVendorDriver() {
	o.WifiVendorDriver.Unset()
}

// GetWifiVendorDriverVersion returns the WifiVendorDriverVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetWifiVendorDriverVersion() string {
	if o == nil || o.WifiVendorDriverVersion.Get() == nil {
		var ret string
		return ret
	}
	return *o.WifiVendorDriverVersion.Get()
}

// GetWifiVendorDriverVersionOk returns a tuple with the WifiVendorDriverVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsNetworkInfo) GetWifiVendorDriverVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.WifiVendorDriverVersion.Get(), o.WifiVendorDriverVersion.IsSet()
}

// HasWifiVendorDriverVersion returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsNetworkInfo) HasWifiVendorDriverVersion() bool {
	if o != nil && o.WifiVendorDriverVersion.IsSet() {
		return true
	}

	return false
}

// SetWifiVendorDriverVersion gets a reference to the given NullableString and assigns it to the WifiVendorDriverVersion field.
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetWifiVendorDriverVersion(v string) {
	o.WifiVendorDriverVersion.Set(&v)
}
// SetWifiVendorDriverVersionNil sets the value for WifiVendorDriverVersion to be an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) SetWifiVendorDriverVersionNil() {
	o.WifiVendorDriverVersion.Set(nil)
}

// UnsetWifiVendorDriverVersion ensures that no value is present for WifiVendorDriverVersion, not even an explicit nil
func (o *MicrosoftGraphCallRecordsNetworkInfo) UnsetWifiVendorDriverVersion() {
	o.WifiVendorDriverVersion.Unset()
}

func (o MicrosoftGraphCallRecordsNetworkInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BandwidthLowEventRatio != nil {
		toSerialize["bandwidthLowEventRatio"] = o.BandwidthLowEventRatio
	}
	if o.BasicServiceSetIdentifier.IsSet() {
		toSerialize["basicServiceSetIdentifier"] = o.BasicServiceSetIdentifier.Get()
	}
	if o.ConnectionType != nil {
		toSerialize["connectionType"] = o.ConnectionType
	}
	if o.DelayEventRatio != nil {
		toSerialize["delayEventRatio"] = o.DelayEventRatio
	}
	if o.DnsSuffix.IsSet() {
		toSerialize["dnsSuffix"] = o.DnsSuffix.Get()
	}
	if o.IpAddress.IsSet() {
		toSerialize["ipAddress"] = o.IpAddress.Get()
	}
	if o.LinkSpeed.IsSet() {
		toSerialize["linkSpeed"] = o.LinkSpeed.Get()
	}
	if o.MacAddress.IsSet() {
		toSerialize["macAddress"] = o.MacAddress.Get()
	}
	if o.Port.IsSet() {
		toSerialize["port"] = o.Port.Get()
	}
	if o.ReceivedQualityEventRatio != nil {
		toSerialize["receivedQualityEventRatio"] = o.ReceivedQualityEventRatio
	}
	if o.ReflexiveIPAddress.IsSet() {
		toSerialize["reflexiveIPAddress"] = o.ReflexiveIPAddress.Get()
	}
	if o.RelayIPAddress.IsSet() {
		toSerialize["relayIPAddress"] = o.RelayIPAddress.Get()
	}
	if o.RelayPort.IsSet() {
		toSerialize["relayPort"] = o.RelayPort.Get()
	}
	if o.SentQualityEventRatio != nil {
		toSerialize["sentQualityEventRatio"] = o.SentQualityEventRatio
	}
	if o.Subnet.IsSet() {
		toSerialize["subnet"] = o.Subnet.Get()
	}
	if o.WifiBand != nil {
		toSerialize["wifiBand"] = o.WifiBand
	}
	if o.WifiBatteryCharge.IsSet() {
		toSerialize["wifiBatteryCharge"] = o.WifiBatteryCharge.Get()
	}
	if o.WifiChannel.IsSet() {
		toSerialize["wifiChannel"] = o.WifiChannel.Get()
	}
	if o.WifiMicrosoftDriver.IsSet() {
		toSerialize["wifiMicrosoftDriver"] = o.WifiMicrosoftDriver.Get()
	}
	if o.WifiMicrosoftDriverVersion.IsSet() {
		toSerialize["wifiMicrosoftDriverVersion"] = o.WifiMicrosoftDriverVersion.Get()
	}
	if o.WifiRadioType != nil {
		toSerialize["wifiRadioType"] = o.WifiRadioType
	}
	if o.WifiSignalStrength.IsSet() {
		toSerialize["wifiSignalStrength"] = o.WifiSignalStrength.Get()
	}
	if o.WifiVendorDriver.IsSet() {
		toSerialize["wifiVendorDriver"] = o.WifiVendorDriver.Get()
	}
	if o.WifiVendorDriverVersion.IsSet() {
		toSerialize["wifiVendorDriverVersion"] = o.WifiVendorDriverVersion.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphCallRecordsNetworkInfo struct {
	value *MicrosoftGraphCallRecordsNetworkInfo
	isSet bool
}

func (v NullableMicrosoftGraphCallRecordsNetworkInfo) Get() *MicrosoftGraphCallRecordsNetworkInfo {
	return v.value
}

func (v *NullableMicrosoftGraphCallRecordsNetworkInfo) Set(val *MicrosoftGraphCallRecordsNetworkInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphCallRecordsNetworkInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphCallRecordsNetworkInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphCallRecordsNetworkInfo(val *MicrosoftGraphCallRecordsNetworkInfo) *NullableMicrosoftGraphCallRecordsNetworkInfo {
	return &NullableMicrosoftGraphCallRecordsNetworkInfo{value: val, isSet: true}
}

func (v NullableMicrosoftGraphCallRecordsNetworkInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphCallRecordsNetworkInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


