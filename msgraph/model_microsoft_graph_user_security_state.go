/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphUserSecurityState struct for MicrosoftGraphUserSecurityState
type MicrosoftGraphUserSecurityState struct {
	// AAD User object identifier (GUID) - represents the physical/multi-account user entity.
	AadUserId NullableString `json:"aadUserId,omitempty"`
	// Account name of user account (without Active Directory domain or DNS domain) - (also called mailNickName).
	AccountName NullableString `json:"accountName,omitempty"`
	// NetBIOS/Active Directory domain of user account (that is, domain/account format).
	DomainName NullableString `json:"domainName,omitempty"`
	// For email-related alerts - user account's email 'role'. Possible values are: unknown, sender, recipient.
	EmailRole AnyOfmicrosoftGraphEmailRole `json:"emailRole,omitempty"`
	// Indicates whether the user logged on through a VPN.
	IsVpn NullableBool `json:"isVpn,omitempty"`
	// Time at which the sign-in occurred. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
	LogonDateTime NullableTime `json:"logonDateTime,omitempty"`
	// User sign-in ID.
	LogonId NullableString `json:"logonId,omitempty"`
	// IP Address the sign-in request originated from.
	LogonIp NullableString `json:"logonIp,omitempty"`
	// Location (by IP address mapping) associated with a user sign-in event by this user.
	LogonLocation NullableString `json:"logonLocation,omitempty"`
	// Method of user sign in. Possible values are: unknown, interactive, remoteInteractive, network, batch, service.
	LogonType AnyOfmicrosoftGraphLogonType `json:"logonType,omitempty"`
	// Active Directory (on-premises) Security Identifier (SID) of the user.
	OnPremisesSecurityIdentifier NullableString `json:"onPremisesSecurityIdentifier,omitempty"`
	// Provider-generated/calculated risk score of the user account. Recommended value range of 0-1, which equates to a percentage.
	RiskScore NullableString `json:"riskScore,omitempty"`
	// User account type (group membership), per Windows definition. Possible values are: unknown, standard, power, administrator.
	UserAccountType AnyOfmicrosoftGraphUserAccountSecurityType `json:"userAccountType,omitempty"`
	// User sign-in name - internet format: (user account name)@(user account DNS domain name).
	UserPrincipalName NullableString `json:"userPrincipalName,omitempty"`
}

// NewMicrosoftGraphUserSecurityState instantiates a new MicrosoftGraphUserSecurityState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphUserSecurityState() *MicrosoftGraphUserSecurityState {
	this := MicrosoftGraphUserSecurityState{}
	return &this
}

// NewMicrosoftGraphUserSecurityStateWithDefaults instantiates a new MicrosoftGraphUserSecurityState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphUserSecurityStateWithDefaults() *MicrosoftGraphUserSecurityState {
	this := MicrosoftGraphUserSecurityState{}
	return &this
}

// GetAadUserId returns the AadUserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphUserSecurityState) GetAadUserId() string {
	if o == nil || o.AadUserId.Get() == nil {
		var ret string
		return ret
	}
	return *o.AadUserId.Get()
}

// GetAadUserIdOk returns a tuple with the AadUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphUserSecurityState) GetAadUserIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AadUserId.Get(), o.AadUserId.IsSet()
}

// HasAadUserId returns a boolean if a field has been set.
func (o *MicrosoftGraphUserSecurityState) HasAadUserId() bool {
	if o != nil && o.AadUserId.IsSet() {
		return true
	}

	return false
}

// SetAadUserId gets a reference to the given NullableString and assigns it to the AadUserId field.
func (o *MicrosoftGraphUserSecurityState) SetAadUserId(v string) {
	o.AadUserId.Set(&v)
}
// SetAadUserIdNil sets the value for AadUserId to be an explicit nil
func (o *MicrosoftGraphUserSecurityState) SetAadUserIdNil() {
	o.AadUserId.Set(nil)
}

// UnsetAadUserId ensures that no value is present for AadUserId, not even an explicit nil
func (o *MicrosoftGraphUserSecurityState) UnsetAadUserId() {
	o.AadUserId.Unset()
}

// GetAccountName returns the AccountName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphUserSecurityState) GetAccountName() string {
	if o == nil || o.AccountName.Get() == nil {
		var ret string
		return ret
	}
	return *o.AccountName.Get()
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphUserSecurityState) GetAccountNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AccountName.Get(), o.AccountName.IsSet()
}

// HasAccountName returns a boolean if a field has been set.
func (o *MicrosoftGraphUserSecurityState) HasAccountName() bool {
	if o != nil && o.AccountName.IsSet() {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given NullableString and assigns it to the AccountName field.
func (o *MicrosoftGraphUserSecurityState) SetAccountName(v string) {
	o.AccountName.Set(&v)
}
// SetAccountNameNil sets the value for AccountName to be an explicit nil
func (o *MicrosoftGraphUserSecurityState) SetAccountNameNil() {
	o.AccountName.Set(nil)
}

// UnsetAccountName ensures that no value is present for AccountName, not even an explicit nil
func (o *MicrosoftGraphUserSecurityState) UnsetAccountName() {
	o.AccountName.Unset()
}

// GetDomainName returns the DomainName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphUserSecurityState) GetDomainName() string {
	if o == nil || o.DomainName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DomainName.Get()
}

// GetDomainNameOk returns a tuple with the DomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphUserSecurityState) GetDomainNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DomainName.Get(), o.DomainName.IsSet()
}

// HasDomainName returns a boolean if a field has been set.
func (o *MicrosoftGraphUserSecurityState) HasDomainName() bool {
	if o != nil && o.DomainName.IsSet() {
		return true
	}

	return false
}

// SetDomainName gets a reference to the given NullableString and assigns it to the DomainName field.
func (o *MicrosoftGraphUserSecurityState) SetDomainName(v string) {
	o.DomainName.Set(&v)
}
// SetDomainNameNil sets the value for DomainName to be an explicit nil
func (o *MicrosoftGraphUserSecurityState) SetDomainNameNil() {
	o.DomainName.Set(nil)
}

// UnsetDomainName ensures that no value is present for DomainName, not even an explicit nil
func (o *MicrosoftGraphUserSecurityState) UnsetDomainName() {
	o.DomainName.Unset()
}

// GetEmailRole returns the EmailRole field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphUserSecurityState) GetEmailRole() AnyOfmicrosoftGraphEmailRole {
	if o == nil  {
		var ret AnyOfmicrosoftGraphEmailRole
		return ret
	}
	return o.EmailRole
}

// GetEmailRoleOk returns a tuple with the EmailRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphUserSecurityState) GetEmailRoleOk() (*AnyOfmicrosoftGraphEmailRole, bool) {
	if o == nil || o.EmailRole == nil {
		return nil, false
	}
	return &o.EmailRole, true
}

// HasEmailRole returns a boolean if a field has been set.
func (o *MicrosoftGraphUserSecurityState) HasEmailRole() bool {
	if o != nil && o.EmailRole != nil {
		return true
	}

	return false
}

// SetEmailRole gets a reference to the given AnyOfmicrosoftGraphEmailRole and assigns it to the EmailRole field.
func (o *MicrosoftGraphUserSecurityState) SetEmailRole(v AnyOfmicrosoftGraphEmailRole) {
	o.EmailRole = v
}

// GetIsVpn returns the IsVpn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphUserSecurityState) GetIsVpn() bool {
	if o == nil || o.IsVpn.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsVpn.Get()
}

// GetIsVpnOk returns a tuple with the IsVpn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphUserSecurityState) GetIsVpnOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsVpn.Get(), o.IsVpn.IsSet()
}

// HasIsVpn returns a boolean if a field has been set.
func (o *MicrosoftGraphUserSecurityState) HasIsVpn() bool {
	if o != nil && o.IsVpn.IsSet() {
		return true
	}

	return false
}

// SetIsVpn gets a reference to the given NullableBool and assigns it to the IsVpn field.
func (o *MicrosoftGraphUserSecurityState) SetIsVpn(v bool) {
	o.IsVpn.Set(&v)
}
// SetIsVpnNil sets the value for IsVpn to be an explicit nil
func (o *MicrosoftGraphUserSecurityState) SetIsVpnNil() {
	o.IsVpn.Set(nil)
}

// UnsetIsVpn ensures that no value is present for IsVpn, not even an explicit nil
func (o *MicrosoftGraphUserSecurityState) UnsetIsVpn() {
	o.IsVpn.Unset()
}

// GetLogonDateTime returns the LogonDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphUserSecurityState) GetLogonDateTime() time.Time {
	if o == nil || o.LogonDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.LogonDateTime.Get()
}

// GetLogonDateTimeOk returns a tuple with the LogonDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphUserSecurityState) GetLogonDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LogonDateTime.Get(), o.LogonDateTime.IsSet()
}

// HasLogonDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphUserSecurityState) HasLogonDateTime() bool {
	if o != nil && o.LogonDateTime.IsSet() {
		return true
	}

	return false
}

// SetLogonDateTime gets a reference to the given NullableTime and assigns it to the LogonDateTime field.
func (o *MicrosoftGraphUserSecurityState) SetLogonDateTime(v time.Time) {
	o.LogonDateTime.Set(&v)
}
// SetLogonDateTimeNil sets the value for LogonDateTime to be an explicit nil
func (o *MicrosoftGraphUserSecurityState) SetLogonDateTimeNil() {
	o.LogonDateTime.Set(nil)
}

// UnsetLogonDateTime ensures that no value is present for LogonDateTime, not even an explicit nil
func (o *MicrosoftGraphUserSecurityState) UnsetLogonDateTime() {
	o.LogonDateTime.Unset()
}

// GetLogonId returns the LogonId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphUserSecurityState) GetLogonId() string {
	if o == nil || o.LogonId.Get() == nil {
		var ret string
		return ret
	}
	return *o.LogonId.Get()
}

// GetLogonIdOk returns a tuple with the LogonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphUserSecurityState) GetLogonIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LogonId.Get(), o.LogonId.IsSet()
}

// HasLogonId returns a boolean if a field has been set.
func (o *MicrosoftGraphUserSecurityState) HasLogonId() bool {
	if o != nil && o.LogonId.IsSet() {
		return true
	}

	return false
}

// SetLogonId gets a reference to the given NullableString and assigns it to the LogonId field.
func (o *MicrosoftGraphUserSecurityState) SetLogonId(v string) {
	o.LogonId.Set(&v)
}
// SetLogonIdNil sets the value for LogonId to be an explicit nil
func (o *MicrosoftGraphUserSecurityState) SetLogonIdNil() {
	o.LogonId.Set(nil)
}

// UnsetLogonId ensures that no value is present for LogonId, not even an explicit nil
func (o *MicrosoftGraphUserSecurityState) UnsetLogonId() {
	o.LogonId.Unset()
}

// GetLogonIp returns the LogonIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphUserSecurityState) GetLogonIp() string {
	if o == nil || o.LogonIp.Get() == nil {
		var ret string
		return ret
	}
	return *o.LogonIp.Get()
}

// GetLogonIpOk returns a tuple with the LogonIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphUserSecurityState) GetLogonIpOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LogonIp.Get(), o.LogonIp.IsSet()
}

// HasLogonIp returns a boolean if a field has been set.
func (o *MicrosoftGraphUserSecurityState) HasLogonIp() bool {
	if o != nil && o.LogonIp.IsSet() {
		return true
	}

	return false
}

// SetLogonIp gets a reference to the given NullableString and assigns it to the LogonIp field.
func (o *MicrosoftGraphUserSecurityState) SetLogonIp(v string) {
	o.LogonIp.Set(&v)
}
// SetLogonIpNil sets the value for LogonIp to be an explicit nil
func (o *MicrosoftGraphUserSecurityState) SetLogonIpNil() {
	o.LogonIp.Set(nil)
}

// UnsetLogonIp ensures that no value is present for LogonIp, not even an explicit nil
func (o *MicrosoftGraphUserSecurityState) UnsetLogonIp() {
	o.LogonIp.Unset()
}

// GetLogonLocation returns the LogonLocation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphUserSecurityState) GetLogonLocation() string {
	if o == nil || o.LogonLocation.Get() == nil {
		var ret string
		return ret
	}
	return *o.LogonLocation.Get()
}

// GetLogonLocationOk returns a tuple with the LogonLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphUserSecurityState) GetLogonLocationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LogonLocation.Get(), o.LogonLocation.IsSet()
}

// HasLogonLocation returns a boolean if a field has been set.
func (o *MicrosoftGraphUserSecurityState) HasLogonLocation() bool {
	if o != nil && o.LogonLocation.IsSet() {
		return true
	}

	return false
}

// SetLogonLocation gets a reference to the given NullableString and assigns it to the LogonLocation field.
func (o *MicrosoftGraphUserSecurityState) SetLogonLocation(v string) {
	o.LogonLocation.Set(&v)
}
// SetLogonLocationNil sets the value for LogonLocation to be an explicit nil
func (o *MicrosoftGraphUserSecurityState) SetLogonLocationNil() {
	o.LogonLocation.Set(nil)
}

// UnsetLogonLocation ensures that no value is present for LogonLocation, not even an explicit nil
func (o *MicrosoftGraphUserSecurityState) UnsetLogonLocation() {
	o.LogonLocation.Unset()
}

// GetLogonType returns the LogonType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphUserSecurityState) GetLogonType() AnyOfmicrosoftGraphLogonType {
	if o == nil  {
		var ret AnyOfmicrosoftGraphLogonType
		return ret
	}
	return o.LogonType
}

// GetLogonTypeOk returns a tuple with the LogonType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphUserSecurityState) GetLogonTypeOk() (*AnyOfmicrosoftGraphLogonType, bool) {
	if o == nil || o.LogonType == nil {
		return nil, false
	}
	return &o.LogonType, true
}

// HasLogonType returns a boolean if a field has been set.
func (o *MicrosoftGraphUserSecurityState) HasLogonType() bool {
	if o != nil && o.LogonType != nil {
		return true
	}

	return false
}

// SetLogonType gets a reference to the given AnyOfmicrosoftGraphLogonType and assigns it to the LogonType field.
func (o *MicrosoftGraphUserSecurityState) SetLogonType(v AnyOfmicrosoftGraphLogonType) {
	o.LogonType = v
}

// GetOnPremisesSecurityIdentifier returns the OnPremisesSecurityIdentifier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphUserSecurityState) GetOnPremisesSecurityIdentifier() string {
	if o == nil || o.OnPremisesSecurityIdentifier.Get() == nil {
		var ret string
		return ret
	}
	return *o.OnPremisesSecurityIdentifier.Get()
}

// GetOnPremisesSecurityIdentifierOk returns a tuple with the OnPremisesSecurityIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphUserSecurityState) GetOnPremisesSecurityIdentifierOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OnPremisesSecurityIdentifier.Get(), o.OnPremisesSecurityIdentifier.IsSet()
}

// HasOnPremisesSecurityIdentifier returns a boolean if a field has been set.
func (o *MicrosoftGraphUserSecurityState) HasOnPremisesSecurityIdentifier() bool {
	if o != nil && o.OnPremisesSecurityIdentifier.IsSet() {
		return true
	}

	return false
}

// SetOnPremisesSecurityIdentifier gets a reference to the given NullableString and assigns it to the OnPremisesSecurityIdentifier field.
func (o *MicrosoftGraphUserSecurityState) SetOnPremisesSecurityIdentifier(v string) {
	o.OnPremisesSecurityIdentifier.Set(&v)
}
// SetOnPremisesSecurityIdentifierNil sets the value for OnPremisesSecurityIdentifier to be an explicit nil
func (o *MicrosoftGraphUserSecurityState) SetOnPremisesSecurityIdentifierNil() {
	o.OnPremisesSecurityIdentifier.Set(nil)
}

// UnsetOnPremisesSecurityIdentifier ensures that no value is present for OnPremisesSecurityIdentifier, not even an explicit nil
func (o *MicrosoftGraphUserSecurityState) UnsetOnPremisesSecurityIdentifier() {
	o.OnPremisesSecurityIdentifier.Unset()
}

// GetRiskScore returns the RiskScore field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphUserSecurityState) GetRiskScore() string {
	if o == nil || o.RiskScore.Get() == nil {
		var ret string
		return ret
	}
	return *o.RiskScore.Get()
}

// GetRiskScoreOk returns a tuple with the RiskScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphUserSecurityState) GetRiskScoreOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RiskScore.Get(), o.RiskScore.IsSet()
}

// HasRiskScore returns a boolean if a field has been set.
func (o *MicrosoftGraphUserSecurityState) HasRiskScore() bool {
	if o != nil && o.RiskScore.IsSet() {
		return true
	}

	return false
}

// SetRiskScore gets a reference to the given NullableString and assigns it to the RiskScore field.
func (o *MicrosoftGraphUserSecurityState) SetRiskScore(v string) {
	o.RiskScore.Set(&v)
}
// SetRiskScoreNil sets the value for RiskScore to be an explicit nil
func (o *MicrosoftGraphUserSecurityState) SetRiskScoreNil() {
	o.RiskScore.Set(nil)
}

// UnsetRiskScore ensures that no value is present for RiskScore, not even an explicit nil
func (o *MicrosoftGraphUserSecurityState) UnsetRiskScore() {
	o.RiskScore.Unset()
}

// GetUserAccountType returns the UserAccountType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphUserSecurityState) GetUserAccountType() AnyOfmicrosoftGraphUserAccountSecurityType {
	if o == nil  {
		var ret AnyOfmicrosoftGraphUserAccountSecurityType
		return ret
	}
	return o.UserAccountType
}

// GetUserAccountTypeOk returns a tuple with the UserAccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphUserSecurityState) GetUserAccountTypeOk() (*AnyOfmicrosoftGraphUserAccountSecurityType, bool) {
	if o == nil || o.UserAccountType == nil {
		return nil, false
	}
	return &o.UserAccountType, true
}

// HasUserAccountType returns a boolean if a field has been set.
func (o *MicrosoftGraphUserSecurityState) HasUserAccountType() bool {
	if o != nil && o.UserAccountType != nil {
		return true
	}

	return false
}

// SetUserAccountType gets a reference to the given AnyOfmicrosoftGraphUserAccountSecurityType and assigns it to the UserAccountType field.
func (o *MicrosoftGraphUserSecurityState) SetUserAccountType(v AnyOfmicrosoftGraphUserAccountSecurityType) {
	o.UserAccountType = v
}

// GetUserPrincipalName returns the UserPrincipalName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphUserSecurityState) GetUserPrincipalName() string {
	if o == nil || o.UserPrincipalName.Get() == nil {
		var ret string
		return ret
	}
	return *o.UserPrincipalName.Get()
}

// GetUserPrincipalNameOk returns a tuple with the UserPrincipalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphUserSecurityState) GetUserPrincipalNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UserPrincipalName.Get(), o.UserPrincipalName.IsSet()
}

// HasUserPrincipalName returns a boolean if a field has been set.
func (o *MicrosoftGraphUserSecurityState) HasUserPrincipalName() bool {
	if o != nil && o.UserPrincipalName.IsSet() {
		return true
	}

	return false
}

// SetUserPrincipalName gets a reference to the given NullableString and assigns it to the UserPrincipalName field.
func (o *MicrosoftGraphUserSecurityState) SetUserPrincipalName(v string) {
	o.UserPrincipalName.Set(&v)
}
// SetUserPrincipalNameNil sets the value for UserPrincipalName to be an explicit nil
func (o *MicrosoftGraphUserSecurityState) SetUserPrincipalNameNil() {
	o.UserPrincipalName.Set(nil)
}

// UnsetUserPrincipalName ensures that no value is present for UserPrincipalName, not even an explicit nil
func (o *MicrosoftGraphUserSecurityState) UnsetUserPrincipalName() {
	o.UserPrincipalName.Unset()
}

func (o MicrosoftGraphUserSecurityState) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AadUserId.IsSet() {
		toSerialize["aadUserId"] = o.AadUserId.Get()
	}
	if o.AccountName.IsSet() {
		toSerialize["accountName"] = o.AccountName.Get()
	}
	if o.DomainName.IsSet() {
		toSerialize["domainName"] = o.DomainName.Get()
	}
	if o.EmailRole != nil {
		toSerialize["emailRole"] = o.EmailRole
	}
	if o.IsVpn.IsSet() {
		toSerialize["isVpn"] = o.IsVpn.Get()
	}
	if o.LogonDateTime.IsSet() {
		toSerialize["logonDateTime"] = o.LogonDateTime.Get()
	}
	if o.LogonId.IsSet() {
		toSerialize["logonId"] = o.LogonId.Get()
	}
	if o.LogonIp.IsSet() {
		toSerialize["logonIp"] = o.LogonIp.Get()
	}
	if o.LogonLocation.IsSet() {
		toSerialize["logonLocation"] = o.LogonLocation.Get()
	}
	if o.LogonType != nil {
		toSerialize["logonType"] = o.LogonType
	}
	if o.OnPremisesSecurityIdentifier.IsSet() {
		toSerialize["onPremisesSecurityIdentifier"] = o.OnPremisesSecurityIdentifier.Get()
	}
	if o.RiskScore.IsSet() {
		toSerialize["riskScore"] = o.RiskScore.Get()
	}
	if o.UserAccountType != nil {
		toSerialize["userAccountType"] = o.UserAccountType
	}
	if o.UserPrincipalName.IsSet() {
		toSerialize["userPrincipalName"] = o.UserPrincipalName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphUserSecurityState struct {
	value *MicrosoftGraphUserSecurityState
	isSet bool
}

func (v NullableMicrosoftGraphUserSecurityState) Get() *MicrosoftGraphUserSecurityState {
	return v.value
}

func (v *NullableMicrosoftGraphUserSecurityState) Set(val *MicrosoftGraphUserSecurityState) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphUserSecurityState) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphUserSecurityState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphUserSecurityState(val *MicrosoftGraphUserSecurityState) *NullableMicrosoftGraphUserSecurityState {
	return &NullableMicrosoftGraphUserSecurityState{value: val, isSet: true}
}

func (v NullableMicrosoftGraphUserSecurityState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphUserSecurityState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


