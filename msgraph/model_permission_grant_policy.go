/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PermissionGrantPolicy struct for PermissionGrantPolicy
type PermissionGrantPolicy struct {
	// Condition sets which are excluded in this permission grant policy. Automatically expanded on GET.
	Excludes *[]MicrosoftGraphPermissionGrantConditionSet `json:"excludes,omitempty"`
	// Condition sets which are included in this permission grant policy. Automatically expanded on GET.
	Includes *[]MicrosoftGraphPermissionGrantConditionSet `json:"includes,omitempty"`
}

// NewPermissionGrantPolicy instantiates a new PermissionGrantPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPermissionGrantPolicy() *PermissionGrantPolicy {
	this := PermissionGrantPolicy{}
	return &this
}

// NewPermissionGrantPolicyWithDefaults instantiates a new PermissionGrantPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPermissionGrantPolicyWithDefaults() *PermissionGrantPolicy {
	this := PermissionGrantPolicy{}
	return &this
}

// GetExcludes returns the Excludes field value if set, zero value otherwise.
func (o *PermissionGrantPolicy) GetExcludes() []MicrosoftGraphPermissionGrantConditionSet {
	if o == nil || o.Excludes == nil {
		var ret []MicrosoftGraphPermissionGrantConditionSet
		return ret
	}
	return *o.Excludes
}

// GetExcludesOk returns a tuple with the Excludes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PermissionGrantPolicy) GetExcludesOk() (*[]MicrosoftGraphPermissionGrantConditionSet, bool) {
	if o == nil || o.Excludes == nil {
		return nil, false
	}
	return o.Excludes, true
}

// HasExcludes returns a boolean if a field has been set.
func (o *PermissionGrantPolicy) HasExcludes() bool {
	if o != nil && o.Excludes != nil {
		return true
	}

	return false
}

// SetExcludes gets a reference to the given []MicrosoftGraphPermissionGrantConditionSet and assigns it to the Excludes field.
func (o *PermissionGrantPolicy) SetExcludes(v []MicrosoftGraphPermissionGrantConditionSet) {
	o.Excludes = &v
}

// GetIncludes returns the Includes field value if set, zero value otherwise.
func (o *PermissionGrantPolicy) GetIncludes() []MicrosoftGraphPermissionGrantConditionSet {
	if o == nil || o.Includes == nil {
		var ret []MicrosoftGraphPermissionGrantConditionSet
		return ret
	}
	return *o.Includes
}

// GetIncludesOk returns a tuple with the Includes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PermissionGrantPolicy) GetIncludesOk() (*[]MicrosoftGraphPermissionGrantConditionSet, bool) {
	if o == nil || o.Includes == nil {
		return nil, false
	}
	return o.Includes, true
}

// HasIncludes returns a boolean if a field has been set.
func (o *PermissionGrantPolicy) HasIncludes() bool {
	if o != nil && o.Includes != nil {
		return true
	}

	return false
}

// SetIncludes gets a reference to the given []MicrosoftGraphPermissionGrantConditionSet and assigns it to the Includes field.
func (o *PermissionGrantPolicy) SetIncludes(v []MicrosoftGraphPermissionGrantConditionSet) {
	o.Includes = &v
}

func (o PermissionGrantPolicy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Excludes != nil {
		toSerialize["excludes"] = o.Excludes
	}
	if o.Includes != nil {
		toSerialize["includes"] = o.Includes
	}
	return json.Marshal(toSerialize)
}

type NullablePermissionGrantPolicy struct {
	value *PermissionGrantPolicy
	isSet bool
}

func (v NullablePermissionGrantPolicy) Get() *PermissionGrantPolicy {
	return v.value
}

func (v *NullablePermissionGrantPolicy) Set(val *PermissionGrantPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullablePermissionGrantPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullablePermissionGrantPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePermissionGrantPolicy(val *PermissionGrantPolicy) *NullablePermissionGrantPolicy {
	return &NullablePermissionGrantPolicy{value: val, isSet: true}
}

func (v NullablePermissionGrantPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePermissionGrantPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


