/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// WorkbookFunctionResult struct for WorkbookFunctionResult
type WorkbookFunctionResult struct {
	Error NullableString `json:"error,omitempty"`
	Value AnyOfobject `json:"value,omitempty"`
}

// NewWorkbookFunctionResult instantiates a new WorkbookFunctionResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkbookFunctionResult() *WorkbookFunctionResult {
	this := WorkbookFunctionResult{}
	return &this
}

// NewWorkbookFunctionResultWithDefaults instantiates a new WorkbookFunctionResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkbookFunctionResultWithDefaults() *WorkbookFunctionResult {
	this := WorkbookFunctionResult{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkbookFunctionResult) GetError() string {
	if o == nil || o.Error.Get() == nil {
		var ret string
		return ret
	}
	return *o.Error.Get()
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkbookFunctionResult) GetErrorOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Error.Get(), o.Error.IsSet()
}

// HasError returns a boolean if a field has been set.
func (o *WorkbookFunctionResult) HasError() bool {
	if o != nil && o.Error.IsSet() {
		return true
	}

	return false
}

// SetError gets a reference to the given NullableString and assigns it to the Error field.
func (o *WorkbookFunctionResult) SetError(v string) {
	o.Error.Set(&v)
}
// SetErrorNil sets the value for Error to be an explicit nil
func (o *WorkbookFunctionResult) SetErrorNil() {
	o.Error.Set(nil)
}

// UnsetError ensures that no value is present for Error, not even an explicit nil
func (o *WorkbookFunctionResult) UnsetError() {
	o.Error.Unset()
}

// GetValue returns the Value field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkbookFunctionResult) GetValue() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkbookFunctionResult) GetValueOk() (*AnyOfobject, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return &o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *WorkbookFunctionResult) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given AnyOfobject and assigns it to the Value field.
func (o *WorkbookFunctionResult) SetValue(v AnyOfobject) {
	o.Value = v
}

func (o WorkbookFunctionResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Error.IsSet() {
		toSerialize["error"] = o.Error.Get()
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableWorkbookFunctionResult struct {
	value *WorkbookFunctionResult
	isSet bool
}

func (v NullableWorkbookFunctionResult) Get() *WorkbookFunctionResult {
	return v.value
}

func (v *NullableWorkbookFunctionResult) Set(val *WorkbookFunctionResult) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkbookFunctionResult) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkbookFunctionResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkbookFunctionResult(val *WorkbookFunctionResult) *NullableWorkbookFunctionResult {
	return &NullableWorkbookFunctionResult{value: val, isSet: true}
}

func (v NullableWorkbookFunctionResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkbookFunctionResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


