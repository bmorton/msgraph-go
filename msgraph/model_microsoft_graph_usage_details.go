/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphUsageDetails struct for MicrosoftGraphUsageDetails
type MicrosoftGraphUsageDetails struct {
	// The date and time the resource was last accessed by the user. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
	LastAccessedDateTime NullableTime `json:"lastAccessedDateTime,omitempty"`
	// The date and time the resource was last modified by the user. The timestamp represents date and time information using ISO 8601 format and is always in UTC time.For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
	LastModifiedDateTime NullableTime `json:"lastModifiedDateTime,omitempty"`
}

// NewMicrosoftGraphUsageDetails instantiates a new MicrosoftGraphUsageDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphUsageDetails() *MicrosoftGraphUsageDetails {
	this := MicrosoftGraphUsageDetails{}
	return &this
}

// NewMicrosoftGraphUsageDetailsWithDefaults instantiates a new MicrosoftGraphUsageDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphUsageDetailsWithDefaults() *MicrosoftGraphUsageDetails {
	this := MicrosoftGraphUsageDetails{}
	return &this
}

// GetLastAccessedDateTime returns the LastAccessedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphUsageDetails) GetLastAccessedDateTime() time.Time {
	if o == nil || o.LastAccessedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.LastAccessedDateTime.Get()
}

// GetLastAccessedDateTimeOk returns a tuple with the LastAccessedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphUsageDetails) GetLastAccessedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastAccessedDateTime.Get(), o.LastAccessedDateTime.IsSet()
}

// HasLastAccessedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphUsageDetails) HasLastAccessedDateTime() bool {
	if o != nil && o.LastAccessedDateTime.IsSet() {
		return true
	}

	return false
}

// SetLastAccessedDateTime gets a reference to the given NullableTime and assigns it to the LastAccessedDateTime field.
func (o *MicrosoftGraphUsageDetails) SetLastAccessedDateTime(v time.Time) {
	o.LastAccessedDateTime.Set(&v)
}
// SetLastAccessedDateTimeNil sets the value for LastAccessedDateTime to be an explicit nil
func (o *MicrosoftGraphUsageDetails) SetLastAccessedDateTimeNil() {
	o.LastAccessedDateTime.Set(nil)
}

// UnsetLastAccessedDateTime ensures that no value is present for LastAccessedDateTime, not even an explicit nil
func (o *MicrosoftGraphUsageDetails) UnsetLastAccessedDateTime() {
	o.LastAccessedDateTime.Unset()
}

// GetLastModifiedDateTime returns the LastModifiedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphUsageDetails) GetLastModifiedDateTime() time.Time {
	if o == nil || o.LastModifiedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDateTime.Get()
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphUsageDetails) GetLastModifiedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastModifiedDateTime.Get(), o.LastModifiedDateTime.IsSet()
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphUsageDetails) HasLastModifiedDateTime() bool {
	if o != nil && o.LastModifiedDateTime.IsSet() {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given NullableTime and assigns it to the LastModifiedDateTime field.
func (o *MicrosoftGraphUsageDetails) SetLastModifiedDateTime(v time.Time) {
	o.LastModifiedDateTime.Set(&v)
}
// SetLastModifiedDateTimeNil sets the value for LastModifiedDateTime to be an explicit nil
func (o *MicrosoftGraphUsageDetails) SetLastModifiedDateTimeNil() {
	o.LastModifiedDateTime.Set(nil)
}

// UnsetLastModifiedDateTime ensures that no value is present for LastModifiedDateTime, not even an explicit nil
func (o *MicrosoftGraphUsageDetails) UnsetLastModifiedDateTime() {
	o.LastModifiedDateTime.Unset()
}

func (o MicrosoftGraphUsageDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LastAccessedDateTime.IsSet() {
		toSerialize["lastAccessedDateTime"] = o.LastAccessedDateTime.Get()
	}
	if o.LastModifiedDateTime.IsSet() {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphUsageDetails struct {
	value *MicrosoftGraphUsageDetails
	isSet bool
}

func (v NullableMicrosoftGraphUsageDetails) Get() *MicrosoftGraphUsageDetails {
	return v.value
}

func (v *NullableMicrosoftGraphUsageDetails) Set(val *MicrosoftGraphUsageDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphUsageDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphUsageDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphUsageDetails(val *MicrosoftGraphUsageDetails) *NullableMicrosoftGraphUsageDetails {
	return &NullableMicrosoftGraphUsageDetails{value: val, isSet: true}
}

func (v NullableMicrosoftGraphUsageDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphUsageDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


