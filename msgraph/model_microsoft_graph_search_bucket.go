/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphSearchBucket struct for MicrosoftGraphSearchBucket
type MicrosoftGraphSearchBucket struct {
	// A token containing the encoded filter to aggregate search matches by the specific key value. To use the filter, pass the token as part of the aggregationFilter property in a searchRequest object, in the format '{field}:/'{aggregationFilterToken}/''. See an example.
	AggregationFilterToken NullableString `json:"aggregationFilterToken,omitempty"`
	// The approximate number of search matches that share the same value specified in the key property. Note that this number is not the exact number of matches.
	Count NullableInt32 `json:"count,omitempty"`
	// The discrete value of the field that an aggregation was computed on.
	Key NullableString `json:"key,omitempty"`
}

// NewMicrosoftGraphSearchBucket instantiates a new MicrosoftGraphSearchBucket object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphSearchBucket() *MicrosoftGraphSearchBucket {
	this := MicrosoftGraphSearchBucket{}
	return &this
}

// NewMicrosoftGraphSearchBucketWithDefaults instantiates a new MicrosoftGraphSearchBucket object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphSearchBucketWithDefaults() *MicrosoftGraphSearchBucket {
	this := MicrosoftGraphSearchBucket{}
	return &this
}

// GetAggregationFilterToken returns the AggregationFilterToken field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSearchBucket) GetAggregationFilterToken() string {
	if o == nil || o.AggregationFilterToken.Get() == nil {
		var ret string
		return ret
	}
	return *o.AggregationFilterToken.Get()
}

// GetAggregationFilterTokenOk returns a tuple with the AggregationFilterToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSearchBucket) GetAggregationFilterTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AggregationFilterToken.Get(), o.AggregationFilterToken.IsSet()
}

// HasAggregationFilterToken returns a boolean if a field has been set.
func (o *MicrosoftGraphSearchBucket) HasAggregationFilterToken() bool {
	if o != nil && o.AggregationFilterToken.IsSet() {
		return true
	}

	return false
}

// SetAggregationFilterToken gets a reference to the given NullableString and assigns it to the AggregationFilterToken field.
func (o *MicrosoftGraphSearchBucket) SetAggregationFilterToken(v string) {
	o.AggregationFilterToken.Set(&v)
}
// SetAggregationFilterTokenNil sets the value for AggregationFilterToken to be an explicit nil
func (o *MicrosoftGraphSearchBucket) SetAggregationFilterTokenNil() {
	o.AggregationFilterToken.Set(nil)
}

// UnsetAggregationFilterToken ensures that no value is present for AggregationFilterToken, not even an explicit nil
func (o *MicrosoftGraphSearchBucket) UnsetAggregationFilterToken() {
	o.AggregationFilterToken.Unset()
}

// GetCount returns the Count field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSearchBucket) GetCount() int32 {
	if o == nil || o.Count.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Count.Get()
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSearchBucket) GetCountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Count.Get(), o.Count.IsSet()
}

// HasCount returns a boolean if a field has been set.
func (o *MicrosoftGraphSearchBucket) HasCount() bool {
	if o != nil && o.Count.IsSet() {
		return true
	}

	return false
}

// SetCount gets a reference to the given NullableInt32 and assigns it to the Count field.
func (o *MicrosoftGraphSearchBucket) SetCount(v int32) {
	o.Count.Set(&v)
}
// SetCountNil sets the value for Count to be an explicit nil
func (o *MicrosoftGraphSearchBucket) SetCountNil() {
	o.Count.Set(nil)
}

// UnsetCount ensures that no value is present for Count, not even an explicit nil
func (o *MicrosoftGraphSearchBucket) UnsetCount() {
	o.Count.Unset()
}

// GetKey returns the Key field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSearchBucket) GetKey() string {
	if o == nil || o.Key.Get() == nil {
		var ret string
		return ret
	}
	return *o.Key.Get()
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSearchBucket) GetKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Key.Get(), o.Key.IsSet()
}

// HasKey returns a boolean if a field has been set.
func (o *MicrosoftGraphSearchBucket) HasKey() bool {
	if o != nil && o.Key.IsSet() {
		return true
	}

	return false
}

// SetKey gets a reference to the given NullableString and assigns it to the Key field.
func (o *MicrosoftGraphSearchBucket) SetKey(v string) {
	o.Key.Set(&v)
}
// SetKeyNil sets the value for Key to be an explicit nil
func (o *MicrosoftGraphSearchBucket) SetKeyNil() {
	o.Key.Set(nil)
}

// UnsetKey ensures that no value is present for Key, not even an explicit nil
func (o *MicrosoftGraphSearchBucket) UnsetKey() {
	o.Key.Unset()
}

func (o MicrosoftGraphSearchBucket) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AggregationFilterToken.IsSet() {
		toSerialize["aggregationFilterToken"] = o.AggregationFilterToken.Get()
	}
	if o.Count.IsSet() {
		toSerialize["count"] = o.Count.Get()
	}
	if o.Key.IsSet() {
		toSerialize["key"] = o.Key.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphSearchBucket struct {
	value *MicrosoftGraphSearchBucket
	isSet bool
}

func (v NullableMicrosoftGraphSearchBucket) Get() *MicrosoftGraphSearchBucket {
	return v.value
}

func (v *NullableMicrosoftGraphSearchBucket) Set(val *MicrosoftGraphSearchBucket) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphSearchBucket) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphSearchBucket) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphSearchBucket(val *MicrosoftGraphSearchBucket) *NullableMicrosoftGraphSearchBucket {
	return &NullableMicrosoftGraphSearchBucket{value: val, isSet: true}
}

func (v NullableMicrosoftGraphSearchBucket) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphSearchBucket) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


