/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject143 struct for InlineObject143
type InlineObject143 struct {
	ContentType *string `json:"contentType,omitempty"`
}

// NewInlineObject143 instantiates a new InlineObject143 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject143() *InlineObject143 {
	this := InlineObject143{}
	return &this
}

// NewInlineObject143WithDefaults instantiates a new InlineObject143 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject143WithDefaults() *InlineObject143 {
	this := InlineObject143{}
	return &this
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *InlineObject143) GetContentType() string {
	if o == nil || o.ContentType == nil {
		var ret string
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject143) GetContentTypeOk() (*string, bool) {
	if o == nil || o.ContentType == nil {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *InlineObject143) HasContentType() bool {
	if o != nil && o.ContentType != nil {
		return true
	}

	return false
}

// SetContentType gets a reference to the given string and assigns it to the ContentType field.
func (o *InlineObject143) SetContentType(v string) {
	o.ContentType = &v
}

func (o InlineObject143) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ContentType != nil {
		toSerialize["contentType"] = o.ContentType
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject143 struct {
	value *InlineObject143
	isSet bool
}

func (v NullableInlineObject143) Get() *InlineObject143 {
	return v.value
}

func (v *NullableInlineObject143) Set(val *InlineObject143) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject143) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject143) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject143(val *InlineObject143) *NullableInlineObject143 {
	return &NullableInlineObject143{value: val, isSet: true}
}

func (v NullableInlineObject143) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject143) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


