/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphWorkbookIcon struct for MicrosoftGraphWorkbookIcon
type MicrosoftGraphWorkbookIcon struct {
	// Represents the index of the icon in the given set.
	Index *int32 `json:"index,omitempty"`
	// Represents the set that the icon is part of. The possible values are: Invalid, ThreeArrows, ThreeArrowsGray, ThreeFlags, ThreeTrafficLights1, ThreeTrafficLights2, ThreeSigns, ThreeSymbols, ThreeSymbols2, FourArrows, FourArrowsGray, FourRedToBlack, FourRating, FourTrafficLights, FiveArrows, FiveArrowsGray, FiveRating, FiveQuarters, ThreeStars, ThreeTriangles, FiveBoxes.
	Set *string `json:"set,omitempty"`
}

// NewMicrosoftGraphWorkbookIcon instantiates a new MicrosoftGraphWorkbookIcon object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphWorkbookIcon() *MicrosoftGraphWorkbookIcon {
	this := MicrosoftGraphWorkbookIcon{}
	return &this
}

// NewMicrosoftGraphWorkbookIconWithDefaults instantiates a new MicrosoftGraphWorkbookIcon object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphWorkbookIconWithDefaults() *MicrosoftGraphWorkbookIcon {
	this := MicrosoftGraphWorkbookIcon{}
	return &this
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *MicrosoftGraphWorkbookIcon) GetIndex() int32 {
	if o == nil || o.Index == nil {
		var ret int32
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWorkbookIcon) GetIndexOk() (*int32, bool) {
	if o == nil || o.Index == nil {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkbookIcon) HasIndex() bool {
	if o != nil && o.Index != nil {
		return true
	}

	return false
}

// SetIndex gets a reference to the given int32 and assigns it to the Index field.
func (o *MicrosoftGraphWorkbookIcon) SetIndex(v int32) {
	o.Index = &v
}

// GetSet returns the Set field value if set, zero value otherwise.
func (o *MicrosoftGraphWorkbookIcon) GetSet() string {
	if o == nil || o.Set == nil {
		var ret string
		return ret
	}
	return *o.Set
}

// GetSetOk returns a tuple with the Set field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWorkbookIcon) GetSetOk() (*string, bool) {
	if o == nil || o.Set == nil {
		return nil, false
	}
	return o.Set, true
}

// HasSet returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkbookIcon) HasSet() bool {
	if o != nil && o.Set != nil {
		return true
	}

	return false
}

// SetSet gets a reference to the given string and assigns it to the Set field.
func (o *MicrosoftGraphWorkbookIcon) SetSet(v string) {
	o.Set = &v
}

func (o MicrosoftGraphWorkbookIcon) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Index != nil {
		toSerialize["index"] = o.Index
	}
	if o.Set != nil {
		toSerialize["set"] = o.Set
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphWorkbookIcon struct {
	value *MicrosoftGraphWorkbookIcon
	isSet bool
}

func (v NullableMicrosoftGraphWorkbookIcon) Get() *MicrosoftGraphWorkbookIcon {
	return v.value
}

func (v *NullableMicrosoftGraphWorkbookIcon) Set(val *MicrosoftGraphWorkbookIcon) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphWorkbookIcon) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphWorkbookIcon) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphWorkbookIcon(val *MicrosoftGraphWorkbookIcon) *NullableMicrosoftGraphWorkbookIcon {
	return &NullableMicrosoftGraphWorkbookIcon{value: val, isSet: true}
}

func (v NullableMicrosoftGraphWorkbookIcon) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphWorkbookIcon) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


