/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphEmployeeOrgData struct for MicrosoftGraphEmployeeOrgData
type MicrosoftGraphEmployeeOrgData struct {
	// The cost center associated with the user. Returned only on $select. Supports $filter.
	CostCenter NullableString `json:"costCenter,omitempty"`
	// The name of the division in which the user works. Returned only on $select. Supports $filter.
	Division NullableString `json:"division,omitempty"`
}

// NewMicrosoftGraphEmployeeOrgData instantiates a new MicrosoftGraphEmployeeOrgData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphEmployeeOrgData() *MicrosoftGraphEmployeeOrgData {
	this := MicrosoftGraphEmployeeOrgData{}
	return &this
}

// NewMicrosoftGraphEmployeeOrgDataWithDefaults instantiates a new MicrosoftGraphEmployeeOrgData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphEmployeeOrgDataWithDefaults() *MicrosoftGraphEmployeeOrgData {
	this := MicrosoftGraphEmployeeOrgData{}
	return &this
}

// GetCostCenter returns the CostCenter field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEmployeeOrgData) GetCostCenter() string {
	if o == nil || o.CostCenter.Get() == nil {
		var ret string
		return ret
	}
	return *o.CostCenter.Get()
}

// GetCostCenterOk returns a tuple with the CostCenter field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEmployeeOrgData) GetCostCenterOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CostCenter.Get(), o.CostCenter.IsSet()
}

// HasCostCenter returns a boolean if a field has been set.
func (o *MicrosoftGraphEmployeeOrgData) HasCostCenter() bool {
	if o != nil && o.CostCenter.IsSet() {
		return true
	}

	return false
}

// SetCostCenter gets a reference to the given NullableString and assigns it to the CostCenter field.
func (o *MicrosoftGraphEmployeeOrgData) SetCostCenter(v string) {
	o.CostCenter.Set(&v)
}
// SetCostCenterNil sets the value for CostCenter to be an explicit nil
func (o *MicrosoftGraphEmployeeOrgData) SetCostCenterNil() {
	o.CostCenter.Set(nil)
}

// UnsetCostCenter ensures that no value is present for CostCenter, not even an explicit nil
func (o *MicrosoftGraphEmployeeOrgData) UnsetCostCenter() {
	o.CostCenter.Unset()
}

// GetDivision returns the Division field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEmployeeOrgData) GetDivision() string {
	if o == nil || o.Division.Get() == nil {
		var ret string
		return ret
	}
	return *o.Division.Get()
}

// GetDivisionOk returns a tuple with the Division field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEmployeeOrgData) GetDivisionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Division.Get(), o.Division.IsSet()
}

// HasDivision returns a boolean if a field has been set.
func (o *MicrosoftGraphEmployeeOrgData) HasDivision() bool {
	if o != nil && o.Division.IsSet() {
		return true
	}

	return false
}

// SetDivision gets a reference to the given NullableString and assigns it to the Division field.
func (o *MicrosoftGraphEmployeeOrgData) SetDivision(v string) {
	o.Division.Set(&v)
}
// SetDivisionNil sets the value for Division to be an explicit nil
func (o *MicrosoftGraphEmployeeOrgData) SetDivisionNil() {
	o.Division.Set(nil)
}

// UnsetDivision ensures that no value is present for Division, not even an explicit nil
func (o *MicrosoftGraphEmployeeOrgData) UnsetDivision() {
	o.Division.Unset()
}

func (o MicrosoftGraphEmployeeOrgData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CostCenter.IsSet() {
		toSerialize["costCenter"] = o.CostCenter.Get()
	}
	if o.Division.IsSet() {
		toSerialize["division"] = o.Division.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphEmployeeOrgData struct {
	value *MicrosoftGraphEmployeeOrgData
	isSet bool
}

func (v NullableMicrosoftGraphEmployeeOrgData) Get() *MicrosoftGraphEmployeeOrgData {
	return v.value
}

func (v *NullableMicrosoftGraphEmployeeOrgData) Set(val *MicrosoftGraphEmployeeOrgData) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphEmployeeOrgData) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphEmployeeOrgData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphEmployeeOrgData(val *MicrosoftGraphEmployeeOrgData) *NullableMicrosoftGraphEmployeeOrgData {
	return &NullableMicrosoftGraphEmployeeOrgData{value: val, isSet: true}
}

func (v NullableMicrosoftGraphEmployeeOrgData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphEmployeeOrgData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


