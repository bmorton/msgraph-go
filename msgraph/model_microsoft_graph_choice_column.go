/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphChoiceColumn struct for MicrosoftGraphChoiceColumn
type MicrosoftGraphChoiceColumn struct {
	// If true, allows custom values that aren't in the configured choices.
	AllowTextEntry NullableBool `json:"allowTextEntry,omitempty"`
	// The list of values available for this column.
	Choices *[]*string `json:"choices,omitempty"`
	// How the choices are to be presented in the UX. Must be one of checkBoxes, dropDownMenu, or radioButtons
	DisplayAs NullableString `json:"displayAs,omitempty"`
}

// NewMicrosoftGraphChoiceColumn instantiates a new MicrosoftGraphChoiceColumn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphChoiceColumn() *MicrosoftGraphChoiceColumn {
	this := MicrosoftGraphChoiceColumn{}
	return &this
}

// NewMicrosoftGraphChoiceColumnWithDefaults instantiates a new MicrosoftGraphChoiceColumn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphChoiceColumnWithDefaults() *MicrosoftGraphChoiceColumn {
	this := MicrosoftGraphChoiceColumn{}
	return &this
}

// GetAllowTextEntry returns the AllowTextEntry field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphChoiceColumn) GetAllowTextEntry() bool {
	if o == nil || o.AllowTextEntry.Get() == nil {
		var ret bool
		return ret
	}
	return *o.AllowTextEntry.Get()
}

// GetAllowTextEntryOk returns a tuple with the AllowTextEntry field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphChoiceColumn) GetAllowTextEntryOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AllowTextEntry.Get(), o.AllowTextEntry.IsSet()
}

// HasAllowTextEntry returns a boolean if a field has been set.
func (o *MicrosoftGraphChoiceColumn) HasAllowTextEntry() bool {
	if o != nil && o.AllowTextEntry.IsSet() {
		return true
	}

	return false
}

// SetAllowTextEntry gets a reference to the given NullableBool and assigns it to the AllowTextEntry field.
func (o *MicrosoftGraphChoiceColumn) SetAllowTextEntry(v bool) {
	o.AllowTextEntry.Set(&v)
}
// SetAllowTextEntryNil sets the value for AllowTextEntry to be an explicit nil
func (o *MicrosoftGraphChoiceColumn) SetAllowTextEntryNil() {
	o.AllowTextEntry.Set(nil)
}

// UnsetAllowTextEntry ensures that no value is present for AllowTextEntry, not even an explicit nil
func (o *MicrosoftGraphChoiceColumn) UnsetAllowTextEntry() {
	o.AllowTextEntry.Unset()
}

// GetChoices returns the Choices field value if set, zero value otherwise.
func (o *MicrosoftGraphChoiceColumn) GetChoices() []*string {
	if o == nil || o.Choices == nil {
		var ret []*string
		return ret
	}
	return *o.Choices
}

// GetChoicesOk returns a tuple with the Choices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphChoiceColumn) GetChoicesOk() (*[]*string, bool) {
	if o == nil || o.Choices == nil {
		return nil, false
	}
	return o.Choices, true
}

// HasChoices returns a boolean if a field has been set.
func (o *MicrosoftGraphChoiceColumn) HasChoices() bool {
	if o != nil && o.Choices != nil {
		return true
	}

	return false
}

// SetChoices gets a reference to the given []*string and assigns it to the Choices field.
func (o *MicrosoftGraphChoiceColumn) SetChoices(v []*string) {
	o.Choices = &v
}

// GetDisplayAs returns the DisplayAs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphChoiceColumn) GetDisplayAs() string {
	if o == nil || o.DisplayAs.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayAs.Get()
}

// GetDisplayAsOk returns a tuple with the DisplayAs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphChoiceColumn) GetDisplayAsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayAs.Get(), o.DisplayAs.IsSet()
}

// HasDisplayAs returns a boolean if a field has been set.
func (o *MicrosoftGraphChoiceColumn) HasDisplayAs() bool {
	if o != nil && o.DisplayAs.IsSet() {
		return true
	}

	return false
}

// SetDisplayAs gets a reference to the given NullableString and assigns it to the DisplayAs field.
func (o *MicrosoftGraphChoiceColumn) SetDisplayAs(v string) {
	o.DisplayAs.Set(&v)
}
// SetDisplayAsNil sets the value for DisplayAs to be an explicit nil
func (o *MicrosoftGraphChoiceColumn) SetDisplayAsNil() {
	o.DisplayAs.Set(nil)
}

// UnsetDisplayAs ensures that no value is present for DisplayAs, not even an explicit nil
func (o *MicrosoftGraphChoiceColumn) UnsetDisplayAs() {
	o.DisplayAs.Unset()
}

func (o MicrosoftGraphChoiceColumn) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowTextEntry.IsSet() {
		toSerialize["allowTextEntry"] = o.AllowTextEntry.Get()
	}
	if o.Choices != nil {
		toSerialize["choices"] = o.Choices
	}
	if o.DisplayAs.IsSet() {
		toSerialize["displayAs"] = o.DisplayAs.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphChoiceColumn struct {
	value *MicrosoftGraphChoiceColumn
	isSet bool
}

func (v NullableMicrosoftGraphChoiceColumn) Get() *MicrosoftGraphChoiceColumn {
	return v.value
}

func (v *NullableMicrosoftGraphChoiceColumn) Set(val *MicrosoftGraphChoiceColumn) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphChoiceColumn) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphChoiceColumn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphChoiceColumn(val *MicrosoftGraphChoiceColumn) *NullableMicrosoftGraphChoiceColumn {
	return &NullableMicrosoftGraphChoiceColumn{value: val, isSet: true}
}

func (v NullableMicrosoftGraphChoiceColumn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphChoiceColumn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


