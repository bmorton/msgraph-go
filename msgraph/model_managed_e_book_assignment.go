/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ManagedEBookAssignment Contains properties used to assign a eBook to a group.
type ManagedEBookAssignment struct {
	// The install intent for eBook. Possible values are: available, required, uninstall, availableWithoutEnrollment.
	InstallIntent AnyOfmicrosoftGraphInstallIntent `json:"installIntent,omitempty"`
	// The assignment target for eBook.
	Target AnyOfobject `json:"target,omitempty"`
}

// NewManagedEBookAssignment instantiates a new ManagedEBookAssignment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagedEBookAssignment() *ManagedEBookAssignment {
	this := ManagedEBookAssignment{}
	return &this
}

// NewManagedEBookAssignmentWithDefaults instantiates a new ManagedEBookAssignment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagedEBookAssignmentWithDefaults() *ManagedEBookAssignment {
	this := ManagedEBookAssignment{}
	return &this
}

// GetInstallIntent returns the InstallIntent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ManagedEBookAssignment) GetInstallIntent() AnyOfmicrosoftGraphInstallIntent {
	if o == nil  {
		var ret AnyOfmicrosoftGraphInstallIntent
		return ret
	}
	return o.InstallIntent
}

// GetInstallIntentOk returns a tuple with the InstallIntent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedEBookAssignment) GetInstallIntentOk() (*AnyOfmicrosoftGraphInstallIntent, bool) {
	if o == nil || o.InstallIntent == nil {
		return nil, false
	}
	return &o.InstallIntent, true
}

// HasInstallIntent returns a boolean if a field has been set.
func (o *ManagedEBookAssignment) HasInstallIntent() bool {
	if o != nil && o.InstallIntent != nil {
		return true
	}

	return false
}

// SetInstallIntent gets a reference to the given AnyOfmicrosoftGraphInstallIntent and assigns it to the InstallIntent field.
func (o *ManagedEBookAssignment) SetInstallIntent(v AnyOfmicrosoftGraphInstallIntent) {
	o.InstallIntent = v
}

// GetTarget returns the Target field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ManagedEBookAssignment) GetTarget() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedEBookAssignment) GetTargetOk() (*AnyOfobject, bool) {
	if o == nil || o.Target == nil {
		return nil, false
	}
	return &o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *ManagedEBookAssignment) HasTarget() bool {
	if o != nil && o.Target != nil {
		return true
	}

	return false
}

// SetTarget gets a reference to the given AnyOfobject and assigns it to the Target field.
func (o *ManagedEBookAssignment) SetTarget(v AnyOfobject) {
	o.Target = v
}

func (o ManagedEBookAssignment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InstallIntent != nil {
		toSerialize["installIntent"] = o.InstallIntent
	}
	if o.Target != nil {
		toSerialize["target"] = o.Target
	}
	return json.Marshal(toSerialize)
}

type NullableManagedEBookAssignment struct {
	value *ManagedEBookAssignment
	isSet bool
}

func (v NullableManagedEBookAssignment) Get() *ManagedEBookAssignment {
	return v.value
}

func (v *NullableManagedEBookAssignment) Set(val *ManagedEBookAssignment) {
	v.value = val
	v.isSet = true
}

func (v NullableManagedEBookAssignment) IsSet() bool {
	return v.isSet
}

func (v *NullableManagedEBookAssignment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagedEBookAssignment(val *ManagedEBookAssignment) *NullableManagedEBookAssignment {
	return &NullableManagedEBookAssignment{value: val, isSet: true}
}

func (v NullableManagedEBookAssignment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagedEBookAssignment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


