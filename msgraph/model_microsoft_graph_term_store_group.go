/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphTermStoreGroup struct for MicrosoftGraphTermStoreGroup
type MicrosoftGraphTermStoreGroup struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// Date and time of group creation. Read-only.
	CreatedDateTime NullableTime `json:"createdDateTime,omitempty"`
	// Description giving details on the term usage.
	Description NullableString `json:"description,omitempty"`
	// Name of group.
	DisplayName NullableString `json:"displayName,omitempty"`
	// Id of the parent site of this group.
	ParentSiteId NullableString `json:"parentSiteId,omitempty"`
	// Returns type of group. Possible values are 'global', 'system' and 'siteCollection'.
	Scope AnyOfmicrosoftGraphTermStoreTermGroupScope `json:"scope,omitempty"`
	// All sets under the group in a term [store].
	Sets *[]MicrosoftGraphTermStoreSet `json:"sets,omitempty"`
}

// NewMicrosoftGraphTermStoreGroup instantiates a new MicrosoftGraphTermStoreGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphTermStoreGroup() *MicrosoftGraphTermStoreGroup {
	this := MicrosoftGraphTermStoreGroup{}
	return &this
}

// NewMicrosoftGraphTermStoreGroupWithDefaults instantiates a new MicrosoftGraphTermStoreGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphTermStoreGroupWithDefaults() *MicrosoftGraphTermStoreGroup {
	this := MicrosoftGraphTermStoreGroup{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphTermStoreGroup) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTermStoreGroup) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphTermStoreGroup) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphTermStoreGroup) SetId(v string) {
	o.Id = &v
}

// GetCreatedDateTime returns the CreatedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTermStoreGroup) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime.Get()
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTermStoreGroup) GetCreatedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatedDateTime.Get(), o.CreatedDateTime.IsSet()
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphTermStoreGroup) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime.IsSet() {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given NullableTime and assigns it to the CreatedDateTime field.
func (o *MicrosoftGraphTermStoreGroup) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime.Set(&v)
}
// SetCreatedDateTimeNil sets the value for CreatedDateTime to be an explicit nil
func (o *MicrosoftGraphTermStoreGroup) SetCreatedDateTimeNil() {
	o.CreatedDateTime.Set(nil)
}

// UnsetCreatedDateTime ensures that no value is present for CreatedDateTime, not even an explicit nil
func (o *MicrosoftGraphTermStoreGroup) UnsetCreatedDateTime() {
	o.CreatedDateTime.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTermStoreGroup) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTermStoreGroup) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *MicrosoftGraphTermStoreGroup) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *MicrosoftGraphTermStoreGroup) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *MicrosoftGraphTermStoreGroup) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *MicrosoftGraphTermStoreGroup) UnsetDescription() {
	o.Description.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTermStoreGroup) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTermStoreGroup) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphTermStoreGroup) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *MicrosoftGraphTermStoreGroup) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *MicrosoftGraphTermStoreGroup) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *MicrosoftGraphTermStoreGroup) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetParentSiteId returns the ParentSiteId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTermStoreGroup) GetParentSiteId() string {
	if o == nil || o.ParentSiteId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ParentSiteId.Get()
}

// GetParentSiteIdOk returns a tuple with the ParentSiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTermStoreGroup) GetParentSiteIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ParentSiteId.Get(), o.ParentSiteId.IsSet()
}

// HasParentSiteId returns a boolean if a field has been set.
func (o *MicrosoftGraphTermStoreGroup) HasParentSiteId() bool {
	if o != nil && o.ParentSiteId.IsSet() {
		return true
	}

	return false
}

// SetParentSiteId gets a reference to the given NullableString and assigns it to the ParentSiteId field.
func (o *MicrosoftGraphTermStoreGroup) SetParentSiteId(v string) {
	o.ParentSiteId.Set(&v)
}
// SetParentSiteIdNil sets the value for ParentSiteId to be an explicit nil
func (o *MicrosoftGraphTermStoreGroup) SetParentSiteIdNil() {
	o.ParentSiteId.Set(nil)
}

// UnsetParentSiteId ensures that no value is present for ParentSiteId, not even an explicit nil
func (o *MicrosoftGraphTermStoreGroup) UnsetParentSiteId() {
	o.ParentSiteId.Unset()
}

// GetScope returns the Scope field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTermStoreGroup) GetScope() AnyOfmicrosoftGraphTermStoreTermGroupScope {
	if o == nil  {
		var ret AnyOfmicrosoftGraphTermStoreTermGroupScope
		return ret
	}
	return o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTermStoreGroup) GetScopeOk() (*AnyOfmicrosoftGraphTermStoreTermGroupScope, bool) {
	if o == nil || o.Scope == nil {
		return nil, false
	}
	return &o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *MicrosoftGraphTermStoreGroup) HasScope() bool {
	if o != nil && o.Scope != nil {
		return true
	}

	return false
}

// SetScope gets a reference to the given AnyOfmicrosoftGraphTermStoreTermGroupScope and assigns it to the Scope field.
func (o *MicrosoftGraphTermStoreGroup) SetScope(v AnyOfmicrosoftGraphTermStoreTermGroupScope) {
	o.Scope = v
}

// GetSets returns the Sets field value if set, zero value otherwise.
func (o *MicrosoftGraphTermStoreGroup) GetSets() []MicrosoftGraphTermStoreSet {
	if o == nil || o.Sets == nil {
		var ret []MicrosoftGraphTermStoreSet
		return ret
	}
	return *o.Sets
}

// GetSetsOk returns a tuple with the Sets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTermStoreGroup) GetSetsOk() (*[]MicrosoftGraphTermStoreSet, bool) {
	if o == nil || o.Sets == nil {
		return nil, false
	}
	return o.Sets, true
}

// HasSets returns a boolean if a field has been set.
func (o *MicrosoftGraphTermStoreGroup) HasSets() bool {
	if o != nil && o.Sets != nil {
		return true
	}

	return false
}

// SetSets gets a reference to the given []MicrosoftGraphTermStoreSet and assigns it to the Sets field.
func (o *MicrosoftGraphTermStoreGroup) SetSets(v []MicrosoftGraphTermStoreSet) {
	o.Sets = &v
}

func (o MicrosoftGraphTermStoreGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.CreatedDateTime.IsSet() {
		toSerialize["createdDateTime"] = o.CreatedDateTime.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.ParentSiteId.IsSet() {
		toSerialize["parentSiteId"] = o.ParentSiteId.Get()
	}
	if o.Scope != nil {
		toSerialize["scope"] = o.Scope
	}
	if o.Sets != nil {
		toSerialize["sets"] = o.Sets
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphTermStoreGroup struct {
	value *MicrosoftGraphTermStoreGroup
	isSet bool
}

func (v NullableMicrosoftGraphTermStoreGroup) Get() *MicrosoftGraphTermStoreGroup {
	return v.value
}

func (v *NullableMicrosoftGraphTermStoreGroup) Set(val *MicrosoftGraphTermStoreGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphTermStoreGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphTermStoreGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphTermStoreGroup(val *MicrosoftGraphTermStoreGroup) *NullableMicrosoftGraphTermStoreGroup {
	return &NullableMicrosoftGraphTermStoreGroup{value: val, isSet: true}
}

func (v NullableMicrosoftGraphTermStoreGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphTermStoreGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


