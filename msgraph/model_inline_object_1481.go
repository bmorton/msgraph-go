/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// InlineObject1481 struct for InlineObject1481
type InlineObject1481 struct {
	Number AnyOfobject `json:"number,omitempty"`
	Ref AnyOfobject `json:"ref,omitempty"`
	Order AnyOfobject `json:"order,omitempty"`
}

// NewInlineObject1481 instantiates a new InlineObject1481 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject1481() *InlineObject1481 {
	this := InlineObject1481{}
	return &this
}

// NewInlineObject1481WithDefaults instantiates a new InlineObject1481 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject1481WithDefaults() *InlineObject1481 {
	this := InlineObject1481{}
	return &this
}

// GetNumber returns the Number field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1481) GetNumber() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1481) GetNumberOk() (*AnyOfobject, bool) {
	if o == nil || o.Number == nil {
		return nil, false
	}
	return &o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *InlineObject1481) HasNumber() bool {
	if o != nil && o.Number != nil {
		return true
	}

	return false
}

// SetNumber gets a reference to the given AnyOfobject and assigns it to the Number field.
func (o *InlineObject1481) SetNumber(v AnyOfobject) {
	o.Number = v
}

// GetRef returns the Ref field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1481) GetRef() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1481) GetRefOk() (*AnyOfobject, bool) {
	if o == nil || o.Ref == nil {
		return nil, false
	}
	return &o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *InlineObject1481) HasRef() bool {
	if o != nil && o.Ref != nil {
		return true
	}

	return false
}

// SetRef gets a reference to the given AnyOfobject and assigns it to the Ref field.
func (o *InlineObject1481) SetRef(v AnyOfobject) {
	o.Ref = v
}

// GetOrder returns the Order field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1481) GetOrder() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1481) GetOrderOk() (*AnyOfobject, bool) {
	if o == nil || o.Order == nil {
		return nil, false
	}
	return &o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *InlineObject1481) HasOrder() bool {
	if o != nil && o.Order != nil {
		return true
	}

	return false
}

// SetOrder gets a reference to the given AnyOfobject and assigns it to the Order field.
func (o *InlineObject1481) SetOrder(v AnyOfobject) {
	o.Order = v
}

func (o InlineObject1481) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Number != nil {
		toSerialize["number"] = o.Number
	}
	if o.Ref != nil {
		toSerialize["ref"] = o.Ref
	}
	if o.Order != nil {
		toSerialize["order"] = o.Order
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject1481 struct {
	value *InlineObject1481
	isSet bool
}

func (v NullableInlineObject1481) Get() *InlineObject1481 {
	return v.value
}

func (v *NullableInlineObject1481) Set(val *InlineObject1481) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject1481) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject1481) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject1481(val *InlineObject1481) *NullableInlineObject1481 {
	return &NullableInlineObject1481{value: val, isSet: true}
}

func (v NullableInlineObject1481) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject1481) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


