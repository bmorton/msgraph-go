/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject1518 struct for InlineObject1518
type InlineObject1518 struct {
	Range AnyOfobject `json:"range,omitempty"`
	Criteria AnyOfobject `json:"criteria,omitempty"`
	SumRange AnyOfobject `json:"sumRange,omitempty"`
}

// NewInlineObject1518 instantiates a new InlineObject1518 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject1518() *InlineObject1518 {
	this := InlineObject1518{}
	return &this
}

// NewInlineObject1518WithDefaults instantiates a new InlineObject1518 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject1518WithDefaults() *InlineObject1518 {
	this := InlineObject1518{}
	return &this
}

// GetRange returns the Range field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1518) GetRange() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Range
}

// GetRangeOk returns a tuple with the Range field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1518) GetRangeOk() (*AnyOfobject, bool) {
	if o == nil || o.Range == nil {
		return nil, false
	}
	return &o.Range, true
}

// HasRange returns a boolean if a field has been set.
func (o *InlineObject1518) HasRange() bool {
	if o != nil && o.Range != nil {
		return true
	}

	return false
}

// SetRange gets a reference to the given AnyOfobject and assigns it to the Range field.
func (o *InlineObject1518) SetRange(v AnyOfobject) {
	o.Range = v
}

// GetCriteria returns the Criteria field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1518) GetCriteria() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Criteria
}

// GetCriteriaOk returns a tuple with the Criteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1518) GetCriteriaOk() (*AnyOfobject, bool) {
	if o == nil || o.Criteria == nil {
		return nil, false
	}
	return &o.Criteria, true
}

// HasCriteria returns a boolean if a field has been set.
func (o *InlineObject1518) HasCriteria() bool {
	if o != nil && o.Criteria != nil {
		return true
	}

	return false
}

// SetCriteria gets a reference to the given AnyOfobject and assigns it to the Criteria field.
func (o *InlineObject1518) SetCriteria(v AnyOfobject) {
	o.Criteria = v
}

// GetSumRange returns the SumRange field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1518) GetSumRange() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.SumRange
}

// GetSumRangeOk returns a tuple with the SumRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1518) GetSumRangeOk() (*AnyOfobject, bool) {
	if o == nil || o.SumRange == nil {
		return nil, false
	}
	return &o.SumRange, true
}

// HasSumRange returns a boolean if a field has been set.
func (o *InlineObject1518) HasSumRange() bool {
	if o != nil && o.SumRange != nil {
		return true
	}

	return false
}

// SetSumRange gets a reference to the given AnyOfobject and assigns it to the SumRange field.
func (o *InlineObject1518) SetSumRange(v AnyOfobject) {
	o.SumRange = v
}

func (o InlineObject1518) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Range != nil {
		toSerialize["range"] = o.Range
	}
	if o.Criteria != nil {
		toSerialize["criteria"] = o.Criteria
	}
	if o.SumRange != nil {
		toSerialize["sumRange"] = o.SumRange
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject1518 struct {
	value *InlineObject1518
	isSet bool
}

func (v NullableInlineObject1518) Get() *InlineObject1518 {
	return v.value
}

func (v *NullableInlineObject1518) Set(val *InlineObject1518) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject1518) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject1518) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject1518(val *InlineObject1518) *NullableInlineObject1518 {
	return &NullableInlineObject1518{value: val, isSet: true}
}

func (v NullableInlineObject1518) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject1518) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


