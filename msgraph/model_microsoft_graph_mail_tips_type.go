/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphMailTipsType the model 'MicrosoftGraphMailTipsType'
type MicrosoftGraphMailTipsType string

// List of microsoft.graph.mailTipsType
const (
	AUTOMATIC_REPLIES MicrosoftGraphMailTipsType = "automaticReplies"
	MAILBOX_FULL_STATUS MicrosoftGraphMailTipsType = "mailboxFullStatus"
	CUSTOM_MAIL_TIP MicrosoftGraphMailTipsType = "customMailTip"
	EXTERNAL_MEMBER_COUNT MicrosoftGraphMailTipsType = "externalMemberCount"
	TOTAL_MEMBER_COUNT MicrosoftGraphMailTipsType = "totalMemberCount"
	MAX_MESSAGE_SIZE MicrosoftGraphMailTipsType = "maxMessageSize"
	DELIVERY_RESTRICTION MicrosoftGraphMailTipsType = "deliveryRestriction"
	MODERATION_STATUS MicrosoftGraphMailTipsType = "moderationStatus"
	RECIPIENT_SCOPE MicrosoftGraphMailTipsType = "recipientScope"
	RECIPIENT_SUGGESTIONS MicrosoftGraphMailTipsType = "recipientSuggestions"
)

// All allowed values of MicrosoftGraphMailTipsType enum
var AllowedMicrosoftGraphMailTipsTypeEnumValues = []MicrosoftGraphMailTipsType{
	"automaticReplies",
	"mailboxFullStatus",
	"customMailTip",
	"externalMemberCount",
	"totalMemberCount",
	"maxMessageSize",
	"deliveryRestriction",
	"moderationStatus",
	"recipientScope",
	"recipientSuggestions",
}

func (v *MicrosoftGraphMailTipsType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphMailTipsType(value)
	for _, existing := range AllowedMicrosoftGraphMailTipsTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphMailTipsType", value)
}

// NewMicrosoftGraphMailTipsTypeFromValue returns a pointer to a valid MicrosoftGraphMailTipsType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphMailTipsTypeFromValue(v string) (*MicrosoftGraphMailTipsType, error) {
	ev := MicrosoftGraphMailTipsType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphMailTipsType: valid values are %v", v, AllowedMicrosoftGraphMailTipsTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphMailTipsType) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphMailTipsTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.mailTipsType value
func (v MicrosoftGraphMailTipsType) Ptr() *MicrosoftGraphMailTipsType {
	return &v
}

type NullableMicrosoftGraphMailTipsType struct {
	value *MicrosoftGraphMailTipsType
	isSet bool
}

func (v NullableMicrosoftGraphMailTipsType) Get() *MicrosoftGraphMailTipsType {
	return v.value
}

func (v *NullableMicrosoftGraphMailTipsType) Set(val *MicrosoftGraphMailTipsType) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphMailTipsType) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphMailTipsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphMailTipsType(val *MicrosoftGraphMailTipsType) *NullableMicrosoftGraphMailTipsType {
	return &NullableMicrosoftGraphMailTipsType{value: val, isSet: true}
}

func (v NullableMicrosoftGraphMailTipsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphMailTipsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

