/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DriveItemVersion struct for DriveItemVersion
type DriveItemVersion struct {
	// The content stream for this version of the item.
	Content NullableString `json:"content,omitempty"`
	// Indicates the size of the content stream for this version of the item.
	Size NullableInt64 `json:"size,omitempty"`
}

// NewDriveItemVersion instantiates a new DriveItemVersion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDriveItemVersion() *DriveItemVersion {
	this := DriveItemVersion{}
	return &this
}

// NewDriveItemVersionWithDefaults instantiates a new DriveItemVersion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDriveItemVersionWithDefaults() *DriveItemVersion {
	this := DriveItemVersion{}
	return &this
}

// GetContent returns the Content field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DriveItemVersion) GetContent() string {
	if o == nil || o.Content.Get() == nil {
		var ret string
		return ret
	}
	return *o.Content.Get()
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DriveItemVersion) GetContentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Content.Get(), o.Content.IsSet()
}

// HasContent returns a boolean if a field has been set.
func (o *DriveItemVersion) HasContent() bool {
	if o != nil && o.Content.IsSet() {
		return true
	}

	return false
}

// SetContent gets a reference to the given NullableString and assigns it to the Content field.
func (o *DriveItemVersion) SetContent(v string) {
	o.Content.Set(&v)
}
// SetContentNil sets the value for Content to be an explicit nil
func (o *DriveItemVersion) SetContentNil() {
	o.Content.Set(nil)
}

// UnsetContent ensures that no value is present for Content, not even an explicit nil
func (o *DriveItemVersion) UnsetContent() {
	o.Content.Unset()
}

// GetSize returns the Size field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DriveItemVersion) GetSize() int64 {
	if o == nil || o.Size.Get() == nil {
		var ret int64
		return ret
	}
	return *o.Size.Get()
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DriveItemVersion) GetSizeOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Size.Get(), o.Size.IsSet()
}

// HasSize returns a boolean if a field has been set.
func (o *DriveItemVersion) HasSize() bool {
	if o != nil && o.Size.IsSet() {
		return true
	}

	return false
}

// SetSize gets a reference to the given NullableInt64 and assigns it to the Size field.
func (o *DriveItemVersion) SetSize(v int64) {
	o.Size.Set(&v)
}
// SetSizeNil sets the value for Size to be an explicit nil
func (o *DriveItemVersion) SetSizeNil() {
	o.Size.Set(nil)
}

// UnsetSize ensures that no value is present for Size, not even an explicit nil
func (o *DriveItemVersion) UnsetSize() {
	o.Size.Unset()
}

func (o DriveItemVersion) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Content.IsSet() {
		toSerialize["content"] = o.Content.Get()
	}
	if o.Size.IsSet() {
		toSerialize["size"] = o.Size.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableDriveItemVersion struct {
	value *DriveItemVersion
	isSet bool
}

func (v NullableDriveItemVersion) Get() *DriveItemVersion {
	return v.value
}

func (v *NullableDriveItemVersion) Set(val *DriveItemVersion) {
	v.value = val
	v.isSet = true
}

func (v NullableDriveItemVersion) IsSet() bool {
	return v.isSet
}

func (v *NullableDriveItemVersion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDriveItemVersion(val *DriveItemVersion) *NullableDriveItemVersion {
	return &NullableDriveItemVersion{value: val, isSet: true}
}

func (v NullableDriveItemVersion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDriveItemVersion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


