/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DeviceComplianceActionItem Scheduled Action Configuration
type DeviceComplianceActionItem struct {
	// What action to take. Possible values are: noAction, notification, block, retire, wipe, removeResourceAccessProfiles, pushNotification.
	ActionType AnyOfmicrosoftGraphDeviceComplianceActionType `json:"actionType,omitempty"`
	// Number of hours to wait till the action will be enforced. Valid values 0 to 8760
	GracePeriodHours *int32 `json:"gracePeriodHours,omitempty"`
	// A list of group IDs to speicify who to CC this notification message to.
	NotificationMessageCCList *[]*string `json:"notificationMessageCCList,omitempty"`
	// What notification Message template to use
	NotificationTemplateId NullableString `json:"notificationTemplateId,omitempty"`
}

// NewDeviceComplianceActionItem instantiates a new DeviceComplianceActionItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceComplianceActionItem() *DeviceComplianceActionItem {
	this := DeviceComplianceActionItem{}
	return &this
}

// NewDeviceComplianceActionItemWithDefaults instantiates a new DeviceComplianceActionItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceComplianceActionItemWithDefaults() *DeviceComplianceActionItem {
	this := DeviceComplianceActionItem{}
	return &this
}

// GetActionType returns the ActionType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeviceComplianceActionItem) GetActionType() AnyOfmicrosoftGraphDeviceComplianceActionType {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDeviceComplianceActionType
		return ret
	}
	return o.ActionType
}

// GetActionTypeOk returns a tuple with the ActionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeviceComplianceActionItem) GetActionTypeOk() (*AnyOfmicrosoftGraphDeviceComplianceActionType, bool) {
	if o == nil || o.ActionType == nil {
		return nil, false
	}
	return &o.ActionType, true
}

// HasActionType returns a boolean if a field has been set.
func (o *DeviceComplianceActionItem) HasActionType() bool {
	if o != nil && o.ActionType != nil {
		return true
	}

	return false
}

// SetActionType gets a reference to the given AnyOfmicrosoftGraphDeviceComplianceActionType and assigns it to the ActionType field.
func (o *DeviceComplianceActionItem) SetActionType(v AnyOfmicrosoftGraphDeviceComplianceActionType) {
	o.ActionType = v
}

// GetGracePeriodHours returns the GracePeriodHours field value if set, zero value otherwise.
func (o *DeviceComplianceActionItem) GetGracePeriodHours() int32 {
	if o == nil || o.GracePeriodHours == nil {
		var ret int32
		return ret
	}
	return *o.GracePeriodHours
}

// GetGracePeriodHoursOk returns a tuple with the GracePeriodHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceComplianceActionItem) GetGracePeriodHoursOk() (*int32, bool) {
	if o == nil || o.GracePeriodHours == nil {
		return nil, false
	}
	return o.GracePeriodHours, true
}

// HasGracePeriodHours returns a boolean if a field has been set.
func (o *DeviceComplianceActionItem) HasGracePeriodHours() bool {
	if o != nil && o.GracePeriodHours != nil {
		return true
	}

	return false
}

// SetGracePeriodHours gets a reference to the given int32 and assigns it to the GracePeriodHours field.
func (o *DeviceComplianceActionItem) SetGracePeriodHours(v int32) {
	o.GracePeriodHours = &v
}

// GetNotificationMessageCCList returns the NotificationMessageCCList field value if set, zero value otherwise.
func (o *DeviceComplianceActionItem) GetNotificationMessageCCList() []*string {
	if o == nil || o.NotificationMessageCCList == nil {
		var ret []*string
		return ret
	}
	return *o.NotificationMessageCCList
}

// GetNotificationMessageCCListOk returns a tuple with the NotificationMessageCCList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceComplianceActionItem) GetNotificationMessageCCListOk() (*[]*string, bool) {
	if o == nil || o.NotificationMessageCCList == nil {
		return nil, false
	}
	return o.NotificationMessageCCList, true
}

// HasNotificationMessageCCList returns a boolean if a field has been set.
func (o *DeviceComplianceActionItem) HasNotificationMessageCCList() bool {
	if o != nil && o.NotificationMessageCCList != nil {
		return true
	}

	return false
}

// SetNotificationMessageCCList gets a reference to the given []*string and assigns it to the NotificationMessageCCList field.
func (o *DeviceComplianceActionItem) SetNotificationMessageCCList(v []*string) {
	o.NotificationMessageCCList = &v
}

// GetNotificationTemplateId returns the NotificationTemplateId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeviceComplianceActionItem) GetNotificationTemplateId() string {
	if o == nil || o.NotificationTemplateId.Get() == nil {
		var ret string
		return ret
	}
	return *o.NotificationTemplateId.Get()
}

// GetNotificationTemplateIdOk returns a tuple with the NotificationTemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeviceComplianceActionItem) GetNotificationTemplateIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NotificationTemplateId.Get(), o.NotificationTemplateId.IsSet()
}

// HasNotificationTemplateId returns a boolean if a field has been set.
func (o *DeviceComplianceActionItem) HasNotificationTemplateId() bool {
	if o != nil && o.NotificationTemplateId.IsSet() {
		return true
	}

	return false
}

// SetNotificationTemplateId gets a reference to the given NullableString and assigns it to the NotificationTemplateId field.
func (o *DeviceComplianceActionItem) SetNotificationTemplateId(v string) {
	o.NotificationTemplateId.Set(&v)
}
// SetNotificationTemplateIdNil sets the value for NotificationTemplateId to be an explicit nil
func (o *DeviceComplianceActionItem) SetNotificationTemplateIdNil() {
	o.NotificationTemplateId.Set(nil)
}

// UnsetNotificationTemplateId ensures that no value is present for NotificationTemplateId, not even an explicit nil
func (o *DeviceComplianceActionItem) UnsetNotificationTemplateId() {
	o.NotificationTemplateId.Unset()
}

func (o DeviceComplianceActionItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ActionType != nil {
		toSerialize["actionType"] = o.ActionType
	}
	if o.GracePeriodHours != nil {
		toSerialize["gracePeriodHours"] = o.GracePeriodHours
	}
	if o.NotificationMessageCCList != nil {
		toSerialize["notificationMessageCCList"] = o.NotificationMessageCCList
	}
	if o.NotificationTemplateId.IsSet() {
		toSerialize["notificationTemplateId"] = o.NotificationTemplateId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableDeviceComplianceActionItem struct {
	value *DeviceComplianceActionItem
	isSet bool
}

func (v NullableDeviceComplianceActionItem) Get() *DeviceComplianceActionItem {
	return v.value
}

func (v *NullableDeviceComplianceActionItem) Set(val *DeviceComplianceActionItem) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceComplianceActionItem) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceComplianceActionItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceComplianceActionItem(val *DeviceComplianceActionItem) *NullableDeviceComplianceActionItem {
	return &NullableDeviceComplianceActionItem{value: val, isSet: true}
}

func (v NullableDeviceComplianceActionItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceComplianceActionItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


