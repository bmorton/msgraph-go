/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphExternalConnectorsAclType the model 'MicrosoftGraphExternalConnectorsAclType'
type MicrosoftGraphExternalConnectorsAclType string

// List of microsoft.graph.externalConnectors.aclType
const (
	USER MicrosoftGraphExternalConnectorsAclType = "user"
	GROUP MicrosoftGraphExternalConnectorsAclType = "group"
	EVERYONE MicrosoftGraphExternalConnectorsAclType = "everyone"
	EVERYONE_EXCEPT_GUESTS MicrosoftGraphExternalConnectorsAclType = "everyoneExceptGuests"
	EXTERNAL_GROUP MicrosoftGraphExternalConnectorsAclType = "externalGroup"
	UNKNOWN_FUTURE_VALUE MicrosoftGraphExternalConnectorsAclType = "unknownFutureValue"
)

// All allowed values of MicrosoftGraphExternalConnectorsAclType enum
var AllowedMicrosoftGraphExternalConnectorsAclTypeEnumValues = []MicrosoftGraphExternalConnectorsAclType{
	"user",
	"group",
	"everyone",
	"everyoneExceptGuests",
	"externalGroup",
	"unknownFutureValue",
}

func (v *MicrosoftGraphExternalConnectorsAclType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphExternalConnectorsAclType(value)
	for _, existing := range AllowedMicrosoftGraphExternalConnectorsAclTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphExternalConnectorsAclType", value)
}

// NewMicrosoftGraphExternalConnectorsAclTypeFromValue returns a pointer to a valid MicrosoftGraphExternalConnectorsAclType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphExternalConnectorsAclTypeFromValue(v string) (*MicrosoftGraphExternalConnectorsAclType, error) {
	ev := MicrosoftGraphExternalConnectorsAclType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphExternalConnectorsAclType: valid values are %v", v, AllowedMicrosoftGraphExternalConnectorsAclTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphExternalConnectorsAclType) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphExternalConnectorsAclTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.externalConnectors.aclType value
func (v MicrosoftGraphExternalConnectorsAclType) Ptr() *MicrosoftGraphExternalConnectorsAclType {
	return &v
}

type NullableMicrosoftGraphExternalConnectorsAclType struct {
	value *MicrosoftGraphExternalConnectorsAclType
	isSet bool
}

func (v NullableMicrosoftGraphExternalConnectorsAclType) Get() *MicrosoftGraphExternalConnectorsAclType {
	return v.value
}

func (v *NullableMicrosoftGraphExternalConnectorsAclType) Set(val *MicrosoftGraphExternalConnectorsAclType) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphExternalConnectorsAclType) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphExternalConnectorsAclType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphExternalConnectorsAclType(val *MicrosoftGraphExternalConnectorsAclType) *NullableMicrosoftGraphExternalConnectorsAclType {
	return &NullableMicrosoftGraphExternalConnectorsAclType{value: val, isSet: true}
}

func (v NullableMicrosoftGraphExternalConnectorsAclType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphExternalConnectorsAclType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

