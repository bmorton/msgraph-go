/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// GroupSettingTemplate struct for GroupSettingTemplate
type GroupSettingTemplate struct {
	// Description of the template.
	Description NullableString `json:"description,omitempty"`
	// Display name of the template.
	DisplayName NullableString `json:"displayName,omitempty"`
	// Collection of settingTemplateValues that list the set of available settings, defaults and types that make up this template.
	Values *[]MicrosoftGraphSettingTemplateValue `json:"values,omitempty"`
}

// NewGroupSettingTemplate instantiates a new GroupSettingTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupSettingTemplate() *GroupSettingTemplate {
	this := GroupSettingTemplate{}
	return &this
}

// NewGroupSettingTemplateWithDefaults instantiates a new GroupSettingTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupSettingTemplateWithDefaults() *GroupSettingTemplate {
	this := GroupSettingTemplate{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GroupSettingTemplate) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GroupSettingTemplate) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *GroupSettingTemplate) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *GroupSettingTemplate) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *GroupSettingTemplate) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *GroupSettingTemplate) UnsetDescription() {
	o.Description.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GroupSettingTemplate) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GroupSettingTemplate) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *GroupSettingTemplate) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *GroupSettingTemplate) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *GroupSettingTemplate) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *GroupSettingTemplate) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *GroupSettingTemplate) GetValues() []MicrosoftGraphSettingTemplateValue {
	if o == nil || o.Values == nil {
		var ret []MicrosoftGraphSettingTemplateValue
		return ret
	}
	return *o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupSettingTemplate) GetValuesOk() (*[]MicrosoftGraphSettingTemplateValue, bool) {
	if o == nil || o.Values == nil {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *GroupSettingTemplate) HasValues() bool {
	if o != nil && o.Values != nil {
		return true
	}

	return false
}

// SetValues gets a reference to the given []MicrosoftGraphSettingTemplateValue and assigns it to the Values field.
func (o *GroupSettingTemplate) SetValues(v []MicrosoftGraphSettingTemplateValue) {
	o.Values = &v
}

func (o GroupSettingTemplate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.Values != nil {
		toSerialize["values"] = o.Values
	}
	return json.Marshal(toSerialize)
}

type NullableGroupSettingTemplate struct {
	value *GroupSettingTemplate
	isSet bool
}

func (v NullableGroupSettingTemplate) Get() *GroupSettingTemplate {
	return v.value
}

func (v *NullableGroupSettingTemplate) Set(val *GroupSettingTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupSettingTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupSettingTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupSettingTemplate(val *GroupSettingTemplate) *NullableGroupSettingTemplate {
	return &NullableGroupSettingTemplate{value: val, isSet: true}
}

func (v NullableGroupSettingTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupSettingTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


