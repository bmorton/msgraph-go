/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphInferenceClassification struct for MicrosoftGraphInferenceClassification
type MicrosoftGraphInferenceClassification struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// A set of overrides for a user to always classify messages from specific senders in certain ways: focused, or other. Read-only. Nullable.
	Overrides *[]MicrosoftGraphInferenceClassificationOverride `json:"overrides,omitempty"`
}

// NewMicrosoftGraphInferenceClassification instantiates a new MicrosoftGraphInferenceClassification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphInferenceClassification() *MicrosoftGraphInferenceClassification {
	this := MicrosoftGraphInferenceClassification{}
	return &this
}

// NewMicrosoftGraphInferenceClassificationWithDefaults instantiates a new MicrosoftGraphInferenceClassification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphInferenceClassificationWithDefaults() *MicrosoftGraphInferenceClassification {
	this := MicrosoftGraphInferenceClassification{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphInferenceClassification) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphInferenceClassification) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphInferenceClassification) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphInferenceClassification) SetId(v string) {
	o.Id = &v
}

// GetOverrides returns the Overrides field value if set, zero value otherwise.
func (o *MicrosoftGraphInferenceClassification) GetOverrides() []MicrosoftGraphInferenceClassificationOverride {
	if o == nil || o.Overrides == nil {
		var ret []MicrosoftGraphInferenceClassificationOverride
		return ret
	}
	return *o.Overrides
}

// GetOverridesOk returns a tuple with the Overrides field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphInferenceClassification) GetOverridesOk() (*[]MicrosoftGraphInferenceClassificationOverride, bool) {
	if o == nil || o.Overrides == nil {
		return nil, false
	}
	return o.Overrides, true
}

// HasOverrides returns a boolean if a field has been set.
func (o *MicrosoftGraphInferenceClassification) HasOverrides() bool {
	if o != nil && o.Overrides != nil {
		return true
	}

	return false
}

// SetOverrides gets a reference to the given []MicrosoftGraphInferenceClassificationOverride and assigns it to the Overrides field.
func (o *MicrosoftGraphInferenceClassification) SetOverrides(v []MicrosoftGraphInferenceClassificationOverride) {
	o.Overrides = &v
}

func (o MicrosoftGraphInferenceClassification) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Overrides != nil {
		toSerialize["overrides"] = o.Overrides
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphInferenceClassification struct {
	value *MicrosoftGraphInferenceClassification
	isSet bool
}

func (v NullableMicrosoftGraphInferenceClassification) Get() *MicrosoftGraphInferenceClassification {
	return v.value
}

func (v *NullableMicrosoftGraphInferenceClassification) Set(val *MicrosoftGraphInferenceClassification) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphInferenceClassification) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphInferenceClassification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphInferenceClassification(val *MicrosoftGraphInferenceClassification) *NullableMicrosoftGraphInferenceClassification {
	return &NullableMicrosoftGraphInferenceClassification{value: val, isSet: true}
}

func (v NullableMicrosoftGraphInferenceClassification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphInferenceClassification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


