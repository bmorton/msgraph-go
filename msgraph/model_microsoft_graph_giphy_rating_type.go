/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphGiphyRatingType the model 'MicrosoftGraphGiphyRatingType'
type MicrosoftGraphGiphyRatingType string

// List of microsoft.graph.giphyRatingType
const (
	STRICT MicrosoftGraphGiphyRatingType = "strict"
	MODERATE MicrosoftGraphGiphyRatingType = "moderate"
	UNKNOWN_FUTURE_VALUE MicrosoftGraphGiphyRatingType = "unknownFutureValue"
)

// All allowed values of MicrosoftGraphGiphyRatingType enum
var AllowedMicrosoftGraphGiphyRatingTypeEnumValues = []MicrosoftGraphGiphyRatingType{
	"strict",
	"moderate",
	"unknownFutureValue",
}

func (v *MicrosoftGraphGiphyRatingType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphGiphyRatingType(value)
	for _, existing := range AllowedMicrosoftGraphGiphyRatingTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphGiphyRatingType", value)
}

// NewMicrosoftGraphGiphyRatingTypeFromValue returns a pointer to a valid MicrosoftGraphGiphyRatingType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphGiphyRatingTypeFromValue(v string) (*MicrosoftGraphGiphyRatingType, error) {
	ev := MicrosoftGraphGiphyRatingType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphGiphyRatingType: valid values are %v", v, AllowedMicrosoftGraphGiphyRatingTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphGiphyRatingType) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphGiphyRatingTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.giphyRatingType value
func (v MicrosoftGraphGiphyRatingType) Ptr() *MicrosoftGraphGiphyRatingType {
	return &v
}

type NullableMicrosoftGraphGiphyRatingType struct {
	value *MicrosoftGraphGiphyRatingType
	isSet bool
}

func (v NullableMicrosoftGraphGiphyRatingType) Get() *MicrosoftGraphGiphyRatingType {
	return v.value
}

func (v *NullableMicrosoftGraphGiphyRatingType) Set(val *MicrosoftGraphGiphyRatingType) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphGiphyRatingType) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphGiphyRatingType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphGiphyRatingType(val *MicrosoftGraphGiphyRatingType) *NullableMicrosoftGraphGiphyRatingType {
	return &NullableMicrosoftGraphGiphyRatingType{value: val, isSet: true}
}

func (v NullableMicrosoftGraphGiphyRatingType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphGiphyRatingType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

