/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// AppCatalogs struct for AppCatalogs
type AppCatalogs struct {
	TeamsApps *[]MicrosoftGraphTeamsApp `json:"teamsApps,omitempty"`
}

// NewAppCatalogs instantiates a new AppCatalogs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppCatalogs() *AppCatalogs {
	this := AppCatalogs{}
	return &this
}

// NewAppCatalogsWithDefaults instantiates a new AppCatalogs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppCatalogsWithDefaults() *AppCatalogs {
	this := AppCatalogs{}
	return &this
}

// GetTeamsApps returns the TeamsApps field value if set, zero value otherwise.
func (o *AppCatalogs) GetTeamsApps() []MicrosoftGraphTeamsApp {
	if o == nil || o.TeamsApps == nil {
		var ret []MicrosoftGraphTeamsApp
		return ret
	}
	return *o.TeamsApps
}

// GetTeamsAppsOk returns a tuple with the TeamsApps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppCatalogs) GetTeamsAppsOk() (*[]MicrosoftGraphTeamsApp, bool) {
	if o == nil || o.TeamsApps == nil {
		return nil, false
	}
	return o.TeamsApps, true
}

// HasTeamsApps returns a boolean if a field has been set.
func (o *AppCatalogs) HasTeamsApps() bool {
	if o != nil && o.TeamsApps != nil {
		return true
	}

	return false
}

// SetTeamsApps gets a reference to the given []MicrosoftGraphTeamsApp and assigns it to the TeamsApps field.
func (o *AppCatalogs) SetTeamsApps(v []MicrosoftGraphTeamsApp) {
	o.TeamsApps = &v
}

func (o AppCatalogs) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TeamsApps != nil {
		toSerialize["teamsApps"] = o.TeamsApps
	}
	return json.Marshal(toSerialize)
}

type NullableAppCatalogs struct {
	value *AppCatalogs
	isSet bool
}

func (v NullableAppCatalogs) Get() *AppCatalogs {
	return v.value
}

func (v *NullableAppCatalogs) Set(val *AppCatalogs) {
	v.value = val
	v.isSet = true
}

func (v NullableAppCatalogs) IsSet() bool {
	return v.isSet
}

func (v *NullableAppCatalogs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppCatalogs(val *AppCatalogs) *NullableAppCatalogs {
	return &NullableAppCatalogs{value: val, isSet: true}
}

func (v NullableAppCatalogs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppCatalogs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


