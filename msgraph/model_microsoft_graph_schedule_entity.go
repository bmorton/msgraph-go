/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphScheduleEntity struct for MicrosoftGraphScheduleEntity
type MicrosoftGraphScheduleEntity struct {
	EndDateTime NullableTime `json:"endDateTime,omitempty"`
	StartDateTime NullableTime `json:"startDateTime,omitempty"`
	Theme AnyOfmicrosoftGraphScheduleEntityTheme `json:"theme,omitempty"`
}

// NewMicrosoftGraphScheduleEntity instantiates a new MicrosoftGraphScheduleEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphScheduleEntity() *MicrosoftGraphScheduleEntity {
	this := MicrosoftGraphScheduleEntity{}
	return &this
}

// NewMicrosoftGraphScheduleEntityWithDefaults instantiates a new MicrosoftGraphScheduleEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphScheduleEntityWithDefaults() *MicrosoftGraphScheduleEntity {
	this := MicrosoftGraphScheduleEntity{}
	return &this
}

// GetEndDateTime returns the EndDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphScheduleEntity) GetEndDateTime() time.Time {
	if o == nil || o.EndDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.EndDateTime.Get()
}

// GetEndDateTimeOk returns a tuple with the EndDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphScheduleEntity) GetEndDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EndDateTime.Get(), o.EndDateTime.IsSet()
}

// HasEndDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphScheduleEntity) HasEndDateTime() bool {
	if o != nil && o.EndDateTime.IsSet() {
		return true
	}

	return false
}

// SetEndDateTime gets a reference to the given NullableTime and assigns it to the EndDateTime field.
func (o *MicrosoftGraphScheduleEntity) SetEndDateTime(v time.Time) {
	o.EndDateTime.Set(&v)
}
// SetEndDateTimeNil sets the value for EndDateTime to be an explicit nil
func (o *MicrosoftGraphScheduleEntity) SetEndDateTimeNil() {
	o.EndDateTime.Set(nil)
}

// UnsetEndDateTime ensures that no value is present for EndDateTime, not even an explicit nil
func (o *MicrosoftGraphScheduleEntity) UnsetEndDateTime() {
	o.EndDateTime.Unset()
}

// GetStartDateTime returns the StartDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphScheduleEntity) GetStartDateTime() time.Time {
	if o == nil || o.StartDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.StartDateTime.Get()
}

// GetStartDateTimeOk returns a tuple with the StartDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphScheduleEntity) GetStartDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StartDateTime.Get(), o.StartDateTime.IsSet()
}

// HasStartDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphScheduleEntity) HasStartDateTime() bool {
	if o != nil && o.StartDateTime.IsSet() {
		return true
	}

	return false
}

// SetStartDateTime gets a reference to the given NullableTime and assigns it to the StartDateTime field.
func (o *MicrosoftGraphScheduleEntity) SetStartDateTime(v time.Time) {
	o.StartDateTime.Set(&v)
}
// SetStartDateTimeNil sets the value for StartDateTime to be an explicit nil
func (o *MicrosoftGraphScheduleEntity) SetStartDateTimeNil() {
	o.StartDateTime.Set(nil)
}

// UnsetStartDateTime ensures that no value is present for StartDateTime, not even an explicit nil
func (o *MicrosoftGraphScheduleEntity) UnsetStartDateTime() {
	o.StartDateTime.Unset()
}

// GetTheme returns the Theme field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphScheduleEntity) GetTheme() AnyOfmicrosoftGraphScheduleEntityTheme {
	if o == nil  {
		var ret AnyOfmicrosoftGraphScheduleEntityTheme
		return ret
	}
	return o.Theme
}

// GetThemeOk returns a tuple with the Theme field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphScheduleEntity) GetThemeOk() (*AnyOfmicrosoftGraphScheduleEntityTheme, bool) {
	if o == nil || o.Theme == nil {
		return nil, false
	}
	return &o.Theme, true
}

// HasTheme returns a boolean if a field has been set.
func (o *MicrosoftGraphScheduleEntity) HasTheme() bool {
	if o != nil && o.Theme != nil {
		return true
	}

	return false
}

// SetTheme gets a reference to the given AnyOfmicrosoftGraphScheduleEntityTheme and assigns it to the Theme field.
func (o *MicrosoftGraphScheduleEntity) SetTheme(v AnyOfmicrosoftGraphScheduleEntityTheme) {
	o.Theme = v
}

func (o MicrosoftGraphScheduleEntity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EndDateTime.IsSet() {
		toSerialize["endDateTime"] = o.EndDateTime.Get()
	}
	if o.StartDateTime.IsSet() {
		toSerialize["startDateTime"] = o.StartDateTime.Get()
	}
	if o.Theme != nil {
		toSerialize["theme"] = o.Theme
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphScheduleEntity struct {
	value *MicrosoftGraphScheduleEntity
	isSet bool
}

func (v NullableMicrosoftGraphScheduleEntity) Get() *MicrosoftGraphScheduleEntity {
	return v.value
}

func (v *NullableMicrosoftGraphScheduleEntity) Set(val *MicrosoftGraphScheduleEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphScheduleEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphScheduleEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphScheduleEntity(val *MicrosoftGraphScheduleEntity) *NullableMicrosoftGraphScheduleEntity {
	return &NullableMicrosoftGraphScheduleEntity{value: val, isSet: true}
}

func (v NullableMicrosoftGraphScheduleEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphScheduleEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


