/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject1426 struct for InlineObject1426
type InlineObject1426 struct {
	Text AnyOfobject `json:"text,omitempty"`
	StartNum AnyOfobject `json:"startNum,omitempty"`
	NumBytes AnyOfobject `json:"numBytes,omitempty"`
}

// NewInlineObject1426 instantiates a new InlineObject1426 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject1426() *InlineObject1426 {
	this := InlineObject1426{}
	return &this
}

// NewInlineObject1426WithDefaults instantiates a new InlineObject1426 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject1426WithDefaults() *InlineObject1426 {
	this := InlineObject1426{}
	return &this
}

// GetText returns the Text field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1426) GetText() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1426) GetTextOk() (*AnyOfobject, bool) {
	if o == nil || o.Text == nil {
		return nil, false
	}
	return &o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *InlineObject1426) HasText() bool {
	if o != nil && o.Text != nil {
		return true
	}

	return false
}

// SetText gets a reference to the given AnyOfobject and assigns it to the Text field.
func (o *InlineObject1426) SetText(v AnyOfobject) {
	o.Text = v
}

// GetStartNum returns the StartNum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1426) GetStartNum() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.StartNum
}

// GetStartNumOk returns a tuple with the StartNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1426) GetStartNumOk() (*AnyOfobject, bool) {
	if o == nil || o.StartNum == nil {
		return nil, false
	}
	return &o.StartNum, true
}

// HasStartNum returns a boolean if a field has been set.
func (o *InlineObject1426) HasStartNum() bool {
	if o != nil && o.StartNum != nil {
		return true
	}

	return false
}

// SetStartNum gets a reference to the given AnyOfobject and assigns it to the StartNum field.
func (o *InlineObject1426) SetStartNum(v AnyOfobject) {
	o.StartNum = v
}

// GetNumBytes returns the NumBytes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1426) GetNumBytes() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.NumBytes
}

// GetNumBytesOk returns a tuple with the NumBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1426) GetNumBytesOk() (*AnyOfobject, bool) {
	if o == nil || o.NumBytes == nil {
		return nil, false
	}
	return &o.NumBytes, true
}

// HasNumBytes returns a boolean if a field has been set.
func (o *InlineObject1426) HasNumBytes() bool {
	if o != nil && o.NumBytes != nil {
		return true
	}

	return false
}

// SetNumBytes gets a reference to the given AnyOfobject and assigns it to the NumBytes field.
func (o *InlineObject1426) SetNumBytes(v AnyOfobject) {
	o.NumBytes = v
}

func (o InlineObject1426) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Text != nil {
		toSerialize["text"] = o.Text
	}
	if o.StartNum != nil {
		toSerialize["startNum"] = o.StartNum
	}
	if o.NumBytes != nil {
		toSerialize["numBytes"] = o.NumBytes
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject1426 struct {
	value *InlineObject1426
	isSet bool
}

func (v NullableInlineObject1426) Get() *InlineObject1426 {
	return v.value
}

func (v *NullableInlineObject1426) Set(val *InlineObject1426) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject1426) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject1426) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject1426(val *InlineObject1426) *NullableInlineObject1426 {
	return &NullableInlineObject1426{value: val, isSet: true}
}

func (v NullableInlineObject1426) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject1426) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


