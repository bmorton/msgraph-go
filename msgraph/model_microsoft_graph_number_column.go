/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphNumberColumn struct for MicrosoftGraphNumberColumn
type MicrosoftGraphNumberColumn struct {
	// How many decimal places to display. See below for information about the possible values.
	DecimalPlaces NullableString `json:"decimalPlaces,omitempty"`
	// How the value should be presented in the UX. Must be one of number or percentage. If unspecified, treated as number.
	DisplayAs NullableString `json:"displayAs,omitempty"`
	// The maximum permitted value.
	Maximum AnyOfnumberstringstring `json:"maximum,omitempty"`
	// The minimum permitted value.
	Minimum AnyOfnumberstringstring `json:"minimum,omitempty"`
}

// NewMicrosoftGraphNumberColumn instantiates a new MicrosoftGraphNumberColumn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphNumberColumn() *MicrosoftGraphNumberColumn {
	this := MicrosoftGraphNumberColumn{}
	return &this
}

// NewMicrosoftGraphNumberColumnWithDefaults instantiates a new MicrosoftGraphNumberColumn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphNumberColumnWithDefaults() *MicrosoftGraphNumberColumn {
	this := MicrosoftGraphNumberColumn{}
	return &this
}

// GetDecimalPlaces returns the DecimalPlaces field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphNumberColumn) GetDecimalPlaces() string {
	if o == nil || o.DecimalPlaces.Get() == nil {
		var ret string
		return ret
	}
	return *o.DecimalPlaces.Get()
}

// GetDecimalPlacesOk returns a tuple with the DecimalPlaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphNumberColumn) GetDecimalPlacesOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DecimalPlaces.Get(), o.DecimalPlaces.IsSet()
}

// HasDecimalPlaces returns a boolean if a field has been set.
func (o *MicrosoftGraphNumberColumn) HasDecimalPlaces() bool {
	if o != nil && o.DecimalPlaces.IsSet() {
		return true
	}

	return false
}

// SetDecimalPlaces gets a reference to the given NullableString and assigns it to the DecimalPlaces field.
func (o *MicrosoftGraphNumberColumn) SetDecimalPlaces(v string) {
	o.DecimalPlaces.Set(&v)
}
// SetDecimalPlacesNil sets the value for DecimalPlaces to be an explicit nil
func (o *MicrosoftGraphNumberColumn) SetDecimalPlacesNil() {
	o.DecimalPlaces.Set(nil)
}

// UnsetDecimalPlaces ensures that no value is present for DecimalPlaces, not even an explicit nil
func (o *MicrosoftGraphNumberColumn) UnsetDecimalPlaces() {
	o.DecimalPlaces.Unset()
}

// GetDisplayAs returns the DisplayAs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphNumberColumn) GetDisplayAs() string {
	if o == nil || o.DisplayAs.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayAs.Get()
}

// GetDisplayAsOk returns a tuple with the DisplayAs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphNumberColumn) GetDisplayAsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayAs.Get(), o.DisplayAs.IsSet()
}

// HasDisplayAs returns a boolean if a field has been set.
func (o *MicrosoftGraphNumberColumn) HasDisplayAs() bool {
	if o != nil && o.DisplayAs.IsSet() {
		return true
	}

	return false
}

// SetDisplayAs gets a reference to the given NullableString and assigns it to the DisplayAs field.
func (o *MicrosoftGraphNumberColumn) SetDisplayAs(v string) {
	o.DisplayAs.Set(&v)
}
// SetDisplayAsNil sets the value for DisplayAs to be an explicit nil
func (o *MicrosoftGraphNumberColumn) SetDisplayAsNil() {
	o.DisplayAs.Set(nil)
}

// UnsetDisplayAs ensures that no value is present for DisplayAs, not even an explicit nil
func (o *MicrosoftGraphNumberColumn) UnsetDisplayAs() {
	o.DisplayAs.Unset()
}

// GetMaximum returns the Maximum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphNumberColumn) GetMaximum() AnyOfnumberstringstring {
	if o == nil  {
		var ret AnyOfnumberstringstring
		return ret
	}
	return o.Maximum
}

// GetMaximumOk returns a tuple with the Maximum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphNumberColumn) GetMaximumOk() (*AnyOfnumberstringstring, bool) {
	if o == nil || o.Maximum == nil {
		return nil, false
	}
	return &o.Maximum, true
}

// HasMaximum returns a boolean if a field has been set.
func (o *MicrosoftGraphNumberColumn) HasMaximum() bool {
	if o != nil && o.Maximum != nil {
		return true
	}

	return false
}

// SetMaximum gets a reference to the given AnyOfnumberstringstring and assigns it to the Maximum field.
func (o *MicrosoftGraphNumberColumn) SetMaximum(v AnyOfnumberstringstring) {
	o.Maximum = v
}

// GetMinimum returns the Minimum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphNumberColumn) GetMinimum() AnyOfnumberstringstring {
	if o == nil  {
		var ret AnyOfnumberstringstring
		return ret
	}
	return o.Minimum
}

// GetMinimumOk returns a tuple with the Minimum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphNumberColumn) GetMinimumOk() (*AnyOfnumberstringstring, bool) {
	if o == nil || o.Minimum == nil {
		return nil, false
	}
	return &o.Minimum, true
}

// HasMinimum returns a boolean if a field has been set.
func (o *MicrosoftGraphNumberColumn) HasMinimum() bool {
	if o != nil && o.Minimum != nil {
		return true
	}

	return false
}

// SetMinimum gets a reference to the given AnyOfnumberstringstring and assigns it to the Minimum field.
func (o *MicrosoftGraphNumberColumn) SetMinimum(v AnyOfnumberstringstring) {
	o.Minimum = v
}

func (o MicrosoftGraphNumberColumn) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DecimalPlaces.IsSet() {
		toSerialize["decimalPlaces"] = o.DecimalPlaces.Get()
	}
	if o.DisplayAs.IsSet() {
		toSerialize["displayAs"] = o.DisplayAs.Get()
	}
	if o.Maximum != nil {
		toSerialize["maximum"] = o.Maximum
	}
	if o.Minimum != nil {
		toSerialize["minimum"] = o.Minimum
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphNumberColumn struct {
	value *MicrosoftGraphNumberColumn
	isSet bool
}

func (v NullableMicrosoftGraphNumberColumn) Get() *MicrosoftGraphNumberColumn {
	return v.value
}

func (v *NullableMicrosoftGraphNumberColumn) Set(val *MicrosoftGraphNumberColumn) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphNumberColumn) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphNumberColumn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphNumberColumn(val *MicrosoftGraphNumberColumn) *NullableMicrosoftGraphNumberColumn {
	return &NullableMicrosoftGraphNumberColumn{value: val, isSet: true}
}

func (v NullableMicrosoftGraphNumberColumn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphNumberColumn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


