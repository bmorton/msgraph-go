/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphOutlookGeoCoordinates struct for MicrosoftGraphOutlookGeoCoordinates
type MicrosoftGraphOutlookGeoCoordinates struct {
	// The accuracy of the latitude and longitude. As an example, the accuracy can be measured in meters, such as the latitude and longitude are accurate to within 50 meters.
	Accuracy AnyOfnumberstringstring `json:"accuracy,omitempty"`
	// The altitude of the location.
	Altitude AnyOfnumberstringstring `json:"altitude,omitempty"`
	// The accuracy of the altitude.
	AltitudeAccuracy AnyOfnumberstringstring `json:"altitudeAccuracy,omitempty"`
	// The latitude of the location.
	Latitude AnyOfnumberstringstring `json:"latitude,omitempty"`
	// The longitude of the location.
	Longitude AnyOfnumberstringstring `json:"longitude,omitempty"`
}

// NewMicrosoftGraphOutlookGeoCoordinates instantiates a new MicrosoftGraphOutlookGeoCoordinates object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphOutlookGeoCoordinates() *MicrosoftGraphOutlookGeoCoordinates {
	this := MicrosoftGraphOutlookGeoCoordinates{}
	return &this
}

// NewMicrosoftGraphOutlookGeoCoordinatesWithDefaults instantiates a new MicrosoftGraphOutlookGeoCoordinates object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphOutlookGeoCoordinatesWithDefaults() *MicrosoftGraphOutlookGeoCoordinates {
	this := MicrosoftGraphOutlookGeoCoordinates{}
	return &this
}

// GetAccuracy returns the Accuracy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOutlookGeoCoordinates) GetAccuracy() AnyOfnumberstringstring {
	if o == nil  {
		var ret AnyOfnumberstringstring
		return ret
	}
	return o.Accuracy
}

// GetAccuracyOk returns a tuple with the Accuracy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOutlookGeoCoordinates) GetAccuracyOk() (*AnyOfnumberstringstring, bool) {
	if o == nil || o.Accuracy == nil {
		return nil, false
	}
	return &o.Accuracy, true
}

// HasAccuracy returns a boolean if a field has been set.
func (o *MicrosoftGraphOutlookGeoCoordinates) HasAccuracy() bool {
	if o != nil && o.Accuracy != nil {
		return true
	}

	return false
}

// SetAccuracy gets a reference to the given AnyOfnumberstringstring and assigns it to the Accuracy field.
func (o *MicrosoftGraphOutlookGeoCoordinates) SetAccuracy(v AnyOfnumberstringstring) {
	o.Accuracy = v
}

// GetAltitude returns the Altitude field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOutlookGeoCoordinates) GetAltitude() AnyOfnumberstringstring {
	if o == nil  {
		var ret AnyOfnumberstringstring
		return ret
	}
	return o.Altitude
}

// GetAltitudeOk returns a tuple with the Altitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOutlookGeoCoordinates) GetAltitudeOk() (*AnyOfnumberstringstring, bool) {
	if o == nil || o.Altitude == nil {
		return nil, false
	}
	return &o.Altitude, true
}

// HasAltitude returns a boolean if a field has been set.
func (o *MicrosoftGraphOutlookGeoCoordinates) HasAltitude() bool {
	if o != nil && o.Altitude != nil {
		return true
	}

	return false
}

// SetAltitude gets a reference to the given AnyOfnumberstringstring and assigns it to the Altitude field.
func (o *MicrosoftGraphOutlookGeoCoordinates) SetAltitude(v AnyOfnumberstringstring) {
	o.Altitude = v
}

// GetAltitudeAccuracy returns the AltitudeAccuracy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOutlookGeoCoordinates) GetAltitudeAccuracy() AnyOfnumberstringstring {
	if o == nil  {
		var ret AnyOfnumberstringstring
		return ret
	}
	return o.AltitudeAccuracy
}

// GetAltitudeAccuracyOk returns a tuple with the AltitudeAccuracy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOutlookGeoCoordinates) GetAltitudeAccuracyOk() (*AnyOfnumberstringstring, bool) {
	if o == nil || o.AltitudeAccuracy == nil {
		return nil, false
	}
	return &o.AltitudeAccuracy, true
}

// HasAltitudeAccuracy returns a boolean if a field has been set.
func (o *MicrosoftGraphOutlookGeoCoordinates) HasAltitudeAccuracy() bool {
	if o != nil && o.AltitudeAccuracy != nil {
		return true
	}

	return false
}

// SetAltitudeAccuracy gets a reference to the given AnyOfnumberstringstring and assigns it to the AltitudeAccuracy field.
func (o *MicrosoftGraphOutlookGeoCoordinates) SetAltitudeAccuracy(v AnyOfnumberstringstring) {
	o.AltitudeAccuracy = v
}

// GetLatitude returns the Latitude field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOutlookGeoCoordinates) GetLatitude() AnyOfnumberstringstring {
	if o == nil  {
		var ret AnyOfnumberstringstring
		return ret
	}
	return o.Latitude
}

// GetLatitudeOk returns a tuple with the Latitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOutlookGeoCoordinates) GetLatitudeOk() (*AnyOfnumberstringstring, bool) {
	if o == nil || o.Latitude == nil {
		return nil, false
	}
	return &o.Latitude, true
}

// HasLatitude returns a boolean if a field has been set.
func (o *MicrosoftGraphOutlookGeoCoordinates) HasLatitude() bool {
	if o != nil && o.Latitude != nil {
		return true
	}

	return false
}

// SetLatitude gets a reference to the given AnyOfnumberstringstring and assigns it to the Latitude field.
func (o *MicrosoftGraphOutlookGeoCoordinates) SetLatitude(v AnyOfnumberstringstring) {
	o.Latitude = v
}

// GetLongitude returns the Longitude field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOutlookGeoCoordinates) GetLongitude() AnyOfnumberstringstring {
	if o == nil  {
		var ret AnyOfnumberstringstring
		return ret
	}
	return o.Longitude
}

// GetLongitudeOk returns a tuple with the Longitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOutlookGeoCoordinates) GetLongitudeOk() (*AnyOfnumberstringstring, bool) {
	if o == nil || o.Longitude == nil {
		return nil, false
	}
	return &o.Longitude, true
}

// HasLongitude returns a boolean if a field has been set.
func (o *MicrosoftGraphOutlookGeoCoordinates) HasLongitude() bool {
	if o != nil && o.Longitude != nil {
		return true
	}

	return false
}

// SetLongitude gets a reference to the given AnyOfnumberstringstring and assigns it to the Longitude field.
func (o *MicrosoftGraphOutlookGeoCoordinates) SetLongitude(v AnyOfnumberstringstring) {
	o.Longitude = v
}

func (o MicrosoftGraphOutlookGeoCoordinates) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Accuracy != nil {
		toSerialize["accuracy"] = o.Accuracy
	}
	if o.Altitude != nil {
		toSerialize["altitude"] = o.Altitude
	}
	if o.AltitudeAccuracy != nil {
		toSerialize["altitudeAccuracy"] = o.AltitudeAccuracy
	}
	if o.Latitude != nil {
		toSerialize["latitude"] = o.Latitude
	}
	if o.Longitude != nil {
		toSerialize["longitude"] = o.Longitude
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphOutlookGeoCoordinates struct {
	value *MicrosoftGraphOutlookGeoCoordinates
	isSet bool
}

func (v NullableMicrosoftGraphOutlookGeoCoordinates) Get() *MicrosoftGraphOutlookGeoCoordinates {
	return v.value
}

func (v *NullableMicrosoftGraphOutlookGeoCoordinates) Set(val *MicrosoftGraphOutlookGeoCoordinates) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphOutlookGeoCoordinates) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphOutlookGeoCoordinates) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphOutlookGeoCoordinates(val *MicrosoftGraphOutlookGeoCoordinates) *NullableMicrosoftGraphOutlookGeoCoordinates {
	return &NullableMicrosoftGraphOutlookGeoCoordinates{value: val, isSet: true}
}

func (v NullableMicrosoftGraphOutlookGeoCoordinates) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphOutlookGeoCoordinates) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


