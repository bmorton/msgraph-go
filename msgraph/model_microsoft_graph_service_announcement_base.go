/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphServiceAnnouncementBase struct for MicrosoftGraphServiceAnnouncementBase
type MicrosoftGraphServiceAnnouncementBase struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// Additional details about service event. This property doesn't support filters.
	Details *[]*AnyOfmicrosoftGraphKeyValuePair `json:"details,omitempty"`
	// The end time of the service event.
	EndDateTime NullableTime `json:"endDateTime,omitempty"`
	// The last modified time of the service event.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// The start time of the service event.
	StartDateTime *time.Time `json:"startDateTime,omitempty"`
	// The title of the service event.
	Title *string `json:"title,omitempty"`
}

// NewMicrosoftGraphServiceAnnouncementBase instantiates a new MicrosoftGraphServiceAnnouncementBase object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphServiceAnnouncementBase() *MicrosoftGraphServiceAnnouncementBase {
	this := MicrosoftGraphServiceAnnouncementBase{}
	return &this
}

// NewMicrosoftGraphServiceAnnouncementBaseWithDefaults instantiates a new MicrosoftGraphServiceAnnouncementBase object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphServiceAnnouncementBaseWithDefaults() *MicrosoftGraphServiceAnnouncementBase {
	this := MicrosoftGraphServiceAnnouncementBase{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphServiceAnnouncementBase) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphServiceAnnouncementBase) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphServiceAnnouncementBase) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphServiceAnnouncementBase) SetId(v string) {
	o.Id = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *MicrosoftGraphServiceAnnouncementBase) GetDetails() []*AnyOfmicrosoftGraphKeyValuePair {
	if o == nil || o.Details == nil {
		var ret []*AnyOfmicrosoftGraphKeyValuePair
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphServiceAnnouncementBase) GetDetailsOk() (*[]*AnyOfmicrosoftGraphKeyValuePair, bool) {
	if o == nil || o.Details == nil {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *MicrosoftGraphServiceAnnouncementBase) HasDetails() bool {
	if o != nil && o.Details != nil {
		return true
	}

	return false
}

// SetDetails gets a reference to the given []*AnyOfmicrosoftGraphKeyValuePair and assigns it to the Details field.
func (o *MicrosoftGraphServiceAnnouncementBase) SetDetails(v []*AnyOfmicrosoftGraphKeyValuePair) {
	o.Details = &v
}

// GetEndDateTime returns the EndDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphServiceAnnouncementBase) GetEndDateTime() time.Time {
	if o == nil || o.EndDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.EndDateTime.Get()
}

// GetEndDateTimeOk returns a tuple with the EndDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphServiceAnnouncementBase) GetEndDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EndDateTime.Get(), o.EndDateTime.IsSet()
}

// HasEndDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphServiceAnnouncementBase) HasEndDateTime() bool {
	if o != nil && o.EndDateTime.IsSet() {
		return true
	}

	return false
}

// SetEndDateTime gets a reference to the given NullableTime and assigns it to the EndDateTime field.
func (o *MicrosoftGraphServiceAnnouncementBase) SetEndDateTime(v time.Time) {
	o.EndDateTime.Set(&v)
}
// SetEndDateTimeNil sets the value for EndDateTime to be an explicit nil
func (o *MicrosoftGraphServiceAnnouncementBase) SetEndDateTimeNil() {
	o.EndDateTime.Set(nil)
}

// UnsetEndDateTime ensures that no value is present for EndDateTime, not even an explicit nil
func (o *MicrosoftGraphServiceAnnouncementBase) UnsetEndDateTime() {
	o.EndDateTime.Unset()
}

// GetLastModifiedDateTime returns the LastModifiedDateTime field value if set, zero value otherwise.
func (o *MicrosoftGraphServiceAnnouncementBase) GetLastModifiedDateTime() time.Time {
	if o == nil || o.LastModifiedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDateTime
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphServiceAnnouncementBase) GetLastModifiedDateTimeOk() (*time.Time, bool) {
	if o == nil || o.LastModifiedDateTime == nil {
		return nil, false
	}
	return o.LastModifiedDateTime, true
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphServiceAnnouncementBase) HasLastModifiedDateTime() bool {
	if o != nil && o.LastModifiedDateTime != nil {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given time.Time and assigns it to the LastModifiedDateTime field.
func (o *MicrosoftGraphServiceAnnouncementBase) SetLastModifiedDateTime(v time.Time) {
	o.LastModifiedDateTime = &v
}

// GetStartDateTime returns the StartDateTime field value if set, zero value otherwise.
func (o *MicrosoftGraphServiceAnnouncementBase) GetStartDateTime() time.Time {
	if o == nil || o.StartDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.StartDateTime
}

// GetStartDateTimeOk returns a tuple with the StartDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphServiceAnnouncementBase) GetStartDateTimeOk() (*time.Time, bool) {
	if o == nil || o.StartDateTime == nil {
		return nil, false
	}
	return o.StartDateTime, true
}

// HasStartDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphServiceAnnouncementBase) HasStartDateTime() bool {
	if o != nil && o.StartDateTime != nil {
		return true
	}

	return false
}

// SetStartDateTime gets a reference to the given time.Time and assigns it to the StartDateTime field.
func (o *MicrosoftGraphServiceAnnouncementBase) SetStartDateTime(v time.Time) {
	o.StartDateTime = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *MicrosoftGraphServiceAnnouncementBase) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphServiceAnnouncementBase) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *MicrosoftGraphServiceAnnouncementBase) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *MicrosoftGraphServiceAnnouncementBase) SetTitle(v string) {
	o.Title = &v
}

func (o MicrosoftGraphServiceAnnouncementBase) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Details != nil {
		toSerialize["details"] = o.Details
	}
	if o.EndDateTime.IsSet() {
		toSerialize["endDateTime"] = o.EndDateTime.Get()
	}
	if o.LastModifiedDateTime != nil {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime
	}
	if o.StartDateTime != nil {
		toSerialize["startDateTime"] = o.StartDateTime
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphServiceAnnouncementBase struct {
	value *MicrosoftGraphServiceAnnouncementBase
	isSet bool
}

func (v NullableMicrosoftGraphServiceAnnouncementBase) Get() *MicrosoftGraphServiceAnnouncementBase {
	return v.value
}

func (v *NullableMicrosoftGraphServiceAnnouncementBase) Set(val *MicrosoftGraphServiceAnnouncementBase) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphServiceAnnouncementBase) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphServiceAnnouncementBase) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphServiceAnnouncementBase(val *MicrosoftGraphServiceAnnouncementBase) *NullableMicrosoftGraphServiceAnnouncementBase {
	return &NullableMicrosoftGraphServiceAnnouncementBase{value: val, isSet: true}
}

func (v NullableMicrosoftGraphServiceAnnouncementBase) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphServiceAnnouncementBase) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


