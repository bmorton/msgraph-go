/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject1361 struct for InlineObject1361
type InlineObject1361 struct {
	SampleS AnyOfobject `json:"sampleS,omitempty"`
	NumberSample AnyOfobject `json:"numberSample,omitempty"`
	PopulationS AnyOfobject `json:"populationS,omitempty"`
	NumberPop AnyOfobject `json:"numberPop,omitempty"`
	Cumulative AnyOfobject `json:"cumulative,omitempty"`
}

// NewInlineObject1361 instantiates a new InlineObject1361 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject1361() *InlineObject1361 {
	this := InlineObject1361{}
	return &this
}

// NewInlineObject1361WithDefaults instantiates a new InlineObject1361 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject1361WithDefaults() *InlineObject1361 {
	this := InlineObject1361{}
	return &this
}

// GetSampleS returns the SampleS field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1361) GetSampleS() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.SampleS
}

// GetSampleSOk returns a tuple with the SampleS field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1361) GetSampleSOk() (*AnyOfobject, bool) {
	if o == nil || o.SampleS == nil {
		return nil, false
	}
	return &o.SampleS, true
}

// HasSampleS returns a boolean if a field has been set.
func (o *InlineObject1361) HasSampleS() bool {
	if o != nil && o.SampleS != nil {
		return true
	}

	return false
}

// SetSampleS gets a reference to the given AnyOfobject and assigns it to the SampleS field.
func (o *InlineObject1361) SetSampleS(v AnyOfobject) {
	o.SampleS = v
}

// GetNumberSample returns the NumberSample field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1361) GetNumberSample() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.NumberSample
}

// GetNumberSampleOk returns a tuple with the NumberSample field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1361) GetNumberSampleOk() (*AnyOfobject, bool) {
	if o == nil || o.NumberSample == nil {
		return nil, false
	}
	return &o.NumberSample, true
}

// HasNumberSample returns a boolean if a field has been set.
func (o *InlineObject1361) HasNumberSample() bool {
	if o != nil && o.NumberSample != nil {
		return true
	}

	return false
}

// SetNumberSample gets a reference to the given AnyOfobject and assigns it to the NumberSample field.
func (o *InlineObject1361) SetNumberSample(v AnyOfobject) {
	o.NumberSample = v
}

// GetPopulationS returns the PopulationS field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1361) GetPopulationS() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.PopulationS
}

// GetPopulationSOk returns a tuple with the PopulationS field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1361) GetPopulationSOk() (*AnyOfobject, bool) {
	if o == nil || o.PopulationS == nil {
		return nil, false
	}
	return &o.PopulationS, true
}

// HasPopulationS returns a boolean if a field has been set.
func (o *InlineObject1361) HasPopulationS() bool {
	if o != nil && o.PopulationS != nil {
		return true
	}

	return false
}

// SetPopulationS gets a reference to the given AnyOfobject and assigns it to the PopulationS field.
func (o *InlineObject1361) SetPopulationS(v AnyOfobject) {
	o.PopulationS = v
}

// GetNumberPop returns the NumberPop field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1361) GetNumberPop() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.NumberPop
}

// GetNumberPopOk returns a tuple with the NumberPop field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1361) GetNumberPopOk() (*AnyOfobject, bool) {
	if o == nil || o.NumberPop == nil {
		return nil, false
	}
	return &o.NumberPop, true
}

// HasNumberPop returns a boolean if a field has been set.
func (o *InlineObject1361) HasNumberPop() bool {
	if o != nil && o.NumberPop != nil {
		return true
	}

	return false
}

// SetNumberPop gets a reference to the given AnyOfobject and assigns it to the NumberPop field.
func (o *InlineObject1361) SetNumberPop(v AnyOfobject) {
	o.NumberPop = v
}

// GetCumulative returns the Cumulative field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1361) GetCumulative() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Cumulative
}

// GetCumulativeOk returns a tuple with the Cumulative field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1361) GetCumulativeOk() (*AnyOfobject, bool) {
	if o == nil || o.Cumulative == nil {
		return nil, false
	}
	return &o.Cumulative, true
}

// HasCumulative returns a boolean if a field has been set.
func (o *InlineObject1361) HasCumulative() bool {
	if o != nil && o.Cumulative != nil {
		return true
	}

	return false
}

// SetCumulative gets a reference to the given AnyOfobject and assigns it to the Cumulative field.
func (o *InlineObject1361) SetCumulative(v AnyOfobject) {
	o.Cumulative = v
}

func (o InlineObject1361) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SampleS != nil {
		toSerialize["sampleS"] = o.SampleS
	}
	if o.NumberSample != nil {
		toSerialize["numberSample"] = o.NumberSample
	}
	if o.PopulationS != nil {
		toSerialize["populationS"] = o.PopulationS
	}
	if o.NumberPop != nil {
		toSerialize["numberPop"] = o.NumberPop
	}
	if o.Cumulative != nil {
		toSerialize["cumulative"] = o.Cumulative
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject1361 struct {
	value *InlineObject1361
	isSet bool
}

func (v NullableInlineObject1361) Get() *InlineObject1361 {
	return v.value
}

func (v *NullableInlineObject1361) Set(val *InlineObject1361) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject1361) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject1361) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject1361(val *InlineObject1361) *NullableInlineObject1361 {
	return &NullableInlineObject1361{value: val, isSet: true}
}

func (v NullableInlineObject1361) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject1361) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


