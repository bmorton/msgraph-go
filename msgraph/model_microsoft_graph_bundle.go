/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphBundle struct for MicrosoftGraphBundle
type MicrosoftGraphBundle struct {
	// If the bundle is an [album][], then the album property is included
	Album AnyOfmicrosoftGraphAlbum `json:"album,omitempty"`
	// Number of children contained immediately within this container.
	ChildCount NullableInt32 `json:"childCount,omitempty"`
}

// NewMicrosoftGraphBundle instantiates a new MicrosoftGraphBundle object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphBundle() *MicrosoftGraphBundle {
	this := MicrosoftGraphBundle{}
	return &this
}

// NewMicrosoftGraphBundleWithDefaults instantiates a new MicrosoftGraphBundle object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphBundleWithDefaults() *MicrosoftGraphBundle {
	this := MicrosoftGraphBundle{}
	return &this
}

// GetAlbum returns the Album field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphBundle) GetAlbum() AnyOfmicrosoftGraphAlbum {
	if o == nil  {
		var ret AnyOfmicrosoftGraphAlbum
		return ret
	}
	return o.Album
}

// GetAlbumOk returns a tuple with the Album field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphBundle) GetAlbumOk() (*AnyOfmicrosoftGraphAlbum, bool) {
	if o == nil || o.Album == nil {
		return nil, false
	}
	return &o.Album, true
}

// HasAlbum returns a boolean if a field has been set.
func (o *MicrosoftGraphBundle) HasAlbum() bool {
	if o != nil && o.Album != nil {
		return true
	}

	return false
}

// SetAlbum gets a reference to the given AnyOfmicrosoftGraphAlbum and assigns it to the Album field.
func (o *MicrosoftGraphBundle) SetAlbum(v AnyOfmicrosoftGraphAlbum) {
	o.Album = v
}

// GetChildCount returns the ChildCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphBundle) GetChildCount() int32 {
	if o == nil || o.ChildCount.Get() == nil {
		var ret int32
		return ret
	}
	return *o.ChildCount.Get()
}

// GetChildCountOk returns a tuple with the ChildCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphBundle) GetChildCountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ChildCount.Get(), o.ChildCount.IsSet()
}

// HasChildCount returns a boolean if a field has been set.
func (o *MicrosoftGraphBundle) HasChildCount() bool {
	if o != nil && o.ChildCount.IsSet() {
		return true
	}

	return false
}

// SetChildCount gets a reference to the given NullableInt32 and assigns it to the ChildCount field.
func (o *MicrosoftGraphBundle) SetChildCount(v int32) {
	o.ChildCount.Set(&v)
}
// SetChildCountNil sets the value for ChildCount to be an explicit nil
func (o *MicrosoftGraphBundle) SetChildCountNil() {
	o.ChildCount.Set(nil)
}

// UnsetChildCount ensures that no value is present for ChildCount, not even an explicit nil
func (o *MicrosoftGraphBundle) UnsetChildCount() {
	o.ChildCount.Unset()
}

func (o MicrosoftGraphBundle) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Album != nil {
		toSerialize["album"] = o.Album
	}
	if o.ChildCount.IsSet() {
		toSerialize["childCount"] = o.ChildCount.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphBundle struct {
	value *MicrosoftGraphBundle
	isSet bool
}

func (v NullableMicrosoftGraphBundle) Get() *MicrosoftGraphBundle {
	return v.value
}

func (v *NullableMicrosoftGraphBundle) Set(val *MicrosoftGraphBundle) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphBundle) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphBundle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphBundle(val *MicrosoftGraphBundle) *NullableMicrosoftGraphBundle {
	return &NullableMicrosoftGraphBundle{value: val, isSet: true}
}

func (v NullableMicrosoftGraphBundle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphBundle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


