/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// OnenoteOperation struct for OnenoteOperation
type OnenoteOperation struct {
	// The error returned by the operation.
	Error AnyOfmicrosoftGraphOnenoteOperationError `json:"error,omitempty"`
	// The operation percent complete if the operation is still in running status.
	PercentComplete NullableString `json:"percentComplete,omitempty"`
	// The resource id.
	ResourceId NullableString `json:"resourceId,omitempty"`
	// The resource URI for the object. For example, the resource URI for a copied page or section.
	ResourceLocation NullableString `json:"resourceLocation,omitempty"`
}

// NewOnenoteOperation instantiates a new OnenoteOperation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOnenoteOperation() *OnenoteOperation {
	this := OnenoteOperation{}
	return &this
}

// NewOnenoteOperationWithDefaults instantiates a new OnenoteOperation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOnenoteOperationWithDefaults() *OnenoteOperation {
	this := OnenoteOperation{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OnenoteOperation) GetError() AnyOfmicrosoftGraphOnenoteOperationError {
	if o == nil  {
		var ret AnyOfmicrosoftGraphOnenoteOperationError
		return ret
	}
	return o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OnenoteOperation) GetErrorOk() (*AnyOfmicrosoftGraphOnenoteOperationError, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return &o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *OnenoteOperation) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given AnyOfmicrosoftGraphOnenoteOperationError and assigns it to the Error field.
func (o *OnenoteOperation) SetError(v AnyOfmicrosoftGraphOnenoteOperationError) {
	o.Error = v
}

// GetPercentComplete returns the PercentComplete field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OnenoteOperation) GetPercentComplete() string {
	if o == nil || o.PercentComplete.Get() == nil {
		var ret string
		return ret
	}
	return *o.PercentComplete.Get()
}

// GetPercentCompleteOk returns a tuple with the PercentComplete field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OnenoteOperation) GetPercentCompleteOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PercentComplete.Get(), o.PercentComplete.IsSet()
}

// HasPercentComplete returns a boolean if a field has been set.
func (o *OnenoteOperation) HasPercentComplete() bool {
	if o != nil && o.PercentComplete.IsSet() {
		return true
	}

	return false
}

// SetPercentComplete gets a reference to the given NullableString and assigns it to the PercentComplete field.
func (o *OnenoteOperation) SetPercentComplete(v string) {
	o.PercentComplete.Set(&v)
}
// SetPercentCompleteNil sets the value for PercentComplete to be an explicit nil
func (o *OnenoteOperation) SetPercentCompleteNil() {
	o.PercentComplete.Set(nil)
}

// UnsetPercentComplete ensures that no value is present for PercentComplete, not even an explicit nil
func (o *OnenoteOperation) UnsetPercentComplete() {
	o.PercentComplete.Unset()
}

// GetResourceId returns the ResourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OnenoteOperation) GetResourceId() string {
	if o == nil || o.ResourceId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ResourceId.Get()
}

// GetResourceIdOk returns a tuple with the ResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OnenoteOperation) GetResourceIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ResourceId.Get(), o.ResourceId.IsSet()
}

// HasResourceId returns a boolean if a field has been set.
func (o *OnenoteOperation) HasResourceId() bool {
	if o != nil && o.ResourceId.IsSet() {
		return true
	}

	return false
}

// SetResourceId gets a reference to the given NullableString and assigns it to the ResourceId field.
func (o *OnenoteOperation) SetResourceId(v string) {
	o.ResourceId.Set(&v)
}
// SetResourceIdNil sets the value for ResourceId to be an explicit nil
func (o *OnenoteOperation) SetResourceIdNil() {
	o.ResourceId.Set(nil)
}

// UnsetResourceId ensures that no value is present for ResourceId, not even an explicit nil
func (o *OnenoteOperation) UnsetResourceId() {
	o.ResourceId.Unset()
}

// GetResourceLocation returns the ResourceLocation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OnenoteOperation) GetResourceLocation() string {
	if o == nil || o.ResourceLocation.Get() == nil {
		var ret string
		return ret
	}
	return *o.ResourceLocation.Get()
}

// GetResourceLocationOk returns a tuple with the ResourceLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OnenoteOperation) GetResourceLocationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ResourceLocation.Get(), o.ResourceLocation.IsSet()
}

// HasResourceLocation returns a boolean if a field has been set.
func (o *OnenoteOperation) HasResourceLocation() bool {
	if o != nil && o.ResourceLocation.IsSet() {
		return true
	}

	return false
}

// SetResourceLocation gets a reference to the given NullableString and assigns it to the ResourceLocation field.
func (o *OnenoteOperation) SetResourceLocation(v string) {
	o.ResourceLocation.Set(&v)
}
// SetResourceLocationNil sets the value for ResourceLocation to be an explicit nil
func (o *OnenoteOperation) SetResourceLocationNil() {
	o.ResourceLocation.Set(nil)
}

// UnsetResourceLocation ensures that no value is present for ResourceLocation, not even an explicit nil
func (o *OnenoteOperation) UnsetResourceLocation() {
	o.ResourceLocation.Unset()
}

func (o OnenoteOperation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	if o.PercentComplete.IsSet() {
		toSerialize["percentComplete"] = o.PercentComplete.Get()
	}
	if o.ResourceId.IsSet() {
		toSerialize["resourceId"] = o.ResourceId.Get()
	}
	if o.ResourceLocation.IsSet() {
		toSerialize["resourceLocation"] = o.ResourceLocation.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableOnenoteOperation struct {
	value *OnenoteOperation
	isSet bool
}

func (v NullableOnenoteOperation) Get() *OnenoteOperation {
	return v.value
}

func (v *NullableOnenoteOperation) Set(val *OnenoteOperation) {
	v.value = val
	v.isSet = true
}

func (v NullableOnenoteOperation) IsSet() bool {
	return v.isSet
}

func (v *NullableOnenoteOperation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOnenoteOperation(val *OnenoteOperation) *NullableOnenoteOperation {
	return &NullableOnenoteOperation{value: val, isSet: true}
}

func (v NullableOnenoteOperation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOnenoteOperation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


