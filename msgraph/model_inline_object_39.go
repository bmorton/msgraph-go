/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// InlineObject39 struct for InlineObject39
type InlineObject39 struct {
	ChatInfo AnyOfmicrosoftGraphChatInfo `json:"chatInfo,omitempty"`
	EndDateTime NullableTime `json:"endDateTime,omitempty"`
	ExternalId *string `json:"externalId,omitempty"`
	Participants AnyOfmicrosoftGraphMeetingParticipants `json:"participants,omitempty"`
	StartDateTime NullableTime `json:"startDateTime,omitempty"`
	Subject NullableString `json:"subject,omitempty"`
}

// NewInlineObject39 instantiates a new InlineObject39 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject39() *InlineObject39 {
	this := InlineObject39{}
	return &this
}

// NewInlineObject39WithDefaults instantiates a new InlineObject39 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject39WithDefaults() *InlineObject39 {
	this := InlineObject39{}
	return &this
}

// GetChatInfo returns the ChatInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject39) GetChatInfo() AnyOfmicrosoftGraphChatInfo {
	if o == nil  {
		var ret AnyOfmicrosoftGraphChatInfo
		return ret
	}
	return o.ChatInfo
}

// GetChatInfoOk returns a tuple with the ChatInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject39) GetChatInfoOk() (*AnyOfmicrosoftGraphChatInfo, bool) {
	if o == nil || o.ChatInfo == nil {
		return nil, false
	}
	return &o.ChatInfo, true
}

// HasChatInfo returns a boolean if a field has been set.
func (o *InlineObject39) HasChatInfo() bool {
	if o != nil && o.ChatInfo != nil {
		return true
	}

	return false
}

// SetChatInfo gets a reference to the given AnyOfmicrosoftGraphChatInfo and assigns it to the ChatInfo field.
func (o *InlineObject39) SetChatInfo(v AnyOfmicrosoftGraphChatInfo) {
	o.ChatInfo = v
}

// GetEndDateTime returns the EndDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject39) GetEndDateTime() time.Time {
	if o == nil || o.EndDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.EndDateTime.Get()
}

// GetEndDateTimeOk returns a tuple with the EndDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject39) GetEndDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EndDateTime.Get(), o.EndDateTime.IsSet()
}

// HasEndDateTime returns a boolean if a field has been set.
func (o *InlineObject39) HasEndDateTime() bool {
	if o != nil && o.EndDateTime.IsSet() {
		return true
	}

	return false
}

// SetEndDateTime gets a reference to the given NullableTime and assigns it to the EndDateTime field.
func (o *InlineObject39) SetEndDateTime(v time.Time) {
	o.EndDateTime.Set(&v)
}
// SetEndDateTimeNil sets the value for EndDateTime to be an explicit nil
func (o *InlineObject39) SetEndDateTimeNil() {
	o.EndDateTime.Set(nil)
}

// UnsetEndDateTime ensures that no value is present for EndDateTime, not even an explicit nil
func (o *InlineObject39) UnsetEndDateTime() {
	o.EndDateTime.Unset()
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *InlineObject39) GetExternalId() string {
	if o == nil || o.ExternalId == nil {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject39) GetExternalIdOk() (*string, bool) {
	if o == nil || o.ExternalId == nil {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *InlineObject39) HasExternalId() bool {
	if o != nil && o.ExternalId != nil {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *InlineObject39) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetParticipants returns the Participants field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject39) GetParticipants() AnyOfmicrosoftGraphMeetingParticipants {
	if o == nil  {
		var ret AnyOfmicrosoftGraphMeetingParticipants
		return ret
	}
	return o.Participants
}

// GetParticipantsOk returns a tuple with the Participants field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject39) GetParticipantsOk() (*AnyOfmicrosoftGraphMeetingParticipants, bool) {
	if o == nil || o.Participants == nil {
		return nil, false
	}
	return &o.Participants, true
}

// HasParticipants returns a boolean if a field has been set.
func (o *InlineObject39) HasParticipants() bool {
	if o != nil && o.Participants != nil {
		return true
	}

	return false
}

// SetParticipants gets a reference to the given AnyOfmicrosoftGraphMeetingParticipants and assigns it to the Participants field.
func (o *InlineObject39) SetParticipants(v AnyOfmicrosoftGraphMeetingParticipants) {
	o.Participants = v
}

// GetStartDateTime returns the StartDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject39) GetStartDateTime() time.Time {
	if o == nil || o.StartDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.StartDateTime.Get()
}

// GetStartDateTimeOk returns a tuple with the StartDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject39) GetStartDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StartDateTime.Get(), o.StartDateTime.IsSet()
}

// HasStartDateTime returns a boolean if a field has been set.
func (o *InlineObject39) HasStartDateTime() bool {
	if o != nil && o.StartDateTime.IsSet() {
		return true
	}

	return false
}

// SetStartDateTime gets a reference to the given NullableTime and assigns it to the StartDateTime field.
func (o *InlineObject39) SetStartDateTime(v time.Time) {
	o.StartDateTime.Set(&v)
}
// SetStartDateTimeNil sets the value for StartDateTime to be an explicit nil
func (o *InlineObject39) SetStartDateTimeNil() {
	o.StartDateTime.Set(nil)
}

// UnsetStartDateTime ensures that no value is present for StartDateTime, not even an explicit nil
func (o *InlineObject39) UnsetStartDateTime() {
	o.StartDateTime.Unset()
}

// GetSubject returns the Subject field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject39) GetSubject() string {
	if o == nil || o.Subject.Get() == nil {
		var ret string
		return ret
	}
	return *o.Subject.Get()
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject39) GetSubjectOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Subject.Get(), o.Subject.IsSet()
}

// HasSubject returns a boolean if a field has been set.
func (o *InlineObject39) HasSubject() bool {
	if o != nil && o.Subject.IsSet() {
		return true
	}

	return false
}

// SetSubject gets a reference to the given NullableString and assigns it to the Subject field.
func (o *InlineObject39) SetSubject(v string) {
	o.Subject.Set(&v)
}
// SetSubjectNil sets the value for Subject to be an explicit nil
func (o *InlineObject39) SetSubjectNil() {
	o.Subject.Set(nil)
}

// UnsetSubject ensures that no value is present for Subject, not even an explicit nil
func (o *InlineObject39) UnsetSubject() {
	o.Subject.Unset()
}

func (o InlineObject39) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ChatInfo != nil {
		toSerialize["chatInfo"] = o.ChatInfo
	}
	if o.EndDateTime.IsSet() {
		toSerialize["endDateTime"] = o.EndDateTime.Get()
	}
	if o.ExternalId != nil {
		toSerialize["externalId"] = o.ExternalId
	}
	if o.Participants != nil {
		toSerialize["participants"] = o.Participants
	}
	if o.StartDateTime.IsSet() {
		toSerialize["startDateTime"] = o.StartDateTime.Get()
	}
	if o.Subject.IsSet() {
		toSerialize["subject"] = o.Subject.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject39 struct {
	value *InlineObject39
	isSet bool
}

func (v NullableInlineObject39) Get() *InlineObject39 {
	return v.value
}

func (v *NullableInlineObject39) Set(val *InlineObject39) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject39) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject39) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject39(val *InlineObject39) *NullableInlineObject39 {
	return &NullableInlineObject39{value: val, isSet: true}
}

func (v NullableInlineObject39) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject39) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


