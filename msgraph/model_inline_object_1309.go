/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// InlineObject1309 struct for InlineObject1309
type InlineObject1309 struct {
	DecimalDollar AnyOfobject `json:"decimalDollar,omitempty"`
	Fraction AnyOfobject `json:"fraction,omitempty"`
}

// NewInlineObject1309 instantiates a new InlineObject1309 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject1309() *InlineObject1309 {
	this := InlineObject1309{}
	return &this
}

// NewInlineObject1309WithDefaults instantiates a new InlineObject1309 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject1309WithDefaults() *InlineObject1309 {
	this := InlineObject1309{}
	return &this
}

// GetDecimalDollar returns the DecimalDollar field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1309) GetDecimalDollar() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.DecimalDollar
}

// GetDecimalDollarOk returns a tuple with the DecimalDollar field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1309) GetDecimalDollarOk() (*AnyOfobject, bool) {
	if o == nil || o.DecimalDollar == nil {
		return nil, false
	}
	return &o.DecimalDollar, true
}

// HasDecimalDollar returns a boolean if a field has been set.
func (o *InlineObject1309) HasDecimalDollar() bool {
	if o != nil && o.DecimalDollar != nil {
		return true
	}

	return false
}

// SetDecimalDollar gets a reference to the given AnyOfobject and assigns it to the DecimalDollar field.
func (o *InlineObject1309) SetDecimalDollar(v AnyOfobject) {
	o.DecimalDollar = v
}

// GetFraction returns the Fraction field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1309) GetFraction() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Fraction
}

// GetFractionOk returns a tuple with the Fraction field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1309) GetFractionOk() (*AnyOfobject, bool) {
	if o == nil || o.Fraction == nil {
		return nil, false
	}
	return &o.Fraction, true
}

// HasFraction returns a boolean if a field has been set.
func (o *InlineObject1309) HasFraction() bool {
	if o != nil && o.Fraction != nil {
		return true
	}

	return false
}

// SetFraction gets a reference to the given AnyOfobject and assigns it to the Fraction field.
func (o *InlineObject1309) SetFraction(v AnyOfobject) {
	o.Fraction = v
}

func (o InlineObject1309) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DecimalDollar != nil {
		toSerialize["decimalDollar"] = o.DecimalDollar
	}
	if o.Fraction != nil {
		toSerialize["fraction"] = o.Fraction
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject1309 struct {
	value *InlineObject1309
	isSet bool
}

func (v NullableInlineObject1309) Get() *InlineObject1309 {
	return v.value
}

func (v *NullableInlineObject1309) Set(val *InlineObject1309) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject1309) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject1309) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject1309(val *InlineObject1309) *NullableInlineObject1309 {
	return &NullableInlineObject1309{value: val, isSet: true}
}

func (v NullableInlineObject1309) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject1309) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


