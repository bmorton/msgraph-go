/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphThreatAssessmentStatus the model 'MicrosoftGraphThreatAssessmentStatus'
type MicrosoftGraphThreatAssessmentStatus string

// List of microsoft.graph.threatAssessmentStatus
const (
	PENDING MicrosoftGraphThreatAssessmentStatus = "pending"
	COMPLETED MicrosoftGraphThreatAssessmentStatus = "completed"
)

// All allowed values of MicrosoftGraphThreatAssessmentStatus enum
var AllowedMicrosoftGraphThreatAssessmentStatusEnumValues = []MicrosoftGraphThreatAssessmentStatus{
	"pending",
	"completed",
}

func (v *MicrosoftGraphThreatAssessmentStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphThreatAssessmentStatus(value)
	for _, existing := range AllowedMicrosoftGraphThreatAssessmentStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphThreatAssessmentStatus", value)
}

// NewMicrosoftGraphThreatAssessmentStatusFromValue returns a pointer to a valid MicrosoftGraphThreatAssessmentStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphThreatAssessmentStatusFromValue(v string) (*MicrosoftGraphThreatAssessmentStatus, error) {
	ev := MicrosoftGraphThreatAssessmentStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphThreatAssessmentStatus: valid values are %v", v, AllowedMicrosoftGraphThreatAssessmentStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphThreatAssessmentStatus) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphThreatAssessmentStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.threatAssessmentStatus value
func (v MicrosoftGraphThreatAssessmentStatus) Ptr() *MicrosoftGraphThreatAssessmentStatus {
	return &v
}

type NullableMicrosoftGraphThreatAssessmentStatus struct {
	value *MicrosoftGraphThreatAssessmentStatus
	isSet bool
}

func (v NullableMicrosoftGraphThreatAssessmentStatus) Get() *MicrosoftGraphThreatAssessmentStatus {
	return v.value
}

func (v *NullableMicrosoftGraphThreatAssessmentStatus) Set(val *MicrosoftGraphThreatAssessmentStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphThreatAssessmentStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphThreatAssessmentStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphThreatAssessmentStatus(val *MicrosoftGraphThreatAssessmentStatus) *NullableMicrosoftGraphThreatAssessmentStatus {
	return &NullableMicrosoftGraphThreatAssessmentStatus{value: val, isSet: true}
}

func (v NullableMicrosoftGraphThreatAssessmentStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphThreatAssessmentStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

