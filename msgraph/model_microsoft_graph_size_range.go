/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphSizeRange struct for MicrosoftGraphSizeRange
type MicrosoftGraphSizeRange struct {
	// The maximum size (in kilobytes) that an incoming message must have in order for a condition or exception to apply.
	MaximumSize NullableInt32 `json:"maximumSize,omitempty"`
	// The minimum size (in kilobytes) that an incoming message must have in order for a condition or exception to apply.
	MinimumSize NullableInt32 `json:"minimumSize,omitempty"`
}

// NewMicrosoftGraphSizeRange instantiates a new MicrosoftGraphSizeRange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphSizeRange() *MicrosoftGraphSizeRange {
	this := MicrosoftGraphSizeRange{}
	return &this
}

// NewMicrosoftGraphSizeRangeWithDefaults instantiates a new MicrosoftGraphSizeRange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphSizeRangeWithDefaults() *MicrosoftGraphSizeRange {
	this := MicrosoftGraphSizeRange{}
	return &this
}

// GetMaximumSize returns the MaximumSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSizeRange) GetMaximumSize() int32 {
	if o == nil || o.MaximumSize.Get() == nil {
		var ret int32
		return ret
	}
	return *o.MaximumSize.Get()
}

// GetMaximumSizeOk returns a tuple with the MaximumSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSizeRange) GetMaximumSizeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MaximumSize.Get(), o.MaximumSize.IsSet()
}

// HasMaximumSize returns a boolean if a field has been set.
func (o *MicrosoftGraphSizeRange) HasMaximumSize() bool {
	if o != nil && o.MaximumSize.IsSet() {
		return true
	}

	return false
}

// SetMaximumSize gets a reference to the given NullableInt32 and assigns it to the MaximumSize field.
func (o *MicrosoftGraphSizeRange) SetMaximumSize(v int32) {
	o.MaximumSize.Set(&v)
}
// SetMaximumSizeNil sets the value for MaximumSize to be an explicit nil
func (o *MicrosoftGraphSizeRange) SetMaximumSizeNil() {
	o.MaximumSize.Set(nil)
}

// UnsetMaximumSize ensures that no value is present for MaximumSize, not even an explicit nil
func (o *MicrosoftGraphSizeRange) UnsetMaximumSize() {
	o.MaximumSize.Unset()
}

// GetMinimumSize returns the MinimumSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSizeRange) GetMinimumSize() int32 {
	if o == nil || o.MinimumSize.Get() == nil {
		var ret int32
		return ret
	}
	return *o.MinimumSize.Get()
}

// GetMinimumSizeOk returns a tuple with the MinimumSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSizeRange) GetMinimumSizeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MinimumSize.Get(), o.MinimumSize.IsSet()
}

// HasMinimumSize returns a boolean if a field has been set.
func (o *MicrosoftGraphSizeRange) HasMinimumSize() bool {
	if o != nil && o.MinimumSize.IsSet() {
		return true
	}

	return false
}

// SetMinimumSize gets a reference to the given NullableInt32 and assigns it to the MinimumSize field.
func (o *MicrosoftGraphSizeRange) SetMinimumSize(v int32) {
	o.MinimumSize.Set(&v)
}
// SetMinimumSizeNil sets the value for MinimumSize to be an explicit nil
func (o *MicrosoftGraphSizeRange) SetMinimumSizeNil() {
	o.MinimumSize.Set(nil)
}

// UnsetMinimumSize ensures that no value is present for MinimumSize, not even an explicit nil
func (o *MicrosoftGraphSizeRange) UnsetMinimumSize() {
	o.MinimumSize.Unset()
}

func (o MicrosoftGraphSizeRange) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MaximumSize.IsSet() {
		toSerialize["maximumSize"] = o.MaximumSize.Get()
	}
	if o.MinimumSize.IsSet() {
		toSerialize["minimumSize"] = o.MinimumSize.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphSizeRange struct {
	value *MicrosoftGraphSizeRange
	isSet bool
}

func (v NullableMicrosoftGraphSizeRange) Get() *MicrosoftGraphSizeRange {
	return v.value
}

func (v *NullableMicrosoftGraphSizeRange) Set(val *MicrosoftGraphSizeRange) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphSizeRange) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphSizeRange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphSizeRange(val *MicrosoftGraphSizeRange) *NullableMicrosoftGraphSizeRange {
	return &NullableMicrosoftGraphSizeRange{value: val, isSet: true}
}

func (v NullableMicrosoftGraphSizeRange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphSizeRange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


