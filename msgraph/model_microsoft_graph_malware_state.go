/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphMalwareState struct for MicrosoftGraphMalwareState
type MicrosoftGraphMalwareState struct {
	// Provider-generated malware category (for example, trojan, ransomware, etc.).
	Category NullableString `json:"category,omitempty"`
	// Provider-generated malware family (for example, 'wannacry', 'notpetya', etc.).
	Family NullableString `json:"family,omitempty"`
	// Provider-generated malware variant name (for example, Trojan:Win32/Powessere.H).
	Name NullableString `json:"name,omitempty"`
	// Provider-determined severity of this malware.
	Severity NullableString `json:"severity,omitempty"`
	// Indicates whether the detected file (malware/vulnerability) was running at the time of detection or was detected at rest on the disk.
	WasRunning NullableBool `json:"wasRunning,omitempty"`
}

// NewMicrosoftGraphMalwareState instantiates a new MicrosoftGraphMalwareState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphMalwareState() *MicrosoftGraphMalwareState {
	this := MicrosoftGraphMalwareState{}
	return &this
}

// NewMicrosoftGraphMalwareStateWithDefaults instantiates a new MicrosoftGraphMalwareState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphMalwareStateWithDefaults() *MicrosoftGraphMalwareState {
	this := MicrosoftGraphMalwareState{}
	return &this
}

// GetCategory returns the Category field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMalwareState) GetCategory() string {
	if o == nil || o.Category.Get() == nil {
		var ret string
		return ret
	}
	return *o.Category.Get()
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMalwareState) GetCategoryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Category.Get(), o.Category.IsSet()
}

// HasCategory returns a boolean if a field has been set.
func (o *MicrosoftGraphMalwareState) HasCategory() bool {
	if o != nil && o.Category.IsSet() {
		return true
	}

	return false
}

// SetCategory gets a reference to the given NullableString and assigns it to the Category field.
func (o *MicrosoftGraphMalwareState) SetCategory(v string) {
	o.Category.Set(&v)
}
// SetCategoryNil sets the value for Category to be an explicit nil
func (o *MicrosoftGraphMalwareState) SetCategoryNil() {
	o.Category.Set(nil)
}

// UnsetCategory ensures that no value is present for Category, not even an explicit nil
func (o *MicrosoftGraphMalwareState) UnsetCategory() {
	o.Category.Unset()
}

// GetFamily returns the Family field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMalwareState) GetFamily() string {
	if o == nil || o.Family.Get() == nil {
		var ret string
		return ret
	}
	return *o.Family.Get()
}

// GetFamilyOk returns a tuple with the Family field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMalwareState) GetFamilyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Family.Get(), o.Family.IsSet()
}

// HasFamily returns a boolean if a field has been set.
func (o *MicrosoftGraphMalwareState) HasFamily() bool {
	if o != nil && o.Family.IsSet() {
		return true
	}

	return false
}

// SetFamily gets a reference to the given NullableString and assigns it to the Family field.
func (o *MicrosoftGraphMalwareState) SetFamily(v string) {
	o.Family.Set(&v)
}
// SetFamilyNil sets the value for Family to be an explicit nil
func (o *MicrosoftGraphMalwareState) SetFamilyNil() {
	o.Family.Set(nil)
}

// UnsetFamily ensures that no value is present for Family, not even an explicit nil
func (o *MicrosoftGraphMalwareState) UnsetFamily() {
	o.Family.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMalwareState) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMalwareState) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *MicrosoftGraphMalwareState) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *MicrosoftGraphMalwareState) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *MicrosoftGraphMalwareState) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *MicrosoftGraphMalwareState) UnsetName() {
	o.Name.Unset()
}

// GetSeverity returns the Severity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMalwareState) GetSeverity() string {
	if o == nil || o.Severity.Get() == nil {
		var ret string
		return ret
	}
	return *o.Severity.Get()
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMalwareState) GetSeverityOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Severity.Get(), o.Severity.IsSet()
}

// HasSeverity returns a boolean if a field has been set.
func (o *MicrosoftGraphMalwareState) HasSeverity() bool {
	if o != nil && o.Severity.IsSet() {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given NullableString and assigns it to the Severity field.
func (o *MicrosoftGraphMalwareState) SetSeverity(v string) {
	o.Severity.Set(&v)
}
// SetSeverityNil sets the value for Severity to be an explicit nil
func (o *MicrosoftGraphMalwareState) SetSeverityNil() {
	o.Severity.Set(nil)
}

// UnsetSeverity ensures that no value is present for Severity, not even an explicit nil
func (o *MicrosoftGraphMalwareState) UnsetSeverity() {
	o.Severity.Unset()
}

// GetWasRunning returns the WasRunning field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMalwareState) GetWasRunning() bool {
	if o == nil || o.WasRunning.Get() == nil {
		var ret bool
		return ret
	}
	return *o.WasRunning.Get()
}

// GetWasRunningOk returns a tuple with the WasRunning field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMalwareState) GetWasRunningOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.WasRunning.Get(), o.WasRunning.IsSet()
}

// HasWasRunning returns a boolean if a field has been set.
func (o *MicrosoftGraphMalwareState) HasWasRunning() bool {
	if o != nil && o.WasRunning.IsSet() {
		return true
	}

	return false
}

// SetWasRunning gets a reference to the given NullableBool and assigns it to the WasRunning field.
func (o *MicrosoftGraphMalwareState) SetWasRunning(v bool) {
	o.WasRunning.Set(&v)
}
// SetWasRunningNil sets the value for WasRunning to be an explicit nil
func (o *MicrosoftGraphMalwareState) SetWasRunningNil() {
	o.WasRunning.Set(nil)
}

// UnsetWasRunning ensures that no value is present for WasRunning, not even an explicit nil
func (o *MicrosoftGraphMalwareState) UnsetWasRunning() {
	o.WasRunning.Unset()
}

func (o MicrosoftGraphMalwareState) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Category.IsSet() {
		toSerialize["category"] = o.Category.Get()
	}
	if o.Family.IsSet() {
		toSerialize["family"] = o.Family.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Severity.IsSet() {
		toSerialize["severity"] = o.Severity.Get()
	}
	if o.WasRunning.IsSet() {
		toSerialize["wasRunning"] = o.WasRunning.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphMalwareState struct {
	value *MicrosoftGraphMalwareState
	isSet bool
}

func (v NullableMicrosoftGraphMalwareState) Get() *MicrosoftGraphMalwareState {
	return v.value
}

func (v *NullableMicrosoftGraphMalwareState) Set(val *MicrosoftGraphMalwareState) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphMalwareState) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphMalwareState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphMalwareState(val *MicrosoftGraphMalwareState) *NullableMicrosoftGraphMalwareState {
	return &NullableMicrosoftGraphMalwareState{value: val, isSet: true}
}

func (v NullableMicrosoftGraphMalwareState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphMalwareState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


