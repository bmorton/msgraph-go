/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphSignInLocation struct for MicrosoftGraphSignInLocation
type MicrosoftGraphSignInLocation struct {
	// Provides the city where the sign-in originated. This is calculated using latitude/longitude information from the sign-in activity.
	City NullableString `json:"city,omitempty"`
	// Provides the country code info (2 letter code) where the sign-in originated.  This is calculated using latitude/longitude information from the sign-in activity.
	CountryOrRegion NullableString `json:"countryOrRegion,omitempty"`
	// Provides the latitude, longitude and altitude where the sign-in originated.
	GeoCoordinates AnyOfmicrosoftGraphGeoCoordinates `json:"geoCoordinates,omitempty"`
	// Provides the State where the sign-in originated. This is calculated using latitude/longitude information from the sign-in activity.
	State NullableString `json:"state,omitempty"`
}

// NewMicrosoftGraphSignInLocation instantiates a new MicrosoftGraphSignInLocation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphSignInLocation() *MicrosoftGraphSignInLocation {
	this := MicrosoftGraphSignInLocation{}
	return &this
}

// NewMicrosoftGraphSignInLocationWithDefaults instantiates a new MicrosoftGraphSignInLocation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphSignInLocationWithDefaults() *MicrosoftGraphSignInLocation {
	this := MicrosoftGraphSignInLocation{}
	return &this
}

// GetCity returns the City field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSignInLocation) GetCity() string {
	if o == nil || o.City.Get() == nil {
		var ret string
		return ret
	}
	return *o.City.Get()
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSignInLocation) GetCityOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.City.Get(), o.City.IsSet()
}

// HasCity returns a boolean if a field has been set.
func (o *MicrosoftGraphSignInLocation) HasCity() bool {
	if o != nil && o.City.IsSet() {
		return true
	}

	return false
}

// SetCity gets a reference to the given NullableString and assigns it to the City field.
func (o *MicrosoftGraphSignInLocation) SetCity(v string) {
	o.City.Set(&v)
}
// SetCityNil sets the value for City to be an explicit nil
func (o *MicrosoftGraphSignInLocation) SetCityNil() {
	o.City.Set(nil)
}

// UnsetCity ensures that no value is present for City, not even an explicit nil
func (o *MicrosoftGraphSignInLocation) UnsetCity() {
	o.City.Unset()
}

// GetCountryOrRegion returns the CountryOrRegion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSignInLocation) GetCountryOrRegion() string {
	if o == nil || o.CountryOrRegion.Get() == nil {
		var ret string
		return ret
	}
	return *o.CountryOrRegion.Get()
}

// GetCountryOrRegionOk returns a tuple with the CountryOrRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSignInLocation) GetCountryOrRegionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CountryOrRegion.Get(), o.CountryOrRegion.IsSet()
}

// HasCountryOrRegion returns a boolean if a field has been set.
func (o *MicrosoftGraphSignInLocation) HasCountryOrRegion() bool {
	if o != nil && o.CountryOrRegion.IsSet() {
		return true
	}

	return false
}

// SetCountryOrRegion gets a reference to the given NullableString and assigns it to the CountryOrRegion field.
func (o *MicrosoftGraphSignInLocation) SetCountryOrRegion(v string) {
	o.CountryOrRegion.Set(&v)
}
// SetCountryOrRegionNil sets the value for CountryOrRegion to be an explicit nil
func (o *MicrosoftGraphSignInLocation) SetCountryOrRegionNil() {
	o.CountryOrRegion.Set(nil)
}

// UnsetCountryOrRegion ensures that no value is present for CountryOrRegion, not even an explicit nil
func (o *MicrosoftGraphSignInLocation) UnsetCountryOrRegion() {
	o.CountryOrRegion.Unset()
}

// GetGeoCoordinates returns the GeoCoordinates field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSignInLocation) GetGeoCoordinates() AnyOfmicrosoftGraphGeoCoordinates {
	if o == nil  {
		var ret AnyOfmicrosoftGraphGeoCoordinates
		return ret
	}
	return o.GeoCoordinates
}

// GetGeoCoordinatesOk returns a tuple with the GeoCoordinates field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSignInLocation) GetGeoCoordinatesOk() (*AnyOfmicrosoftGraphGeoCoordinates, bool) {
	if o == nil || o.GeoCoordinates == nil {
		return nil, false
	}
	return &o.GeoCoordinates, true
}

// HasGeoCoordinates returns a boolean if a field has been set.
func (o *MicrosoftGraphSignInLocation) HasGeoCoordinates() bool {
	if o != nil && o.GeoCoordinates != nil {
		return true
	}

	return false
}

// SetGeoCoordinates gets a reference to the given AnyOfmicrosoftGraphGeoCoordinates and assigns it to the GeoCoordinates field.
func (o *MicrosoftGraphSignInLocation) SetGeoCoordinates(v AnyOfmicrosoftGraphGeoCoordinates) {
	o.GeoCoordinates = v
}

// GetState returns the State field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSignInLocation) GetState() string {
	if o == nil || o.State.Get() == nil {
		var ret string
		return ret
	}
	return *o.State.Get()
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSignInLocation) GetStateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.State.Get(), o.State.IsSet()
}

// HasState returns a boolean if a field has been set.
func (o *MicrosoftGraphSignInLocation) HasState() bool {
	if o != nil && o.State.IsSet() {
		return true
	}

	return false
}

// SetState gets a reference to the given NullableString and assigns it to the State field.
func (o *MicrosoftGraphSignInLocation) SetState(v string) {
	o.State.Set(&v)
}
// SetStateNil sets the value for State to be an explicit nil
func (o *MicrosoftGraphSignInLocation) SetStateNil() {
	o.State.Set(nil)
}

// UnsetState ensures that no value is present for State, not even an explicit nil
func (o *MicrosoftGraphSignInLocation) UnsetState() {
	o.State.Unset()
}

func (o MicrosoftGraphSignInLocation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.City.IsSet() {
		toSerialize["city"] = o.City.Get()
	}
	if o.CountryOrRegion.IsSet() {
		toSerialize["countryOrRegion"] = o.CountryOrRegion.Get()
	}
	if o.GeoCoordinates != nil {
		toSerialize["geoCoordinates"] = o.GeoCoordinates
	}
	if o.State.IsSet() {
		toSerialize["state"] = o.State.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphSignInLocation struct {
	value *MicrosoftGraphSignInLocation
	isSet bool
}

func (v NullableMicrosoftGraphSignInLocation) Get() *MicrosoftGraphSignInLocation {
	return v.value
}

func (v *NullableMicrosoftGraphSignInLocation) Set(val *MicrosoftGraphSignInLocation) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphSignInLocation) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphSignInLocation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphSignInLocation(val *MicrosoftGraphSignInLocation) *NullableMicrosoftGraphSignInLocation {
	return &NullableMicrosoftGraphSignInLocation{value: val, isSet: true}
}

func (v NullableMicrosoftGraphSignInLocation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphSignInLocation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


