/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphKeyCredential struct for MicrosoftGraphKeyCredential
type MicrosoftGraphKeyCredential struct {
	// Custom key identifier
	CustomKeyIdentifier NullableString `json:"customKeyIdentifier,omitempty"`
	// Friendly name for the key. Optional.
	DisplayName NullableString `json:"displayName,omitempty"`
	// The date and time at which the credential expires.The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
	EndDateTime NullableTime `json:"endDateTime,omitempty"`
	// The certificate's raw data in byte array converted to Base64 string; for example, [System.Convert]::ToBase64String($Cert.GetRawCertData()).
	Key NullableString `json:"key,omitempty"`
	// The unique identifier (GUID) for the key.
	KeyId NullableString `json:"keyId,omitempty"`
	// The date and time at which the credential becomes valid.The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
	StartDateTime NullableTime `json:"startDateTime,omitempty"`
	// The type of key credential; for example, Symmetric.
	Type NullableString `json:"type,omitempty"`
	// A string that describes the purpose for which the key can be used; for example, Verify.
	Usage NullableString `json:"usage,omitempty"`
}

// NewMicrosoftGraphKeyCredential instantiates a new MicrosoftGraphKeyCredential object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphKeyCredential() *MicrosoftGraphKeyCredential {
	this := MicrosoftGraphKeyCredential{}
	return &this
}

// NewMicrosoftGraphKeyCredentialWithDefaults instantiates a new MicrosoftGraphKeyCredential object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphKeyCredentialWithDefaults() *MicrosoftGraphKeyCredential {
	this := MicrosoftGraphKeyCredential{}
	return &this
}

// GetCustomKeyIdentifier returns the CustomKeyIdentifier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphKeyCredential) GetCustomKeyIdentifier() string {
	if o == nil || o.CustomKeyIdentifier.Get() == nil {
		var ret string
		return ret
	}
	return *o.CustomKeyIdentifier.Get()
}

// GetCustomKeyIdentifierOk returns a tuple with the CustomKeyIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphKeyCredential) GetCustomKeyIdentifierOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CustomKeyIdentifier.Get(), o.CustomKeyIdentifier.IsSet()
}

// HasCustomKeyIdentifier returns a boolean if a field has been set.
func (o *MicrosoftGraphKeyCredential) HasCustomKeyIdentifier() bool {
	if o != nil && o.CustomKeyIdentifier.IsSet() {
		return true
	}

	return false
}

// SetCustomKeyIdentifier gets a reference to the given NullableString and assigns it to the CustomKeyIdentifier field.
func (o *MicrosoftGraphKeyCredential) SetCustomKeyIdentifier(v string) {
	o.CustomKeyIdentifier.Set(&v)
}
// SetCustomKeyIdentifierNil sets the value for CustomKeyIdentifier to be an explicit nil
func (o *MicrosoftGraphKeyCredential) SetCustomKeyIdentifierNil() {
	o.CustomKeyIdentifier.Set(nil)
}

// UnsetCustomKeyIdentifier ensures that no value is present for CustomKeyIdentifier, not even an explicit nil
func (o *MicrosoftGraphKeyCredential) UnsetCustomKeyIdentifier() {
	o.CustomKeyIdentifier.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphKeyCredential) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphKeyCredential) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphKeyCredential) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *MicrosoftGraphKeyCredential) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *MicrosoftGraphKeyCredential) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *MicrosoftGraphKeyCredential) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetEndDateTime returns the EndDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphKeyCredential) GetEndDateTime() time.Time {
	if o == nil || o.EndDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.EndDateTime.Get()
}

// GetEndDateTimeOk returns a tuple with the EndDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphKeyCredential) GetEndDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EndDateTime.Get(), o.EndDateTime.IsSet()
}

// HasEndDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphKeyCredential) HasEndDateTime() bool {
	if o != nil && o.EndDateTime.IsSet() {
		return true
	}

	return false
}

// SetEndDateTime gets a reference to the given NullableTime and assigns it to the EndDateTime field.
func (o *MicrosoftGraphKeyCredential) SetEndDateTime(v time.Time) {
	o.EndDateTime.Set(&v)
}
// SetEndDateTimeNil sets the value for EndDateTime to be an explicit nil
func (o *MicrosoftGraphKeyCredential) SetEndDateTimeNil() {
	o.EndDateTime.Set(nil)
}

// UnsetEndDateTime ensures that no value is present for EndDateTime, not even an explicit nil
func (o *MicrosoftGraphKeyCredential) UnsetEndDateTime() {
	o.EndDateTime.Unset()
}

// GetKey returns the Key field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphKeyCredential) GetKey() string {
	if o == nil || o.Key.Get() == nil {
		var ret string
		return ret
	}
	return *o.Key.Get()
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphKeyCredential) GetKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Key.Get(), o.Key.IsSet()
}

// HasKey returns a boolean if a field has been set.
func (o *MicrosoftGraphKeyCredential) HasKey() bool {
	if o != nil && o.Key.IsSet() {
		return true
	}

	return false
}

// SetKey gets a reference to the given NullableString and assigns it to the Key field.
func (o *MicrosoftGraphKeyCredential) SetKey(v string) {
	o.Key.Set(&v)
}
// SetKeyNil sets the value for Key to be an explicit nil
func (o *MicrosoftGraphKeyCredential) SetKeyNil() {
	o.Key.Set(nil)
}

// UnsetKey ensures that no value is present for Key, not even an explicit nil
func (o *MicrosoftGraphKeyCredential) UnsetKey() {
	o.Key.Unset()
}

// GetKeyId returns the KeyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphKeyCredential) GetKeyId() string {
	if o == nil || o.KeyId.Get() == nil {
		var ret string
		return ret
	}
	return *o.KeyId.Get()
}

// GetKeyIdOk returns a tuple with the KeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphKeyCredential) GetKeyIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.KeyId.Get(), o.KeyId.IsSet()
}

// HasKeyId returns a boolean if a field has been set.
func (o *MicrosoftGraphKeyCredential) HasKeyId() bool {
	if o != nil && o.KeyId.IsSet() {
		return true
	}

	return false
}

// SetKeyId gets a reference to the given NullableString and assigns it to the KeyId field.
func (o *MicrosoftGraphKeyCredential) SetKeyId(v string) {
	o.KeyId.Set(&v)
}
// SetKeyIdNil sets the value for KeyId to be an explicit nil
func (o *MicrosoftGraphKeyCredential) SetKeyIdNil() {
	o.KeyId.Set(nil)
}

// UnsetKeyId ensures that no value is present for KeyId, not even an explicit nil
func (o *MicrosoftGraphKeyCredential) UnsetKeyId() {
	o.KeyId.Unset()
}

// GetStartDateTime returns the StartDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphKeyCredential) GetStartDateTime() time.Time {
	if o == nil || o.StartDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.StartDateTime.Get()
}

// GetStartDateTimeOk returns a tuple with the StartDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphKeyCredential) GetStartDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StartDateTime.Get(), o.StartDateTime.IsSet()
}

// HasStartDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphKeyCredential) HasStartDateTime() bool {
	if o != nil && o.StartDateTime.IsSet() {
		return true
	}

	return false
}

// SetStartDateTime gets a reference to the given NullableTime and assigns it to the StartDateTime field.
func (o *MicrosoftGraphKeyCredential) SetStartDateTime(v time.Time) {
	o.StartDateTime.Set(&v)
}
// SetStartDateTimeNil sets the value for StartDateTime to be an explicit nil
func (o *MicrosoftGraphKeyCredential) SetStartDateTimeNil() {
	o.StartDateTime.Set(nil)
}

// UnsetStartDateTime ensures that no value is present for StartDateTime, not even an explicit nil
func (o *MicrosoftGraphKeyCredential) UnsetStartDateTime() {
	o.StartDateTime.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphKeyCredential) GetType() string {
	if o == nil || o.Type.Get() == nil {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphKeyCredential) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *MicrosoftGraphKeyCredential) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *MicrosoftGraphKeyCredential) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *MicrosoftGraphKeyCredential) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *MicrosoftGraphKeyCredential) UnsetType() {
	o.Type.Unset()
}

// GetUsage returns the Usage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphKeyCredential) GetUsage() string {
	if o == nil || o.Usage.Get() == nil {
		var ret string
		return ret
	}
	return *o.Usage.Get()
}

// GetUsageOk returns a tuple with the Usage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphKeyCredential) GetUsageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Usage.Get(), o.Usage.IsSet()
}

// HasUsage returns a boolean if a field has been set.
func (o *MicrosoftGraphKeyCredential) HasUsage() bool {
	if o != nil && o.Usage.IsSet() {
		return true
	}

	return false
}

// SetUsage gets a reference to the given NullableString and assigns it to the Usage field.
func (o *MicrosoftGraphKeyCredential) SetUsage(v string) {
	o.Usage.Set(&v)
}
// SetUsageNil sets the value for Usage to be an explicit nil
func (o *MicrosoftGraphKeyCredential) SetUsageNil() {
	o.Usage.Set(nil)
}

// UnsetUsage ensures that no value is present for Usage, not even an explicit nil
func (o *MicrosoftGraphKeyCredential) UnsetUsage() {
	o.Usage.Unset()
}

func (o MicrosoftGraphKeyCredential) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CustomKeyIdentifier.IsSet() {
		toSerialize["customKeyIdentifier"] = o.CustomKeyIdentifier.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.EndDateTime.IsSet() {
		toSerialize["endDateTime"] = o.EndDateTime.Get()
	}
	if o.Key.IsSet() {
		toSerialize["key"] = o.Key.Get()
	}
	if o.KeyId.IsSet() {
		toSerialize["keyId"] = o.KeyId.Get()
	}
	if o.StartDateTime.IsSet() {
		toSerialize["startDateTime"] = o.StartDateTime.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.Usage.IsSet() {
		toSerialize["usage"] = o.Usage.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphKeyCredential struct {
	value *MicrosoftGraphKeyCredential
	isSet bool
}

func (v NullableMicrosoftGraphKeyCredential) Get() *MicrosoftGraphKeyCredential {
	return v.value
}

func (v *NullableMicrosoftGraphKeyCredential) Set(val *MicrosoftGraphKeyCredential) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphKeyCredential) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphKeyCredential) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphKeyCredential(val *MicrosoftGraphKeyCredential) *NullableMicrosoftGraphKeyCredential {
	return &NullableMicrosoftGraphKeyCredential{value: val, isSet: true}
}

func (v NullableMicrosoftGraphKeyCredential) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphKeyCredential) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


