/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// InlineObject1457 struct for InlineObject1457
type InlineObject1457 struct {
	Rate AnyOfobject `json:"rate,omitempty"`
	Pv AnyOfobject `json:"pv,omitempty"`
	Fv AnyOfobject `json:"fv,omitempty"`
}

// NewInlineObject1457 instantiates a new InlineObject1457 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject1457() *InlineObject1457 {
	this := InlineObject1457{}
	return &this
}

// NewInlineObject1457WithDefaults instantiates a new InlineObject1457 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject1457WithDefaults() *InlineObject1457 {
	this := InlineObject1457{}
	return &this
}

// GetRate returns the Rate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1457) GetRate() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Rate
}

// GetRateOk returns a tuple with the Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1457) GetRateOk() (*AnyOfobject, bool) {
	if o == nil || o.Rate == nil {
		return nil, false
	}
	return &o.Rate, true
}

// HasRate returns a boolean if a field has been set.
func (o *InlineObject1457) HasRate() bool {
	if o != nil && o.Rate != nil {
		return true
	}

	return false
}

// SetRate gets a reference to the given AnyOfobject and assigns it to the Rate field.
func (o *InlineObject1457) SetRate(v AnyOfobject) {
	o.Rate = v
}

// GetPv returns the Pv field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1457) GetPv() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Pv
}

// GetPvOk returns a tuple with the Pv field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1457) GetPvOk() (*AnyOfobject, bool) {
	if o == nil || o.Pv == nil {
		return nil, false
	}
	return &o.Pv, true
}

// HasPv returns a boolean if a field has been set.
func (o *InlineObject1457) HasPv() bool {
	if o != nil && o.Pv != nil {
		return true
	}

	return false
}

// SetPv gets a reference to the given AnyOfobject and assigns it to the Pv field.
func (o *InlineObject1457) SetPv(v AnyOfobject) {
	o.Pv = v
}

// GetFv returns the Fv field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1457) GetFv() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Fv
}

// GetFvOk returns a tuple with the Fv field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1457) GetFvOk() (*AnyOfobject, bool) {
	if o == nil || o.Fv == nil {
		return nil, false
	}
	return &o.Fv, true
}

// HasFv returns a boolean if a field has been set.
func (o *InlineObject1457) HasFv() bool {
	if o != nil && o.Fv != nil {
		return true
	}

	return false
}

// SetFv gets a reference to the given AnyOfobject and assigns it to the Fv field.
func (o *InlineObject1457) SetFv(v AnyOfobject) {
	o.Fv = v
}

func (o InlineObject1457) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Rate != nil {
		toSerialize["rate"] = o.Rate
	}
	if o.Pv != nil {
		toSerialize["pv"] = o.Pv
	}
	if o.Fv != nil {
		toSerialize["fv"] = o.Fv
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject1457 struct {
	value *InlineObject1457
	isSet bool
}

func (v NullableInlineObject1457) Get() *InlineObject1457 {
	return v.value
}

func (v *NullableInlineObject1457) Set(val *InlineObject1457) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject1457) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject1457) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject1457(val *InlineObject1457) *NullableInlineObject1457 {
	return &NullableInlineObject1457{value: val, isSet: true}
}

func (v NullableInlineObject1457) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject1457) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


