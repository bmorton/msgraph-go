/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AuthenticationMethodConfiguration struct for AuthenticationMethodConfiguration
type AuthenticationMethodConfiguration struct {
	// The state of the policy. Possible values are: enabled, disabled.
	State AnyOfmicrosoftGraphAuthenticationMethodState `json:"state,omitempty"`
}

// NewAuthenticationMethodConfiguration instantiates a new AuthenticationMethodConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthenticationMethodConfiguration() *AuthenticationMethodConfiguration {
	this := AuthenticationMethodConfiguration{}
	return &this
}

// NewAuthenticationMethodConfigurationWithDefaults instantiates a new AuthenticationMethodConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthenticationMethodConfigurationWithDefaults() *AuthenticationMethodConfiguration {
	this := AuthenticationMethodConfiguration{}
	return &this
}

// GetState returns the State field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthenticationMethodConfiguration) GetState() AnyOfmicrosoftGraphAuthenticationMethodState {
	if o == nil  {
		var ret AnyOfmicrosoftGraphAuthenticationMethodState
		return ret
	}
	return o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthenticationMethodConfiguration) GetStateOk() (*AnyOfmicrosoftGraphAuthenticationMethodState, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return &o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *AuthenticationMethodConfiguration) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given AnyOfmicrosoftGraphAuthenticationMethodState and assigns it to the State field.
func (o *AuthenticationMethodConfiguration) SetState(v AnyOfmicrosoftGraphAuthenticationMethodState) {
	o.State = v
}

func (o AuthenticationMethodConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableAuthenticationMethodConfiguration struct {
	value *AuthenticationMethodConfiguration
	isSet bool
}

func (v NullableAuthenticationMethodConfiguration) Get() *AuthenticationMethodConfiguration {
	return v.value
}

func (v *NullableAuthenticationMethodConfiguration) Set(val *AuthenticationMethodConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthenticationMethodConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthenticationMethodConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthenticationMethodConfiguration(val *AuthenticationMethodConfiguration) *NullableAuthenticationMethodConfiguration {
	return &NullableAuthenticationMethodConfiguration{value: val, isSet: true}
}

func (v NullableAuthenticationMethodConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthenticationMethodConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


