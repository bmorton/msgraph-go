/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphSiteCollection struct for MicrosoftGraphSiteCollection
type MicrosoftGraphSiteCollection struct {
	// The geographic region code for where this site collection resides. Read-only.
	DataLocationCode NullableString `json:"dataLocationCode,omitempty"`
	// The hostname for the site collection. Read-only.
	Hostname NullableString `json:"hostname,omitempty"`
	// If present, indicates that this is a root site collection in SharePoint. Read-only.
	Root AnyOfobject `json:"root,omitempty"`
}

// NewMicrosoftGraphSiteCollection instantiates a new MicrosoftGraphSiteCollection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphSiteCollection() *MicrosoftGraphSiteCollection {
	this := MicrosoftGraphSiteCollection{}
	return &this
}

// NewMicrosoftGraphSiteCollectionWithDefaults instantiates a new MicrosoftGraphSiteCollection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphSiteCollectionWithDefaults() *MicrosoftGraphSiteCollection {
	this := MicrosoftGraphSiteCollection{}
	return &this
}

// GetDataLocationCode returns the DataLocationCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSiteCollection) GetDataLocationCode() string {
	if o == nil || o.DataLocationCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.DataLocationCode.Get()
}

// GetDataLocationCodeOk returns a tuple with the DataLocationCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSiteCollection) GetDataLocationCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DataLocationCode.Get(), o.DataLocationCode.IsSet()
}

// HasDataLocationCode returns a boolean if a field has been set.
func (o *MicrosoftGraphSiteCollection) HasDataLocationCode() bool {
	if o != nil && o.DataLocationCode.IsSet() {
		return true
	}

	return false
}

// SetDataLocationCode gets a reference to the given NullableString and assigns it to the DataLocationCode field.
func (o *MicrosoftGraphSiteCollection) SetDataLocationCode(v string) {
	o.DataLocationCode.Set(&v)
}
// SetDataLocationCodeNil sets the value for DataLocationCode to be an explicit nil
func (o *MicrosoftGraphSiteCollection) SetDataLocationCodeNil() {
	o.DataLocationCode.Set(nil)
}

// UnsetDataLocationCode ensures that no value is present for DataLocationCode, not even an explicit nil
func (o *MicrosoftGraphSiteCollection) UnsetDataLocationCode() {
	o.DataLocationCode.Unset()
}

// GetHostname returns the Hostname field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSiteCollection) GetHostname() string {
	if o == nil || o.Hostname.Get() == nil {
		var ret string
		return ret
	}
	return *o.Hostname.Get()
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSiteCollection) GetHostnameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Hostname.Get(), o.Hostname.IsSet()
}

// HasHostname returns a boolean if a field has been set.
func (o *MicrosoftGraphSiteCollection) HasHostname() bool {
	if o != nil && o.Hostname.IsSet() {
		return true
	}

	return false
}

// SetHostname gets a reference to the given NullableString and assigns it to the Hostname field.
func (o *MicrosoftGraphSiteCollection) SetHostname(v string) {
	o.Hostname.Set(&v)
}
// SetHostnameNil sets the value for Hostname to be an explicit nil
func (o *MicrosoftGraphSiteCollection) SetHostnameNil() {
	o.Hostname.Set(nil)
}

// UnsetHostname ensures that no value is present for Hostname, not even an explicit nil
func (o *MicrosoftGraphSiteCollection) UnsetHostname() {
	o.Hostname.Unset()
}

// GetRoot returns the Root field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSiteCollection) GetRoot() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Root
}

// GetRootOk returns a tuple with the Root field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSiteCollection) GetRootOk() (*AnyOfobject, bool) {
	if o == nil || o.Root == nil {
		return nil, false
	}
	return &o.Root, true
}

// HasRoot returns a boolean if a field has been set.
func (o *MicrosoftGraphSiteCollection) HasRoot() bool {
	if o != nil && o.Root != nil {
		return true
	}

	return false
}

// SetRoot gets a reference to the given AnyOfobject and assigns it to the Root field.
func (o *MicrosoftGraphSiteCollection) SetRoot(v AnyOfobject) {
	o.Root = v
}

func (o MicrosoftGraphSiteCollection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DataLocationCode.IsSet() {
		toSerialize["dataLocationCode"] = o.DataLocationCode.Get()
	}
	if o.Hostname.IsSet() {
		toSerialize["hostname"] = o.Hostname.Get()
	}
	if o.Root != nil {
		toSerialize["root"] = o.Root
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphSiteCollection struct {
	value *MicrosoftGraphSiteCollection
	isSet bool
}

func (v NullableMicrosoftGraphSiteCollection) Get() *MicrosoftGraphSiteCollection {
	return v.value
}

func (v *NullableMicrosoftGraphSiteCollection) Set(val *MicrosoftGraphSiteCollection) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphSiteCollection) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphSiteCollection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphSiteCollection(val *MicrosoftGraphSiteCollection) *NullableMicrosoftGraphSiteCollection {
	return &NullableMicrosoftGraphSiteCollection{value: val, isSet: true}
}

func (v NullableMicrosoftGraphSiteCollection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphSiteCollection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


