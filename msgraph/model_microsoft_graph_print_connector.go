/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphPrintConnector struct for MicrosoftGraphPrintConnector
type MicrosoftGraphPrintConnector struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// The connector's version.
	AppVersion *string `json:"appVersion,omitempty"`
	// The name of the connector.
	DisplayName *string `json:"displayName,omitempty"`
	// The connector machine's hostname.
	FullyQualifiedDomainName *string `json:"fullyQualifiedDomainName,omitempty"`
	// The physical and/or organizational location of the connector.
	Location AnyOfmicrosoftGraphPrinterLocation `json:"location,omitempty"`
	// The connector machine's operating system version.
	OperatingSystem *string `json:"operatingSystem,omitempty"`
	// The DateTimeOffset when the connector was registered.
	RegisteredDateTime *time.Time `json:"registeredDateTime,omitempty"`
}

// NewMicrosoftGraphPrintConnector instantiates a new MicrosoftGraphPrintConnector object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphPrintConnector() *MicrosoftGraphPrintConnector {
	this := MicrosoftGraphPrintConnector{}
	return &this
}

// NewMicrosoftGraphPrintConnectorWithDefaults instantiates a new MicrosoftGraphPrintConnector object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphPrintConnectorWithDefaults() *MicrosoftGraphPrintConnector {
	this := MicrosoftGraphPrintConnector{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphPrintConnector) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPrintConnector) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphPrintConnector) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphPrintConnector) SetId(v string) {
	o.Id = &v
}

// GetAppVersion returns the AppVersion field value if set, zero value otherwise.
func (o *MicrosoftGraphPrintConnector) GetAppVersion() string {
	if o == nil || o.AppVersion == nil {
		var ret string
		return ret
	}
	return *o.AppVersion
}

// GetAppVersionOk returns a tuple with the AppVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPrintConnector) GetAppVersionOk() (*string, bool) {
	if o == nil || o.AppVersion == nil {
		return nil, false
	}
	return o.AppVersion, true
}

// HasAppVersion returns a boolean if a field has been set.
func (o *MicrosoftGraphPrintConnector) HasAppVersion() bool {
	if o != nil && o.AppVersion != nil {
		return true
	}

	return false
}

// SetAppVersion gets a reference to the given string and assigns it to the AppVersion field.
func (o *MicrosoftGraphPrintConnector) SetAppVersion(v string) {
	o.AppVersion = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *MicrosoftGraphPrintConnector) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPrintConnector) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphPrintConnector) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *MicrosoftGraphPrintConnector) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetFullyQualifiedDomainName returns the FullyQualifiedDomainName field value if set, zero value otherwise.
func (o *MicrosoftGraphPrintConnector) GetFullyQualifiedDomainName() string {
	if o == nil || o.FullyQualifiedDomainName == nil {
		var ret string
		return ret
	}
	return *o.FullyQualifiedDomainName
}

// GetFullyQualifiedDomainNameOk returns a tuple with the FullyQualifiedDomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPrintConnector) GetFullyQualifiedDomainNameOk() (*string, bool) {
	if o == nil || o.FullyQualifiedDomainName == nil {
		return nil, false
	}
	return o.FullyQualifiedDomainName, true
}

// HasFullyQualifiedDomainName returns a boolean if a field has been set.
func (o *MicrosoftGraphPrintConnector) HasFullyQualifiedDomainName() bool {
	if o != nil && o.FullyQualifiedDomainName != nil {
		return true
	}

	return false
}

// SetFullyQualifiedDomainName gets a reference to the given string and assigns it to the FullyQualifiedDomainName field.
func (o *MicrosoftGraphPrintConnector) SetFullyQualifiedDomainName(v string) {
	o.FullyQualifiedDomainName = &v
}

// GetLocation returns the Location field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphPrintConnector) GetLocation() AnyOfmicrosoftGraphPrinterLocation {
	if o == nil  {
		var ret AnyOfmicrosoftGraphPrinterLocation
		return ret
	}
	return o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphPrintConnector) GetLocationOk() (*AnyOfmicrosoftGraphPrinterLocation, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return &o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *MicrosoftGraphPrintConnector) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given AnyOfmicrosoftGraphPrinterLocation and assigns it to the Location field.
func (o *MicrosoftGraphPrintConnector) SetLocation(v AnyOfmicrosoftGraphPrinterLocation) {
	o.Location = v
}

// GetOperatingSystem returns the OperatingSystem field value if set, zero value otherwise.
func (o *MicrosoftGraphPrintConnector) GetOperatingSystem() string {
	if o == nil || o.OperatingSystem == nil {
		var ret string
		return ret
	}
	return *o.OperatingSystem
}

// GetOperatingSystemOk returns a tuple with the OperatingSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPrintConnector) GetOperatingSystemOk() (*string, bool) {
	if o == nil || o.OperatingSystem == nil {
		return nil, false
	}
	return o.OperatingSystem, true
}

// HasOperatingSystem returns a boolean if a field has been set.
func (o *MicrosoftGraphPrintConnector) HasOperatingSystem() bool {
	if o != nil && o.OperatingSystem != nil {
		return true
	}

	return false
}

// SetOperatingSystem gets a reference to the given string and assigns it to the OperatingSystem field.
func (o *MicrosoftGraphPrintConnector) SetOperatingSystem(v string) {
	o.OperatingSystem = &v
}

// GetRegisteredDateTime returns the RegisteredDateTime field value if set, zero value otherwise.
func (o *MicrosoftGraphPrintConnector) GetRegisteredDateTime() time.Time {
	if o == nil || o.RegisteredDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.RegisteredDateTime
}

// GetRegisteredDateTimeOk returns a tuple with the RegisteredDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPrintConnector) GetRegisteredDateTimeOk() (*time.Time, bool) {
	if o == nil || o.RegisteredDateTime == nil {
		return nil, false
	}
	return o.RegisteredDateTime, true
}

// HasRegisteredDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphPrintConnector) HasRegisteredDateTime() bool {
	if o != nil && o.RegisteredDateTime != nil {
		return true
	}

	return false
}

// SetRegisteredDateTime gets a reference to the given time.Time and assigns it to the RegisteredDateTime field.
func (o *MicrosoftGraphPrintConnector) SetRegisteredDateTime(v time.Time) {
	o.RegisteredDateTime = &v
}

func (o MicrosoftGraphPrintConnector) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.AppVersion != nil {
		toSerialize["appVersion"] = o.AppVersion
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.FullyQualifiedDomainName != nil {
		toSerialize["fullyQualifiedDomainName"] = o.FullyQualifiedDomainName
	}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.OperatingSystem != nil {
		toSerialize["operatingSystem"] = o.OperatingSystem
	}
	if o.RegisteredDateTime != nil {
		toSerialize["registeredDateTime"] = o.RegisteredDateTime
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphPrintConnector struct {
	value *MicrosoftGraphPrintConnector
	isSet bool
}

func (v NullableMicrosoftGraphPrintConnector) Get() *MicrosoftGraphPrintConnector {
	return v.value
}

func (v *NullableMicrosoftGraphPrintConnector) Set(val *MicrosoftGraphPrintConnector) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphPrintConnector) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphPrintConnector) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphPrintConnector(val *MicrosoftGraphPrintConnector) *NullableMicrosoftGraphPrintConnector {
	return &NullableMicrosoftGraphPrintConnector{value: val, isSet: true}
}

func (v NullableMicrosoftGraphPrintConnector) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphPrintConnector) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


