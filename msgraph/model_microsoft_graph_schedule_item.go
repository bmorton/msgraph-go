/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphScheduleItem struct for MicrosoftGraphScheduleItem
type MicrosoftGraphScheduleItem struct {
	// The date, time, and time zone that the corresponding event ends.
	End AnyOfmicrosoftGraphDateTimeTimeZone `json:"end,omitempty"`
	// The sensitivity of the corresponding event. True if the event is marked private, false otherwise. Optional.
	IsPrivate NullableBool `json:"isPrivate,omitempty"`
	// The location where the corresponding event is held or attended from. Optional.
	Location NullableString `json:"location,omitempty"`
	// The date, time, and time zone that the corresponding event starts.
	Start AnyOfmicrosoftGraphDateTimeTimeZone `json:"start,omitempty"`
	// The availability status of the user or resource during the corresponding event. The possible values are: free, tentative, busy, oof, workingElsewhere, unknown.
	Status AnyOfmicrosoftGraphFreeBusyStatus `json:"status,omitempty"`
	// The corresponding event's subject line. Optional.
	Subject NullableString `json:"subject,omitempty"`
}

// NewMicrosoftGraphScheduleItem instantiates a new MicrosoftGraphScheduleItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphScheduleItem() *MicrosoftGraphScheduleItem {
	this := MicrosoftGraphScheduleItem{}
	return &this
}

// NewMicrosoftGraphScheduleItemWithDefaults instantiates a new MicrosoftGraphScheduleItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphScheduleItemWithDefaults() *MicrosoftGraphScheduleItem {
	this := MicrosoftGraphScheduleItem{}
	return &this
}

// GetEnd returns the End field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphScheduleItem) GetEnd() AnyOfmicrosoftGraphDateTimeTimeZone {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDateTimeTimeZone
		return ret
	}
	return o.End
}

// GetEndOk returns a tuple with the End field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphScheduleItem) GetEndOk() (*AnyOfmicrosoftGraphDateTimeTimeZone, bool) {
	if o == nil || o.End == nil {
		return nil, false
	}
	return &o.End, true
}

// HasEnd returns a boolean if a field has been set.
func (o *MicrosoftGraphScheduleItem) HasEnd() bool {
	if o != nil && o.End != nil {
		return true
	}

	return false
}

// SetEnd gets a reference to the given AnyOfmicrosoftGraphDateTimeTimeZone and assigns it to the End field.
func (o *MicrosoftGraphScheduleItem) SetEnd(v AnyOfmicrosoftGraphDateTimeTimeZone) {
	o.End = v
}

// GetIsPrivate returns the IsPrivate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphScheduleItem) GetIsPrivate() bool {
	if o == nil || o.IsPrivate.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsPrivate.Get()
}

// GetIsPrivateOk returns a tuple with the IsPrivate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphScheduleItem) GetIsPrivateOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsPrivate.Get(), o.IsPrivate.IsSet()
}

// HasIsPrivate returns a boolean if a field has been set.
func (o *MicrosoftGraphScheduleItem) HasIsPrivate() bool {
	if o != nil && o.IsPrivate.IsSet() {
		return true
	}

	return false
}

// SetIsPrivate gets a reference to the given NullableBool and assigns it to the IsPrivate field.
func (o *MicrosoftGraphScheduleItem) SetIsPrivate(v bool) {
	o.IsPrivate.Set(&v)
}
// SetIsPrivateNil sets the value for IsPrivate to be an explicit nil
func (o *MicrosoftGraphScheduleItem) SetIsPrivateNil() {
	o.IsPrivate.Set(nil)
}

// UnsetIsPrivate ensures that no value is present for IsPrivate, not even an explicit nil
func (o *MicrosoftGraphScheduleItem) UnsetIsPrivate() {
	o.IsPrivate.Unset()
}

// GetLocation returns the Location field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphScheduleItem) GetLocation() string {
	if o == nil || o.Location.Get() == nil {
		var ret string
		return ret
	}
	return *o.Location.Get()
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphScheduleItem) GetLocationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Location.Get(), o.Location.IsSet()
}

// HasLocation returns a boolean if a field has been set.
func (o *MicrosoftGraphScheduleItem) HasLocation() bool {
	if o != nil && o.Location.IsSet() {
		return true
	}

	return false
}

// SetLocation gets a reference to the given NullableString and assigns it to the Location field.
func (o *MicrosoftGraphScheduleItem) SetLocation(v string) {
	o.Location.Set(&v)
}
// SetLocationNil sets the value for Location to be an explicit nil
func (o *MicrosoftGraphScheduleItem) SetLocationNil() {
	o.Location.Set(nil)
}

// UnsetLocation ensures that no value is present for Location, not even an explicit nil
func (o *MicrosoftGraphScheduleItem) UnsetLocation() {
	o.Location.Unset()
}

// GetStart returns the Start field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphScheduleItem) GetStart() AnyOfmicrosoftGraphDateTimeTimeZone {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDateTimeTimeZone
		return ret
	}
	return o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphScheduleItem) GetStartOk() (*AnyOfmicrosoftGraphDateTimeTimeZone, bool) {
	if o == nil || o.Start == nil {
		return nil, false
	}
	return &o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *MicrosoftGraphScheduleItem) HasStart() bool {
	if o != nil && o.Start != nil {
		return true
	}

	return false
}

// SetStart gets a reference to the given AnyOfmicrosoftGraphDateTimeTimeZone and assigns it to the Start field.
func (o *MicrosoftGraphScheduleItem) SetStart(v AnyOfmicrosoftGraphDateTimeTimeZone) {
	o.Start = v
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphScheduleItem) GetStatus() AnyOfmicrosoftGraphFreeBusyStatus {
	if o == nil  {
		var ret AnyOfmicrosoftGraphFreeBusyStatus
		return ret
	}
	return o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphScheduleItem) GetStatusOk() (*AnyOfmicrosoftGraphFreeBusyStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return &o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MicrosoftGraphScheduleItem) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given AnyOfmicrosoftGraphFreeBusyStatus and assigns it to the Status field.
func (o *MicrosoftGraphScheduleItem) SetStatus(v AnyOfmicrosoftGraphFreeBusyStatus) {
	o.Status = v
}

// GetSubject returns the Subject field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphScheduleItem) GetSubject() string {
	if o == nil || o.Subject.Get() == nil {
		var ret string
		return ret
	}
	return *o.Subject.Get()
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphScheduleItem) GetSubjectOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Subject.Get(), o.Subject.IsSet()
}

// HasSubject returns a boolean if a field has been set.
func (o *MicrosoftGraphScheduleItem) HasSubject() bool {
	if o != nil && o.Subject.IsSet() {
		return true
	}

	return false
}

// SetSubject gets a reference to the given NullableString and assigns it to the Subject field.
func (o *MicrosoftGraphScheduleItem) SetSubject(v string) {
	o.Subject.Set(&v)
}
// SetSubjectNil sets the value for Subject to be an explicit nil
func (o *MicrosoftGraphScheduleItem) SetSubjectNil() {
	o.Subject.Set(nil)
}

// UnsetSubject ensures that no value is present for Subject, not even an explicit nil
func (o *MicrosoftGraphScheduleItem) UnsetSubject() {
	o.Subject.Unset()
}

func (o MicrosoftGraphScheduleItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.End != nil {
		toSerialize["end"] = o.End
	}
	if o.IsPrivate.IsSet() {
		toSerialize["isPrivate"] = o.IsPrivate.Get()
	}
	if o.Location.IsSet() {
		toSerialize["location"] = o.Location.Get()
	}
	if o.Start != nil {
		toSerialize["start"] = o.Start
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Subject.IsSet() {
		toSerialize["subject"] = o.Subject.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphScheduleItem struct {
	value *MicrosoftGraphScheduleItem
	isSet bool
}

func (v NullableMicrosoftGraphScheduleItem) Get() *MicrosoftGraphScheduleItem {
	return v.value
}

func (v *NullableMicrosoftGraphScheduleItem) Set(val *MicrosoftGraphScheduleItem) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphScheduleItem) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphScheduleItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphScheduleItem(val *MicrosoftGraphScheduleItem) *NullableMicrosoftGraphScheduleItem {
	return &NullableMicrosoftGraphScheduleItem{value: val, isSet: true}
}

func (v NullableMicrosoftGraphScheduleItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphScheduleItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


