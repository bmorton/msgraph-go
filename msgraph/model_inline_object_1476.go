/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// InlineObject1476 struct for InlineObject1476
type InlineObject1476 struct {
	Array AnyOfobject `json:"array,omitempty"`
	Quart AnyOfobject `json:"quart,omitempty"`
}

// NewInlineObject1476 instantiates a new InlineObject1476 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject1476() *InlineObject1476 {
	this := InlineObject1476{}
	return &this
}

// NewInlineObject1476WithDefaults instantiates a new InlineObject1476 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject1476WithDefaults() *InlineObject1476 {
	this := InlineObject1476{}
	return &this
}

// GetArray returns the Array field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1476) GetArray() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Array
}

// GetArrayOk returns a tuple with the Array field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1476) GetArrayOk() (*AnyOfobject, bool) {
	if o == nil || o.Array == nil {
		return nil, false
	}
	return &o.Array, true
}

// HasArray returns a boolean if a field has been set.
func (o *InlineObject1476) HasArray() bool {
	if o != nil && o.Array != nil {
		return true
	}

	return false
}

// SetArray gets a reference to the given AnyOfobject and assigns it to the Array field.
func (o *InlineObject1476) SetArray(v AnyOfobject) {
	o.Array = v
}

// GetQuart returns the Quart field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1476) GetQuart() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Quart
}

// GetQuartOk returns a tuple with the Quart field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1476) GetQuartOk() (*AnyOfobject, bool) {
	if o == nil || o.Quart == nil {
		return nil, false
	}
	return &o.Quart, true
}

// HasQuart returns a boolean if a field has been set.
func (o *InlineObject1476) HasQuart() bool {
	if o != nil && o.Quart != nil {
		return true
	}

	return false
}

// SetQuart gets a reference to the given AnyOfobject and assigns it to the Quart field.
func (o *InlineObject1476) SetQuart(v AnyOfobject) {
	o.Quart = v
}

func (o InlineObject1476) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Array != nil {
		toSerialize["array"] = o.Array
	}
	if o.Quart != nil {
		toSerialize["quart"] = o.Quart
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject1476 struct {
	value *InlineObject1476
	isSet bool
}

func (v NullableInlineObject1476) Get() *InlineObject1476 {
	return v.value
}

func (v *NullableInlineObject1476) Set(val *InlineObject1476) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject1476) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject1476) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject1476(val *InlineObject1476) *NullableInlineObject1476 {
	return &NullableInlineObject1476{value: val, isSet: true}
}

func (v NullableInlineObject1476) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject1476) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


