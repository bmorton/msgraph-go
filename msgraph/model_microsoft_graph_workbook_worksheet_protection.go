/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphWorkbookWorksheetProtection struct for MicrosoftGraphWorkbookWorksheetProtection
type MicrosoftGraphWorkbookWorksheetProtection struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// Sheet protection options. Read-only.
	Options AnyOfmicrosoftGraphWorkbookWorksheetProtectionOptions `json:"options,omitempty"`
	// Indicates if the worksheet is protected.  Read-only.
	Protected *bool `json:"protected,omitempty"`
}

// NewMicrosoftGraphWorkbookWorksheetProtection instantiates a new MicrosoftGraphWorkbookWorksheetProtection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphWorkbookWorksheetProtection() *MicrosoftGraphWorkbookWorksheetProtection {
	this := MicrosoftGraphWorkbookWorksheetProtection{}
	return &this
}

// NewMicrosoftGraphWorkbookWorksheetProtectionWithDefaults instantiates a new MicrosoftGraphWorkbookWorksheetProtection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphWorkbookWorksheetProtectionWithDefaults() *MicrosoftGraphWorkbookWorksheetProtection {
	this := MicrosoftGraphWorkbookWorksheetProtection{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphWorkbookWorksheetProtection) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWorkbookWorksheetProtection) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkbookWorksheetProtection) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphWorkbookWorksheetProtection) SetId(v string) {
	o.Id = &v
}

// GetOptions returns the Options field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphWorkbookWorksheetProtection) GetOptions() AnyOfmicrosoftGraphWorkbookWorksheetProtectionOptions {
	if o == nil  {
		var ret AnyOfmicrosoftGraphWorkbookWorksheetProtectionOptions
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphWorkbookWorksheetProtection) GetOptionsOk() (*AnyOfmicrosoftGraphWorkbookWorksheetProtectionOptions, bool) {
	if o == nil || o.Options == nil {
		return nil, false
	}
	return &o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkbookWorksheetProtection) HasOptions() bool {
	if o != nil && o.Options != nil {
		return true
	}

	return false
}

// SetOptions gets a reference to the given AnyOfmicrosoftGraphWorkbookWorksheetProtectionOptions and assigns it to the Options field.
func (o *MicrosoftGraphWorkbookWorksheetProtection) SetOptions(v AnyOfmicrosoftGraphWorkbookWorksheetProtectionOptions) {
	o.Options = v
}

// GetProtected returns the Protected field value if set, zero value otherwise.
func (o *MicrosoftGraphWorkbookWorksheetProtection) GetProtected() bool {
	if o == nil || o.Protected == nil {
		var ret bool
		return ret
	}
	return *o.Protected
}

// GetProtectedOk returns a tuple with the Protected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWorkbookWorksheetProtection) GetProtectedOk() (*bool, bool) {
	if o == nil || o.Protected == nil {
		return nil, false
	}
	return o.Protected, true
}

// HasProtected returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkbookWorksheetProtection) HasProtected() bool {
	if o != nil && o.Protected != nil {
		return true
	}

	return false
}

// SetProtected gets a reference to the given bool and assigns it to the Protected field.
func (o *MicrosoftGraphWorkbookWorksheetProtection) SetProtected(v bool) {
	o.Protected = &v
}

func (o MicrosoftGraphWorkbookWorksheetProtection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Options != nil {
		toSerialize["options"] = o.Options
	}
	if o.Protected != nil {
		toSerialize["protected"] = o.Protected
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphWorkbookWorksheetProtection struct {
	value *MicrosoftGraphWorkbookWorksheetProtection
	isSet bool
}

func (v NullableMicrosoftGraphWorkbookWorksheetProtection) Get() *MicrosoftGraphWorkbookWorksheetProtection {
	return v.value
}

func (v *NullableMicrosoftGraphWorkbookWorksheetProtection) Set(val *MicrosoftGraphWorkbookWorksheetProtection) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphWorkbookWorksheetProtection) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphWorkbookWorksheetProtection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphWorkbookWorksheetProtection(val *MicrosoftGraphWorkbookWorksheetProtection) *NullableMicrosoftGraphWorkbookWorksheetProtection {
	return &NullableMicrosoftGraphWorkbookWorksheetProtection{value: val, isSet: true}
}

func (v NullableMicrosoftGraphWorkbookWorksheetProtection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphWorkbookWorksheetProtection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


