/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphTermColumn struct for MicrosoftGraphTermColumn
type MicrosoftGraphTermColumn struct {
	// Specifies whether the column will allow more than one value.
	AllowMultipleValues NullableBool `json:"allowMultipleValues,omitempty"`
	// Specifies whether to display the entire term path or only the term label.
	ShowFullyQualifiedName NullableBool `json:"showFullyQualifiedName,omitempty"`
	ParentTerm AnyOfmicrosoftGraphTermStoreTerm `json:"parentTerm,omitempty"`
	TermSet AnyOfmicrosoftGraphTermStoreSet `json:"termSet,omitempty"`
}

// NewMicrosoftGraphTermColumn instantiates a new MicrosoftGraphTermColumn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphTermColumn() *MicrosoftGraphTermColumn {
	this := MicrosoftGraphTermColumn{}
	return &this
}

// NewMicrosoftGraphTermColumnWithDefaults instantiates a new MicrosoftGraphTermColumn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphTermColumnWithDefaults() *MicrosoftGraphTermColumn {
	this := MicrosoftGraphTermColumn{}
	return &this
}

// GetAllowMultipleValues returns the AllowMultipleValues field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTermColumn) GetAllowMultipleValues() bool {
	if o == nil || o.AllowMultipleValues.Get() == nil {
		var ret bool
		return ret
	}
	return *o.AllowMultipleValues.Get()
}

// GetAllowMultipleValuesOk returns a tuple with the AllowMultipleValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTermColumn) GetAllowMultipleValuesOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AllowMultipleValues.Get(), o.AllowMultipleValues.IsSet()
}

// HasAllowMultipleValues returns a boolean if a field has been set.
func (o *MicrosoftGraphTermColumn) HasAllowMultipleValues() bool {
	if o != nil && o.AllowMultipleValues.IsSet() {
		return true
	}

	return false
}

// SetAllowMultipleValues gets a reference to the given NullableBool and assigns it to the AllowMultipleValues field.
func (o *MicrosoftGraphTermColumn) SetAllowMultipleValues(v bool) {
	o.AllowMultipleValues.Set(&v)
}
// SetAllowMultipleValuesNil sets the value for AllowMultipleValues to be an explicit nil
func (o *MicrosoftGraphTermColumn) SetAllowMultipleValuesNil() {
	o.AllowMultipleValues.Set(nil)
}

// UnsetAllowMultipleValues ensures that no value is present for AllowMultipleValues, not even an explicit nil
func (o *MicrosoftGraphTermColumn) UnsetAllowMultipleValues() {
	o.AllowMultipleValues.Unset()
}

// GetShowFullyQualifiedName returns the ShowFullyQualifiedName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTermColumn) GetShowFullyQualifiedName() bool {
	if o == nil || o.ShowFullyQualifiedName.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ShowFullyQualifiedName.Get()
}

// GetShowFullyQualifiedNameOk returns a tuple with the ShowFullyQualifiedName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTermColumn) GetShowFullyQualifiedNameOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ShowFullyQualifiedName.Get(), o.ShowFullyQualifiedName.IsSet()
}

// HasShowFullyQualifiedName returns a boolean if a field has been set.
func (o *MicrosoftGraphTermColumn) HasShowFullyQualifiedName() bool {
	if o != nil && o.ShowFullyQualifiedName.IsSet() {
		return true
	}

	return false
}

// SetShowFullyQualifiedName gets a reference to the given NullableBool and assigns it to the ShowFullyQualifiedName field.
func (o *MicrosoftGraphTermColumn) SetShowFullyQualifiedName(v bool) {
	o.ShowFullyQualifiedName.Set(&v)
}
// SetShowFullyQualifiedNameNil sets the value for ShowFullyQualifiedName to be an explicit nil
func (o *MicrosoftGraphTermColumn) SetShowFullyQualifiedNameNil() {
	o.ShowFullyQualifiedName.Set(nil)
}

// UnsetShowFullyQualifiedName ensures that no value is present for ShowFullyQualifiedName, not even an explicit nil
func (o *MicrosoftGraphTermColumn) UnsetShowFullyQualifiedName() {
	o.ShowFullyQualifiedName.Unset()
}

// GetParentTerm returns the ParentTerm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTermColumn) GetParentTerm() AnyOfmicrosoftGraphTermStoreTerm {
	if o == nil  {
		var ret AnyOfmicrosoftGraphTermStoreTerm
		return ret
	}
	return o.ParentTerm
}

// GetParentTermOk returns a tuple with the ParentTerm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTermColumn) GetParentTermOk() (*AnyOfmicrosoftGraphTermStoreTerm, bool) {
	if o == nil || o.ParentTerm == nil {
		return nil, false
	}
	return &o.ParentTerm, true
}

// HasParentTerm returns a boolean if a field has been set.
func (o *MicrosoftGraphTermColumn) HasParentTerm() bool {
	if o != nil && o.ParentTerm != nil {
		return true
	}

	return false
}

// SetParentTerm gets a reference to the given AnyOfmicrosoftGraphTermStoreTerm and assigns it to the ParentTerm field.
func (o *MicrosoftGraphTermColumn) SetParentTerm(v AnyOfmicrosoftGraphTermStoreTerm) {
	o.ParentTerm = v
}

// GetTermSet returns the TermSet field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTermColumn) GetTermSet() AnyOfmicrosoftGraphTermStoreSet {
	if o == nil  {
		var ret AnyOfmicrosoftGraphTermStoreSet
		return ret
	}
	return o.TermSet
}

// GetTermSetOk returns a tuple with the TermSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTermColumn) GetTermSetOk() (*AnyOfmicrosoftGraphTermStoreSet, bool) {
	if o == nil || o.TermSet == nil {
		return nil, false
	}
	return &o.TermSet, true
}

// HasTermSet returns a boolean if a field has been set.
func (o *MicrosoftGraphTermColumn) HasTermSet() bool {
	if o != nil && o.TermSet != nil {
		return true
	}

	return false
}

// SetTermSet gets a reference to the given AnyOfmicrosoftGraphTermStoreSet and assigns it to the TermSet field.
func (o *MicrosoftGraphTermColumn) SetTermSet(v AnyOfmicrosoftGraphTermStoreSet) {
	o.TermSet = v
}

func (o MicrosoftGraphTermColumn) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowMultipleValues.IsSet() {
		toSerialize["allowMultipleValues"] = o.AllowMultipleValues.Get()
	}
	if o.ShowFullyQualifiedName.IsSet() {
		toSerialize["showFullyQualifiedName"] = o.ShowFullyQualifiedName.Get()
	}
	if o.ParentTerm != nil {
		toSerialize["parentTerm"] = o.ParentTerm
	}
	if o.TermSet != nil {
		toSerialize["termSet"] = o.TermSet
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphTermColumn struct {
	value *MicrosoftGraphTermColumn
	isSet bool
}

func (v NullableMicrosoftGraphTermColumn) Get() *MicrosoftGraphTermColumn {
	return v.value
}

func (v *NullableMicrosoftGraphTermColumn) Set(val *MicrosoftGraphTermColumn) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphTermColumn) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphTermColumn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphTermColumn(val *MicrosoftGraphTermColumn) *NullableMicrosoftGraphTermColumn {
	return &NullableMicrosoftGraphTermColumn{value: val, isSet: true}
}

func (v NullableMicrosoftGraphTermColumn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphTermColumn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


