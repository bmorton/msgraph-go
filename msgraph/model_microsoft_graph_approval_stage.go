/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphApprovalStage struct for MicrosoftGraphApprovalStage
type MicrosoftGraphApprovalStage struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// Indicates whether the stage is assigned to the calling user to review. Read-only.
	AssignedToMe NullableBool `json:"assignedToMe,omitempty"`
	// The label provided by the policy creator to identify an approval stage. Read-only.
	DisplayName NullableString `json:"displayName,omitempty"`
	// The justification associated with the approval stage decision.
	Justification NullableString `json:"justification,omitempty"`
	// The identifier of the reviewer. Read-only.
	ReviewedBy AnyOfmicrosoftGraphIdentity `json:"reviewedBy,omitempty"`
	// The date and time when a decision was recorded. The date and time information uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
	ReviewedDateTime NullableTime `json:"reviewedDateTime,omitempty"`
	// The result of this approval record. Possible values include: NotReviewed, Approved, Denied.
	ReviewResult NullableString `json:"reviewResult,omitempty"`
	// The stage status. Possible values: InProgress, Initializing, Completed, Expired. Read-only.
	Status NullableString `json:"status,omitempty"`
}

// NewMicrosoftGraphApprovalStage instantiates a new MicrosoftGraphApprovalStage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphApprovalStage() *MicrosoftGraphApprovalStage {
	this := MicrosoftGraphApprovalStage{}
	return &this
}

// NewMicrosoftGraphApprovalStageWithDefaults instantiates a new MicrosoftGraphApprovalStage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphApprovalStageWithDefaults() *MicrosoftGraphApprovalStage {
	this := MicrosoftGraphApprovalStage{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphApprovalStage) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphApprovalStage) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphApprovalStage) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphApprovalStage) SetId(v string) {
	o.Id = &v
}

// GetAssignedToMe returns the AssignedToMe field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphApprovalStage) GetAssignedToMe() bool {
	if o == nil || o.AssignedToMe.Get() == nil {
		var ret bool
		return ret
	}
	return *o.AssignedToMe.Get()
}

// GetAssignedToMeOk returns a tuple with the AssignedToMe field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphApprovalStage) GetAssignedToMeOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AssignedToMe.Get(), o.AssignedToMe.IsSet()
}

// HasAssignedToMe returns a boolean if a field has been set.
func (o *MicrosoftGraphApprovalStage) HasAssignedToMe() bool {
	if o != nil && o.AssignedToMe.IsSet() {
		return true
	}

	return false
}

// SetAssignedToMe gets a reference to the given NullableBool and assigns it to the AssignedToMe field.
func (o *MicrosoftGraphApprovalStage) SetAssignedToMe(v bool) {
	o.AssignedToMe.Set(&v)
}
// SetAssignedToMeNil sets the value for AssignedToMe to be an explicit nil
func (o *MicrosoftGraphApprovalStage) SetAssignedToMeNil() {
	o.AssignedToMe.Set(nil)
}

// UnsetAssignedToMe ensures that no value is present for AssignedToMe, not even an explicit nil
func (o *MicrosoftGraphApprovalStage) UnsetAssignedToMe() {
	o.AssignedToMe.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphApprovalStage) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphApprovalStage) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphApprovalStage) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *MicrosoftGraphApprovalStage) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *MicrosoftGraphApprovalStage) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *MicrosoftGraphApprovalStage) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetJustification returns the Justification field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphApprovalStage) GetJustification() string {
	if o == nil || o.Justification.Get() == nil {
		var ret string
		return ret
	}
	return *o.Justification.Get()
}

// GetJustificationOk returns a tuple with the Justification field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphApprovalStage) GetJustificationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Justification.Get(), o.Justification.IsSet()
}

// HasJustification returns a boolean if a field has been set.
func (o *MicrosoftGraphApprovalStage) HasJustification() bool {
	if o != nil && o.Justification.IsSet() {
		return true
	}

	return false
}

// SetJustification gets a reference to the given NullableString and assigns it to the Justification field.
func (o *MicrosoftGraphApprovalStage) SetJustification(v string) {
	o.Justification.Set(&v)
}
// SetJustificationNil sets the value for Justification to be an explicit nil
func (o *MicrosoftGraphApprovalStage) SetJustificationNil() {
	o.Justification.Set(nil)
}

// UnsetJustification ensures that no value is present for Justification, not even an explicit nil
func (o *MicrosoftGraphApprovalStage) UnsetJustification() {
	o.Justification.Unset()
}

// GetReviewedBy returns the ReviewedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphApprovalStage) GetReviewedBy() AnyOfmicrosoftGraphIdentity {
	if o == nil  {
		var ret AnyOfmicrosoftGraphIdentity
		return ret
	}
	return o.ReviewedBy
}

// GetReviewedByOk returns a tuple with the ReviewedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphApprovalStage) GetReviewedByOk() (*AnyOfmicrosoftGraphIdentity, bool) {
	if o == nil || o.ReviewedBy == nil {
		return nil, false
	}
	return &o.ReviewedBy, true
}

// HasReviewedBy returns a boolean if a field has been set.
func (o *MicrosoftGraphApprovalStage) HasReviewedBy() bool {
	if o != nil && o.ReviewedBy != nil {
		return true
	}

	return false
}

// SetReviewedBy gets a reference to the given AnyOfmicrosoftGraphIdentity and assigns it to the ReviewedBy field.
func (o *MicrosoftGraphApprovalStage) SetReviewedBy(v AnyOfmicrosoftGraphIdentity) {
	o.ReviewedBy = v
}

// GetReviewedDateTime returns the ReviewedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphApprovalStage) GetReviewedDateTime() time.Time {
	if o == nil || o.ReviewedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.ReviewedDateTime.Get()
}

// GetReviewedDateTimeOk returns a tuple with the ReviewedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphApprovalStage) GetReviewedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ReviewedDateTime.Get(), o.ReviewedDateTime.IsSet()
}

// HasReviewedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphApprovalStage) HasReviewedDateTime() bool {
	if o != nil && o.ReviewedDateTime.IsSet() {
		return true
	}

	return false
}

// SetReviewedDateTime gets a reference to the given NullableTime and assigns it to the ReviewedDateTime field.
func (o *MicrosoftGraphApprovalStage) SetReviewedDateTime(v time.Time) {
	o.ReviewedDateTime.Set(&v)
}
// SetReviewedDateTimeNil sets the value for ReviewedDateTime to be an explicit nil
func (o *MicrosoftGraphApprovalStage) SetReviewedDateTimeNil() {
	o.ReviewedDateTime.Set(nil)
}

// UnsetReviewedDateTime ensures that no value is present for ReviewedDateTime, not even an explicit nil
func (o *MicrosoftGraphApprovalStage) UnsetReviewedDateTime() {
	o.ReviewedDateTime.Unset()
}

// GetReviewResult returns the ReviewResult field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphApprovalStage) GetReviewResult() string {
	if o == nil || o.ReviewResult.Get() == nil {
		var ret string
		return ret
	}
	return *o.ReviewResult.Get()
}

// GetReviewResultOk returns a tuple with the ReviewResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphApprovalStage) GetReviewResultOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ReviewResult.Get(), o.ReviewResult.IsSet()
}

// HasReviewResult returns a boolean if a field has been set.
func (o *MicrosoftGraphApprovalStage) HasReviewResult() bool {
	if o != nil && o.ReviewResult.IsSet() {
		return true
	}

	return false
}

// SetReviewResult gets a reference to the given NullableString and assigns it to the ReviewResult field.
func (o *MicrosoftGraphApprovalStage) SetReviewResult(v string) {
	o.ReviewResult.Set(&v)
}
// SetReviewResultNil sets the value for ReviewResult to be an explicit nil
func (o *MicrosoftGraphApprovalStage) SetReviewResultNil() {
	o.ReviewResult.Set(nil)
}

// UnsetReviewResult ensures that no value is present for ReviewResult, not even an explicit nil
func (o *MicrosoftGraphApprovalStage) UnsetReviewResult() {
	o.ReviewResult.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphApprovalStage) GetStatus() string {
	if o == nil || o.Status.Get() == nil {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphApprovalStage) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *MicrosoftGraphApprovalStage) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *MicrosoftGraphApprovalStage) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *MicrosoftGraphApprovalStage) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *MicrosoftGraphApprovalStage) UnsetStatus() {
	o.Status.Unset()
}

func (o MicrosoftGraphApprovalStage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.AssignedToMe.IsSet() {
		toSerialize["assignedToMe"] = o.AssignedToMe.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.Justification.IsSet() {
		toSerialize["justification"] = o.Justification.Get()
	}
	if o.ReviewedBy != nil {
		toSerialize["reviewedBy"] = o.ReviewedBy
	}
	if o.ReviewedDateTime.IsSet() {
		toSerialize["reviewedDateTime"] = o.ReviewedDateTime.Get()
	}
	if o.ReviewResult.IsSet() {
		toSerialize["reviewResult"] = o.ReviewResult.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphApprovalStage struct {
	value *MicrosoftGraphApprovalStage
	isSet bool
}

func (v NullableMicrosoftGraphApprovalStage) Get() *MicrosoftGraphApprovalStage {
	return v.value
}

func (v *NullableMicrosoftGraphApprovalStage) Set(val *MicrosoftGraphApprovalStage) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphApprovalStage) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphApprovalStage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphApprovalStage(val *MicrosoftGraphApprovalStage) *NullableMicrosoftGraphApprovalStage {
	return &NullableMicrosoftGraphApprovalStage{value: val, isSet: true}
}

func (v NullableMicrosoftGraphApprovalStage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphApprovalStage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


