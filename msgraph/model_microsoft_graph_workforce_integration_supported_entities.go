/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphWorkforceIntegrationSupportedEntities the model 'MicrosoftGraphWorkforceIntegrationSupportedEntities'
type MicrosoftGraphWorkforceIntegrationSupportedEntities string

// List of microsoft.graph.workforceIntegrationSupportedEntities
const (
	NONE MicrosoftGraphWorkforceIntegrationSupportedEntities = "none"
	SHIFT MicrosoftGraphWorkforceIntegrationSupportedEntities = "shift"
	SWAP_REQUEST MicrosoftGraphWorkforceIntegrationSupportedEntities = "swapRequest"
	USER_SHIFT_PREFERENCES MicrosoftGraphWorkforceIntegrationSupportedEntities = "userShiftPreferences"
	OPEN_SHIFT MicrosoftGraphWorkforceIntegrationSupportedEntities = "openShift"
	OPEN_SHIFT_REQUEST MicrosoftGraphWorkforceIntegrationSupportedEntities = "openShiftRequest"
	OFFER_SHIFT_REQUEST MicrosoftGraphWorkforceIntegrationSupportedEntities = "offerShiftRequest"
	UNKNOWN_FUTURE_VALUE MicrosoftGraphWorkforceIntegrationSupportedEntities = "unknownFutureValue"
)

// All allowed values of MicrosoftGraphWorkforceIntegrationSupportedEntities enum
var AllowedMicrosoftGraphWorkforceIntegrationSupportedEntitiesEnumValues = []MicrosoftGraphWorkforceIntegrationSupportedEntities{
	"none",
	"shift",
	"swapRequest",
	"userShiftPreferences",
	"openShift",
	"openShiftRequest",
	"offerShiftRequest",
	"unknownFutureValue",
}

func (v *MicrosoftGraphWorkforceIntegrationSupportedEntities) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphWorkforceIntegrationSupportedEntities(value)
	for _, existing := range AllowedMicrosoftGraphWorkforceIntegrationSupportedEntitiesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphWorkforceIntegrationSupportedEntities", value)
}

// NewMicrosoftGraphWorkforceIntegrationSupportedEntitiesFromValue returns a pointer to a valid MicrosoftGraphWorkforceIntegrationSupportedEntities
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphWorkforceIntegrationSupportedEntitiesFromValue(v string) (*MicrosoftGraphWorkforceIntegrationSupportedEntities, error) {
	ev := MicrosoftGraphWorkforceIntegrationSupportedEntities(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphWorkforceIntegrationSupportedEntities: valid values are %v", v, AllowedMicrosoftGraphWorkforceIntegrationSupportedEntitiesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphWorkforceIntegrationSupportedEntities) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphWorkforceIntegrationSupportedEntitiesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.workforceIntegrationSupportedEntities value
func (v MicrosoftGraphWorkforceIntegrationSupportedEntities) Ptr() *MicrosoftGraphWorkforceIntegrationSupportedEntities {
	return &v
}

type NullableMicrosoftGraphWorkforceIntegrationSupportedEntities struct {
	value *MicrosoftGraphWorkforceIntegrationSupportedEntities
	isSet bool
}

func (v NullableMicrosoftGraphWorkforceIntegrationSupportedEntities) Get() *MicrosoftGraphWorkforceIntegrationSupportedEntities {
	return v.value
}

func (v *NullableMicrosoftGraphWorkforceIntegrationSupportedEntities) Set(val *MicrosoftGraphWorkforceIntegrationSupportedEntities) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphWorkforceIntegrationSupportedEntities) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphWorkforceIntegrationSupportedEntities) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphWorkforceIntegrationSupportedEntities(val *MicrosoftGraphWorkforceIntegrationSupportedEntities) *NullableMicrosoftGraphWorkforceIntegrationSupportedEntities {
	return &NullableMicrosoftGraphWorkforceIntegrationSupportedEntities{value: val, isSet: true}
}

func (v NullableMicrosoftGraphWorkforceIntegrationSupportedEntities) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphWorkforceIntegrationSupportedEntities) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

