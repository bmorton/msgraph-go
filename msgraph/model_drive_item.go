/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DriveItem struct for DriveItem
type DriveItem struct {
	// Audio metadata, if the item is an audio file. Read-only.
	Audio AnyOfmicrosoftGraphAudio `json:"audio,omitempty"`
	Bundle AnyOfmicrosoftGraphBundle `json:"bundle,omitempty"`
	// The content stream, if the item represents a file.
	Content NullableString `json:"content,omitempty"`
	// An eTag for the content of the item. This eTag is not changed if only the metadata is changed. Note This property is not returned if the item is a folder. Read-only.
	CTag NullableString `json:"cTag,omitempty"`
	// Information about the deleted state of the item. Read-only.
	Deleted AnyOfmicrosoftGraphDeleted `json:"deleted,omitempty"`
	// File metadata, if the item is a file. Read-only.
	File AnyOfmicrosoftGraphFile `json:"file,omitempty"`
	// File system information on client. Read-write.
	FileSystemInfo AnyOfmicrosoftGraphFileSystemInfo `json:"fileSystemInfo,omitempty"`
	// Folder metadata, if the item is a folder. Read-only.
	Folder AnyOfmicrosoftGraphFolder `json:"folder,omitempty"`
	// Image metadata, if the item is an image. Read-only.
	Image AnyOfmicrosoftGraphImage `json:"image,omitempty"`
	// Location metadata, if the item has location data. Read-only.
	Location AnyOfmicrosoftGraphGeoCoordinates `json:"location,omitempty"`
	// Malware metadata, if the item was detected to contain malware. Read-only.
	Malware AnyOfmicrosoftGraphMalware `json:"malware,omitempty"`
	// If present, indicates that this item is a package instead of a folder or file. Packages are treated like files in some contexts and folders in others. Read-only.
	Package AnyOfmicrosoftGraphPackage `json:"package,omitempty"`
	// If present, indicates that one or more operations that might affect the state of the driveItem are pending completion. Read-only.
	PendingOperations AnyOfmicrosoftGraphPendingOperations `json:"pendingOperations,omitempty"`
	// Photo metadata, if the item is a photo. Read-only.
	Photo AnyOfmicrosoftGraphPhoto `json:"photo,omitempty"`
	// Provides information about the published or checked-out state of an item, in locations that support such actions. This property is not returned by default. Read-only.
	Publication AnyOfmicrosoftGraphPublicationFacet `json:"publication,omitempty"`
	// Remote item data, if the item is shared from a drive other than the one being accessed. Read-only.
	RemoteItem AnyOfmicrosoftGraphRemoteItem `json:"remoteItem,omitempty"`
	// If this property is non-null, it indicates that the driveItem is the top-most driveItem in the drive.
	Root AnyOfobject `json:"root,omitempty"`
	// Search metadata, if the item is from a search result. Read-only.
	SearchResult AnyOfmicrosoftGraphSearchResult `json:"searchResult,omitempty"`
	// Indicates that the item has been shared with others and provides information about the shared state of the item. Read-only.
	Shared AnyOfmicrosoftGraphShared `json:"shared,omitempty"`
	// Returns identifiers useful for SharePoint REST compatibility. Read-only.
	SharepointIds AnyOfmicrosoftGraphSharepointIds `json:"sharepointIds,omitempty"`
	// Size of the item in bytes. Read-only.
	Size NullableInt64 `json:"size,omitempty"`
	// If the current item is also available as a special folder, this facet is returned. Read-only.
	SpecialFolder AnyOfmicrosoftGraphSpecialFolder `json:"specialFolder,omitempty"`
	// Video metadata, if the item is a video. Read-only.
	Video AnyOfmicrosoftGraphVideo `json:"video,omitempty"`
	// WebDAV compatible URL for the item.
	WebDavUrl NullableString `json:"webDavUrl,omitempty"`
	// For files that are Excel spreadsheets, accesses the workbook API to work with the spreadsheet's contents. Nullable.
	Workbook AnyOfmicrosoftGraphWorkbook `json:"workbook,omitempty"`
	// Analytics about the view activities that took place on this item.
	Analytics AnyOfmicrosoftGraphItemAnalytics `json:"analytics,omitempty"`
	// Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable.
	Children *[]MicrosoftGraphDriveItem `json:"children,omitempty"`
	// For drives in SharePoint, the associated document library list item. Read-only. Nullable.
	ListItem AnyOfmicrosoftGraphListItem `json:"listItem,omitempty"`
	// The set of permissions for the item. Read-only. Nullable.
	Permissions *[]MicrosoftGraphPermission `json:"permissions,omitempty"`
	// The set of subscriptions on the item. Only supported on the root of a drive.
	Subscriptions *[]MicrosoftGraphSubscription `json:"subscriptions,omitempty"`
	// Collection containing [ThumbnailSet][] objects associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable.
	Thumbnails *[]MicrosoftGraphThumbnailSet `json:"thumbnails,omitempty"`
	// The list of previous versions of the item. For more info, see [getting previous versions][]. Read-only. Nullable.
	Versions *[]MicrosoftGraphDriveItemVersion `json:"versions,omitempty"`
}

// NewDriveItem instantiates a new DriveItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDriveItem() *DriveItem {
	this := DriveItem{}
	return &this
}

// NewDriveItemWithDefaults instantiates a new DriveItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDriveItemWithDefaults() *DriveItem {
	this := DriveItem{}
	return &this
}

// GetAudio returns the Audio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DriveItem) GetAudio() AnyOfmicrosoftGraphAudio {
	if o == nil  {
		var ret AnyOfmicrosoftGraphAudio
		return ret
	}
	return o.Audio
}

// GetAudioOk returns a tuple with the Audio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DriveItem) GetAudioOk() (*AnyOfmicrosoftGraphAudio, bool) {
	if o == nil || o.Audio == nil {
		return nil, false
	}
	return &o.Audio, true
}

// HasAudio returns a boolean if a field has been set.
func (o *DriveItem) HasAudio() bool {
	if o != nil && o.Audio != nil {
		return true
	}

	return false
}

// SetAudio gets a reference to the given AnyOfmicrosoftGraphAudio and assigns it to the Audio field.
func (o *DriveItem) SetAudio(v AnyOfmicrosoftGraphAudio) {
	o.Audio = v
}

// GetBundle returns the Bundle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DriveItem) GetBundle() AnyOfmicrosoftGraphBundle {
	if o == nil  {
		var ret AnyOfmicrosoftGraphBundle
		return ret
	}
	return o.Bundle
}

// GetBundleOk returns a tuple with the Bundle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DriveItem) GetBundleOk() (*AnyOfmicrosoftGraphBundle, bool) {
	if o == nil || o.Bundle == nil {
		return nil, false
	}
	return &o.Bundle, true
}

// HasBundle returns a boolean if a field has been set.
func (o *DriveItem) HasBundle() bool {
	if o != nil && o.Bundle != nil {
		return true
	}

	return false
}

// SetBundle gets a reference to the given AnyOfmicrosoftGraphBundle and assigns it to the Bundle field.
func (o *DriveItem) SetBundle(v AnyOfmicrosoftGraphBundle) {
	o.Bundle = v
}

// GetContent returns the Content field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DriveItem) GetContent() string {
	if o == nil || o.Content.Get() == nil {
		var ret string
		return ret
	}
	return *o.Content.Get()
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DriveItem) GetContentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Content.Get(), o.Content.IsSet()
}

// HasContent returns a boolean if a field has been set.
func (o *DriveItem) HasContent() bool {
	if o != nil && o.Content.IsSet() {
		return true
	}

	return false
}

// SetContent gets a reference to the given NullableString and assigns it to the Content field.
func (o *DriveItem) SetContent(v string) {
	o.Content.Set(&v)
}
// SetContentNil sets the value for Content to be an explicit nil
func (o *DriveItem) SetContentNil() {
	o.Content.Set(nil)
}

// UnsetContent ensures that no value is present for Content, not even an explicit nil
func (o *DriveItem) UnsetContent() {
	o.Content.Unset()
}

// GetCTag returns the CTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DriveItem) GetCTag() string {
	if o == nil || o.CTag.Get() == nil {
		var ret string
		return ret
	}
	return *o.CTag.Get()
}

// GetCTagOk returns a tuple with the CTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DriveItem) GetCTagOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CTag.Get(), o.CTag.IsSet()
}

// HasCTag returns a boolean if a field has been set.
func (o *DriveItem) HasCTag() bool {
	if o != nil && o.CTag.IsSet() {
		return true
	}

	return false
}

// SetCTag gets a reference to the given NullableString and assigns it to the CTag field.
func (o *DriveItem) SetCTag(v string) {
	o.CTag.Set(&v)
}
// SetCTagNil sets the value for CTag to be an explicit nil
func (o *DriveItem) SetCTagNil() {
	o.CTag.Set(nil)
}

// UnsetCTag ensures that no value is present for CTag, not even an explicit nil
func (o *DriveItem) UnsetCTag() {
	o.CTag.Unset()
}

// GetDeleted returns the Deleted field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DriveItem) GetDeleted() AnyOfmicrosoftGraphDeleted {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDeleted
		return ret
	}
	return o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DriveItem) GetDeletedOk() (*AnyOfmicrosoftGraphDeleted, bool) {
	if o == nil || o.Deleted == nil {
		return nil, false
	}
	return &o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *DriveItem) HasDeleted() bool {
	if o != nil && o.Deleted != nil {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given AnyOfmicrosoftGraphDeleted and assigns it to the Deleted field.
func (o *DriveItem) SetDeleted(v AnyOfmicrosoftGraphDeleted) {
	o.Deleted = v
}

// GetFile returns the File field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DriveItem) GetFile() AnyOfmicrosoftGraphFile {
	if o == nil  {
		var ret AnyOfmicrosoftGraphFile
		return ret
	}
	return o.File
}

// GetFileOk returns a tuple with the File field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DriveItem) GetFileOk() (*AnyOfmicrosoftGraphFile, bool) {
	if o == nil || o.File == nil {
		return nil, false
	}
	return &o.File, true
}

// HasFile returns a boolean if a field has been set.
func (o *DriveItem) HasFile() bool {
	if o != nil && o.File != nil {
		return true
	}

	return false
}

// SetFile gets a reference to the given AnyOfmicrosoftGraphFile and assigns it to the File field.
func (o *DriveItem) SetFile(v AnyOfmicrosoftGraphFile) {
	o.File = v
}

// GetFileSystemInfo returns the FileSystemInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DriveItem) GetFileSystemInfo() AnyOfmicrosoftGraphFileSystemInfo {
	if o == nil  {
		var ret AnyOfmicrosoftGraphFileSystemInfo
		return ret
	}
	return o.FileSystemInfo
}

// GetFileSystemInfoOk returns a tuple with the FileSystemInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DriveItem) GetFileSystemInfoOk() (*AnyOfmicrosoftGraphFileSystemInfo, bool) {
	if o == nil || o.FileSystemInfo == nil {
		return nil, false
	}
	return &o.FileSystemInfo, true
}

// HasFileSystemInfo returns a boolean if a field has been set.
func (o *DriveItem) HasFileSystemInfo() bool {
	if o != nil && o.FileSystemInfo != nil {
		return true
	}

	return false
}

// SetFileSystemInfo gets a reference to the given AnyOfmicrosoftGraphFileSystemInfo and assigns it to the FileSystemInfo field.
func (o *DriveItem) SetFileSystemInfo(v AnyOfmicrosoftGraphFileSystemInfo) {
	o.FileSystemInfo = v
}

// GetFolder returns the Folder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DriveItem) GetFolder() AnyOfmicrosoftGraphFolder {
	if o == nil  {
		var ret AnyOfmicrosoftGraphFolder
		return ret
	}
	return o.Folder
}

// GetFolderOk returns a tuple with the Folder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DriveItem) GetFolderOk() (*AnyOfmicrosoftGraphFolder, bool) {
	if o == nil || o.Folder == nil {
		return nil, false
	}
	return &o.Folder, true
}

// HasFolder returns a boolean if a field has been set.
func (o *DriveItem) HasFolder() bool {
	if o != nil && o.Folder != nil {
		return true
	}

	return false
}

// SetFolder gets a reference to the given AnyOfmicrosoftGraphFolder and assigns it to the Folder field.
func (o *DriveItem) SetFolder(v AnyOfmicrosoftGraphFolder) {
	o.Folder = v
}

// GetImage returns the Image field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DriveItem) GetImage() AnyOfmicrosoftGraphImage {
	if o == nil  {
		var ret AnyOfmicrosoftGraphImage
		return ret
	}
	return o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DriveItem) GetImageOk() (*AnyOfmicrosoftGraphImage, bool) {
	if o == nil || o.Image == nil {
		return nil, false
	}
	return &o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *DriveItem) HasImage() bool {
	if o != nil && o.Image != nil {
		return true
	}

	return false
}

// SetImage gets a reference to the given AnyOfmicrosoftGraphImage and assigns it to the Image field.
func (o *DriveItem) SetImage(v AnyOfmicrosoftGraphImage) {
	o.Image = v
}

// GetLocation returns the Location field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DriveItem) GetLocation() AnyOfmicrosoftGraphGeoCoordinates {
	if o == nil  {
		var ret AnyOfmicrosoftGraphGeoCoordinates
		return ret
	}
	return o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DriveItem) GetLocationOk() (*AnyOfmicrosoftGraphGeoCoordinates, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return &o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *DriveItem) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given AnyOfmicrosoftGraphGeoCoordinates and assigns it to the Location field.
func (o *DriveItem) SetLocation(v AnyOfmicrosoftGraphGeoCoordinates) {
	o.Location = v
}

// GetMalware returns the Malware field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DriveItem) GetMalware() AnyOfmicrosoftGraphMalware {
	if o == nil  {
		var ret AnyOfmicrosoftGraphMalware
		return ret
	}
	return o.Malware
}

// GetMalwareOk returns a tuple with the Malware field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DriveItem) GetMalwareOk() (*AnyOfmicrosoftGraphMalware, bool) {
	if o == nil || o.Malware == nil {
		return nil, false
	}
	return &o.Malware, true
}

// HasMalware returns a boolean if a field has been set.
func (o *DriveItem) HasMalware() bool {
	if o != nil && o.Malware != nil {
		return true
	}

	return false
}

// SetMalware gets a reference to the given AnyOfmicrosoftGraphMalware and assigns it to the Malware field.
func (o *DriveItem) SetMalware(v AnyOfmicrosoftGraphMalware) {
	o.Malware = v
}

// GetPackage returns the Package field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DriveItem) GetPackage() AnyOfmicrosoftGraphPackage {
	if o == nil  {
		var ret AnyOfmicrosoftGraphPackage
		return ret
	}
	return o.Package
}

// GetPackageOk returns a tuple with the Package field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DriveItem) GetPackageOk() (*AnyOfmicrosoftGraphPackage, bool) {
	if o == nil || o.Package == nil {
		return nil, false
	}
	return &o.Package, true
}

// HasPackage returns a boolean if a field has been set.
func (o *DriveItem) HasPackage() bool {
	if o != nil && o.Package != nil {
		return true
	}

	return false
}

// SetPackage gets a reference to the given AnyOfmicrosoftGraphPackage and assigns it to the Package field.
func (o *DriveItem) SetPackage(v AnyOfmicrosoftGraphPackage) {
	o.Package = v
}

// GetPendingOperations returns the PendingOperations field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DriveItem) GetPendingOperations() AnyOfmicrosoftGraphPendingOperations {
	if o == nil  {
		var ret AnyOfmicrosoftGraphPendingOperations
		return ret
	}
	return o.PendingOperations
}

// GetPendingOperationsOk returns a tuple with the PendingOperations field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DriveItem) GetPendingOperationsOk() (*AnyOfmicrosoftGraphPendingOperations, bool) {
	if o == nil || o.PendingOperations == nil {
		return nil, false
	}
	return &o.PendingOperations, true
}

// HasPendingOperations returns a boolean if a field has been set.
func (o *DriveItem) HasPendingOperations() bool {
	if o != nil && o.PendingOperations != nil {
		return true
	}

	return false
}

// SetPendingOperations gets a reference to the given AnyOfmicrosoftGraphPendingOperations and assigns it to the PendingOperations field.
func (o *DriveItem) SetPendingOperations(v AnyOfmicrosoftGraphPendingOperations) {
	o.PendingOperations = v
}

// GetPhoto returns the Photo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DriveItem) GetPhoto() AnyOfmicrosoftGraphPhoto {
	if o == nil  {
		var ret AnyOfmicrosoftGraphPhoto
		return ret
	}
	return o.Photo
}

// GetPhotoOk returns a tuple with the Photo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DriveItem) GetPhotoOk() (*AnyOfmicrosoftGraphPhoto, bool) {
	if o == nil || o.Photo == nil {
		return nil, false
	}
	return &o.Photo, true
}

// HasPhoto returns a boolean if a field has been set.
func (o *DriveItem) HasPhoto() bool {
	if o != nil && o.Photo != nil {
		return true
	}

	return false
}

// SetPhoto gets a reference to the given AnyOfmicrosoftGraphPhoto and assigns it to the Photo field.
func (o *DriveItem) SetPhoto(v AnyOfmicrosoftGraphPhoto) {
	o.Photo = v
}

// GetPublication returns the Publication field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DriveItem) GetPublication() AnyOfmicrosoftGraphPublicationFacet {
	if o == nil  {
		var ret AnyOfmicrosoftGraphPublicationFacet
		return ret
	}
	return o.Publication
}

// GetPublicationOk returns a tuple with the Publication field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DriveItem) GetPublicationOk() (*AnyOfmicrosoftGraphPublicationFacet, bool) {
	if o == nil || o.Publication == nil {
		return nil, false
	}
	return &o.Publication, true
}

// HasPublication returns a boolean if a field has been set.
func (o *DriveItem) HasPublication() bool {
	if o != nil && o.Publication != nil {
		return true
	}

	return false
}

// SetPublication gets a reference to the given AnyOfmicrosoftGraphPublicationFacet and assigns it to the Publication field.
func (o *DriveItem) SetPublication(v AnyOfmicrosoftGraphPublicationFacet) {
	o.Publication = v
}

// GetRemoteItem returns the RemoteItem field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DriveItem) GetRemoteItem() AnyOfmicrosoftGraphRemoteItem {
	if o == nil  {
		var ret AnyOfmicrosoftGraphRemoteItem
		return ret
	}
	return o.RemoteItem
}

// GetRemoteItemOk returns a tuple with the RemoteItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DriveItem) GetRemoteItemOk() (*AnyOfmicrosoftGraphRemoteItem, bool) {
	if o == nil || o.RemoteItem == nil {
		return nil, false
	}
	return &o.RemoteItem, true
}

// HasRemoteItem returns a boolean if a field has been set.
func (o *DriveItem) HasRemoteItem() bool {
	if o != nil && o.RemoteItem != nil {
		return true
	}

	return false
}

// SetRemoteItem gets a reference to the given AnyOfmicrosoftGraphRemoteItem and assigns it to the RemoteItem field.
func (o *DriveItem) SetRemoteItem(v AnyOfmicrosoftGraphRemoteItem) {
	o.RemoteItem = v
}

// GetRoot returns the Root field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DriveItem) GetRoot() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Root
}

// GetRootOk returns a tuple with the Root field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DriveItem) GetRootOk() (*AnyOfobject, bool) {
	if o == nil || o.Root == nil {
		return nil, false
	}
	return &o.Root, true
}

// HasRoot returns a boolean if a field has been set.
func (o *DriveItem) HasRoot() bool {
	if o != nil && o.Root != nil {
		return true
	}

	return false
}

// SetRoot gets a reference to the given AnyOfobject and assigns it to the Root field.
func (o *DriveItem) SetRoot(v AnyOfobject) {
	o.Root = v
}

// GetSearchResult returns the SearchResult field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DriveItem) GetSearchResult() AnyOfmicrosoftGraphSearchResult {
	if o == nil  {
		var ret AnyOfmicrosoftGraphSearchResult
		return ret
	}
	return o.SearchResult
}

// GetSearchResultOk returns a tuple with the SearchResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DriveItem) GetSearchResultOk() (*AnyOfmicrosoftGraphSearchResult, bool) {
	if o == nil || o.SearchResult == nil {
		return nil, false
	}
	return &o.SearchResult, true
}

// HasSearchResult returns a boolean if a field has been set.
func (o *DriveItem) HasSearchResult() bool {
	if o != nil && o.SearchResult != nil {
		return true
	}

	return false
}

// SetSearchResult gets a reference to the given AnyOfmicrosoftGraphSearchResult and assigns it to the SearchResult field.
func (o *DriveItem) SetSearchResult(v AnyOfmicrosoftGraphSearchResult) {
	o.SearchResult = v
}

// GetShared returns the Shared field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DriveItem) GetShared() AnyOfmicrosoftGraphShared {
	if o == nil  {
		var ret AnyOfmicrosoftGraphShared
		return ret
	}
	return o.Shared
}

// GetSharedOk returns a tuple with the Shared field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DriveItem) GetSharedOk() (*AnyOfmicrosoftGraphShared, bool) {
	if o == nil || o.Shared == nil {
		return nil, false
	}
	return &o.Shared, true
}

// HasShared returns a boolean if a field has been set.
func (o *DriveItem) HasShared() bool {
	if o != nil && o.Shared != nil {
		return true
	}

	return false
}

// SetShared gets a reference to the given AnyOfmicrosoftGraphShared and assigns it to the Shared field.
func (o *DriveItem) SetShared(v AnyOfmicrosoftGraphShared) {
	o.Shared = v
}

// GetSharepointIds returns the SharepointIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DriveItem) GetSharepointIds() AnyOfmicrosoftGraphSharepointIds {
	if o == nil  {
		var ret AnyOfmicrosoftGraphSharepointIds
		return ret
	}
	return o.SharepointIds
}

// GetSharepointIdsOk returns a tuple with the SharepointIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DriveItem) GetSharepointIdsOk() (*AnyOfmicrosoftGraphSharepointIds, bool) {
	if o == nil || o.SharepointIds == nil {
		return nil, false
	}
	return &o.SharepointIds, true
}

// HasSharepointIds returns a boolean if a field has been set.
func (o *DriveItem) HasSharepointIds() bool {
	if o != nil && o.SharepointIds != nil {
		return true
	}

	return false
}

// SetSharepointIds gets a reference to the given AnyOfmicrosoftGraphSharepointIds and assigns it to the SharepointIds field.
func (o *DriveItem) SetSharepointIds(v AnyOfmicrosoftGraphSharepointIds) {
	o.SharepointIds = v
}

// GetSize returns the Size field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DriveItem) GetSize() int64 {
	if o == nil || o.Size.Get() == nil {
		var ret int64
		return ret
	}
	return *o.Size.Get()
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DriveItem) GetSizeOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Size.Get(), o.Size.IsSet()
}

// HasSize returns a boolean if a field has been set.
func (o *DriveItem) HasSize() bool {
	if o != nil && o.Size.IsSet() {
		return true
	}

	return false
}

// SetSize gets a reference to the given NullableInt64 and assigns it to the Size field.
func (o *DriveItem) SetSize(v int64) {
	o.Size.Set(&v)
}
// SetSizeNil sets the value for Size to be an explicit nil
func (o *DriveItem) SetSizeNil() {
	o.Size.Set(nil)
}

// UnsetSize ensures that no value is present for Size, not even an explicit nil
func (o *DriveItem) UnsetSize() {
	o.Size.Unset()
}

// GetSpecialFolder returns the SpecialFolder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DriveItem) GetSpecialFolder() AnyOfmicrosoftGraphSpecialFolder {
	if o == nil  {
		var ret AnyOfmicrosoftGraphSpecialFolder
		return ret
	}
	return o.SpecialFolder
}

// GetSpecialFolderOk returns a tuple with the SpecialFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DriveItem) GetSpecialFolderOk() (*AnyOfmicrosoftGraphSpecialFolder, bool) {
	if o == nil || o.SpecialFolder == nil {
		return nil, false
	}
	return &o.SpecialFolder, true
}

// HasSpecialFolder returns a boolean if a field has been set.
func (o *DriveItem) HasSpecialFolder() bool {
	if o != nil && o.SpecialFolder != nil {
		return true
	}

	return false
}

// SetSpecialFolder gets a reference to the given AnyOfmicrosoftGraphSpecialFolder and assigns it to the SpecialFolder field.
func (o *DriveItem) SetSpecialFolder(v AnyOfmicrosoftGraphSpecialFolder) {
	o.SpecialFolder = v
}

// GetVideo returns the Video field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DriveItem) GetVideo() AnyOfmicrosoftGraphVideo {
	if o == nil  {
		var ret AnyOfmicrosoftGraphVideo
		return ret
	}
	return o.Video
}

// GetVideoOk returns a tuple with the Video field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DriveItem) GetVideoOk() (*AnyOfmicrosoftGraphVideo, bool) {
	if o == nil || o.Video == nil {
		return nil, false
	}
	return &o.Video, true
}

// HasVideo returns a boolean if a field has been set.
func (o *DriveItem) HasVideo() bool {
	if o != nil && o.Video != nil {
		return true
	}

	return false
}

// SetVideo gets a reference to the given AnyOfmicrosoftGraphVideo and assigns it to the Video field.
func (o *DriveItem) SetVideo(v AnyOfmicrosoftGraphVideo) {
	o.Video = v
}

// GetWebDavUrl returns the WebDavUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DriveItem) GetWebDavUrl() string {
	if o == nil || o.WebDavUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.WebDavUrl.Get()
}

// GetWebDavUrlOk returns a tuple with the WebDavUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DriveItem) GetWebDavUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.WebDavUrl.Get(), o.WebDavUrl.IsSet()
}

// HasWebDavUrl returns a boolean if a field has been set.
func (o *DriveItem) HasWebDavUrl() bool {
	if o != nil && o.WebDavUrl.IsSet() {
		return true
	}

	return false
}

// SetWebDavUrl gets a reference to the given NullableString and assigns it to the WebDavUrl field.
func (o *DriveItem) SetWebDavUrl(v string) {
	o.WebDavUrl.Set(&v)
}
// SetWebDavUrlNil sets the value for WebDavUrl to be an explicit nil
func (o *DriveItem) SetWebDavUrlNil() {
	o.WebDavUrl.Set(nil)
}

// UnsetWebDavUrl ensures that no value is present for WebDavUrl, not even an explicit nil
func (o *DriveItem) UnsetWebDavUrl() {
	o.WebDavUrl.Unset()
}

// GetWorkbook returns the Workbook field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DriveItem) GetWorkbook() AnyOfmicrosoftGraphWorkbook {
	if o == nil  {
		var ret AnyOfmicrosoftGraphWorkbook
		return ret
	}
	return o.Workbook
}

// GetWorkbookOk returns a tuple with the Workbook field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DriveItem) GetWorkbookOk() (*AnyOfmicrosoftGraphWorkbook, bool) {
	if o == nil || o.Workbook == nil {
		return nil, false
	}
	return &o.Workbook, true
}

// HasWorkbook returns a boolean if a field has been set.
func (o *DriveItem) HasWorkbook() bool {
	if o != nil && o.Workbook != nil {
		return true
	}

	return false
}

// SetWorkbook gets a reference to the given AnyOfmicrosoftGraphWorkbook and assigns it to the Workbook field.
func (o *DriveItem) SetWorkbook(v AnyOfmicrosoftGraphWorkbook) {
	o.Workbook = v
}

// GetAnalytics returns the Analytics field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DriveItem) GetAnalytics() AnyOfmicrosoftGraphItemAnalytics {
	if o == nil  {
		var ret AnyOfmicrosoftGraphItemAnalytics
		return ret
	}
	return o.Analytics
}

// GetAnalyticsOk returns a tuple with the Analytics field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DriveItem) GetAnalyticsOk() (*AnyOfmicrosoftGraphItemAnalytics, bool) {
	if o == nil || o.Analytics == nil {
		return nil, false
	}
	return &o.Analytics, true
}

// HasAnalytics returns a boolean if a field has been set.
func (o *DriveItem) HasAnalytics() bool {
	if o != nil && o.Analytics != nil {
		return true
	}

	return false
}

// SetAnalytics gets a reference to the given AnyOfmicrosoftGraphItemAnalytics and assigns it to the Analytics field.
func (o *DriveItem) SetAnalytics(v AnyOfmicrosoftGraphItemAnalytics) {
	o.Analytics = v
}

// GetChildren returns the Children field value if set, zero value otherwise.
func (o *DriveItem) GetChildren() []MicrosoftGraphDriveItem {
	if o == nil || o.Children == nil {
		var ret []MicrosoftGraphDriveItem
		return ret
	}
	return *o.Children
}

// GetChildrenOk returns a tuple with the Children field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriveItem) GetChildrenOk() (*[]MicrosoftGraphDriveItem, bool) {
	if o == nil || o.Children == nil {
		return nil, false
	}
	return o.Children, true
}

// HasChildren returns a boolean if a field has been set.
func (o *DriveItem) HasChildren() bool {
	if o != nil && o.Children != nil {
		return true
	}

	return false
}

// SetChildren gets a reference to the given []MicrosoftGraphDriveItem and assigns it to the Children field.
func (o *DriveItem) SetChildren(v []MicrosoftGraphDriveItem) {
	o.Children = &v
}

// GetListItem returns the ListItem field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DriveItem) GetListItem() AnyOfmicrosoftGraphListItem {
	if o == nil  {
		var ret AnyOfmicrosoftGraphListItem
		return ret
	}
	return o.ListItem
}

// GetListItemOk returns a tuple with the ListItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DriveItem) GetListItemOk() (*AnyOfmicrosoftGraphListItem, bool) {
	if o == nil || o.ListItem == nil {
		return nil, false
	}
	return &o.ListItem, true
}

// HasListItem returns a boolean if a field has been set.
func (o *DriveItem) HasListItem() bool {
	if o != nil && o.ListItem != nil {
		return true
	}

	return false
}

// SetListItem gets a reference to the given AnyOfmicrosoftGraphListItem and assigns it to the ListItem field.
func (o *DriveItem) SetListItem(v AnyOfmicrosoftGraphListItem) {
	o.ListItem = v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *DriveItem) GetPermissions() []MicrosoftGraphPermission {
	if o == nil || o.Permissions == nil {
		var ret []MicrosoftGraphPermission
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriveItem) GetPermissionsOk() (*[]MicrosoftGraphPermission, bool) {
	if o == nil || o.Permissions == nil {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *DriveItem) HasPermissions() bool {
	if o != nil && o.Permissions != nil {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []MicrosoftGraphPermission and assigns it to the Permissions field.
func (o *DriveItem) SetPermissions(v []MicrosoftGraphPermission) {
	o.Permissions = &v
}

// GetSubscriptions returns the Subscriptions field value if set, zero value otherwise.
func (o *DriveItem) GetSubscriptions() []MicrosoftGraphSubscription {
	if o == nil || o.Subscriptions == nil {
		var ret []MicrosoftGraphSubscription
		return ret
	}
	return *o.Subscriptions
}

// GetSubscriptionsOk returns a tuple with the Subscriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriveItem) GetSubscriptionsOk() (*[]MicrosoftGraphSubscription, bool) {
	if o == nil || o.Subscriptions == nil {
		return nil, false
	}
	return o.Subscriptions, true
}

// HasSubscriptions returns a boolean if a field has been set.
func (o *DriveItem) HasSubscriptions() bool {
	if o != nil && o.Subscriptions != nil {
		return true
	}

	return false
}

// SetSubscriptions gets a reference to the given []MicrosoftGraphSubscription and assigns it to the Subscriptions field.
func (o *DriveItem) SetSubscriptions(v []MicrosoftGraphSubscription) {
	o.Subscriptions = &v
}

// GetThumbnails returns the Thumbnails field value if set, zero value otherwise.
func (o *DriveItem) GetThumbnails() []MicrosoftGraphThumbnailSet {
	if o == nil || o.Thumbnails == nil {
		var ret []MicrosoftGraphThumbnailSet
		return ret
	}
	return *o.Thumbnails
}

// GetThumbnailsOk returns a tuple with the Thumbnails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriveItem) GetThumbnailsOk() (*[]MicrosoftGraphThumbnailSet, bool) {
	if o == nil || o.Thumbnails == nil {
		return nil, false
	}
	return o.Thumbnails, true
}

// HasThumbnails returns a boolean if a field has been set.
func (o *DriveItem) HasThumbnails() bool {
	if o != nil && o.Thumbnails != nil {
		return true
	}

	return false
}

// SetThumbnails gets a reference to the given []MicrosoftGraphThumbnailSet and assigns it to the Thumbnails field.
func (o *DriveItem) SetThumbnails(v []MicrosoftGraphThumbnailSet) {
	o.Thumbnails = &v
}

// GetVersions returns the Versions field value if set, zero value otherwise.
func (o *DriveItem) GetVersions() []MicrosoftGraphDriveItemVersion {
	if o == nil || o.Versions == nil {
		var ret []MicrosoftGraphDriveItemVersion
		return ret
	}
	return *o.Versions
}

// GetVersionsOk returns a tuple with the Versions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriveItem) GetVersionsOk() (*[]MicrosoftGraphDriveItemVersion, bool) {
	if o == nil || o.Versions == nil {
		return nil, false
	}
	return o.Versions, true
}

// HasVersions returns a boolean if a field has been set.
func (o *DriveItem) HasVersions() bool {
	if o != nil && o.Versions != nil {
		return true
	}

	return false
}

// SetVersions gets a reference to the given []MicrosoftGraphDriveItemVersion and assigns it to the Versions field.
func (o *DriveItem) SetVersions(v []MicrosoftGraphDriveItemVersion) {
	o.Versions = &v
}

func (o DriveItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Audio != nil {
		toSerialize["audio"] = o.Audio
	}
	if o.Bundle != nil {
		toSerialize["bundle"] = o.Bundle
	}
	if o.Content.IsSet() {
		toSerialize["content"] = o.Content.Get()
	}
	if o.CTag.IsSet() {
		toSerialize["cTag"] = o.CTag.Get()
	}
	if o.Deleted != nil {
		toSerialize["deleted"] = o.Deleted
	}
	if o.File != nil {
		toSerialize["file"] = o.File
	}
	if o.FileSystemInfo != nil {
		toSerialize["fileSystemInfo"] = o.FileSystemInfo
	}
	if o.Folder != nil {
		toSerialize["folder"] = o.Folder
	}
	if o.Image != nil {
		toSerialize["image"] = o.Image
	}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.Malware != nil {
		toSerialize["malware"] = o.Malware
	}
	if o.Package != nil {
		toSerialize["package"] = o.Package
	}
	if o.PendingOperations != nil {
		toSerialize["pendingOperations"] = o.PendingOperations
	}
	if o.Photo != nil {
		toSerialize["photo"] = o.Photo
	}
	if o.Publication != nil {
		toSerialize["publication"] = o.Publication
	}
	if o.RemoteItem != nil {
		toSerialize["remoteItem"] = o.RemoteItem
	}
	if o.Root != nil {
		toSerialize["root"] = o.Root
	}
	if o.SearchResult != nil {
		toSerialize["searchResult"] = o.SearchResult
	}
	if o.Shared != nil {
		toSerialize["shared"] = o.Shared
	}
	if o.SharepointIds != nil {
		toSerialize["sharepointIds"] = o.SharepointIds
	}
	if o.Size.IsSet() {
		toSerialize["size"] = o.Size.Get()
	}
	if o.SpecialFolder != nil {
		toSerialize["specialFolder"] = o.SpecialFolder
	}
	if o.Video != nil {
		toSerialize["video"] = o.Video
	}
	if o.WebDavUrl.IsSet() {
		toSerialize["webDavUrl"] = o.WebDavUrl.Get()
	}
	if o.Workbook != nil {
		toSerialize["workbook"] = o.Workbook
	}
	if o.Analytics != nil {
		toSerialize["analytics"] = o.Analytics
	}
	if o.Children != nil {
		toSerialize["children"] = o.Children
	}
	if o.ListItem != nil {
		toSerialize["listItem"] = o.ListItem
	}
	if o.Permissions != nil {
		toSerialize["permissions"] = o.Permissions
	}
	if o.Subscriptions != nil {
		toSerialize["subscriptions"] = o.Subscriptions
	}
	if o.Thumbnails != nil {
		toSerialize["thumbnails"] = o.Thumbnails
	}
	if o.Versions != nil {
		toSerialize["versions"] = o.Versions
	}
	return json.Marshal(toSerialize)
}

type NullableDriveItem struct {
	value *DriveItem
	isSet bool
}

func (v NullableDriveItem) Get() *DriveItem {
	return v.value
}

func (v *NullableDriveItem) Set(val *DriveItem) {
	v.value = val
	v.isSet = true
}

func (v NullableDriveItem) IsSet() bool {
	return v.isSet
}

func (v *NullableDriveItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDriveItem(val *DriveItem) *NullableDriveItem {
	return &NullableDriveItem{value: val, isSet: true}
}

func (v NullableDriveItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDriveItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


