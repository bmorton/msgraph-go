/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphTeamwork struct for MicrosoftGraphTeamwork
type MicrosoftGraphTeamwork struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	WorkforceIntegrations *[]MicrosoftGraphWorkforceIntegration `json:"workforceIntegrations,omitempty"`
}

// NewMicrosoftGraphTeamwork instantiates a new MicrosoftGraphTeamwork object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphTeamwork() *MicrosoftGraphTeamwork {
	this := MicrosoftGraphTeamwork{}
	return &this
}

// NewMicrosoftGraphTeamworkWithDefaults instantiates a new MicrosoftGraphTeamwork object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphTeamworkWithDefaults() *MicrosoftGraphTeamwork {
	this := MicrosoftGraphTeamwork{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphTeamwork) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTeamwork) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphTeamwork) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphTeamwork) SetId(v string) {
	o.Id = &v
}

// GetWorkforceIntegrations returns the WorkforceIntegrations field value if set, zero value otherwise.
func (o *MicrosoftGraphTeamwork) GetWorkforceIntegrations() []MicrosoftGraphWorkforceIntegration {
	if o == nil || o.WorkforceIntegrations == nil {
		var ret []MicrosoftGraphWorkforceIntegration
		return ret
	}
	return *o.WorkforceIntegrations
}

// GetWorkforceIntegrationsOk returns a tuple with the WorkforceIntegrations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTeamwork) GetWorkforceIntegrationsOk() (*[]MicrosoftGraphWorkforceIntegration, bool) {
	if o == nil || o.WorkforceIntegrations == nil {
		return nil, false
	}
	return o.WorkforceIntegrations, true
}

// HasWorkforceIntegrations returns a boolean if a field has been set.
func (o *MicrosoftGraphTeamwork) HasWorkforceIntegrations() bool {
	if o != nil && o.WorkforceIntegrations != nil {
		return true
	}

	return false
}

// SetWorkforceIntegrations gets a reference to the given []MicrosoftGraphWorkforceIntegration and assigns it to the WorkforceIntegrations field.
func (o *MicrosoftGraphTeamwork) SetWorkforceIntegrations(v []MicrosoftGraphWorkforceIntegration) {
	o.WorkforceIntegrations = &v
}

func (o MicrosoftGraphTeamwork) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.WorkforceIntegrations != nil {
		toSerialize["workforceIntegrations"] = o.WorkforceIntegrations
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphTeamwork struct {
	value *MicrosoftGraphTeamwork
	isSet bool
}

func (v NullableMicrosoftGraphTeamwork) Get() *MicrosoftGraphTeamwork {
	return v.value
}

func (v *NullableMicrosoftGraphTeamwork) Set(val *MicrosoftGraphTeamwork) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphTeamwork) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphTeamwork) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphTeamwork(val *MicrosoftGraphTeamwork) *NullableMicrosoftGraphTeamwork {
	return &NullableMicrosoftGraphTeamwork{value: val, isSet: true}
}

func (v NullableMicrosoftGraphTeamwork) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphTeamwork) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


