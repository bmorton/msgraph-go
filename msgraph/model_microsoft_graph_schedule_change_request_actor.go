/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphScheduleChangeRequestActor the model 'MicrosoftGraphScheduleChangeRequestActor'
type MicrosoftGraphScheduleChangeRequestActor string

// List of microsoft.graph.scheduleChangeRequestActor
const (
	SENDER MicrosoftGraphScheduleChangeRequestActor = "sender"
	RECIPIENT MicrosoftGraphScheduleChangeRequestActor = "recipient"
	MANAGER MicrosoftGraphScheduleChangeRequestActor = "manager"
	SYSTEM MicrosoftGraphScheduleChangeRequestActor = "system"
	UNKNOWN_FUTURE_VALUE MicrosoftGraphScheduleChangeRequestActor = "unknownFutureValue"
)

// All allowed values of MicrosoftGraphScheduleChangeRequestActor enum
var AllowedMicrosoftGraphScheduleChangeRequestActorEnumValues = []MicrosoftGraphScheduleChangeRequestActor{
	"sender",
	"recipient",
	"manager",
	"system",
	"unknownFutureValue",
}

func (v *MicrosoftGraphScheduleChangeRequestActor) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphScheduleChangeRequestActor(value)
	for _, existing := range AllowedMicrosoftGraphScheduleChangeRequestActorEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphScheduleChangeRequestActor", value)
}

// NewMicrosoftGraphScheduleChangeRequestActorFromValue returns a pointer to a valid MicrosoftGraphScheduleChangeRequestActor
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphScheduleChangeRequestActorFromValue(v string) (*MicrosoftGraphScheduleChangeRequestActor, error) {
	ev := MicrosoftGraphScheduleChangeRequestActor(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphScheduleChangeRequestActor: valid values are %v", v, AllowedMicrosoftGraphScheduleChangeRequestActorEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphScheduleChangeRequestActor) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphScheduleChangeRequestActorEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.scheduleChangeRequestActor value
func (v MicrosoftGraphScheduleChangeRequestActor) Ptr() *MicrosoftGraphScheduleChangeRequestActor {
	return &v
}

type NullableMicrosoftGraphScheduleChangeRequestActor struct {
	value *MicrosoftGraphScheduleChangeRequestActor
	isSet bool
}

func (v NullableMicrosoftGraphScheduleChangeRequestActor) Get() *MicrosoftGraphScheduleChangeRequestActor {
	return v.value
}

func (v *NullableMicrosoftGraphScheduleChangeRequestActor) Set(val *MicrosoftGraphScheduleChangeRequestActor) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphScheduleChangeRequestActor) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphScheduleChangeRequestActor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphScheduleChangeRequestActor(val *MicrosoftGraphScheduleChangeRequestActor) *NullableMicrosoftGraphScheduleChangeRequestActor {
	return &NullableMicrosoftGraphScheduleChangeRequestActor{value: val, isSet: true}
}

func (v NullableMicrosoftGraphScheduleChangeRequestActor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphScheduleChangeRequestActor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

