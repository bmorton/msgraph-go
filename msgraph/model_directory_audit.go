/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// DirectoryAudit struct for DirectoryAudit
type DirectoryAudit struct {
	// Indicates the date and time the activity was performed. The Timestamp type is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
	ActivityDateTime *time.Time `json:"activityDateTime,omitempty"`
	// Indicates the activity name or the operation name (examples: 'Create User' and 'Add member to group'). For full list, see Azure AD activity list.
	ActivityDisplayName *string `json:"activityDisplayName,omitempty"`
	// Indicates additional details on the activity.
	AdditionalDetails *[]*AnyOfmicrosoftGraphKeyValue `json:"additionalDetails,omitempty"`
	// Indicates which resource category that's targeted by the activity. (For example: User Management, Group Management etc..)
	Category *string `json:"category,omitempty"`
	// Indicates a unique ID that helps correlate activities that span across various services. Can be used to trace logs across services.
	CorrelationId NullableString `json:"correlationId,omitempty"`
	InitiatedBy *MicrosoftGraphAuditActivityInitiator `json:"initiatedBy,omitempty"`
	// Indicates information on which service initiated the activity (For example: Self-service Password Management, Core Directory, B2C, Invited Users, Microsoft Identity Manager, Privileged Identity Management.
	LoggedByService NullableString `json:"loggedByService,omitempty"`
	OperationType NullableString `json:"operationType,omitempty"`
	// Indicates the result of the activity. Possible values are: success, failure, timeout, unknownFutureValue.
	Result AnyOfmicrosoftGraphOperationResult `json:"result,omitempty"`
	// Indicates the reason for failure if the result is failure or timeout.
	ResultReason NullableString `json:"resultReason,omitempty"`
	// Indicates information on which resource was changed due to the activity. Target Resource Type can be User, Device, Directory, App, Role, Group, Policy or Other.
	TargetResources *[]*AnyOfmicrosoftGraphTargetResource `json:"targetResources,omitempty"`
}

// NewDirectoryAudit instantiates a new DirectoryAudit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDirectoryAudit() *DirectoryAudit {
	this := DirectoryAudit{}
	return &this
}

// NewDirectoryAuditWithDefaults instantiates a new DirectoryAudit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDirectoryAuditWithDefaults() *DirectoryAudit {
	this := DirectoryAudit{}
	return &this
}

// GetActivityDateTime returns the ActivityDateTime field value if set, zero value otherwise.
func (o *DirectoryAudit) GetActivityDateTime() time.Time {
	if o == nil || o.ActivityDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.ActivityDateTime
}

// GetActivityDateTimeOk returns a tuple with the ActivityDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectoryAudit) GetActivityDateTimeOk() (*time.Time, bool) {
	if o == nil || o.ActivityDateTime == nil {
		return nil, false
	}
	return o.ActivityDateTime, true
}

// HasActivityDateTime returns a boolean if a field has been set.
func (o *DirectoryAudit) HasActivityDateTime() bool {
	if o != nil && o.ActivityDateTime != nil {
		return true
	}

	return false
}

// SetActivityDateTime gets a reference to the given time.Time and assigns it to the ActivityDateTime field.
func (o *DirectoryAudit) SetActivityDateTime(v time.Time) {
	o.ActivityDateTime = &v
}

// GetActivityDisplayName returns the ActivityDisplayName field value if set, zero value otherwise.
func (o *DirectoryAudit) GetActivityDisplayName() string {
	if o == nil || o.ActivityDisplayName == nil {
		var ret string
		return ret
	}
	return *o.ActivityDisplayName
}

// GetActivityDisplayNameOk returns a tuple with the ActivityDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectoryAudit) GetActivityDisplayNameOk() (*string, bool) {
	if o == nil || o.ActivityDisplayName == nil {
		return nil, false
	}
	return o.ActivityDisplayName, true
}

// HasActivityDisplayName returns a boolean if a field has been set.
func (o *DirectoryAudit) HasActivityDisplayName() bool {
	if o != nil && o.ActivityDisplayName != nil {
		return true
	}

	return false
}

// SetActivityDisplayName gets a reference to the given string and assigns it to the ActivityDisplayName field.
func (o *DirectoryAudit) SetActivityDisplayName(v string) {
	o.ActivityDisplayName = &v
}

// GetAdditionalDetails returns the AdditionalDetails field value if set, zero value otherwise.
func (o *DirectoryAudit) GetAdditionalDetails() []*AnyOfmicrosoftGraphKeyValue {
	if o == nil || o.AdditionalDetails == nil {
		var ret []*AnyOfmicrosoftGraphKeyValue
		return ret
	}
	return *o.AdditionalDetails
}

// GetAdditionalDetailsOk returns a tuple with the AdditionalDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectoryAudit) GetAdditionalDetailsOk() (*[]*AnyOfmicrosoftGraphKeyValue, bool) {
	if o == nil || o.AdditionalDetails == nil {
		return nil, false
	}
	return o.AdditionalDetails, true
}

// HasAdditionalDetails returns a boolean if a field has been set.
func (o *DirectoryAudit) HasAdditionalDetails() bool {
	if o != nil && o.AdditionalDetails != nil {
		return true
	}

	return false
}

// SetAdditionalDetails gets a reference to the given []*AnyOfmicrosoftGraphKeyValue and assigns it to the AdditionalDetails field.
func (o *DirectoryAudit) SetAdditionalDetails(v []*AnyOfmicrosoftGraphKeyValue) {
	o.AdditionalDetails = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *DirectoryAudit) GetCategory() string {
	if o == nil || o.Category == nil {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectoryAudit) GetCategoryOk() (*string, bool) {
	if o == nil || o.Category == nil {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *DirectoryAudit) HasCategory() bool {
	if o != nil && o.Category != nil {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *DirectoryAudit) SetCategory(v string) {
	o.Category = &v
}

// GetCorrelationId returns the CorrelationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DirectoryAudit) GetCorrelationId() string {
	if o == nil || o.CorrelationId.Get() == nil {
		var ret string
		return ret
	}
	return *o.CorrelationId.Get()
}

// GetCorrelationIdOk returns a tuple with the CorrelationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DirectoryAudit) GetCorrelationIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CorrelationId.Get(), o.CorrelationId.IsSet()
}

// HasCorrelationId returns a boolean if a field has been set.
func (o *DirectoryAudit) HasCorrelationId() bool {
	if o != nil && o.CorrelationId.IsSet() {
		return true
	}

	return false
}

// SetCorrelationId gets a reference to the given NullableString and assigns it to the CorrelationId field.
func (o *DirectoryAudit) SetCorrelationId(v string) {
	o.CorrelationId.Set(&v)
}
// SetCorrelationIdNil sets the value for CorrelationId to be an explicit nil
func (o *DirectoryAudit) SetCorrelationIdNil() {
	o.CorrelationId.Set(nil)
}

// UnsetCorrelationId ensures that no value is present for CorrelationId, not even an explicit nil
func (o *DirectoryAudit) UnsetCorrelationId() {
	o.CorrelationId.Unset()
}

// GetInitiatedBy returns the InitiatedBy field value if set, zero value otherwise.
func (o *DirectoryAudit) GetInitiatedBy() MicrosoftGraphAuditActivityInitiator {
	if o == nil || o.InitiatedBy == nil {
		var ret MicrosoftGraphAuditActivityInitiator
		return ret
	}
	return *o.InitiatedBy
}

// GetInitiatedByOk returns a tuple with the InitiatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectoryAudit) GetInitiatedByOk() (*MicrosoftGraphAuditActivityInitiator, bool) {
	if o == nil || o.InitiatedBy == nil {
		return nil, false
	}
	return o.InitiatedBy, true
}

// HasInitiatedBy returns a boolean if a field has been set.
func (o *DirectoryAudit) HasInitiatedBy() bool {
	if o != nil && o.InitiatedBy != nil {
		return true
	}

	return false
}

// SetInitiatedBy gets a reference to the given MicrosoftGraphAuditActivityInitiator and assigns it to the InitiatedBy field.
func (o *DirectoryAudit) SetInitiatedBy(v MicrosoftGraphAuditActivityInitiator) {
	o.InitiatedBy = &v
}

// GetLoggedByService returns the LoggedByService field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DirectoryAudit) GetLoggedByService() string {
	if o == nil || o.LoggedByService.Get() == nil {
		var ret string
		return ret
	}
	return *o.LoggedByService.Get()
}

// GetLoggedByServiceOk returns a tuple with the LoggedByService field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DirectoryAudit) GetLoggedByServiceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LoggedByService.Get(), o.LoggedByService.IsSet()
}

// HasLoggedByService returns a boolean if a field has been set.
func (o *DirectoryAudit) HasLoggedByService() bool {
	if o != nil && o.LoggedByService.IsSet() {
		return true
	}

	return false
}

// SetLoggedByService gets a reference to the given NullableString and assigns it to the LoggedByService field.
func (o *DirectoryAudit) SetLoggedByService(v string) {
	o.LoggedByService.Set(&v)
}
// SetLoggedByServiceNil sets the value for LoggedByService to be an explicit nil
func (o *DirectoryAudit) SetLoggedByServiceNil() {
	o.LoggedByService.Set(nil)
}

// UnsetLoggedByService ensures that no value is present for LoggedByService, not even an explicit nil
func (o *DirectoryAudit) UnsetLoggedByService() {
	o.LoggedByService.Unset()
}

// GetOperationType returns the OperationType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DirectoryAudit) GetOperationType() string {
	if o == nil || o.OperationType.Get() == nil {
		var ret string
		return ret
	}
	return *o.OperationType.Get()
}

// GetOperationTypeOk returns a tuple with the OperationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DirectoryAudit) GetOperationTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OperationType.Get(), o.OperationType.IsSet()
}

// HasOperationType returns a boolean if a field has been set.
func (o *DirectoryAudit) HasOperationType() bool {
	if o != nil && o.OperationType.IsSet() {
		return true
	}

	return false
}

// SetOperationType gets a reference to the given NullableString and assigns it to the OperationType field.
func (o *DirectoryAudit) SetOperationType(v string) {
	o.OperationType.Set(&v)
}
// SetOperationTypeNil sets the value for OperationType to be an explicit nil
func (o *DirectoryAudit) SetOperationTypeNil() {
	o.OperationType.Set(nil)
}

// UnsetOperationType ensures that no value is present for OperationType, not even an explicit nil
func (o *DirectoryAudit) UnsetOperationType() {
	o.OperationType.Unset()
}

// GetResult returns the Result field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DirectoryAudit) GetResult() AnyOfmicrosoftGraphOperationResult {
	if o == nil  {
		var ret AnyOfmicrosoftGraphOperationResult
		return ret
	}
	return o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DirectoryAudit) GetResultOk() (*AnyOfmicrosoftGraphOperationResult, bool) {
	if o == nil || o.Result == nil {
		return nil, false
	}
	return &o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *DirectoryAudit) HasResult() bool {
	if o != nil && o.Result != nil {
		return true
	}

	return false
}

// SetResult gets a reference to the given AnyOfmicrosoftGraphOperationResult and assigns it to the Result field.
func (o *DirectoryAudit) SetResult(v AnyOfmicrosoftGraphOperationResult) {
	o.Result = v
}

// GetResultReason returns the ResultReason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DirectoryAudit) GetResultReason() string {
	if o == nil || o.ResultReason.Get() == nil {
		var ret string
		return ret
	}
	return *o.ResultReason.Get()
}

// GetResultReasonOk returns a tuple with the ResultReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DirectoryAudit) GetResultReasonOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ResultReason.Get(), o.ResultReason.IsSet()
}

// HasResultReason returns a boolean if a field has been set.
func (o *DirectoryAudit) HasResultReason() bool {
	if o != nil && o.ResultReason.IsSet() {
		return true
	}

	return false
}

// SetResultReason gets a reference to the given NullableString and assigns it to the ResultReason field.
func (o *DirectoryAudit) SetResultReason(v string) {
	o.ResultReason.Set(&v)
}
// SetResultReasonNil sets the value for ResultReason to be an explicit nil
func (o *DirectoryAudit) SetResultReasonNil() {
	o.ResultReason.Set(nil)
}

// UnsetResultReason ensures that no value is present for ResultReason, not even an explicit nil
func (o *DirectoryAudit) UnsetResultReason() {
	o.ResultReason.Unset()
}

// GetTargetResources returns the TargetResources field value if set, zero value otherwise.
func (o *DirectoryAudit) GetTargetResources() []*AnyOfmicrosoftGraphTargetResource {
	if o == nil || o.TargetResources == nil {
		var ret []*AnyOfmicrosoftGraphTargetResource
		return ret
	}
	return *o.TargetResources
}

// GetTargetResourcesOk returns a tuple with the TargetResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectoryAudit) GetTargetResourcesOk() (*[]*AnyOfmicrosoftGraphTargetResource, bool) {
	if o == nil || o.TargetResources == nil {
		return nil, false
	}
	return o.TargetResources, true
}

// HasTargetResources returns a boolean if a field has been set.
func (o *DirectoryAudit) HasTargetResources() bool {
	if o != nil && o.TargetResources != nil {
		return true
	}

	return false
}

// SetTargetResources gets a reference to the given []*AnyOfmicrosoftGraphTargetResource and assigns it to the TargetResources field.
func (o *DirectoryAudit) SetTargetResources(v []*AnyOfmicrosoftGraphTargetResource) {
	o.TargetResources = &v
}

func (o DirectoryAudit) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ActivityDateTime != nil {
		toSerialize["activityDateTime"] = o.ActivityDateTime
	}
	if o.ActivityDisplayName != nil {
		toSerialize["activityDisplayName"] = o.ActivityDisplayName
	}
	if o.AdditionalDetails != nil {
		toSerialize["additionalDetails"] = o.AdditionalDetails
	}
	if o.Category != nil {
		toSerialize["category"] = o.Category
	}
	if o.CorrelationId.IsSet() {
		toSerialize["correlationId"] = o.CorrelationId.Get()
	}
	if o.InitiatedBy != nil {
		toSerialize["initiatedBy"] = o.InitiatedBy
	}
	if o.LoggedByService.IsSet() {
		toSerialize["loggedByService"] = o.LoggedByService.Get()
	}
	if o.OperationType.IsSet() {
		toSerialize["operationType"] = o.OperationType.Get()
	}
	if o.Result != nil {
		toSerialize["result"] = o.Result
	}
	if o.ResultReason.IsSet() {
		toSerialize["resultReason"] = o.ResultReason.Get()
	}
	if o.TargetResources != nil {
		toSerialize["targetResources"] = o.TargetResources
	}
	return json.Marshal(toSerialize)
}

type NullableDirectoryAudit struct {
	value *DirectoryAudit
	isSet bool
}

func (v NullableDirectoryAudit) Get() *DirectoryAudit {
	return v.value
}

func (v *NullableDirectoryAudit) Set(val *DirectoryAudit) {
	v.value = val
	v.isSet = true
}

func (v NullableDirectoryAudit) IsSet() bool {
	return v.isSet
}

func (v *NullableDirectoryAudit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDirectoryAudit(val *DirectoryAudit) *NullableDirectoryAudit {
	return &NullableDirectoryAudit{value: val, isSet: true}
}

func (v NullableDirectoryAudit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDirectoryAudit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


