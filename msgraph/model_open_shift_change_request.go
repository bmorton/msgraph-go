/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// OpenShiftChangeRequest struct for OpenShiftChangeRequest
type OpenShiftChangeRequest struct {
	// ID for the open shift.
	OpenShiftId NullableString `json:"openShiftId,omitempty"`
}

// NewOpenShiftChangeRequest instantiates a new OpenShiftChangeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenShiftChangeRequest() *OpenShiftChangeRequest {
	this := OpenShiftChangeRequest{}
	return &this
}

// NewOpenShiftChangeRequestWithDefaults instantiates a new OpenShiftChangeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenShiftChangeRequestWithDefaults() *OpenShiftChangeRequest {
	this := OpenShiftChangeRequest{}
	return &this
}

// GetOpenShiftId returns the OpenShiftId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenShiftChangeRequest) GetOpenShiftId() string {
	if o == nil || o.OpenShiftId.Get() == nil {
		var ret string
		return ret
	}
	return *o.OpenShiftId.Get()
}

// GetOpenShiftIdOk returns a tuple with the OpenShiftId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenShiftChangeRequest) GetOpenShiftIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OpenShiftId.Get(), o.OpenShiftId.IsSet()
}

// HasOpenShiftId returns a boolean if a field has been set.
func (o *OpenShiftChangeRequest) HasOpenShiftId() bool {
	if o != nil && o.OpenShiftId.IsSet() {
		return true
	}

	return false
}

// SetOpenShiftId gets a reference to the given NullableString and assigns it to the OpenShiftId field.
func (o *OpenShiftChangeRequest) SetOpenShiftId(v string) {
	o.OpenShiftId.Set(&v)
}
// SetOpenShiftIdNil sets the value for OpenShiftId to be an explicit nil
func (o *OpenShiftChangeRequest) SetOpenShiftIdNil() {
	o.OpenShiftId.Set(nil)
}

// UnsetOpenShiftId ensures that no value is present for OpenShiftId, not even an explicit nil
func (o *OpenShiftChangeRequest) UnsetOpenShiftId() {
	o.OpenShiftId.Unset()
}

func (o OpenShiftChangeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OpenShiftId.IsSet() {
		toSerialize["openShiftId"] = o.OpenShiftId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableOpenShiftChangeRequest struct {
	value *OpenShiftChangeRequest
	isSet bool
}

func (v NullableOpenShiftChangeRequest) Get() *OpenShiftChangeRequest {
	return v.value
}

func (v *NullableOpenShiftChangeRequest) Set(val *OpenShiftChangeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenShiftChangeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenShiftChangeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenShiftChangeRequest(val *OpenShiftChangeRequest) *NullableOpenShiftChangeRequest {
	return &NullableOpenShiftChangeRequest{value: val, isSet: true}
}

func (v NullableOpenShiftChangeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenShiftChangeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


