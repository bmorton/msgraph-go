/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// List struct for List
type List struct {
	// The displayable title of the list.
	DisplayName NullableString `json:"displayName,omitempty"`
	// Provides additional details about the list.
	List AnyOfmicrosoftGraphListInfo `json:"list,omitempty"`
	// Returns identifiers useful for SharePoint REST compatibility. Read-only.
	SharepointIds AnyOfmicrosoftGraphSharepointIds `json:"sharepointIds,omitempty"`
	// If present, indicates that this is a system-managed list. Read-only.
	System AnyOfobject `json:"system,omitempty"`
	// The collection of field definitions for this list.
	Columns *[]MicrosoftGraphColumnDefinition `json:"columns,omitempty"`
	// The collection of content types present in this list.
	ContentTypes *[]MicrosoftGraphContentType `json:"contentTypes,omitempty"`
	// Only present on document libraries. Allows access to the list as a [drive][] resource with [driveItems][driveItem].
	Drive AnyOfmicrosoftGraphDrive `json:"drive,omitempty"`
	// All items contained in the list.
	Items *[]MicrosoftGraphListItem `json:"items,omitempty"`
	// The set of subscriptions on the list.
	Subscriptions *[]MicrosoftGraphSubscription `json:"subscriptions,omitempty"`
}

// NewList instantiates a new List object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewList() *List {
	this := List{}
	return &this
}

// NewListWithDefaults instantiates a new List object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListWithDefaults() *List {
	this := List{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *List) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *List) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *List) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *List) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *List) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *List) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetList returns the List field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *List) GetList() AnyOfmicrosoftGraphListInfo {
	if o == nil  {
		var ret AnyOfmicrosoftGraphListInfo
		return ret
	}
	return o.List
}

// GetListOk returns a tuple with the List field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *List) GetListOk() (*AnyOfmicrosoftGraphListInfo, bool) {
	if o == nil || o.List == nil {
		return nil, false
	}
	return &o.List, true
}

// HasList returns a boolean if a field has been set.
func (o *List) HasList() bool {
	if o != nil && o.List != nil {
		return true
	}

	return false
}

// SetList gets a reference to the given AnyOfmicrosoftGraphListInfo and assigns it to the List field.
func (o *List) SetList(v AnyOfmicrosoftGraphListInfo) {
	o.List = v
}

// GetSharepointIds returns the SharepointIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *List) GetSharepointIds() AnyOfmicrosoftGraphSharepointIds {
	if o == nil  {
		var ret AnyOfmicrosoftGraphSharepointIds
		return ret
	}
	return o.SharepointIds
}

// GetSharepointIdsOk returns a tuple with the SharepointIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *List) GetSharepointIdsOk() (*AnyOfmicrosoftGraphSharepointIds, bool) {
	if o == nil || o.SharepointIds == nil {
		return nil, false
	}
	return &o.SharepointIds, true
}

// HasSharepointIds returns a boolean if a field has been set.
func (o *List) HasSharepointIds() bool {
	if o != nil && o.SharepointIds != nil {
		return true
	}

	return false
}

// SetSharepointIds gets a reference to the given AnyOfmicrosoftGraphSharepointIds and assigns it to the SharepointIds field.
func (o *List) SetSharepointIds(v AnyOfmicrosoftGraphSharepointIds) {
	o.SharepointIds = v
}

// GetSystem returns the System field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *List) GetSystem() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.System
}

// GetSystemOk returns a tuple with the System field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *List) GetSystemOk() (*AnyOfobject, bool) {
	if o == nil || o.System == nil {
		return nil, false
	}
	return &o.System, true
}

// HasSystem returns a boolean if a field has been set.
func (o *List) HasSystem() bool {
	if o != nil && o.System != nil {
		return true
	}

	return false
}

// SetSystem gets a reference to the given AnyOfobject and assigns it to the System field.
func (o *List) SetSystem(v AnyOfobject) {
	o.System = v
}

// GetColumns returns the Columns field value if set, zero value otherwise.
func (o *List) GetColumns() []MicrosoftGraphColumnDefinition {
	if o == nil || o.Columns == nil {
		var ret []MicrosoftGraphColumnDefinition
		return ret
	}
	return *o.Columns
}

// GetColumnsOk returns a tuple with the Columns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *List) GetColumnsOk() (*[]MicrosoftGraphColumnDefinition, bool) {
	if o == nil || o.Columns == nil {
		return nil, false
	}
	return o.Columns, true
}

// HasColumns returns a boolean if a field has been set.
func (o *List) HasColumns() bool {
	if o != nil && o.Columns != nil {
		return true
	}

	return false
}

// SetColumns gets a reference to the given []MicrosoftGraphColumnDefinition and assigns it to the Columns field.
func (o *List) SetColumns(v []MicrosoftGraphColumnDefinition) {
	o.Columns = &v
}

// GetContentTypes returns the ContentTypes field value if set, zero value otherwise.
func (o *List) GetContentTypes() []MicrosoftGraphContentType {
	if o == nil || o.ContentTypes == nil {
		var ret []MicrosoftGraphContentType
		return ret
	}
	return *o.ContentTypes
}

// GetContentTypesOk returns a tuple with the ContentTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *List) GetContentTypesOk() (*[]MicrosoftGraphContentType, bool) {
	if o == nil || o.ContentTypes == nil {
		return nil, false
	}
	return o.ContentTypes, true
}

// HasContentTypes returns a boolean if a field has been set.
func (o *List) HasContentTypes() bool {
	if o != nil && o.ContentTypes != nil {
		return true
	}

	return false
}

// SetContentTypes gets a reference to the given []MicrosoftGraphContentType and assigns it to the ContentTypes field.
func (o *List) SetContentTypes(v []MicrosoftGraphContentType) {
	o.ContentTypes = &v
}

// GetDrive returns the Drive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *List) GetDrive() AnyOfmicrosoftGraphDrive {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDrive
		return ret
	}
	return o.Drive
}

// GetDriveOk returns a tuple with the Drive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *List) GetDriveOk() (*AnyOfmicrosoftGraphDrive, bool) {
	if o == nil || o.Drive == nil {
		return nil, false
	}
	return &o.Drive, true
}

// HasDrive returns a boolean if a field has been set.
func (o *List) HasDrive() bool {
	if o != nil && o.Drive != nil {
		return true
	}

	return false
}

// SetDrive gets a reference to the given AnyOfmicrosoftGraphDrive and assigns it to the Drive field.
func (o *List) SetDrive(v AnyOfmicrosoftGraphDrive) {
	o.Drive = v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *List) GetItems() []MicrosoftGraphListItem {
	if o == nil || o.Items == nil {
		var ret []MicrosoftGraphListItem
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *List) GetItemsOk() (*[]MicrosoftGraphListItem, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *List) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []MicrosoftGraphListItem and assigns it to the Items field.
func (o *List) SetItems(v []MicrosoftGraphListItem) {
	o.Items = &v
}

// GetSubscriptions returns the Subscriptions field value if set, zero value otherwise.
func (o *List) GetSubscriptions() []MicrosoftGraphSubscription {
	if o == nil || o.Subscriptions == nil {
		var ret []MicrosoftGraphSubscription
		return ret
	}
	return *o.Subscriptions
}

// GetSubscriptionsOk returns a tuple with the Subscriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *List) GetSubscriptionsOk() (*[]MicrosoftGraphSubscription, bool) {
	if o == nil || o.Subscriptions == nil {
		return nil, false
	}
	return o.Subscriptions, true
}

// HasSubscriptions returns a boolean if a field has been set.
func (o *List) HasSubscriptions() bool {
	if o != nil && o.Subscriptions != nil {
		return true
	}

	return false
}

// SetSubscriptions gets a reference to the given []MicrosoftGraphSubscription and assigns it to the Subscriptions field.
func (o *List) SetSubscriptions(v []MicrosoftGraphSubscription) {
	o.Subscriptions = &v
}

func (o List) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.List != nil {
		toSerialize["list"] = o.List
	}
	if o.SharepointIds != nil {
		toSerialize["sharepointIds"] = o.SharepointIds
	}
	if o.System != nil {
		toSerialize["system"] = o.System
	}
	if o.Columns != nil {
		toSerialize["columns"] = o.Columns
	}
	if o.ContentTypes != nil {
		toSerialize["contentTypes"] = o.ContentTypes
	}
	if o.Drive != nil {
		toSerialize["drive"] = o.Drive
	}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	if o.Subscriptions != nil {
		toSerialize["subscriptions"] = o.Subscriptions
	}
	return json.Marshal(toSerialize)
}

type NullableList struct {
	value *List
	isSet bool
}

func (v NullableList) Get() *List {
	return v.value
}

func (v *NullableList) Set(val *List) {
	v.value = val
	v.isSet = true
}

func (v NullableList) IsSet() bool {
	return v.isSet
}

func (v *NullableList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableList(val *List) *NullableList {
	return &NullableList{value: val, isSet: true}
}

func (v NullableList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


