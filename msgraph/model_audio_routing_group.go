/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AudioRoutingGroup struct for AudioRoutingGroup
type AudioRoutingGroup struct {
	// List of receiving participant ids.
	Receivers *[]*string `json:"receivers,omitempty"`
	// Routing group mode.  Possible values are: oneToOne, multicast.
	RoutingMode AnyOfmicrosoftGraphRoutingMode `json:"routingMode,omitempty"`
	// List of source participant ids.
	Sources *[]*string `json:"sources,omitempty"`
}

// NewAudioRoutingGroup instantiates a new AudioRoutingGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAudioRoutingGroup() *AudioRoutingGroup {
	this := AudioRoutingGroup{}
	return &this
}

// NewAudioRoutingGroupWithDefaults instantiates a new AudioRoutingGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAudioRoutingGroupWithDefaults() *AudioRoutingGroup {
	this := AudioRoutingGroup{}
	return &this
}

// GetReceivers returns the Receivers field value if set, zero value otherwise.
func (o *AudioRoutingGroup) GetReceivers() []*string {
	if o == nil || o.Receivers == nil {
		var ret []*string
		return ret
	}
	return *o.Receivers
}

// GetReceiversOk returns a tuple with the Receivers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudioRoutingGroup) GetReceiversOk() (*[]*string, bool) {
	if o == nil || o.Receivers == nil {
		return nil, false
	}
	return o.Receivers, true
}

// HasReceivers returns a boolean if a field has been set.
func (o *AudioRoutingGroup) HasReceivers() bool {
	if o != nil && o.Receivers != nil {
		return true
	}

	return false
}

// SetReceivers gets a reference to the given []*string and assigns it to the Receivers field.
func (o *AudioRoutingGroup) SetReceivers(v []*string) {
	o.Receivers = &v
}

// GetRoutingMode returns the RoutingMode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AudioRoutingGroup) GetRoutingMode() AnyOfmicrosoftGraphRoutingMode {
	if o == nil  {
		var ret AnyOfmicrosoftGraphRoutingMode
		return ret
	}
	return o.RoutingMode
}

// GetRoutingModeOk returns a tuple with the RoutingMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AudioRoutingGroup) GetRoutingModeOk() (*AnyOfmicrosoftGraphRoutingMode, bool) {
	if o == nil || o.RoutingMode == nil {
		return nil, false
	}
	return &o.RoutingMode, true
}

// HasRoutingMode returns a boolean if a field has been set.
func (o *AudioRoutingGroup) HasRoutingMode() bool {
	if o != nil && o.RoutingMode != nil {
		return true
	}

	return false
}

// SetRoutingMode gets a reference to the given AnyOfmicrosoftGraphRoutingMode and assigns it to the RoutingMode field.
func (o *AudioRoutingGroup) SetRoutingMode(v AnyOfmicrosoftGraphRoutingMode) {
	o.RoutingMode = v
}

// GetSources returns the Sources field value if set, zero value otherwise.
func (o *AudioRoutingGroup) GetSources() []*string {
	if o == nil || o.Sources == nil {
		var ret []*string
		return ret
	}
	return *o.Sources
}

// GetSourcesOk returns a tuple with the Sources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudioRoutingGroup) GetSourcesOk() (*[]*string, bool) {
	if o == nil || o.Sources == nil {
		return nil, false
	}
	return o.Sources, true
}

// HasSources returns a boolean if a field has been set.
func (o *AudioRoutingGroup) HasSources() bool {
	if o != nil && o.Sources != nil {
		return true
	}

	return false
}

// SetSources gets a reference to the given []*string and assigns it to the Sources field.
func (o *AudioRoutingGroup) SetSources(v []*string) {
	o.Sources = &v
}

func (o AudioRoutingGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Receivers != nil {
		toSerialize["receivers"] = o.Receivers
	}
	if o.RoutingMode != nil {
		toSerialize["routingMode"] = o.RoutingMode
	}
	if o.Sources != nil {
		toSerialize["sources"] = o.Sources
	}
	return json.Marshal(toSerialize)
}

type NullableAudioRoutingGroup struct {
	value *AudioRoutingGroup
	isSet bool
}

func (v NullableAudioRoutingGroup) Get() *AudioRoutingGroup {
	return v.value
}

func (v *NullableAudioRoutingGroup) Set(val *AudioRoutingGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableAudioRoutingGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableAudioRoutingGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAudioRoutingGroup(val *AudioRoutingGroup) *NullableAudioRoutingGroup {
	return &NullableAudioRoutingGroup{value: val, isSet: true}
}

func (v NullableAudioRoutingGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAudioRoutingGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


