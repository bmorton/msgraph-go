/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphAssignedPlan struct for MicrosoftGraphAssignedPlan
type MicrosoftGraphAssignedPlan struct {
	// The date and time at which the plan was assigned. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
	AssignedDateTime NullableTime `json:"assignedDateTime,omitempty"`
	// Condition of the capability assignment. The possible values are Enabled, Warning, Suspended, Deleted, LockedOut. See a detailed description of each value.
	CapabilityStatus NullableString `json:"capabilityStatus,omitempty"`
	// The name of the service; for example, 'Exchange'.
	Service NullableString `json:"service,omitempty"`
	// A GUID that identifies the service plan.
	ServicePlanId NullableString `json:"servicePlanId,omitempty"`
}

// NewMicrosoftGraphAssignedPlan instantiates a new MicrosoftGraphAssignedPlan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphAssignedPlan() *MicrosoftGraphAssignedPlan {
	this := MicrosoftGraphAssignedPlan{}
	return &this
}

// NewMicrosoftGraphAssignedPlanWithDefaults instantiates a new MicrosoftGraphAssignedPlan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphAssignedPlanWithDefaults() *MicrosoftGraphAssignedPlan {
	this := MicrosoftGraphAssignedPlan{}
	return &this
}

// GetAssignedDateTime returns the AssignedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAssignedPlan) GetAssignedDateTime() time.Time {
	if o == nil || o.AssignedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.AssignedDateTime.Get()
}

// GetAssignedDateTimeOk returns a tuple with the AssignedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAssignedPlan) GetAssignedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AssignedDateTime.Get(), o.AssignedDateTime.IsSet()
}

// HasAssignedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphAssignedPlan) HasAssignedDateTime() bool {
	if o != nil && o.AssignedDateTime.IsSet() {
		return true
	}

	return false
}

// SetAssignedDateTime gets a reference to the given NullableTime and assigns it to the AssignedDateTime field.
func (o *MicrosoftGraphAssignedPlan) SetAssignedDateTime(v time.Time) {
	o.AssignedDateTime.Set(&v)
}
// SetAssignedDateTimeNil sets the value for AssignedDateTime to be an explicit nil
func (o *MicrosoftGraphAssignedPlan) SetAssignedDateTimeNil() {
	o.AssignedDateTime.Set(nil)
}

// UnsetAssignedDateTime ensures that no value is present for AssignedDateTime, not even an explicit nil
func (o *MicrosoftGraphAssignedPlan) UnsetAssignedDateTime() {
	o.AssignedDateTime.Unset()
}

// GetCapabilityStatus returns the CapabilityStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAssignedPlan) GetCapabilityStatus() string {
	if o == nil || o.CapabilityStatus.Get() == nil {
		var ret string
		return ret
	}
	return *o.CapabilityStatus.Get()
}

// GetCapabilityStatusOk returns a tuple with the CapabilityStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAssignedPlan) GetCapabilityStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CapabilityStatus.Get(), o.CapabilityStatus.IsSet()
}

// HasCapabilityStatus returns a boolean if a field has been set.
func (o *MicrosoftGraphAssignedPlan) HasCapabilityStatus() bool {
	if o != nil && o.CapabilityStatus.IsSet() {
		return true
	}

	return false
}

// SetCapabilityStatus gets a reference to the given NullableString and assigns it to the CapabilityStatus field.
func (o *MicrosoftGraphAssignedPlan) SetCapabilityStatus(v string) {
	o.CapabilityStatus.Set(&v)
}
// SetCapabilityStatusNil sets the value for CapabilityStatus to be an explicit nil
func (o *MicrosoftGraphAssignedPlan) SetCapabilityStatusNil() {
	o.CapabilityStatus.Set(nil)
}

// UnsetCapabilityStatus ensures that no value is present for CapabilityStatus, not even an explicit nil
func (o *MicrosoftGraphAssignedPlan) UnsetCapabilityStatus() {
	o.CapabilityStatus.Unset()
}

// GetService returns the Service field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAssignedPlan) GetService() string {
	if o == nil || o.Service.Get() == nil {
		var ret string
		return ret
	}
	return *o.Service.Get()
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAssignedPlan) GetServiceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Service.Get(), o.Service.IsSet()
}

// HasService returns a boolean if a field has been set.
func (o *MicrosoftGraphAssignedPlan) HasService() bool {
	if o != nil && o.Service.IsSet() {
		return true
	}

	return false
}

// SetService gets a reference to the given NullableString and assigns it to the Service field.
func (o *MicrosoftGraphAssignedPlan) SetService(v string) {
	o.Service.Set(&v)
}
// SetServiceNil sets the value for Service to be an explicit nil
func (o *MicrosoftGraphAssignedPlan) SetServiceNil() {
	o.Service.Set(nil)
}

// UnsetService ensures that no value is present for Service, not even an explicit nil
func (o *MicrosoftGraphAssignedPlan) UnsetService() {
	o.Service.Unset()
}

// GetServicePlanId returns the ServicePlanId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAssignedPlan) GetServicePlanId() string {
	if o == nil || o.ServicePlanId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ServicePlanId.Get()
}

// GetServicePlanIdOk returns a tuple with the ServicePlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAssignedPlan) GetServicePlanIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ServicePlanId.Get(), o.ServicePlanId.IsSet()
}

// HasServicePlanId returns a boolean if a field has been set.
func (o *MicrosoftGraphAssignedPlan) HasServicePlanId() bool {
	if o != nil && o.ServicePlanId.IsSet() {
		return true
	}

	return false
}

// SetServicePlanId gets a reference to the given NullableString and assigns it to the ServicePlanId field.
func (o *MicrosoftGraphAssignedPlan) SetServicePlanId(v string) {
	o.ServicePlanId.Set(&v)
}
// SetServicePlanIdNil sets the value for ServicePlanId to be an explicit nil
func (o *MicrosoftGraphAssignedPlan) SetServicePlanIdNil() {
	o.ServicePlanId.Set(nil)
}

// UnsetServicePlanId ensures that no value is present for ServicePlanId, not even an explicit nil
func (o *MicrosoftGraphAssignedPlan) UnsetServicePlanId() {
	o.ServicePlanId.Unset()
}

func (o MicrosoftGraphAssignedPlan) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AssignedDateTime.IsSet() {
		toSerialize["assignedDateTime"] = o.AssignedDateTime.Get()
	}
	if o.CapabilityStatus.IsSet() {
		toSerialize["capabilityStatus"] = o.CapabilityStatus.Get()
	}
	if o.Service.IsSet() {
		toSerialize["service"] = o.Service.Get()
	}
	if o.ServicePlanId.IsSet() {
		toSerialize["servicePlanId"] = o.ServicePlanId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphAssignedPlan struct {
	value *MicrosoftGraphAssignedPlan
	isSet bool
}

func (v NullableMicrosoftGraphAssignedPlan) Get() *MicrosoftGraphAssignedPlan {
	return v.value
}

func (v *NullableMicrosoftGraphAssignedPlan) Set(val *MicrosoftGraphAssignedPlan) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphAssignedPlan) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphAssignedPlan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphAssignedPlan(val *MicrosoftGraphAssignedPlan) *NullableMicrosoftGraphAssignedPlan {
	return &NullableMicrosoftGraphAssignedPlan{value: val, isSet: true}
}

func (v NullableMicrosoftGraphAssignedPlan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphAssignedPlan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


