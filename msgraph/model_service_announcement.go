/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// ServiceAnnouncement struct for ServiceAnnouncement
type ServiceAnnouncement struct {
	// A collection of service health information for tenant. This property is a contained navigation property, it is nullable and readonly.
	HealthOverviews *[]MicrosoftGraphServiceHealth `json:"healthOverviews,omitempty"`
	// A collection of service issues for tenant. This property is a contained navigation property, it is nullable and readonly.
	Issues *[]MicrosoftGraphServiceHealthIssue `json:"issues,omitempty"`
	// A collection of service messages for tenant. This property is a contained navigation property, it is nullable and readonly.
	Messages *[]MicrosoftGraphServiceUpdateMessage `json:"messages,omitempty"`
}

// NewServiceAnnouncement instantiates a new ServiceAnnouncement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceAnnouncement() *ServiceAnnouncement {
	this := ServiceAnnouncement{}
	return &this
}

// NewServiceAnnouncementWithDefaults instantiates a new ServiceAnnouncement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceAnnouncementWithDefaults() *ServiceAnnouncement {
	this := ServiceAnnouncement{}
	return &this
}

// GetHealthOverviews returns the HealthOverviews field value if set, zero value otherwise.
func (o *ServiceAnnouncement) GetHealthOverviews() []MicrosoftGraphServiceHealth {
	if o == nil || o.HealthOverviews == nil {
		var ret []MicrosoftGraphServiceHealth
		return ret
	}
	return *o.HealthOverviews
}

// GetHealthOverviewsOk returns a tuple with the HealthOverviews field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAnnouncement) GetHealthOverviewsOk() (*[]MicrosoftGraphServiceHealth, bool) {
	if o == nil || o.HealthOverviews == nil {
		return nil, false
	}
	return o.HealthOverviews, true
}

// HasHealthOverviews returns a boolean if a field has been set.
func (o *ServiceAnnouncement) HasHealthOverviews() bool {
	if o != nil && o.HealthOverviews != nil {
		return true
	}

	return false
}

// SetHealthOverviews gets a reference to the given []MicrosoftGraphServiceHealth and assigns it to the HealthOverviews field.
func (o *ServiceAnnouncement) SetHealthOverviews(v []MicrosoftGraphServiceHealth) {
	o.HealthOverviews = &v
}

// GetIssues returns the Issues field value if set, zero value otherwise.
func (o *ServiceAnnouncement) GetIssues() []MicrosoftGraphServiceHealthIssue {
	if o == nil || o.Issues == nil {
		var ret []MicrosoftGraphServiceHealthIssue
		return ret
	}
	return *o.Issues
}

// GetIssuesOk returns a tuple with the Issues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAnnouncement) GetIssuesOk() (*[]MicrosoftGraphServiceHealthIssue, bool) {
	if o == nil || o.Issues == nil {
		return nil, false
	}
	return o.Issues, true
}

// HasIssues returns a boolean if a field has been set.
func (o *ServiceAnnouncement) HasIssues() bool {
	if o != nil && o.Issues != nil {
		return true
	}

	return false
}

// SetIssues gets a reference to the given []MicrosoftGraphServiceHealthIssue and assigns it to the Issues field.
func (o *ServiceAnnouncement) SetIssues(v []MicrosoftGraphServiceHealthIssue) {
	o.Issues = &v
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *ServiceAnnouncement) GetMessages() []MicrosoftGraphServiceUpdateMessage {
	if o == nil || o.Messages == nil {
		var ret []MicrosoftGraphServiceUpdateMessage
		return ret
	}
	return *o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAnnouncement) GetMessagesOk() (*[]MicrosoftGraphServiceUpdateMessage, bool) {
	if o == nil || o.Messages == nil {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *ServiceAnnouncement) HasMessages() bool {
	if o != nil && o.Messages != nil {
		return true
	}

	return false
}

// SetMessages gets a reference to the given []MicrosoftGraphServiceUpdateMessage and assigns it to the Messages field.
func (o *ServiceAnnouncement) SetMessages(v []MicrosoftGraphServiceUpdateMessage) {
	o.Messages = &v
}

func (o ServiceAnnouncement) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.HealthOverviews != nil {
		toSerialize["healthOverviews"] = o.HealthOverviews
	}
	if o.Issues != nil {
		toSerialize["issues"] = o.Issues
	}
	if o.Messages != nil {
		toSerialize["messages"] = o.Messages
	}
	return json.Marshal(toSerialize)
}

type NullableServiceAnnouncement struct {
	value *ServiceAnnouncement
	isSet bool
}

func (v NullableServiceAnnouncement) Get() *ServiceAnnouncement {
	return v.value
}

func (v *NullableServiceAnnouncement) Set(val *ServiceAnnouncement) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceAnnouncement) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceAnnouncement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceAnnouncement(val *ServiceAnnouncement) *NullableServiceAnnouncement {
	return &NullableServiceAnnouncement{value: val, isSet: true}
}

func (v NullableServiceAnnouncement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceAnnouncement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


