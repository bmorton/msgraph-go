/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"time"
)

// MobileApp An abstract class containing the base properties for Intune mobile apps.
type MobileApp struct {
	// The date and time the app was created.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// The description of the app.
	Description NullableString `json:"description,omitempty"`
	// The developer of the app.
	Developer NullableString `json:"developer,omitempty"`
	// The admin provided or imported title of the app.
	DisplayName NullableString `json:"displayName,omitempty"`
	// The more information Url.
	InformationUrl NullableString `json:"informationUrl,omitempty"`
	// The value indicating whether the app is marked as featured by the admin.
	IsFeatured *bool `json:"isFeatured,omitempty"`
	// The large icon, to be displayed in the app details and used for upload of the icon.
	LargeIcon AnyOfmicrosoftGraphMimeContent `json:"largeIcon,omitempty"`
	// The date and time the app was last modified.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// Notes for the app.
	Notes NullableString `json:"notes,omitempty"`
	// The owner of the app.
	Owner NullableString `json:"owner,omitempty"`
	// The privacy statement Url.
	PrivacyInformationUrl NullableString `json:"privacyInformationUrl,omitempty"`
	// The publisher of the app.
	Publisher NullableString `json:"publisher,omitempty"`
	// The publishing state for the app. The app cannot be assigned unless the app is published. Possible values are: notPublished, processing, published.
	PublishingState AnyOfmicrosoftGraphMobileAppPublishingState `json:"publishingState,omitempty"`
	// The list of group assignments for this mobile app.
	Assignments *[]MicrosoftGraphMobileAppAssignment `json:"assignments,omitempty"`
	// The list of categories for this app.
	Categories *[]MicrosoftGraphMobileAppCategory `json:"categories,omitempty"`
}

// NewMobileApp instantiates a new MobileApp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMobileApp() *MobileApp {
	this := MobileApp{}
	return &this
}

// NewMobileAppWithDefaults instantiates a new MobileApp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMobileAppWithDefaults() *MobileApp {
	this := MobileApp{}
	return &this
}

// GetCreatedDateTime returns the CreatedDateTime field value if set, zero value otherwise.
func (o *MobileApp) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileApp) GetCreatedDateTimeOk() (*time.Time, bool) {
	if o == nil || o.CreatedDateTime == nil {
		return nil, false
	}
	return o.CreatedDateTime, true
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *MobileApp) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime != nil {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given time.Time and assigns it to the CreatedDateTime field.
func (o *MobileApp) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MobileApp) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MobileApp) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *MobileApp) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *MobileApp) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *MobileApp) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *MobileApp) UnsetDescription() {
	o.Description.Unset()
}

// GetDeveloper returns the Developer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MobileApp) GetDeveloper() string {
	if o == nil || o.Developer.Get() == nil {
		var ret string
		return ret
	}
	return *o.Developer.Get()
}

// GetDeveloperOk returns a tuple with the Developer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MobileApp) GetDeveloperOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Developer.Get(), o.Developer.IsSet()
}

// HasDeveloper returns a boolean if a field has been set.
func (o *MobileApp) HasDeveloper() bool {
	if o != nil && o.Developer.IsSet() {
		return true
	}

	return false
}

// SetDeveloper gets a reference to the given NullableString and assigns it to the Developer field.
func (o *MobileApp) SetDeveloper(v string) {
	o.Developer.Set(&v)
}
// SetDeveloperNil sets the value for Developer to be an explicit nil
func (o *MobileApp) SetDeveloperNil() {
	o.Developer.Set(nil)
}

// UnsetDeveloper ensures that no value is present for Developer, not even an explicit nil
func (o *MobileApp) UnsetDeveloper() {
	o.Developer.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MobileApp) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MobileApp) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MobileApp) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *MobileApp) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *MobileApp) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *MobileApp) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetInformationUrl returns the InformationUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MobileApp) GetInformationUrl() string {
	if o == nil || o.InformationUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.InformationUrl.Get()
}

// GetInformationUrlOk returns a tuple with the InformationUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MobileApp) GetInformationUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InformationUrl.Get(), o.InformationUrl.IsSet()
}

// HasInformationUrl returns a boolean if a field has been set.
func (o *MobileApp) HasInformationUrl() bool {
	if o != nil && o.InformationUrl.IsSet() {
		return true
	}

	return false
}

// SetInformationUrl gets a reference to the given NullableString and assigns it to the InformationUrl field.
func (o *MobileApp) SetInformationUrl(v string) {
	o.InformationUrl.Set(&v)
}
// SetInformationUrlNil sets the value for InformationUrl to be an explicit nil
func (o *MobileApp) SetInformationUrlNil() {
	o.InformationUrl.Set(nil)
}

// UnsetInformationUrl ensures that no value is present for InformationUrl, not even an explicit nil
func (o *MobileApp) UnsetInformationUrl() {
	o.InformationUrl.Unset()
}

// GetIsFeatured returns the IsFeatured field value if set, zero value otherwise.
func (o *MobileApp) GetIsFeatured() bool {
	if o == nil || o.IsFeatured == nil {
		var ret bool
		return ret
	}
	return *o.IsFeatured
}

// GetIsFeaturedOk returns a tuple with the IsFeatured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileApp) GetIsFeaturedOk() (*bool, bool) {
	if o == nil || o.IsFeatured == nil {
		return nil, false
	}
	return o.IsFeatured, true
}

// HasIsFeatured returns a boolean if a field has been set.
func (o *MobileApp) HasIsFeatured() bool {
	if o != nil && o.IsFeatured != nil {
		return true
	}

	return false
}

// SetIsFeatured gets a reference to the given bool and assigns it to the IsFeatured field.
func (o *MobileApp) SetIsFeatured(v bool) {
	o.IsFeatured = &v
}

// GetLargeIcon returns the LargeIcon field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MobileApp) GetLargeIcon() AnyOfmicrosoftGraphMimeContent {
	if o == nil  {
		var ret AnyOfmicrosoftGraphMimeContent
		return ret
	}
	return o.LargeIcon
}

// GetLargeIconOk returns a tuple with the LargeIcon field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MobileApp) GetLargeIconOk() (*AnyOfmicrosoftGraphMimeContent, bool) {
	if o == nil || o.LargeIcon == nil {
		return nil, false
	}
	return &o.LargeIcon, true
}

// HasLargeIcon returns a boolean if a field has been set.
func (o *MobileApp) HasLargeIcon() bool {
	if o != nil && o.LargeIcon != nil {
		return true
	}

	return false
}

// SetLargeIcon gets a reference to the given AnyOfmicrosoftGraphMimeContent and assigns it to the LargeIcon field.
func (o *MobileApp) SetLargeIcon(v AnyOfmicrosoftGraphMimeContent) {
	o.LargeIcon = v
}

// GetLastModifiedDateTime returns the LastModifiedDateTime field value if set, zero value otherwise.
func (o *MobileApp) GetLastModifiedDateTime() time.Time {
	if o == nil || o.LastModifiedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDateTime
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileApp) GetLastModifiedDateTimeOk() (*time.Time, bool) {
	if o == nil || o.LastModifiedDateTime == nil {
		return nil, false
	}
	return o.LastModifiedDateTime, true
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *MobileApp) HasLastModifiedDateTime() bool {
	if o != nil && o.LastModifiedDateTime != nil {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given time.Time and assigns it to the LastModifiedDateTime field.
func (o *MobileApp) SetLastModifiedDateTime(v time.Time) {
	o.LastModifiedDateTime = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MobileApp) GetNotes() string {
	if o == nil || o.Notes.Get() == nil {
		var ret string
		return ret
	}
	return *o.Notes.Get()
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MobileApp) GetNotesOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Notes.Get(), o.Notes.IsSet()
}

// HasNotes returns a boolean if a field has been set.
func (o *MobileApp) HasNotes() bool {
	if o != nil && o.Notes.IsSet() {
		return true
	}

	return false
}

// SetNotes gets a reference to the given NullableString and assigns it to the Notes field.
func (o *MobileApp) SetNotes(v string) {
	o.Notes.Set(&v)
}
// SetNotesNil sets the value for Notes to be an explicit nil
func (o *MobileApp) SetNotesNil() {
	o.Notes.Set(nil)
}

// UnsetNotes ensures that no value is present for Notes, not even an explicit nil
func (o *MobileApp) UnsetNotes() {
	o.Notes.Unset()
}

// GetOwner returns the Owner field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MobileApp) GetOwner() string {
	if o == nil || o.Owner.Get() == nil {
		var ret string
		return ret
	}
	return *o.Owner.Get()
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MobileApp) GetOwnerOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Owner.Get(), o.Owner.IsSet()
}

// HasOwner returns a boolean if a field has been set.
func (o *MobileApp) HasOwner() bool {
	if o != nil && o.Owner.IsSet() {
		return true
	}

	return false
}

// SetOwner gets a reference to the given NullableString and assigns it to the Owner field.
func (o *MobileApp) SetOwner(v string) {
	o.Owner.Set(&v)
}
// SetOwnerNil sets the value for Owner to be an explicit nil
func (o *MobileApp) SetOwnerNil() {
	o.Owner.Set(nil)
}

// UnsetOwner ensures that no value is present for Owner, not even an explicit nil
func (o *MobileApp) UnsetOwner() {
	o.Owner.Unset()
}

// GetPrivacyInformationUrl returns the PrivacyInformationUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MobileApp) GetPrivacyInformationUrl() string {
	if o == nil || o.PrivacyInformationUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.PrivacyInformationUrl.Get()
}

// GetPrivacyInformationUrlOk returns a tuple with the PrivacyInformationUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MobileApp) GetPrivacyInformationUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PrivacyInformationUrl.Get(), o.PrivacyInformationUrl.IsSet()
}

// HasPrivacyInformationUrl returns a boolean if a field has been set.
func (o *MobileApp) HasPrivacyInformationUrl() bool {
	if o != nil && o.PrivacyInformationUrl.IsSet() {
		return true
	}

	return false
}

// SetPrivacyInformationUrl gets a reference to the given NullableString and assigns it to the PrivacyInformationUrl field.
func (o *MobileApp) SetPrivacyInformationUrl(v string) {
	o.PrivacyInformationUrl.Set(&v)
}
// SetPrivacyInformationUrlNil sets the value for PrivacyInformationUrl to be an explicit nil
func (o *MobileApp) SetPrivacyInformationUrlNil() {
	o.PrivacyInformationUrl.Set(nil)
}

// UnsetPrivacyInformationUrl ensures that no value is present for PrivacyInformationUrl, not even an explicit nil
func (o *MobileApp) UnsetPrivacyInformationUrl() {
	o.PrivacyInformationUrl.Unset()
}

// GetPublisher returns the Publisher field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MobileApp) GetPublisher() string {
	if o == nil || o.Publisher.Get() == nil {
		var ret string
		return ret
	}
	return *o.Publisher.Get()
}

// GetPublisherOk returns a tuple with the Publisher field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MobileApp) GetPublisherOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Publisher.Get(), o.Publisher.IsSet()
}

// HasPublisher returns a boolean if a field has been set.
func (o *MobileApp) HasPublisher() bool {
	if o != nil && o.Publisher.IsSet() {
		return true
	}

	return false
}

// SetPublisher gets a reference to the given NullableString and assigns it to the Publisher field.
func (o *MobileApp) SetPublisher(v string) {
	o.Publisher.Set(&v)
}
// SetPublisherNil sets the value for Publisher to be an explicit nil
func (o *MobileApp) SetPublisherNil() {
	o.Publisher.Set(nil)
}

// UnsetPublisher ensures that no value is present for Publisher, not even an explicit nil
func (o *MobileApp) UnsetPublisher() {
	o.Publisher.Unset()
}

// GetPublishingState returns the PublishingState field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MobileApp) GetPublishingState() AnyOfmicrosoftGraphMobileAppPublishingState {
	if o == nil  {
		var ret AnyOfmicrosoftGraphMobileAppPublishingState
		return ret
	}
	return o.PublishingState
}

// GetPublishingStateOk returns a tuple with the PublishingState field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MobileApp) GetPublishingStateOk() (*AnyOfmicrosoftGraphMobileAppPublishingState, bool) {
	if o == nil || o.PublishingState == nil {
		return nil, false
	}
	return &o.PublishingState, true
}

// HasPublishingState returns a boolean if a field has been set.
func (o *MobileApp) HasPublishingState() bool {
	if o != nil && o.PublishingState != nil {
		return true
	}

	return false
}

// SetPublishingState gets a reference to the given AnyOfmicrosoftGraphMobileAppPublishingState and assigns it to the PublishingState field.
func (o *MobileApp) SetPublishingState(v AnyOfmicrosoftGraphMobileAppPublishingState) {
	o.PublishingState = v
}

// GetAssignments returns the Assignments field value if set, zero value otherwise.
func (o *MobileApp) GetAssignments() []MicrosoftGraphMobileAppAssignment {
	if o == nil || o.Assignments == nil {
		var ret []MicrosoftGraphMobileAppAssignment
		return ret
	}
	return *o.Assignments
}

// GetAssignmentsOk returns a tuple with the Assignments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileApp) GetAssignmentsOk() (*[]MicrosoftGraphMobileAppAssignment, bool) {
	if o == nil || o.Assignments == nil {
		return nil, false
	}
	return o.Assignments, true
}

// HasAssignments returns a boolean if a field has been set.
func (o *MobileApp) HasAssignments() bool {
	if o != nil && o.Assignments != nil {
		return true
	}

	return false
}

// SetAssignments gets a reference to the given []MicrosoftGraphMobileAppAssignment and assigns it to the Assignments field.
func (o *MobileApp) SetAssignments(v []MicrosoftGraphMobileAppAssignment) {
	o.Assignments = &v
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *MobileApp) GetCategories() []MicrosoftGraphMobileAppCategory {
	if o == nil || o.Categories == nil {
		var ret []MicrosoftGraphMobileAppCategory
		return ret
	}
	return *o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileApp) GetCategoriesOk() (*[]MicrosoftGraphMobileAppCategory, bool) {
	if o == nil || o.Categories == nil {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *MobileApp) HasCategories() bool {
	if o != nil && o.Categories != nil {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []MicrosoftGraphMobileAppCategory and assigns it to the Categories field.
func (o *MobileApp) SetCategories(v []MicrosoftGraphMobileAppCategory) {
	o.Categories = &v
}

func (o MobileApp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedDateTime != nil {
		toSerialize["createdDateTime"] = o.CreatedDateTime
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Developer.IsSet() {
		toSerialize["developer"] = o.Developer.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.InformationUrl.IsSet() {
		toSerialize["informationUrl"] = o.InformationUrl.Get()
	}
	if o.IsFeatured != nil {
		toSerialize["isFeatured"] = o.IsFeatured
	}
	if o.LargeIcon != nil {
		toSerialize["largeIcon"] = o.LargeIcon
	}
	if o.LastModifiedDateTime != nil {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime
	}
	if o.Notes.IsSet() {
		toSerialize["notes"] = o.Notes.Get()
	}
	if o.Owner.IsSet() {
		toSerialize["owner"] = o.Owner.Get()
	}
	if o.PrivacyInformationUrl.IsSet() {
		toSerialize["privacyInformationUrl"] = o.PrivacyInformationUrl.Get()
	}
	if o.Publisher.IsSet() {
		toSerialize["publisher"] = o.Publisher.Get()
	}
	if o.PublishingState != nil {
		toSerialize["publishingState"] = o.PublishingState
	}
	if o.Assignments != nil {
		toSerialize["assignments"] = o.Assignments
	}
	if o.Categories != nil {
		toSerialize["categories"] = o.Categories
	}
	return json.Marshal(toSerialize)
}

type NullableMobileApp struct {
	value *MobileApp
	isSet bool
}

func (v NullableMobileApp) Get() *MobileApp {
	return v.value
}

func (v *NullableMobileApp) Set(val *MobileApp) {
	v.value = val
	v.isSet = true
}

func (v NullableMobileApp) IsSet() bool {
	return v.isSet
}

func (v *NullableMobileApp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMobileApp(val *MobileApp) *NullableMobileApp {
	return &NullableMobileApp{value: val, isSet: true}
}

func (v NullableMobileApp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMobileApp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


