/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphLicenseProcessingState struct for MicrosoftGraphLicenseProcessingState
type MicrosoftGraphLicenseProcessingState struct {
	State NullableString `json:"state,omitempty"`
}

// NewMicrosoftGraphLicenseProcessingState instantiates a new MicrosoftGraphLicenseProcessingState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphLicenseProcessingState() *MicrosoftGraphLicenseProcessingState {
	this := MicrosoftGraphLicenseProcessingState{}
	return &this
}

// NewMicrosoftGraphLicenseProcessingStateWithDefaults instantiates a new MicrosoftGraphLicenseProcessingState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphLicenseProcessingStateWithDefaults() *MicrosoftGraphLicenseProcessingState {
	this := MicrosoftGraphLicenseProcessingState{}
	return &this
}

// GetState returns the State field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphLicenseProcessingState) GetState() string {
	if o == nil || o.State.Get() == nil {
		var ret string
		return ret
	}
	return *o.State.Get()
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphLicenseProcessingState) GetStateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.State.Get(), o.State.IsSet()
}

// HasState returns a boolean if a field has been set.
func (o *MicrosoftGraphLicenseProcessingState) HasState() bool {
	if o != nil && o.State.IsSet() {
		return true
	}

	return false
}

// SetState gets a reference to the given NullableString and assigns it to the State field.
func (o *MicrosoftGraphLicenseProcessingState) SetState(v string) {
	o.State.Set(&v)
}
// SetStateNil sets the value for State to be an explicit nil
func (o *MicrosoftGraphLicenseProcessingState) SetStateNil() {
	o.State.Set(nil)
}

// UnsetState ensures that no value is present for State, not even an explicit nil
func (o *MicrosoftGraphLicenseProcessingState) UnsetState() {
	o.State.Unset()
}

func (o MicrosoftGraphLicenseProcessingState) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.State.IsSet() {
		toSerialize["state"] = o.State.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphLicenseProcessingState struct {
	value *MicrosoftGraphLicenseProcessingState
	isSet bool
}

func (v NullableMicrosoftGraphLicenseProcessingState) Get() *MicrosoftGraphLicenseProcessingState {
	return v.value
}

func (v *NullableMicrosoftGraphLicenseProcessingState) Set(val *MicrosoftGraphLicenseProcessingState) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphLicenseProcessingState) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphLicenseProcessingState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphLicenseProcessingState(val *MicrosoftGraphLicenseProcessingState) *NullableMicrosoftGraphLicenseProcessingState {
	return &NullableMicrosoftGraphLicenseProcessingState{value: val, isSet: true}
}

func (v NullableMicrosoftGraphLicenseProcessingState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphLicenseProcessingState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


