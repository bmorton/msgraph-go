/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphVulnerabilityState struct for MicrosoftGraphVulnerabilityState
type MicrosoftGraphVulnerabilityState struct {
	// Common Vulnerabilities and Exposures (CVE) for the vulnerability.
	Cve NullableString `json:"cve,omitempty"`
	// Base Common Vulnerability Scoring System (CVSS) severity score for this vulnerability.
	Severity NullableString `json:"severity,omitempty"`
	// Indicates whether the detected vulnerability (file) was running at the time of detection or was the file detected at rest on the disk.
	WasRunning NullableBool `json:"wasRunning,omitempty"`
}

// NewMicrosoftGraphVulnerabilityState instantiates a new MicrosoftGraphVulnerabilityState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphVulnerabilityState() *MicrosoftGraphVulnerabilityState {
	this := MicrosoftGraphVulnerabilityState{}
	return &this
}

// NewMicrosoftGraphVulnerabilityStateWithDefaults instantiates a new MicrosoftGraphVulnerabilityState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphVulnerabilityStateWithDefaults() *MicrosoftGraphVulnerabilityState {
	this := MicrosoftGraphVulnerabilityState{}
	return &this
}

// GetCve returns the Cve field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphVulnerabilityState) GetCve() string {
	if o == nil || o.Cve.Get() == nil {
		var ret string
		return ret
	}
	return *o.Cve.Get()
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphVulnerabilityState) GetCveOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Cve.Get(), o.Cve.IsSet()
}

// HasCve returns a boolean if a field has been set.
func (o *MicrosoftGraphVulnerabilityState) HasCve() bool {
	if o != nil && o.Cve.IsSet() {
		return true
	}

	return false
}

// SetCve gets a reference to the given NullableString and assigns it to the Cve field.
func (o *MicrosoftGraphVulnerabilityState) SetCve(v string) {
	o.Cve.Set(&v)
}
// SetCveNil sets the value for Cve to be an explicit nil
func (o *MicrosoftGraphVulnerabilityState) SetCveNil() {
	o.Cve.Set(nil)
}

// UnsetCve ensures that no value is present for Cve, not even an explicit nil
func (o *MicrosoftGraphVulnerabilityState) UnsetCve() {
	o.Cve.Unset()
}

// GetSeverity returns the Severity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphVulnerabilityState) GetSeverity() string {
	if o == nil || o.Severity.Get() == nil {
		var ret string
		return ret
	}
	return *o.Severity.Get()
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphVulnerabilityState) GetSeverityOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Severity.Get(), o.Severity.IsSet()
}

// HasSeverity returns a boolean if a field has been set.
func (o *MicrosoftGraphVulnerabilityState) HasSeverity() bool {
	if o != nil && o.Severity.IsSet() {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given NullableString and assigns it to the Severity field.
func (o *MicrosoftGraphVulnerabilityState) SetSeverity(v string) {
	o.Severity.Set(&v)
}
// SetSeverityNil sets the value for Severity to be an explicit nil
func (o *MicrosoftGraphVulnerabilityState) SetSeverityNil() {
	o.Severity.Set(nil)
}

// UnsetSeverity ensures that no value is present for Severity, not even an explicit nil
func (o *MicrosoftGraphVulnerabilityState) UnsetSeverity() {
	o.Severity.Unset()
}

// GetWasRunning returns the WasRunning field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphVulnerabilityState) GetWasRunning() bool {
	if o == nil || o.WasRunning.Get() == nil {
		var ret bool
		return ret
	}
	return *o.WasRunning.Get()
}

// GetWasRunningOk returns a tuple with the WasRunning field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphVulnerabilityState) GetWasRunningOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.WasRunning.Get(), o.WasRunning.IsSet()
}

// HasWasRunning returns a boolean if a field has been set.
func (o *MicrosoftGraphVulnerabilityState) HasWasRunning() bool {
	if o != nil && o.WasRunning.IsSet() {
		return true
	}

	return false
}

// SetWasRunning gets a reference to the given NullableBool and assigns it to the WasRunning field.
func (o *MicrosoftGraphVulnerabilityState) SetWasRunning(v bool) {
	o.WasRunning.Set(&v)
}
// SetWasRunningNil sets the value for WasRunning to be an explicit nil
func (o *MicrosoftGraphVulnerabilityState) SetWasRunningNil() {
	o.WasRunning.Set(nil)
}

// UnsetWasRunning ensures that no value is present for WasRunning, not even an explicit nil
func (o *MicrosoftGraphVulnerabilityState) UnsetWasRunning() {
	o.WasRunning.Unset()
}

func (o MicrosoftGraphVulnerabilityState) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Cve.IsSet() {
		toSerialize["cve"] = o.Cve.Get()
	}
	if o.Severity.IsSet() {
		toSerialize["severity"] = o.Severity.Get()
	}
	if o.WasRunning.IsSet() {
		toSerialize["wasRunning"] = o.WasRunning.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphVulnerabilityState struct {
	value *MicrosoftGraphVulnerabilityState
	isSet bool
}

func (v NullableMicrosoftGraphVulnerabilityState) Get() *MicrosoftGraphVulnerabilityState {
	return v.value
}

func (v *NullableMicrosoftGraphVulnerabilityState) Set(val *MicrosoftGraphVulnerabilityState) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphVulnerabilityState) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphVulnerabilityState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphVulnerabilityState(val *MicrosoftGraphVulnerabilityState) *NullableMicrosoftGraphVulnerabilityState {
	return &NullableMicrosoftGraphVulnerabilityState{value: val, isSet: true}
}

func (v NullableMicrosoftGraphVulnerabilityState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphVulnerabilityState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


