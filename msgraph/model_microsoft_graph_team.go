/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphTeam struct for MicrosoftGraphTeam
type MicrosoftGraphTeam struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// An optional label. Typically describes the data or business sensitivity of the team. Must match one of a pre-configured set in the tenant's directory.
	Classification NullableString `json:"classification,omitempty"`
	// Timestamp at which the team was created.
	CreatedDateTime NullableTime `json:"createdDateTime,omitempty"`
	// An optional description for the team. Maximum length: 1024 characters.
	Description NullableString `json:"description,omitempty"`
	// The name of the team.
	DisplayName NullableString `json:"displayName,omitempty"`
	// Settings to configure use of Giphy, memes, and stickers in the team.
	FunSettings AnyOfmicrosoftGraphTeamFunSettings `json:"funSettings,omitempty"`
	// Settings to configure whether guests can create, update, or delete channels in the team.
	GuestSettings AnyOfmicrosoftGraphTeamGuestSettings `json:"guestSettings,omitempty"`
	// A unique ID for the team that has been used in a few places such as the audit log/Office 365 Management Activity API.
	InternalId NullableString `json:"internalId,omitempty"`
	// Whether this team is in read-only mode.
	IsArchived NullableBool `json:"isArchived,omitempty"`
	// Settings to configure whether members can perform certain actions, for example, create channels and add bots, in the team.
	MemberSettings AnyOfmicrosoftGraphTeamMemberSettings `json:"memberSettings,omitempty"`
	// Settings to configure messaging and mentions in the team.
	MessagingSettings AnyOfmicrosoftGraphTeamMessagingSettings `json:"messagingSettings,omitempty"`
	// Optional. Indicates whether the team is intended for a particular use case.  Each team specialization has access to unique behaviors and experiences targeted to its use case.
	Specialization AnyOfmicrosoftGraphTeamSpecialization `json:"specialization,omitempty"`
	// The visibility of the group and team. Defaults to Public.
	Visibility AnyOfmicrosoftGraphTeamVisibilityType `json:"visibility,omitempty"`
	// A hyperlink that will go to the team in the Microsoft Teams client. This is the URL that you get when you right-click a team in the Microsoft Teams client and select Get link to team. This URL should be treated as an opaque blob, and not parsed.
	WebUrl NullableString `json:"webUrl,omitempty"`
	// The collection of channels & messages associated with the team.
	Channels *[]MicrosoftGraphChannel `json:"channels,omitempty"`
	Group AnyOfmicrosoftGraphGroup `json:"group,omitempty"`
	// The apps installed in this team.
	InstalledApps *[]MicrosoftGraphTeamsAppInstallation `json:"installedApps,omitempty"`
	// Members and owners of the team.
	Members *[]MicrosoftGraphConversationMember `json:"members,omitempty"`
	// The async operations that ran or are running on this team.
	Operations *[]MicrosoftGraphTeamsAsyncOperation `json:"operations,omitempty"`
	// The general channel for the team.
	PrimaryChannel AnyOfmicrosoftGraphChannel `json:"primaryChannel,omitempty"`
	// The template this team was created from. See available templates.
	Template AnyOfmicrosoftGraphTeamsTemplate `json:"template,omitempty"`
	// The schedule of shifts for this team.
	Schedule AnyOfmicrosoftGraphSchedule `json:"schedule,omitempty"`
}

// NewMicrosoftGraphTeam instantiates a new MicrosoftGraphTeam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphTeam() *MicrosoftGraphTeam {
	this := MicrosoftGraphTeam{}
	return &this
}

// NewMicrosoftGraphTeamWithDefaults instantiates a new MicrosoftGraphTeam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphTeamWithDefaults() *MicrosoftGraphTeam {
	this := MicrosoftGraphTeam{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphTeam) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTeam) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphTeam) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphTeam) SetId(v string) {
	o.Id = &v
}

// GetClassification returns the Classification field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTeam) GetClassification() string {
	if o == nil || o.Classification.Get() == nil {
		var ret string
		return ret
	}
	return *o.Classification.Get()
}

// GetClassificationOk returns a tuple with the Classification field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTeam) GetClassificationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Classification.Get(), o.Classification.IsSet()
}

// HasClassification returns a boolean if a field has been set.
func (o *MicrosoftGraphTeam) HasClassification() bool {
	if o != nil && o.Classification.IsSet() {
		return true
	}

	return false
}

// SetClassification gets a reference to the given NullableString and assigns it to the Classification field.
func (o *MicrosoftGraphTeam) SetClassification(v string) {
	o.Classification.Set(&v)
}
// SetClassificationNil sets the value for Classification to be an explicit nil
func (o *MicrosoftGraphTeam) SetClassificationNil() {
	o.Classification.Set(nil)
}

// UnsetClassification ensures that no value is present for Classification, not even an explicit nil
func (o *MicrosoftGraphTeam) UnsetClassification() {
	o.Classification.Unset()
}

// GetCreatedDateTime returns the CreatedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTeam) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime.Get()
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTeam) GetCreatedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatedDateTime.Get(), o.CreatedDateTime.IsSet()
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphTeam) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime.IsSet() {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given NullableTime and assigns it to the CreatedDateTime field.
func (o *MicrosoftGraphTeam) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime.Set(&v)
}
// SetCreatedDateTimeNil sets the value for CreatedDateTime to be an explicit nil
func (o *MicrosoftGraphTeam) SetCreatedDateTimeNil() {
	o.CreatedDateTime.Set(nil)
}

// UnsetCreatedDateTime ensures that no value is present for CreatedDateTime, not even an explicit nil
func (o *MicrosoftGraphTeam) UnsetCreatedDateTime() {
	o.CreatedDateTime.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTeam) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTeam) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *MicrosoftGraphTeam) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *MicrosoftGraphTeam) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *MicrosoftGraphTeam) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *MicrosoftGraphTeam) UnsetDescription() {
	o.Description.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTeam) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTeam) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphTeam) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *MicrosoftGraphTeam) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *MicrosoftGraphTeam) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *MicrosoftGraphTeam) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetFunSettings returns the FunSettings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTeam) GetFunSettings() AnyOfmicrosoftGraphTeamFunSettings {
	if o == nil  {
		var ret AnyOfmicrosoftGraphTeamFunSettings
		return ret
	}
	return o.FunSettings
}

// GetFunSettingsOk returns a tuple with the FunSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTeam) GetFunSettingsOk() (*AnyOfmicrosoftGraphTeamFunSettings, bool) {
	if o == nil || o.FunSettings == nil {
		return nil, false
	}
	return &o.FunSettings, true
}

// HasFunSettings returns a boolean if a field has been set.
func (o *MicrosoftGraphTeam) HasFunSettings() bool {
	if o != nil && o.FunSettings != nil {
		return true
	}

	return false
}

// SetFunSettings gets a reference to the given AnyOfmicrosoftGraphTeamFunSettings and assigns it to the FunSettings field.
func (o *MicrosoftGraphTeam) SetFunSettings(v AnyOfmicrosoftGraphTeamFunSettings) {
	o.FunSettings = v
}

// GetGuestSettings returns the GuestSettings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTeam) GetGuestSettings() AnyOfmicrosoftGraphTeamGuestSettings {
	if o == nil  {
		var ret AnyOfmicrosoftGraphTeamGuestSettings
		return ret
	}
	return o.GuestSettings
}

// GetGuestSettingsOk returns a tuple with the GuestSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTeam) GetGuestSettingsOk() (*AnyOfmicrosoftGraphTeamGuestSettings, bool) {
	if o == nil || o.GuestSettings == nil {
		return nil, false
	}
	return &o.GuestSettings, true
}

// HasGuestSettings returns a boolean if a field has been set.
func (o *MicrosoftGraphTeam) HasGuestSettings() bool {
	if o != nil && o.GuestSettings != nil {
		return true
	}

	return false
}

// SetGuestSettings gets a reference to the given AnyOfmicrosoftGraphTeamGuestSettings and assigns it to the GuestSettings field.
func (o *MicrosoftGraphTeam) SetGuestSettings(v AnyOfmicrosoftGraphTeamGuestSettings) {
	o.GuestSettings = v
}

// GetInternalId returns the InternalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTeam) GetInternalId() string {
	if o == nil || o.InternalId.Get() == nil {
		var ret string
		return ret
	}
	return *o.InternalId.Get()
}

// GetInternalIdOk returns a tuple with the InternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTeam) GetInternalIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InternalId.Get(), o.InternalId.IsSet()
}

// HasInternalId returns a boolean if a field has been set.
func (o *MicrosoftGraphTeam) HasInternalId() bool {
	if o != nil && o.InternalId.IsSet() {
		return true
	}

	return false
}

// SetInternalId gets a reference to the given NullableString and assigns it to the InternalId field.
func (o *MicrosoftGraphTeam) SetInternalId(v string) {
	o.InternalId.Set(&v)
}
// SetInternalIdNil sets the value for InternalId to be an explicit nil
func (o *MicrosoftGraphTeam) SetInternalIdNil() {
	o.InternalId.Set(nil)
}

// UnsetInternalId ensures that no value is present for InternalId, not even an explicit nil
func (o *MicrosoftGraphTeam) UnsetInternalId() {
	o.InternalId.Unset()
}

// GetIsArchived returns the IsArchived field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTeam) GetIsArchived() bool {
	if o == nil || o.IsArchived.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsArchived.Get()
}

// GetIsArchivedOk returns a tuple with the IsArchived field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTeam) GetIsArchivedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsArchived.Get(), o.IsArchived.IsSet()
}

// HasIsArchived returns a boolean if a field has been set.
func (o *MicrosoftGraphTeam) HasIsArchived() bool {
	if o != nil && o.IsArchived.IsSet() {
		return true
	}

	return false
}

// SetIsArchived gets a reference to the given NullableBool and assigns it to the IsArchived field.
func (o *MicrosoftGraphTeam) SetIsArchived(v bool) {
	o.IsArchived.Set(&v)
}
// SetIsArchivedNil sets the value for IsArchived to be an explicit nil
func (o *MicrosoftGraphTeam) SetIsArchivedNil() {
	o.IsArchived.Set(nil)
}

// UnsetIsArchived ensures that no value is present for IsArchived, not even an explicit nil
func (o *MicrosoftGraphTeam) UnsetIsArchived() {
	o.IsArchived.Unset()
}

// GetMemberSettings returns the MemberSettings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTeam) GetMemberSettings() AnyOfmicrosoftGraphTeamMemberSettings {
	if o == nil  {
		var ret AnyOfmicrosoftGraphTeamMemberSettings
		return ret
	}
	return o.MemberSettings
}

// GetMemberSettingsOk returns a tuple with the MemberSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTeam) GetMemberSettingsOk() (*AnyOfmicrosoftGraphTeamMemberSettings, bool) {
	if o == nil || o.MemberSettings == nil {
		return nil, false
	}
	return &o.MemberSettings, true
}

// HasMemberSettings returns a boolean if a field has been set.
func (o *MicrosoftGraphTeam) HasMemberSettings() bool {
	if o != nil && o.MemberSettings != nil {
		return true
	}

	return false
}

// SetMemberSettings gets a reference to the given AnyOfmicrosoftGraphTeamMemberSettings and assigns it to the MemberSettings field.
func (o *MicrosoftGraphTeam) SetMemberSettings(v AnyOfmicrosoftGraphTeamMemberSettings) {
	o.MemberSettings = v
}

// GetMessagingSettings returns the MessagingSettings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTeam) GetMessagingSettings() AnyOfmicrosoftGraphTeamMessagingSettings {
	if o == nil  {
		var ret AnyOfmicrosoftGraphTeamMessagingSettings
		return ret
	}
	return o.MessagingSettings
}

// GetMessagingSettingsOk returns a tuple with the MessagingSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTeam) GetMessagingSettingsOk() (*AnyOfmicrosoftGraphTeamMessagingSettings, bool) {
	if o == nil || o.MessagingSettings == nil {
		return nil, false
	}
	return &o.MessagingSettings, true
}

// HasMessagingSettings returns a boolean if a field has been set.
func (o *MicrosoftGraphTeam) HasMessagingSettings() bool {
	if o != nil && o.MessagingSettings != nil {
		return true
	}

	return false
}

// SetMessagingSettings gets a reference to the given AnyOfmicrosoftGraphTeamMessagingSettings and assigns it to the MessagingSettings field.
func (o *MicrosoftGraphTeam) SetMessagingSettings(v AnyOfmicrosoftGraphTeamMessagingSettings) {
	o.MessagingSettings = v
}

// GetSpecialization returns the Specialization field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTeam) GetSpecialization() AnyOfmicrosoftGraphTeamSpecialization {
	if o == nil  {
		var ret AnyOfmicrosoftGraphTeamSpecialization
		return ret
	}
	return o.Specialization
}

// GetSpecializationOk returns a tuple with the Specialization field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTeam) GetSpecializationOk() (*AnyOfmicrosoftGraphTeamSpecialization, bool) {
	if o == nil || o.Specialization == nil {
		return nil, false
	}
	return &o.Specialization, true
}

// HasSpecialization returns a boolean if a field has been set.
func (o *MicrosoftGraphTeam) HasSpecialization() bool {
	if o != nil && o.Specialization != nil {
		return true
	}

	return false
}

// SetSpecialization gets a reference to the given AnyOfmicrosoftGraphTeamSpecialization and assigns it to the Specialization field.
func (o *MicrosoftGraphTeam) SetSpecialization(v AnyOfmicrosoftGraphTeamSpecialization) {
	o.Specialization = v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTeam) GetVisibility() AnyOfmicrosoftGraphTeamVisibilityType {
	if o == nil  {
		var ret AnyOfmicrosoftGraphTeamVisibilityType
		return ret
	}
	return o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTeam) GetVisibilityOk() (*AnyOfmicrosoftGraphTeamVisibilityType, bool) {
	if o == nil || o.Visibility == nil {
		return nil, false
	}
	return &o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *MicrosoftGraphTeam) HasVisibility() bool {
	if o != nil && o.Visibility != nil {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given AnyOfmicrosoftGraphTeamVisibilityType and assigns it to the Visibility field.
func (o *MicrosoftGraphTeam) SetVisibility(v AnyOfmicrosoftGraphTeamVisibilityType) {
	o.Visibility = v
}

// GetWebUrl returns the WebUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTeam) GetWebUrl() string {
	if o == nil || o.WebUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.WebUrl.Get()
}

// GetWebUrlOk returns a tuple with the WebUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTeam) GetWebUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.WebUrl.Get(), o.WebUrl.IsSet()
}

// HasWebUrl returns a boolean if a field has been set.
func (o *MicrosoftGraphTeam) HasWebUrl() bool {
	if o != nil && o.WebUrl.IsSet() {
		return true
	}

	return false
}

// SetWebUrl gets a reference to the given NullableString and assigns it to the WebUrl field.
func (o *MicrosoftGraphTeam) SetWebUrl(v string) {
	o.WebUrl.Set(&v)
}
// SetWebUrlNil sets the value for WebUrl to be an explicit nil
func (o *MicrosoftGraphTeam) SetWebUrlNil() {
	o.WebUrl.Set(nil)
}

// UnsetWebUrl ensures that no value is present for WebUrl, not even an explicit nil
func (o *MicrosoftGraphTeam) UnsetWebUrl() {
	o.WebUrl.Unset()
}

// GetChannels returns the Channels field value if set, zero value otherwise.
func (o *MicrosoftGraphTeam) GetChannels() []MicrosoftGraphChannel {
	if o == nil || o.Channels == nil {
		var ret []MicrosoftGraphChannel
		return ret
	}
	return *o.Channels
}

// GetChannelsOk returns a tuple with the Channels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTeam) GetChannelsOk() (*[]MicrosoftGraphChannel, bool) {
	if o == nil || o.Channels == nil {
		return nil, false
	}
	return o.Channels, true
}

// HasChannels returns a boolean if a field has been set.
func (o *MicrosoftGraphTeam) HasChannels() bool {
	if o != nil && o.Channels != nil {
		return true
	}

	return false
}

// SetChannels gets a reference to the given []MicrosoftGraphChannel and assigns it to the Channels field.
func (o *MicrosoftGraphTeam) SetChannels(v []MicrosoftGraphChannel) {
	o.Channels = &v
}

// GetGroup returns the Group field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTeam) GetGroup() AnyOfmicrosoftGraphGroup {
	if o == nil  {
		var ret AnyOfmicrosoftGraphGroup
		return ret
	}
	return o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTeam) GetGroupOk() (*AnyOfmicrosoftGraphGroup, bool) {
	if o == nil || o.Group == nil {
		return nil, false
	}
	return &o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *MicrosoftGraphTeam) HasGroup() bool {
	if o != nil && o.Group != nil {
		return true
	}

	return false
}

// SetGroup gets a reference to the given AnyOfmicrosoftGraphGroup and assigns it to the Group field.
func (o *MicrosoftGraphTeam) SetGroup(v AnyOfmicrosoftGraphGroup) {
	o.Group = v
}

// GetInstalledApps returns the InstalledApps field value if set, zero value otherwise.
func (o *MicrosoftGraphTeam) GetInstalledApps() []MicrosoftGraphTeamsAppInstallation {
	if o == nil || o.InstalledApps == nil {
		var ret []MicrosoftGraphTeamsAppInstallation
		return ret
	}
	return *o.InstalledApps
}

// GetInstalledAppsOk returns a tuple with the InstalledApps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTeam) GetInstalledAppsOk() (*[]MicrosoftGraphTeamsAppInstallation, bool) {
	if o == nil || o.InstalledApps == nil {
		return nil, false
	}
	return o.InstalledApps, true
}

// HasInstalledApps returns a boolean if a field has been set.
func (o *MicrosoftGraphTeam) HasInstalledApps() bool {
	if o != nil && o.InstalledApps != nil {
		return true
	}

	return false
}

// SetInstalledApps gets a reference to the given []MicrosoftGraphTeamsAppInstallation and assigns it to the InstalledApps field.
func (o *MicrosoftGraphTeam) SetInstalledApps(v []MicrosoftGraphTeamsAppInstallation) {
	o.InstalledApps = &v
}

// GetMembers returns the Members field value if set, zero value otherwise.
func (o *MicrosoftGraphTeam) GetMembers() []MicrosoftGraphConversationMember {
	if o == nil || o.Members == nil {
		var ret []MicrosoftGraphConversationMember
		return ret
	}
	return *o.Members
}

// GetMembersOk returns a tuple with the Members field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTeam) GetMembersOk() (*[]MicrosoftGraphConversationMember, bool) {
	if o == nil || o.Members == nil {
		return nil, false
	}
	return o.Members, true
}

// HasMembers returns a boolean if a field has been set.
func (o *MicrosoftGraphTeam) HasMembers() bool {
	if o != nil && o.Members != nil {
		return true
	}

	return false
}

// SetMembers gets a reference to the given []MicrosoftGraphConversationMember and assigns it to the Members field.
func (o *MicrosoftGraphTeam) SetMembers(v []MicrosoftGraphConversationMember) {
	o.Members = &v
}

// GetOperations returns the Operations field value if set, zero value otherwise.
func (o *MicrosoftGraphTeam) GetOperations() []MicrosoftGraphTeamsAsyncOperation {
	if o == nil || o.Operations == nil {
		var ret []MicrosoftGraphTeamsAsyncOperation
		return ret
	}
	return *o.Operations
}

// GetOperationsOk returns a tuple with the Operations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTeam) GetOperationsOk() (*[]MicrosoftGraphTeamsAsyncOperation, bool) {
	if o == nil || o.Operations == nil {
		return nil, false
	}
	return o.Operations, true
}

// HasOperations returns a boolean if a field has been set.
func (o *MicrosoftGraphTeam) HasOperations() bool {
	if o != nil && o.Operations != nil {
		return true
	}

	return false
}

// SetOperations gets a reference to the given []MicrosoftGraphTeamsAsyncOperation and assigns it to the Operations field.
func (o *MicrosoftGraphTeam) SetOperations(v []MicrosoftGraphTeamsAsyncOperation) {
	o.Operations = &v
}

// GetPrimaryChannel returns the PrimaryChannel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTeam) GetPrimaryChannel() AnyOfmicrosoftGraphChannel {
	if o == nil  {
		var ret AnyOfmicrosoftGraphChannel
		return ret
	}
	return o.PrimaryChannel
}

// GetPrimaryChannelOk returns a tuple with the PrimaryChannel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTeam) GetPrimaryChannelOk() (*AnyOfmicrosoftGraphChannel, bool) {
	if o == nil || o.PrimaryChannel == nil {
		return nil, false
	}
	return &o.PrimaryChannel, true
}

// HasPrimaryChannel returns a boolean if a field has been set.
func (o *MicrosoftGraphTeam) HasPrimaryChannel() bool {
	if o != nil && o.PrimaryChannel != nil {
		return true
	}

	return false
}

// SetPrimaryChannel gets a reference to the given AnyOfmicrosoftGraphChannel and assigns it to the PrimaryChannel field.
func (o *MicrosoftGraphTeam) SetPrimaryChannel(v AnyOfmicrosoftGraphChannel) {
	o.PrimaryChannel = v
}

// GetTemplate returns the Template field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTeam) GetTemplate() AnyOfmicrosoftGraphTeamsTemplate {
	if o == nil  {
		var ret AnyOfmicrosoftGraphTeamsTemplate
		return ret
	}
	return o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTeam) GetTemplateOk() (*AnyOfmicrosoftGraphTeamsTemplate, bool) {
	if o == nil || o.Template == nil {
		return nil, false
	}
	return &o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *MicrosoftGraphTeam) HasTemplate() bool {
	if o != nil && o.Template != nil {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given AnyOfmicrosoftGraphTeamsTemplate and assigns it to the Template field.
func (o *MicrosoftGraphTeam) SetTemplate(v AnyOfmicrosoftGraphTeamsTemplate) {
	o.Template = v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTeam) GetSchedule() AnyOfmicrosoftGraphSchedule {
	if o == nil  {
		var ret AnyOfmicrosoftGraphSchedule
		return ret
	}
	return o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTeam) GetScheduleOk() (*AnyOfmicrosoftGraphSchedule, bool) {
	if o == nil || o.Schedule == nil {
		return nil, false
	}
	return &o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *MicrosoftGraphTeam) HasSchedule() bool {
	if o != nil && o.Schedule != nil {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given AnyOfmicrosoftGraphSchedule and assigns it to the Schedule field.
func (o *MicrosoftGraphTeam) SetSchedule(v AnyOfmicrosoftGraphSchedule) {
	o.Schedule = v
}

func (o MicrosoftGraphTeam) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Classification.IsSet() {
		toSerialize["classification"] = o.Classification.Get()
	}
	if o.CreatedDateTime.IsSet() {
		toSerialize["createdDateTime"] = o.CreatedDateTime.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.FunSettings != nil {
		toSerialize["funSettings"] = o.FunSettings
	}
	if o.GuestSettings != nil {
		toSerialize["guestSettings"] = o.GuestSettings
	}
	if o.InternalId.IsSet() {
		toSerialize["internalId"] = o.InternalId.Get()
	}
	if o.IsArchived.IsSet() {
		toSerialize["isArchived"] = o.IsArchived.Get()
	}
	if o.MemberSettings != nil {
		toSerialize["memberSettings"] = o.MemberSettings
	}
	if o.MessagingSettings != nil {
		toSerialize["messagingSettings"] = o.MessagingSettings
	}
	if o.Specialization != nil {
		toSerialize["specialization"] = o.Specialization
	}
	if o.Visibility != nil {
		toSerialize["visibility"] = o.Visibility
	}
	if o.WebUrl.IsSet() {
		toSerialize["webUrl"] = o.WebUrl.Get()
	}
	if o.Channels != nil {
		toSerialize["channels"] = o.Channels
	}
	if o.Group != nil {
		toSerialize["group"] = o.Group
	}
	if o.InstalledApps != nil {
		toSerialize["installedApps"] = o.InstalledApps
	}
	if o.Members != nil {
		toSerialize["members"] = o.Members
	}
	if o.Operations != nil {
		toSerialize["operations"] = o.Operations
	}
	if o.PrimaryChannel != nil {
		toSerialize["primaryChannel"] = o.PrimaryChannel
	}
	if o.Template != nil {
		toSerialize["template"] = o.Template
	}
	if o.Schedule != nil {
		toSerialize["schedule"] = o.Schedule
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphTeam struct {
	value *MicrosoftGraphTeam
	isSet bool
}

func (v NullableMicrosoftGraphTeam) Get() *MicrosoftGraphTeam {
	return v.value
}

func (v *NullableMicrosoftGraphTeam) Set(val *MicrosoftGraphTeam) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphTeam) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphTeam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphTeam(val *MicrosoftGraphTeam) *NullableMicrosoftGraphTeam {
	return &NullableMicrosoftGraphTeam{value: val, isSet: true}
}

func (v NullableMicrosoftGraphTeam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphTeam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


