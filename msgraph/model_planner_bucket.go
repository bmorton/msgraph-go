/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PlannerBucket struct for PlannerBucket
type PlannerBucket struct {
	// Name of the bucket.
	Name *string `json:"name,omitempty"`
	// Hint used to order items of this type in a list view. The format is defined as outlined here.
	OrderHint NullableString `json:"orderHint,omitempty"`
	// Plan ID to which the bucket belongs.
	PlanId NullableString `json:"planId,omitempty"`
	// Read-only. Nullable. The collection of tasks in the bucket.
	Tasks *[]MicrosoftGraphPlannerTask `json:"tasks,omitempty"`
}

// NewPlannerBucket instantiates a new PlannerBucket object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlannerBucket() *PlannerBucket {
	this := PlannerBucket{}
	return &this
}

// NewPlannerBucketWithDefaults instantiates a new PlannerBucket object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlannerBucketWithDefaults() *PlannerBucket {
	this := PlannerBucket{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PlannerBucket) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlannerBucket) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PlannerBucket) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PlannerBucket) SetName(v string) {
	o.Name = &v
}

// GetOrderHint returns the OrderHint field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PlannerBucket) GetOrderHint() string {
	if o == nil || o.OrderHint.Get() == nil {
		var ret string
		return ret
	}
	return *o.OrderHint.Get()
}

// GetOrderHintOk returns a tuple with the OrderHint field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PlannerBucket) GetOrderHintOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OrderHint.Get(), o.OrderHint.IsSet()
}

// HasOrderHint returns a boolean if a field has been set.
func (o *PlannerBucket) HasOrderHint() bool {
	if o != nil && o.OrderHint.IsSet() {
		return true
	}

	return false
}

// SetOrderHint gets a reference to the given NullableString and assigns it to the OrderHint field.
func (o *PlannerBucket) SetOrderHint(v string) {
	o.OrderHint.Set(&v)
}
// SetOrderHintNil sets the value for OrderHint to be an explicit nil
func (o *PlannerBucket) SetOrderHintNil() {
	o.OrderHint.Set(nil)
}

// UnsetOrderHint ensures that no value is present for OrderHint, not even an explicit nil
func (o *PlannerBucket) UnsetOrderHint() {
	o.OrderHint.Unset()
}

// GetPlanId returns the PlanId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PlannerBucket) GetPlanId() string {
	if o == nil || o.PlanId.Get() == nil {
		var ret string
		return ret
	}
	return *o.PlanId.Get()
}

// GetPlanIdOk returns a tuple with the PlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PlannerBucket) GetPlanIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PlanId.Get(), o.PlanId.IsSet()
}

// HasPlanId returns a boolean if a field has been set.
func (o *PlannerBucket) HasPlanId() bool {
	if o != nil && o.PlanId.IsSet() {
		return true
	}

	return false
}

// SetPlanId gets a reference to the given NullableString and assigns it to the PlanId field.
func (o *PlannerBucket) SetPlanId(v string) {
	o.PlanId.Set(&v)
}
// SetPlanIdNil sets the value for PlanId to be an explicit nil
func (o *PlannerBucket) SetPlanIdNil() {
	o.PlanId.Set(nil)
}

// UnsetPlanId ensures that no value is present for PlanId, not even an explicit nil
func (o *PlannerBucket) UnsetPlanId() {
	o.PlanId.Unset()
}

// GetTasks returns the Tasks field value if set, zero value otherwise.
func (o *PlannerBucket) GetTasks() []MicrosoftGraphPlannerTask {
	if o == nil || o.Tasks == nil {
		var ret []MicrosoftGraphPlannerTask
		return ret
	}
	return *o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlannerBucket) GetTasksOk() (*[]MicrosoftGraphPlannerTask, bool) {
	if o == nil || o.Tasks == nil {
		return nil, false
	}
	return o.Tasks, true
}

// HasTasks returns a boolean if a field has been set.
func (o *PlannerBucket) HasTasks() bool {
	if o != nil && o.Tasks != nil {
		return true
	}

	return false
}

// SetTasks gets a reference to the given []MicrosoftGraphPlannerTask and assigns it to the Tasks field.
func (o *PlannerBucket) SetTasks(v []MicrosoftGraphPlannerTask) {
	o.Tasks = &v
}

func (o PlannerBucket) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.OrderHint.IsSet() {
		toSerialize["orderHint"] = o.OrderHint.Get()
	}
	if o.PlanId.IsSet() {
		toSerialize["planId"] = o.PlanId.Get()
	}
	if o.Tasks != nil {
		toSerialize["tasks"] = o.Tasks
	}
	return json.Marshal(toSerialize)
}

type NullablePlannerBucket struct {
	value *PlannerBucket
	isSet bool
}

func (v NullablePlannerBucket) Get() *PlannerBucket {
	return v.value
}

func (v *NullablePlannerBucket) Set(val *PlannerBucket) {
	v.value = val
	v.isSet = true
}

func (v NullablePlannerBucket) IsSet() bool {
	return v.isSet
}

func (v *NullablePlannerBucket) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlannerBucket(val *PlannerBucket) *NullablePlannerBucket {
	return &NullablePlannerBucket{value: val, isSet: true}
}

func (v NullablePlannerBucket) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlannerBucket) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


