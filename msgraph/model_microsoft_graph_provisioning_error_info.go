/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphProvisioningErrorInfo struct for MicrosoftGraphProvisioningErrorInfo
type MicrosoftGraphProvisioningErrorInfo struct {
	// Additional details in case of error.
	AdditionalDetails NullableString `json:"additionalDetails,omitempty"`
	// Categorizes the error code. Possible values are failure, nonServiceFailure, success, unknownFutureValue
	ErrorCategory AnyOfmicrosoftGraphProvisioningStatusErrorCategory `json:"errorCategory,omitempty"`
	// Unique error code if any occurred. Learn more
	ErrorCode NullableString `json:"errorCode,omitempty"`
	// Summarizes the status and describes why the status happened.
	Reason NullableString `json:"reason,omitempty"`
	// Provides the resolution for the corresponding error.
	RecommendedAction NullableString `json:"recommendedAction,omitempty"`
}

// NewMicrosoftGraphProvisioningErrorInfo instantiates a new MicrosoftGraphProvisioningErrorInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphProvisioningErrorInfo() *MicrosoftGraphProvisioningErrorInfo {
	this := MicrosoftGraphProvisioningErrorInfo{}
	return &this
}

// NewMicrosoftGraphProvisioningErrorInfoWithDefaults instantiates a new MicrosoftGraphProvisioningErrorInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphProvisioningErrorInfoWithDefaults() *MicrosoftGraphProvisioningErrorInfo {
	this := MicrosoftGraphProvisioningErrorInfo{}
	return &this
}

// GetAdditionalDetails returns the AdditionalDetails field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphProvisioningErrorInfo) GetAdditionalDetails() string {
	if o == nil || o.AdditionalDetails.Get() == nil {
		var ret string
		return ret
	}
	return *o.AdditionalDetails.Get()
}

// GetAdditionalDetailsOk returns a tuple with the AdditionalDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphProvisioningErrorInfo) GetAdditionalDetailsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AdditionalDetails.Get(), o.AdditionalDetails.IsSet()
}

// HasAdditionalDetails returns a boolean if a field has been set.
func (o *MicrosoftGraphProvisioningErrorInfo) HasAdditionalDetails() bool {
	if o != nil && o.AdditionalDetails.IsSet() {
		return true
	}

	return false
}

// SetAdditionalDetails gets a reference to the given NullableString and assigns it to the AdditionalDetails field.
func (o *MicrosoftGraphProvisioningErrorInfo) SetAdditionalDetails(v string) {
	o.AdditionalDetails.Set(&v)
}
// SetAdditionalDetailsNil sets the value for AdditionalDetails to be an explicit nil
func (o *MicrosoftGraphProvisioningErrorInfo) SetAdditionalDetailsNil() {
	o.AdditionalDetails.Set(nil)
}

// UnsetAdditionalDetails ensures that no value is present for AdditionalDetails, not even an explicit nil
func (o *MicrosoftGraphProvisioningErrorInfo) UnsetAdditionalDetails() {
	o.AdditionalDetails.Unset()
}

// GetErrorCategory returns the ErrorCategory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphProvisioningErrorInfo) GetErrorCategory() AnyOfmicrosoftGraphProvisioningStatusErrorCategory {
	if o == nil  {
		var ret AnyOfmicrosoftGraphProvisioningStatusErrorCategory
		return ret
	}
	return o.ErrorCategory
}

// GetErrorCategoryOk returns a tuple with the ErrorCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphProvisioningErrorInfo) GetErrorCategoryOk() (*AnyOfmicrosoftGraphProvisioningStatusErrorCategory, bool) {
	if o == nil || o.ErrorCategory == nil {
		return nil, false
	}
	return &o.ErrorCategory, true
}

// HasErrorCategory returns a boolean if a field has been set.
func (o *MicrosoftGraphProvisioningErrorInfo) HasErrorCategory() bool {
	if o != nil && o.ErrorCategory != nil {
		return true
	}

	return false
}

// SetErrorCategory gets a reference to the given AnyOfmicrosoftGraphProvisioningStatusErrorCategory and assigns it to the ErrorCategory field.
func (o *MicrosoftGraphProvisioningErrorInfo) SetErrorCategory(v AnyOfmicrosoftGraphProvisioningStatusErrorCategory) {
	o.ErrorCategory = v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphProvisioningErrorInfo) GetErrorCode() string {
	if o == nil || o.ErrorCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.ErrorCode.Get()
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphProvisioningErrorInfo) GetErrorCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ErrorCode.Get(), o.ErrorCode.IsSet()
}

// HasErrorCode returns a boolean if a field has been set.
func (o *MicrosoftGraphProvisioningErrorInfo) HasErrorCode() bool {
	if o != nil && o.ErrorCode.IsSet() {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given NullableString and assigns it to the ErrorCode field.
func (o *MicrosoftGraphProvisioningErrorInfo) SetErrorCode(v string) {
	o.ErrorCode.Set(&v)
}
// SetErrorCodeNil sets the value for ErrorCode to be an explicit nil
func (o *MicrosoftGraphProvisioningErrorInfo) SetErrorCodeNil() {
	o.ErrorCode.Set(nil)
}

// UnsetErrorCode ensures that no value is present for ErrorCode, not even an explicit nil
func (o *MicrosoftGraphProvisioningErrorInfo) UnsetErrorCode() {
	o.ErrorCode.Unset()
}

// GetReason returns the Reason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphProvisioningErrorInfo) GetReason() string {
	if o == nil || o.Reason.Get() == nil {
		var ret string
		return ret
	}
	return *o.Reason.Get()
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphProvisioningErrorInfo) GetReasonOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Reason.Get(), o.Reason.IsSet()
}

// HasReason returns a boolean if a field has been set.
func (o *MicrosoftGraphProvisioningErrorInfo) HasReason() bool {
	if o != nil && o.Reason.IsSet() {
		return true
	}

	return false
}

// SetReason gets a reference to the given NullableString and assigns it to the Reason field.
func (o *MicrosoftGraphProvisioningErrorInfo) SetReason(v string) {
	o.Reason.Set(&v)
}
// SetReasonNil sets the value for Reason to be an explicit nil
func (o *MicrosoftGraphProvisioningErrorInfo) SetReasonNil() {
	o.Reason.Set(nil)
}

// UnsetReason ensures that no value is present for Reason, not even an explicit nil
func (o *MicrosoftGraphProvisioningErrorInfo) UnsetReason() {
	o.Reason.Unset()
}

// GetRecommendedAction returns the RecommendedAction field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphProvisioningErrorInfo) GetRecommendedAction() string {
	if o == nil || o.RecommendedAction.Get() == nil {
		var ret string
		return ret
	}
	return *o.RecommendedAction.Get()
}

// GetRecommendedActionOk returns a tuple with the RecommendedAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphProvisioningErrorInfo) GetRecommendedActionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RecommendedAction.Get(), o.RecommendedAction.IsSet()
}

// HasRecommendedAction returns a boolean if a field has been set.
func (o *MicrosoftGraphProvisioningErrorInfo) HasRecommendedAction() bool {
	if o != nil && o.RecommendedAction.IsSet() {
		return true
	}

	return false
}

// SetRecommendedAction gets a reference to the given NullableString and assigns it to the RecommendedAction field.
func (o *MicrosoftGraphProvisioningErrorInfo) SetRecommendedAction(v string) {
	o.RecommendedAction.Set(&v)
}
// SetRecommendedActionNil sets the value for RecommendedAction to be an explicit nil
func (o *MicrosoftGraphProvisioningErrorInfo) SetRecommendedActionNil() {
	o.RecommendedAction.Set(nil)
}

// UnsetRecommendedAction ensures that no value is present for RecommendedAction, not even an explicit nil
func (o *MicrosoftGraphProvisioningErrorInfo) UnsetRecommendedAction() {
	o.RecommendedAction.Unset()
}

func (o MicrosoftGraphProvisioningErrorInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdditionalDetails.IsSet() {
		toSerialize["additionalDetails"] = o.AdditionalDetails.Get()
	}
	if o.ErrorCategory != nil {
		toSerialize["errorCategory"] = o.ErrorCategory
	}
	if o.ErrorCode.IsSet() {
		toSerialize["errorCode"] = o.ErrorCode.Get()
	}
	if o.Reason.IsSet() {
		toSerialize["reason"] = o.Reason.Get()
	}
	if o.RecommendedAction.IsSet() {
		toSerialize["recommendedAction"] = o.RecommendedAction.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphProvisioningErrorInfo struct {
	value *MicrosoftGraphProvisioningErrorInfo
	isSet bool
}

func (v NullableMicrosoftGraphProvisioningErrorInfo) Get() *MicrosoftGraphProvisioningErrorInfo {
	return v.value
}

func (v *NullableMicrosoftGraphProvisioningErrorInfo) Set(val *MicrosoftGraphProvisioningErrorInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphProvisioningErrorInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphProvisioningErrorInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphProvisioningErrorInfo(val *MicrosoftGraphProvisioningErrorInfo) *NullableMicrosoftGraphProvisioningErrorInfo {
	return &NullableMicrosoftGraphProvisioningErrorInfo{value: val, isSet: true}
}

func (v NullableMicrosoftGraphProvisioningErrorInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphProvisioningErrorInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


