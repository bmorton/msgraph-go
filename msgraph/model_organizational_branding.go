/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OrganizationalBranding struct for OrganizationalBranding
type OrganizationalBranding struct {
	// Add different branding based on a locale.
	Localizations *[]MicrosoftGraphOrganizationalBrandingLocalization `json:"localizations,omitempty"`
}

// NewOrganizationalBranding instantiates a new OrganizationalBranding object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationalBranding() *OrganizationalBranding {
	this := OrganizationalBranding{}
	return &this
}

// NewOrganizationalBrandingWithDefaults instantiates a new OrganizationalBranding object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationalBrandingWithDefaults() *OrganizationalBranding {
	this := OrganizationalBranding{}
	return &this
}

// GetLocalizations returns the Localizations field value if set, zero value otherwise.
func (o *OrganizationalBranding) GetLocalizations() []MicrosoftGraphOrganizationalBrandingLocalization {
	if o == nil || o.Localizations == nil {
		var ret []MicrosoftGraphOrganizationalBrandingLocalization
		return ret
	}
	return *o.Localizations
}

// GetLocalizationsOk returns a tuple with the Localizations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationalBranding) GetLocalizationsOk() (*[]MicrosoftGraphOrganizationalBrandingLocalization, bool) {
	if o == nil || o.Localizations == nil {
		return nil, false
	}
	return o.Localizations, true
}

// HasLocalizations returns a boolean if a field has been set.
func (o *OrganizationalBranding) HasLocalizations() bool {
	if o != nil && o.Localizations != nil {
		return true
	}

	return false
}

// SetLocalizations gets a reference to the given []MicrosoftGraphOrganizationalBrandingLocalization and assigns it to the Localizations field.
func (o *OrganizationalBranding) SetLocalizations(v []MicrosoftGraphOrganizationalBrandingLocalization) {
	o.Localizations = &v
}

func (o OrganizationalBranding) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Localizations != nil {
		toSerialize["localizations"] = o.Localizations
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationalBranding struct {
	value *OrganizationalBranding
	isSet bool
}

func (v NullableOrganizationalBranding) Get() *OrganizationalBranding {
	return v.value
}

func (v *NullableOrganizationalBranding) Set(val *OrganizationalBranding) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationalBranding) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationalBranding) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationalBranding(val *OrganizationalBranding) *NullableOrganizationalBranding {
	return &NullableOrganizationalBranding{value: val, isSet: true}
}

func (v NullableOrganizationalBranding) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationalBranding) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


