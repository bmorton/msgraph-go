/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject1478 struct for InlineObject1478
type InlineObject1478 struct {
	Angle AnyOfobject `json:"angle,omitempty"`
}

// NewInlineObject1478 instantiates a new InlineObject1478 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject1478() *InlineObject1478 {
	this := InlineObject1478{}
	return &this
}

// NewInlineObject1478WithDefaults instantiates a new InlineObject1478 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject1478WithDefaults() *InlineObject1478 {
	this := InlineObject1478{}
	return &this
}

// GetAngle returns the Angle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1478) GetAngle() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Angle
}

// GetAngleOk returns a tuple with the Angle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1478) GetAngleOk() (*AnyOfobject, bool) {
	if o == nil || o.Angle == nil {
		return nil, false
	}
	return &o.Angle, true
}

// HasAngle returns a boolean if a field has been set.
func (o *InlineObject1478) HasAngle() bool {
	if o != nil && o.Angle != nil {
		return true
	}

	return false
}

// SetAngle gets a reference to the given AnyOfobject and assigns it to the Angle field.
func (o *InlineObject1478) SetAngle(v AnyOfobject) {
	o.Angle = v
}

func (o InlineObject1478) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Angle != nil {
		toSerialize["angle"] = o.Angle
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject1478 struct {
	value *InlineObject1478
	isSet bool
}

func (v NullableInlineObject1478) Get() *InlineObject1478 {
	return v.value
}

func (v *NullableInlineObject1478) Set(val *InlineObject1478) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject1478) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject1478) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject1478(val *InlineObject1478) *NullableInlineObject1478 {
	return &NullableInlineObject1478{value: val, isSet: true}
}

func (v NullableInlineObject1478) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject1478) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


