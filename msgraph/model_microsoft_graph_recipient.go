/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphRecipient struct for MicrosoftGraphRecipient
type MicrosoftGraphRecipient struct {
	// The recipient's email address.
	EmailAddress AnyOfmicrosoftGraphEmailAddress `json:"emailAddress,omitempty"`
}

// NewMicrosoftGraphRecipient instantiates a new MicrosoftGraphRecipient object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphRecipient() *MicrosoftGraphRecipient {
	this := MicrosoftGraphRecipient{}
	return &this
}

// NewMicrosoftGraphRecipientWithDefaults instantiates a new MicrosoftGraphRecipient object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphRecipientWithDefaults() *MicrosoftGraphRecipient {
	this := MicrosoftGraphRecipient{}
	return &this
}

// GetEmailAddress returns the EmailAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRecipient) GetEmailAddress() AnyOfmicrosoftGraphEmailAddress {
	if o == nil  {
		var ret AnyOfmicrosoftGraphEmailAddress
		return ret
	}
	return o.EmailAddress
}

// GetEmailAddressOk returns a tuple with the EmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRecipient) GetEmailAddressOk() (*AnyOfmicrosoftGraphEmailAddress, bool) {
	if o == nil || o.EmailAddress == nil {
		return nil, false
	}
	return &o.EmailAddress, true
}

// HasEmailAddress returns a boolean if a field has been set.
func (o *MicrosoftGraphRecipient) HasEmailAddress() bool {
	if o != nil && o.EmailAddress != nil {
		return true
	}

	return false
}

// SetEmailAddress gets a reference to the given AnyOfmicrosoftGraphEmailAddress and assigns it to the EmailAddress field.
func (o *MicrosoftGraphRecipient) SetEmailAddress(v AnyOfmicrosoftGraphEmailAddress) {
	o.EmailAddress = v
}

func (o MicrosoftGraphRecipient) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EmailAddress != nil {
		toSerialize["emailAddress"] = o.EmailAddress
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphRecipient struct {
	value *MicrosoftGraphRecipient
	isSet bool
}

func (v NullableMicrosoftGraphRecipient) Get() *MicrosoftGraphRecipient {
	return v.value
}

func (v *NullableMicrosoftGraphRecipient) Set(val *MicrosoftGraphRecipient) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphRecipient) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphRecipient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphRecipient(val *MicrosoftGraphRecipient) *NullableMicrosoftGraphRecipient {
	return &NullableMicrosoftGraphRecipient{value: val, isSet: true}
}

func (v NullableMicrosoftGraphRecipient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphRecipient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


