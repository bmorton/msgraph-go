/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// Participant struct for Participant
type Participant struct {
	Info *MicrosoftGraphParticipantInfo `json:"info,omitempty"`
	// true if the participant is in lobby.
	IsInLobby *bool `json:"isInLobby,omitempty"`
	// true if the participant is muted (client or server muted).
	IsMuted *bool `json:"isMuted,omitempty"`
	// The list of media streams.
	MediaStreams *[]*AnyOfmicrosoftGraphMediaStream `json:"mediaStreams,omitempty"`
	// A blob of data provided by the participant in the roster.
	Metadata NullableString `json:"metadata,omitempty"`
	// Information about whether the participant has recording capability.
	RecordingInfo AnyOfmicrosoftGraphRecordingInfo `json:"recordingInfo,omitempty"`
}

// NewParticipant instantiates a new Participant object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParticipant() *Participant {
	this := Participant{}
	return &this
}

// NewParticipantWithDefaults instantiates a new Participant object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParticipantWithDefaults() *Participant {
	this := Participant{}
	return &this
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *Participant) GetInfo() MicrosoftGraphParticipantInfo {
	if o == nil || o.Info == nil {
		var ret MicrosoftGraphParticipantInfo
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Participant) GetInfoOk() (*MicrosoftGraphParticipantInfo, bool) {
	if o == nil || o.Info == nil {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *Participant) HasInfo() bool {
	if o != nil && o.Info != nil {
		return true
	}

	return false
}

// SetInfo gets a reference to the given MicrosoftGraphParticipantInfo and assigns it to the Info field.
func (o *Participant) SetInfo(v MicrosoftGraphParticipantInfo) {
	o.Info = &v
}

// GetIsInLobby returns the IsInLobby field value if set, zero value otherwise.
func (o *Participant) GetIsInLobby() bool {
	if o == nil || o.IsInLobby == nil {
		var ret bool
		return ret
	}
	return *o.IsInLobby
}

// GetIsInLobbyOk returns a tuple with the IsInLobby field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Participant) GetIsInLobbyOk() (*bool, bool) {
	if o == nil || o.IsInLobby == nil {
		return nil, false
	}
	return o.IsInLobby, true
}

// HasIsInLobby returns a boolean if a field has been set.
func (o *Participant) HasIsInLobby() bool {
	if o != nil && o.IsInLobby != nil {
		return true
	}

	return false
}

// SetIsInLobby gets a reference to the given bool and assigns it to the IsInLobby field.
func (o *Participant) SetIsInLobby(v bool) {
	o.IsInLobby = &v
}

// GetIsMuted returns the IsMuted field value if set, zero value otherwise.
func (o *Participant) GetIsMuted() bool {
	if o == nil || o.IsMuted == nil {
		var ret bool
		return ret
	}
	return *o.IsMuted
}

// GetIsMutedOk returns a tuple with the IsMuted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Participant) GetIsMutedOk() (*bool, bool) {
	if o == nil || o.IsMuted == nil {
		return nil, false
	}
	return o.IsMuted, true
}

// HasIsMuted returns a boolean if a field has been set.
func (o *Participant) HasIsMuted() bool {
	if o != nil && o.IsMuted != nil {
		return true
	}

	return false
}

// SetIsMuted gets a reference to the given bool and assigns it to the IsMuted field.
func (o *Participant) SetIsMuted(v bool) {
	o.IsMuted = &v
}

// GetMediaStreams returns the MediaStreams field value if set, zero value otherwise.
func (o *Participant) GetMediaStreams() []*AnyOfmicrosoftGraphMediaStream {
	if o == nil || o.MediaStreams == nil {
		var ret []*AnyOfmicrosoftGraphMediaStream
		return ret
	}
	return *o.MediaStreams
}

// GetMediaStreamsOk returns a tuple with the MediaStreams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Participant) GetMediaStreamsOk() (*[]*AnyOfmicrosoftGraphMediaStream, bool) {
	if o == nil || o.MediaStreams == nil {
		return nil, false
	}
	return o.MediaStreams, true
}

// HasMediaStreams returns a boolean if a field has been set.
func (o *Participant) HasMediaStreams() bool {
	if o != nil && o.MediaStreams != nil {
		return true
	}

	return false
}

// SetMediaStreams gets a reference to the given []*AnyOfmicrosoftGraphMediaStream and assigns it to the MediaStreams field.
func (o *Participant) SetMediaStreams(v []*AnyOfmicrosoftGraphMediaStream) {
	o.MediaStreams = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Participant) GetMetadata() string {
	if o == nil || o.Metadata.Get() == nil {
		var ret string
		return ret
	}
	return *o.Metadata.Get()
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Participant) GetMetadataOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Metadata.Get(), o.Metadata.IsSet()
}

// HasMetadata returns a boolean if a field has been set.
func (o *Participant) HasMetadata() bool {
	if o != nil && o.Metadata.IsSet() {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given NullableString and assigns it to the Metadata field.
func (o *Participant) SetMetadata(v string) {
	o.Metadata.Set(&v)
}
// SetMetadataNil sets the value for Metadata to be an explicit nil
func (o *Participant) SetMetadataNil() {
	o.Metadata.Set(nil)
}

// UnsetMetadata ensures that no value is present for Metadata, not even an explicit nil
func (o *Participant) UnsetMetadata() {
	o.Metadata.Unset()
}

// GetRecordingInfo returns the RecordingInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Participant) GetRecordingInfo() AnyOfmicrosoftGraphRecordingInfo {
	if o == nil  {
		var ret AnyOfmicrosoftGraphRecordingInfo
		return ret
	}
	return o.RecordingInfo
}

// GetRecordingInfoOk returns a tuple with the RecordingInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Participant) GetRecordingInfoOk() (*AnyOfmicrosoftGraphRecordingInfo, bool) {
	if o == nil || o.RecordingInfo == nil {
		return nil, false
	}
	return &o.RecordingInfo, true
}

// HasRecordingInfo returns a boolean if a field has been set.
func (o *Participant) HasRecordingInfo() bool {
	if o != nil && o.RecordingInfo != nil {
		return true
	}

	return false
}

// SetRecordingInfo gets a reference to the given AnyOfmicrosoftGraphRecordingInfo and assigns it to the RecordingInfo field.
func (o *Participant) SetRecordingInfo(v AnyOfmicrosoftGraphRecordingInfo) {
	o.RecordingInfo = v
}

func (o Participant) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Info != nil {
		toSerialize["info"] = o.Info
	}
	if o.IsInLobby != nil {
		toSerialize["isInLobby"] = o.IsInLobby
	}
	if o.IsMuted != nil {
		toSerialize["isMuted"] = o.IsMuted
	}
	if o.MediaStreams != nil {
		toSerialize["mediaStreams"] = o.MediaStreams
	}
	if o.Metadata.IsSet() {
		toSerialize["metadata"] = o.Metadata.Get()
	}
	if o.RecordingInfo != nil {
		toSerialize["recordingInfo"] = o.RecordingInfo
	}
	return json.Marshal(toSerialize)
}

type NullableParticipant struct {
	value *Participant
	isSet bool
}

func (v NullableParticipant) Get() *Participant {
	return v.value
}

func (v *NullableParticipant) Set(val *Participant) {
	v.value = val
	v.isSet = true
}

func (v NullableParticipant) IsSet() bool {
	return v.isSet
}

func (v *NullableParticipant) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParticipant(val *Participant) *NullableParticipant {
	return &NullableParticipant{value: val, isSet: true}
}

func (v NullableParticipant) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParticipant) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


