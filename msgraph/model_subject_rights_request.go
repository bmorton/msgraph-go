/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"time"
)

// SubjectRightsRequest struct for SubjectRightsRequest
type SubjectRightsRequest struct {
	// Identity that the request is assigned to.
	AssignedTo AnyOfmicrosoftGraphIdentity `json:"assignedTo,omitempty"`
	// The date and time when the request was closed. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
	ClosedDateTime NullableTime `json:"closedDateTime,omitempty"`
	// Identity information for the entity that created the request.
	CreatedBy AnyOfmicrosoftGraphIdentitySet `json:"createdBy,omitempty"`
	// The date and time when the request was created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
	CreatedDateTime NullableTime `json:"createdDateTime,omitempty"`
	// Information about the data subject.
	DataSubject AnyOfmicrosoftGraphDataSubject `json:"dataSubject,omitempty"`
	// The type of the data subject. Possible values are: customer, currentEmployee, formerEmployee, prospectiveEmployee, student, teacher, faculty, other, unknownFutureValue.
	DataSubjectType AnyOfmicrosoftGraphDataSubjectType `json:"dataSubjectType,omitempty"`
	// Description for the request.
	Description NullableString `json:"description,omitempty"`
	// The name of the request.
	DisplayName NullableString `json:"displayName,omitempty"`
	// Collection of history change events.
	History *[]*AnyOfmicrosoftGraphSubjectRightsRequestHistory `json:"history,omitempty"`
	// Insight about the request.
	Insight AnyOfmicrosoftGraphSubjectRightsRequestDetail `json:"insight,omitempty"`
	// The date and time when the request is internally due. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
	InternalDueDateTime NullableTime `json:"internalDueDateTime,omitempty"`
	// Identity information for the entity that last modified the request.
	LastModifiedBy AnyOfmicrosoftGraphIdentitySet `json:"lastModifiedBy,omitempty"`
	// The date and time when the request was last modified. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
	LastModifiedDateTime NullableTime `json:"lastModifiedDateTime,omitempty"`
	// List of regulations that this request will fulfill.
	Regulations *[]*string `json:"regulations,omitempty"`
	// Information about the different stages for the request.
	Stages *[]*AnyOfmicrosoftGraphSubjectRightsRequestStageDetail `json:"stages,omitempty"`
	// The status of the request.. Possible values are: active, closed, unknownFutureValue.
	Status AnyOfmicrosoftGraphSubjectRightsRequestStatus `json:"status,omitempty"`
	// The type of the request. Possible values are: export, delete, access, tagForAction, unknownFutureValue.
	Type AnyOfmicrosoftGraphSubjectRightsRequestType `json:"type,omitempty"`
	// List of notes associcated with the request.
	Notes *[]MicrosoftGraphAuthoredNote `json:"notes,omitempty"`
	// Information about the Microsoft Teams team that was created for the request.
	Team AnyOfmicrosoftGraphTeam `json:"team,omitempty"`
}

// NewSubjectRightsRequest instantiates a new SubjectRightsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubjectRightsRequest() *SubjectRightsRequest {
	this := SubjectRightsRequest{}
	return &this
}

// NewSubjectRightsRequestWithDefaults instantiates a new SubjectRightsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubjectRightsRequestWithDefaults() *SubjectRightsRequest {
	this := SubjectRightsRequest{}
	return &this
}

// GetAssignedTo returns the AssignedTo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubjectRightsRequest) GetAssignedTo() AnyOfmicrosoftGraphIdentity {
	if o == nil  {
		var ret AnyOfmicrosoftGraphIdentity
		return ret
	}
	return o.AssignedTo
}

// GetAssignedToOk returns a tuple with the AssignedTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubjectRightsRequest) GetAssignedToOk() (*AnyOfmicrosoftGraphIdentity, bool) {
	if o == nil || o.AssignedTo == nil {
		return nil, false
	}
	return &o.AssignedTo, true
}

// HasAssignedTo returns a boolean if a field has been set.
func (o *SubjectRightsRequest) HasAssignedTo() bool {
	if o != nil && o.AssignedTo != nil {
		return true
	}

	return false
}

// SetAssignedTo gets a reference to the given AnyOfmicrosoftGraphIdentity and assigns it to the AssignedTo field.
func (o *SubjectRightsRequest) SetAssignedTo(v AnyOfmicrosoftGraphIdentity) {
	o.AssignedTo = v
}

// GetClosedDateTime returns the ClosedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubjectRightsRequest) GetClosedDateTime() time.Time {
	if o == nil || o.ClosedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.ClosedDateTime.Get()
}

// GetClosedDateTimeOk returns a tuple with the ClosedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubjectRightsRequest) GetClosedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClosedDateTime.Get(), o.ClosedDateTime.IsSet()
}

// HasClosedDateTime returns a boolean if a field has been set.
func (o *SubjectRightsRequest) HasClosedDateTime() bool {
	if o != nil && o.ClosedDateTime.IsSet() {
		return true
	}

	return false
}

// SetClosedDateTime gets a reference to the given NullableTime and assigns it to the ClosedDateTime field.
func (o *SubjectRightsRequest) SetClosedDateTime(v time.Time) {
	o.ClosedDateTime.Set(&v)
}
// SetClosedDateTimeNil sets the value for ClosedDateTime to be an explicit nil
func (o *SubjectRightsRequest) SetClosedDateTimeNil() {
	o.ClosedDateTime.Set(nil)
}

// UnsetClosedDateTime ensures that no value is present for ClosedDateTime, not even an explicit nil
func (o *SubjectRightsRequest) UnsetClosedDateTime() {
	o.ClosedDateTime.Unset()
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubjectRightsRequest) GetCreatedBy() AnyOfmicrosoftGraphIdentitySet {
	if o == nil  {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret
	}
	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubjectRightsRequest) GetCreatedByOk() (*AnyOfmicrosoftGraphIdentitySet, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *SubjectRightsRequest) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given AnyOfmicrosoftGraphIdentitySet and assigns it to the CreatedBy field.
func (o *SubjectRightsRequest) SetCreatedBy(v AnyOfmicrosoftGraphIdentitySet) {
	o.CreatedBy = v
}

// GetCreatedDateTime returns the CreatedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubjectRightsRequest) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime.Get()
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubjectRightsRequest) GetCreatedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatedDateTime.Get(), o.CreatedDateTime.IsSet()
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *SubjectRightsRequest) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime.IsSet() {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given NullableTime and assigns it to the CreatedDateTime field.
func (o *SubjectRightsRequest) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime.Set(&v)
}
// SetCreatedDateTimeNil sets the value for CreatedDateTime to be an explicit nil
func (o *SubjectRightsRequest) SetCreatedDateTimeNil() {
	o.CreatedDateTime.Set(nil)
}

// UnsetCreatedDateTime ensures that no value is present for CreatedDateTime, not even an explicit nil
func (o *SubjectRightsRequest) UnsetCreatedDateTime() {
	o.CreatedDateTime.Unset()
}

// GetDataSubject returns the DataSubject field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubjectRightsRequest) GetDataSubject() AnyOfmicrosoftGraphDataSubject {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDataSubject
		return ret
	}
	return o.DataSubject
}

// GetDataSubjectOk returns a tuple with the DataSubject field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubjectRightsRequest) GetDataSubjectOk() (*AnyOfmicrosoftGraphDataSubject, bool) {
	if o == nil || o.DataSubject == nil {
		return nil, false
	}
	return &o.DataSubject, true
}

// HasDataSubject returns a boolean if a field has been set.
func (o *SubjectRightsRequest) HasDataSubject() bool {
	if o != nil && o.DataSubject != nil {
		return true
	}

	return false
}

// SetDataSubject gets a reference to the given AnyOfmicrosoftGraphDataSubject and assigns it to the DataSubject field.
func (o *SubjectRightsRequest) SetDataSubject(v AnyOfmicrosoftGraphDataSubject) {
	o.DataSubject = v
}

// GetDataSubjectType returns the DataSubjectType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubjectRightsRequest) GetDataSubjectType() AnyOfmicrosoftGraphDataSubjectType {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDataSubjectType
		return ret
	}
	return o.DataSubjectType
}

// GetDataSubjectTypeOk returns a tuple with the DataSubjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubjectRightsRequest) GetDataSubjectTypeOk() (*AnyOfmicrosoftGraphDataSubjectType, bool) {
	if o == nil || o.DataSubjectType == nil {
		return nil, false
	}
	return &o.DataSubjectType, true
}

// HasDataSubjectType returns a boolean if a field has been set.
func (o *SubjectRightsRequest) HasDataSubjectType() bool {
	if o != nil && o.DataSubjectType != nil {
		return true
	}

	return false
}

// SetDataSubjectType gets a reference to the given AnyOfmicrosoftGraphDataSubjectType and assigns it to the DataSubjectType field.
func (o *SubjectRightsRequest) SetDataSubjectType(v AnyOfmicrosoftGraphDataSubjectType) {
	o.DataSubjectType = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubjectRightsRequest) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubjectRightsRequest) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *SubjectRightsRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *SubjectRightsRequest) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *SubjectRightsRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *SubjectRightsRequest) UnsetDescription() {
	o.Description.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubjectRightsRequest) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubjectRightsRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *SubjectRightsRequest) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *SubjectRightsRequest) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *SubjectRightsRequest) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *SubjectRightsRequest) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetHistory returns the History field value if set, zero value otherwise.
func (o *SubjectRightsRequest) GetHistory() []*AnyOfmicrosoftGraphSubjectRightsRequestHistory {
	if o == nil || o.History == nil {
		var ret []*AnyOfmicrosoftGraphSubjectRightsRequestHistory
		return ret
	}
	return *o.History
}

// GetHistoryOk returns a tuple with the History field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubjectRightsRequest) GetHistoryOk() (*[]*AnyOfmicrosoftGraphSubjectRightsRequestHistory, bool) {
	if o == nil || o.History == nil {
		return nil, false
	}
	return o.History, true
}

// HasHistory returns a boolean if a field has been set.
func (o *SubjectRightsRequest) HasHistory() bool {
	if o != nil && o.History != nil {
		return true
	}

	return false
}

// SetHistory gets a reference to the given []*AnyOfmicrosoftGraphSubjectRightsRequestHistory and assigns it to the History field.
func (o *SubjectRightsRequest) SetHistory(v []*AnyOfmicrosoftGraphSubjectRightsRequestHistory) {
	o.History = &v
}

// GetInsight returns the Insight field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubjectRightsRequest) GetInsight() AnyOfmicrosoftGraphSubjectRightsRequestDetail {
	if o == nil  {
		var ret AnyOfmicrosoftGraphSubjectRightsRequestDetail
		return ret
	}
	return o.Insight
}

// GetInsightOk returns a tuple with the Insight field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubjectRightsRequest) GetInsightOk() (*AnyOfmicrosoftGraphSubjectRightsRequestDetail, bool) {
	if o == nil || o.Insight == nil {
		return nil, false
	}
	return &o.Insight, true
}

// HasInsight returns a boolean if a field has been set.
func (o *SubjectRightsRequest) HasInsight() bool {
	if o != nil && o.Insight != nil {
		return true
	}

	return false
}

// SetInsight gets a reference to the given AnyOfmicrosoftGraphSubjectRightsRequestDetail and assigns it to the Insight field.
func (o *SubjectRightsRequest) SetInsight(v AnyOfmicrosoftGraphSubjectRightsRequestDetail) {
	o.Insight = v
}

// GetInternalDueDateTime returns the InternalDueDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubjectRightsRequest) GetInternalDueDateTime() time.Time {
	if o == nil || o.InternalDueDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.InternalDueDateTime.Get()
}

// GetInternalDueDateTimeOk returns a tuple with the InternalDueDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubjectRightsRequest) GetInternalDueDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InternalDueDateTime.Get(), o.InternalDueDateTime.IsSet()
}

// HasInternalDueDateTime returns a boolean if a field has been set.
func (o *SubjectRightsRequest) HasInternalDueDateTime() bool {
	if o != nil && o.InternalDueDateTime.IsSet() {
		return true
	}

	return false
}

// SetInternalDueDateTime gets a reference to the given NullableTime and assigns it to the InternalDueDateTime field.
func (o *SubjectRightsRequest) SetInternalDueDateTime(v time.Time) {
	o.InternalDueDateTime.Set(&v)
}
// SetInternalDueDateTimeNil sets the value for InternalDueDateTime to be an explicit nil
func (o *SubjectRightsRequest) SetInternalDueDateTimeNil() {
	o.InternalDueDateTime.Set(nil)
}

// UnsetInternalDueDateTime ensures that no value is present for InternalDueDateTime, not even an explicit nil
func (o *SubjectRightsRequest) UnsetInternalDueDateTime() {
	o.InternalDueDateTime.Unset()
}

// GetLastModifiedBy returns the LastModifiedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubjectRightsRequest) GetLastModifiedBy() AnyOfmicrosoftGraphIdentitySet {
	if o == nil  {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret
	}
	return o.LastModifiedBy
}

// GetLastModifiedByOk returns a tuple with the LastModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubjectRightsRequest) GetLastModifiedByOk() (*AnyOfmicrosoftGraphIdentitySet, bool) {
	if o == nil || o.LastModifiedBy == nil {
		return nil, false
	}
	return &o.LastModifiedBy, true
}

// HasLastModifiedBy returns a boolean if a field has been set.
func (o *SubjectRightsRequest) HasLastModifiedBy() bool {
	if o != nil && o.LastModifiedBy != nil {
		return true
	}

	return false
}

// SetLastModifiedBy gets a reference to the given AnyOfmicrosoftGraphIdentitySet and assigns it to the LastModifiedBy field.
func (o *SubjectRightsRequest) SetLastModifiedBy(v AnyOfmicrosoftGraphIdentitySet) {
	o.LastModifiedBy = v
}

// GetLastModifiedDateTime returns the LastModifiedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubjectRightsRequest) GetLastModifiedDateTime() time.Time {
	if o == nil || o.LastModifiedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDateTime.Get()
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubjectRightsRequest) GetLastModifiedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastModifiedDateTime.Get(), o.LastModifiedDateTime.IsSet()
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *SubjectRightsRequest) HasLastModifiedDateTime() bool {
	if o != nil && o.LastModifiedDateTime.IsSet() {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given NullableTime and assigns it to the LastModifiedDateTime field.
func (o *SubjectRightsRequest) SetLastModifiedDateTime(v time.Time) {
	o.LastModifiedDateTime.Set(&v)
}
// SetLastModifiedDateTimeNil sets the value for LastModifiedDateTime to be an explicit nil
func (o *SubjectRightsRequest) SetLastModifiedDateTimeNil() {
	o.LastModifiedDateTime.Set(nil)
}

// UnsetLastModifiedDateTime ensures that no value is present for LastModifiedDateTime, not even an explicit nil
func (o *SubjectRightsRequest) UnsetLastModifiedDateTime() {
	o.LastModifiedDateTime.Unset()
}

// GetRegulations returns the Regulations field value if set, zero value otherwise.
func (o *SubjectRightsRequest) GetRegulations() []*string {
	if o == nil || o.Regulations == nil {
		var ret []*string
		return ret
	}
	return *o.Regulations
}

// GetRegulationsOk returns a tuple with the Regulations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubjectRightsRequest) GetRegulationsOk() (*[]*string, bool) {
	if o == nil || o.Regulations == nil {
		return nil, false
	}
	return o.Regulations, true
}

// HasRegulations returns a boolean if a field has been set.
func (o *SubjectRightsRequest) HasRegulations() bool {
	if o != nil && o.Regulations != nil {
		return true
	}

	return false
}

// SetRegulations gets a reference to the given []*string and assigns it to the Regulations field.
func (o *SubjectRightsRequest) SetRegulations(v []*string) {
	o.Regulations = &v
}

// GetStages returns the Stages field value if set, zero value otherwise.
func (o *SubjectRightsRequest) GetStages() []*AnyOfmicrosoftGraphSubjectRightsRequestStageDetail {
	if o == nil || o.Stages == nil {
		var ret []*AnyOfmicrosoftGraphSubjectRightsRequestStageDetail
		return ret
	}
	return *o.Stages
}

// GetStagesOk returns a tuple with the Stages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubjectRightsRequest) GetStagesOk() (*[]*AnyOfmicrosoftGraphSubjectRightsRequestStageDetail, bool) {
	if o == nil || o.Stages == nil {
		return nil, false
	}
	return o.Stages, true
}

// HasStages returns a boolean if a field has been set.
func (o *SubjectRightsRequest) HasStages() bool {
	if o != nil && o.Stages != nil {
		return true
	}

	return false
}

// SetStages gets a reference to the given []*AnyOfmicrosoftGraphSubjectRightsRequestStageDetail and assigns it to the Stages field.
func (o *SubjectRightsRequest) SetStages(v []*AnyOfmicrosoftGraphSubjectRightsRequestStageDetail) {
	o.Stages = &v
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubjectRightsRequest) GetStatus() AnyOfmicrosoftGraphSubjectRightsRequestStatus {
	if o == nil  {
		var ret AnyOfmicrosoftGraphSubjectRightsRequestStatus
		return ret
	}
	return o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubjectRightsRequest) GetStatusOk() (*AnyOfmicrosoftGraphSubjectRightsRequestStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return &o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SubjectRightsRequest) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given AnyOfmicrosoftGraphSubjectRightsRequestStatus and assigns it to the Status field.
func (o *SubjectRightsRequest) SetStatus(v AnyOfmicrosoftGraphSubjectRightsRequestStatus) {
	o.Status = v
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubjectRightsRequest) GetType() AnyOfmicrosoftGraphSubjectRightsRequestType {
	if o == nil  {
		var ret AnyOfmicrosoftGraphSubjectRightsRequestType
		return ret
	}
	return o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubjectRightsRequest) GetTypeOk() (*AnyOfmicrosoftGraphSubjectRightsRequestType, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return &o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SubjectRightsRequest) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given AnyOfmicrosoftGraphSubjectRightsRequestType and assigns it to the Type field.
func (o *SubjectRightsRequest) SetType(v AnyOfmicrosoftGraphSubjectRightsRequestType) {
	o.Type = v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *SubjectRightsRequest) GetNotes() []MicrosoftGraphAuthoredNote {
	if o == nil || o.Notes == nil {
		var ret []MicrosoftGraphAuthoredNote
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubjectRightsRequest) GetNotesOk() (*[]MicrosoftGraphAuthoredNote, bool) {
	if o == nil || o.Notes == nil {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *SubjectRightsRequest) HasNotes() bool {
	if o != nil && o.Notes != nil {
		return true
	}

	return false
}

// SetNotes gets a reference to the given []MicrosoftGraphAuthoredNote and assigns it to the Notes field.
func (o *SubjectRightsRequest) SetNotes(v []MicrosoftGraphAuthoredNote) {
	o.Notes = &v
}

// GetTeam returns the Team field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubjectRightsRequest) GetTeam() AnyOfmicrosoftGraphTeam {
	if o == nil  {
		var ret AnyOfmicrosoftGraphTeam
		return ret
	}
	return o.Team
}

// GetTeamOk returns a tuple with the Team field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubjectRightsRequest) GetTeamOk() (*AnyOfmicrosoftGraphTeam, bool) {
	if o == nil || o.Team == nil {
		return nil, false
	}
	return &o.Team, true
}

// HasTeam returns a boolean if a field has been set.
func (o *SubjectRightsRequest) HasTeam() bool {
	if o != nil && o.Team != nil {
		return true
	}

	return false
}

// SetTeam gets a reference to the given AnyOfmicrosoftGraphTeam and assigns it to the Team field.
func (o *SubjectRightsRequest) SetTeam(v AnyOfmicrosoftGraphTeam) {
	o.Team = v
}

func (o SubjectRightsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AssignedTo != nil {
		toSerialize["assignedTo"] = o.AssignedTo
	}
	if o.ClosedDateTime.IsSet() {
		toSerialize["closedDateTime"] = o.ClosedDateTime.Get()
	}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.CreatedDateTime.IsSet() {
		toSerialize["createdDateTime"] = o.CreatedDateTime.Get()
	}
	if o.DataSubject != nil {
		toSerialize["dataSubject"] = o.DataSubject
	}
	if o.DataSubjectType != nil {
		toSerialize["dataSubjectType"] = o.DataSubjectType
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.History != nil {
		toSerialize["history"] = o.History
	}
	if o.Insight != nil {
		toSerialize["insight"] = o.Insight
	}
	if o.InternalDueDateTime.IsSet() {
		toSerialize["internalDueDateTime"] = o.InternalDueDateTime.Get()
	}
	if o.LastModifiedBy != nil {
		toSerialize["lastModifiedBy"] = o.LastModifiedBy
	}
	if o.LastModifiedDateTime.IsSet() {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime.Get()
	}
	if o.Regulations != nil {
		toSerialize["regulations"] = o.Regulations
	}
	if o.Stages != nil {
		toSerialize["stages"] = o.Stages
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Notes != nil {
		toSerialize["notes"] = o.Notes
	}
	if o.Team != nil {
		toSerialize["team"] = o.Team
	}
	return json.Marshal(toSerialize)
}

type NullableSubjectRightsRequest struct {
	value *SubjectRightsRequest
	isSet bool
}

func (v NullableSubjectRightsRequest) Get() *SubjectRightsRequest {
	return v.value
}

func (v *NullableSubjectRightsRequest) Set(val *SubjectRightsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSubjectRightsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSubjectRightsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubjectRightsRequest(val *SubjectRightsRequest) *NullableSubjectRightsRequest {
	return &NullableSubjectRightsRequest{value: val, isSet: true}
}

func (v NullableSubjectRightsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubjectRightsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


