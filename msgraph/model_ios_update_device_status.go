/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// IosUpdateDeviceStatus struct for IosUpdateDeviceStatus
type IosUpdateDeviceStatus struct {
	// The DateTime when device compliance grace period expires
	ComplianceGracePeriodExpirationDateTime *time.Time `json:"complianceGracePeriodExpirationDateTime,omitempty"`
	// Device name of the DevicePolicyStatus.
	DeviceDisplayName NullableString `json:"deviceDisplayName,omitempty"`
	// The device id that is being reported.
	DeviceId NullableString `json:"deviceId,omitempty"`
	// The device model that is being reported
	DeviceModel NullableString `json:"deviceModel,omitempty"`
	// The installation status of the policy report. Possible values are: success, available, idle, unknown, downloading, downloadFailed, downloadRequiresComputer, downloadInsufficientSpace, downloadInsufficientPower, downloadInsufficientNetwork, installing, installInsufficientSpace, installInsufficientPower, installPhoneCallInProgress, installFailed, notSupportedOperation, sharedDeviceUserLoggedInError, deviceOsHigherThanDesiredOsVersion.
	InstallStatus AnyOfmicrosoftGraphIosUpdatesInstallStatus `json:"installStatus,omitempty"`
	// Last modified date time of the policy report.
	LastReportedDateTime *time.Time `json:"lastReportedDateTime,omitempty"`
	// The device version that is being reported.
	OsVersion NullableString `json:"osVersion,omitempty"`
	// Compliance status of the policy report. Possible values are: unknown, notApplicable, compliant, remediated, nonCompliant, error, conflict, notAssigned.
	Status AnyOfmicrosoftGraphComplianceStatus `json:"status,omitempty"`
	// The User id that is being reported.
	UserId NullableString `json:"userId,omitempty"`
	// The User Name that is being reported
	UserName NullableString `json:"userName,omitempty"`
	// UserPrincipalName.
	UserPrincipalName NullableString `json:"userPrincipalName,omitempty"`
}

// NewIosUpdateDeviceStatus instantiates a new IosUpdateDeviceStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIosUpdateDeviceStatus() *IosUpdateDeviceStatus {
	this := IosUpdateDeviceStatus{}
	return &this
}

// NewIosUpdateDeviceStatusWithDefaults instantiates a new IosUpdateDeviceStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIosUpdateDeviceStatusWithDefaults() *IosUpdateDeviceStatus {
	this := IosUpdateDeviceStatus{}
	return &this
}

// GetComplianceGracePeriodExpirationDateTime returns the ComplianceGracePeriodExpirationDateTime field value if set, zero value otherwise.
func (o *IosUpdateDeviceStatus) GetComplianceGracePeriodExpirationDateTime() time.Time {
	if o == nil || o.ComplianceGracePeriodExpirationDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.ComplianceGracePeriodExpirationDateTime
}

// GetComplianceGracePeriodExpirationDateTimeOk returns a tuple with the ComplianceGracePeriodExpirationDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IosUpdateDeviceStatus) GetComplianceGracePeriodExpirationDateTimeOk() (*time.Time, bool) {
	if o == nil || o.ComplianceGracePeriodExpirationDateTime == nil {
		return nil, false
	}
	return o.ComplianceGracePeriodExpirationDateTime, true
}

// HasComplianceGracePeriodExpirationDateTime returns a boolean if a field has been set.
func (o *IosUpdateDeviceStatus) HasComplianceGracePeriodExpirationDateTime() bool {
	if o != nil && o.ComplianceGracePeriodExpirationDateTime != nil {
		return true
	}

	return false
}

// SetComplianceGracePeriodExpirationDateTime gets a reference to the given time.Time and assigns it to the ComplianceGracePeriodExpirationDateTime field.
func (o *IosUpdateDeviceStatus) SetComplianceGracePeriodExpirationDateTime(v time.Time) {
	o.ComplianceGracePeriodExpirationDateTime = &v
}

// GetDeviceDisplayName returns the DeviceDisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IosUpdateDeviceStatus) GetDeviceDisplayName() string {
	if o == nil || o.DeviceDisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DeviceDisplayName.Get()
}

// GetDeviceDisplayNameOk returns a tuple with the DeviceDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IosUpdateDeviceStatus) GetDeviceDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DeviceDisplayName.Get(), o.DeviceDisplayName.IsSet()
}

// HasDeviceDisplayName returns a boolean if a field has been set.
func (o *IosUpdateDeviceStatus) HasDeviceDisplayName() bool {
	if o != nil && o.DeviceDisplayName.IsSet() {
		return true
	}

	return false
}

// SetDeviceDisplayName gets a reference to the given NullableString and assigns it to the DeviceDisplayName field.
func (o *IosUpdateDeviceStatus) SetDeviceDisplayName(v string) {
	o.DeviceDisplayName.Set(&v)
}
// SetDeviceDisplayNameNil sets the value for DeviceDisplayName to be an explicit nil
func (o *IosUpdateDeviceStatus) SetDeviceDisplayNameNil() {
	o.DeviceDisplayName.Set(nil)
}

// UnsetDeviceDisplayName ensures that no value is present for DeviceDisplayName, not even an explicit nil
func (o *IosUpdateDeviceStatus) UnsetDeviceDisplayName() {
	o.DeviceDisplayName.Unset()
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IosUpdateDeviceStatus) GetDeviceId() string {
	if o == nil || o.DeviceId.Get() == nil {
		var ret string
		return ret
	}
	return *o.DeviceId.Get()
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IosUpdateDeviceStatus) GetDeviceIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DeviceId.Get(), o.DeviceId.IsSet()
}

// HasDeviceId returns a boolean if a field has been set.
func (o *IosUpdateDeviceStatus) HasDeviceId() bool {
	if o != nil && o.DeviceId.IsSet() {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given NullableString and assigns it to the DeviceId field.
func (o *IosUpdateDeviceStatus) SetDeviceId(v string) {
	o.DeviceId.Set(&v)
}
// SetDeviceIdNil sets the value for DeviceId to be an explicit nil
func (o *IosUpdateDeviceStatus) SetDeviceIdNil() {
	o.DeviceId.Set(nil)
}

// UnsetDeviceId ensures that no value is present for DeviceId, not even an explicit nil
func (o *IosUpdateDeviceStatus) UnsetDeviceId() {
	o.DeviceId.Unset()
}

// GetDeviceModel returns the DeviceModel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IosUpdateDeviceStatus) GetDeviceModel() string {
	if o == nil || o.DeviceModel.Get() == nil {
		var ret string
		return ret
	}
	return *o.DeviceModel.Get()
}

// GetDeviceModelOk returns a tuple with the DeviceModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IosUpdateDeviceStatus) GetDeviceModelOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DeviceModel.Get(), o.DeviceModel.IsSet()
}

// HasDeviceModel returns a boolean if a field has been set.
func (o *IosUpdateDeviceStatus) HasDeviceModel() bool {
	if o != nil && o.DeviceModel.IsSet() {
		return true
	}

	return false
}

// SetDeviceModel gets a reference to the given NullableString and assigns it to the DeviceModel field.
func (o *IosUpdateDeviceStatus) SetDeviceModel(v string) {
	o.DeviceModel.Set(&v)
}
// SetDeviceModelNil sets the value for DeviceModel to be an explicit nil
func (o *IosUpdateDeviceStatus) SetDeviceModelNil() {
	o.DeviceModel.Set(nil)
}

// UnsetDeviceModel ensures that no value is present for DeviceModel, not even an explicit nil
func (o *IosUpdateDeviceStatus) UnsetDeviceModel() {
	o.DeviceModel.Unset()
}

// GetInstallStatus returns the InstallStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IosUpdateDeviceStatus) GetInstallStatus() AnyOfmicrosoftGraphIosUpdatesInstallStatus {
	if o == nil  {
		var ret AnyOfmicrosoftGraphIosUpdatesInstallStatus
		return ret
	}
	return o.InstallStatus
}

// GetInstallStatusOk returns a tuple with the InstallStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IosUpdateDeviceStatus) GetInstallStatusOk() (*AnyOfmicrosoftGraphIosUpdatesInstallStatus, bool) {
	if o == nil || o.InstallStatus == nil {
		return nil, false
	}
	return &o.InstallStatus, true
}

// HasInstallStatus returns a boolean if a field has been set.
func (o *IosUpdateDeviceStatus) HasInstallStatus() bool {
	if o != nil && o.InstallStatus != nil {
		return true
	}

	return false
}

// SetInstallStatus gets a reference to the given AnyOfmicrosoftGraphIosUpdatesInstallStatus and assigns it to the InstallStatus field.
func (o *IosUpdateDeviceStatus) SetInstallStatus(v AnyOfmicrosoftGraphIosUpdatesInstallStatus) {
	o.InstallStatus = v
}

// GetLastReportedDateTime returns the LastReportedDateTime field value if set, zero value otherwise.
func (o *IosUpdateDeviceStatus) GetLastReportedDateTime() time.Time {
	if o == nil || o.LastReportedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastReportedDateTime
}

// GetLastReportedDateTimeOk returns a tuple with the LastReportedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IosUpdateDeviceStatus) GetLastReportedDateTimeOk() (*time.Time, bool) {
	if o == nil || o.LastReportedDateTime == nil {
		return nil, false
	}
	return o.LastReportedDateTime, true
}

// HasLastReportedDateTime returns a boolean if a field has been set.
func (o *IosUpdateDeviceStatus) HasLastReportedDateTime() bool {
	if o != nil && o.LastReportedDateTime != nil {
		return true
	}

	return false
}

// SetLastReportedDateTime gets a reference to the given time.Time and assigns it to the LastReportedDateTime field.
func (o *IosUpdateDeviceStatus) SetLastReportedDateTime(v time.Time) {
	o.LastReportedDateTime = &v
}

// GetOsVersion returns the OsVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IosUpdateDeviceStatus) GetOsVersion() string {
	if o == nil || o.OsVersion.Get() == nil {
		var ret string
		return ret
	}
	return *o.OsVersion.Get()
}

// GetOsVersionOk returns a tuple with the OsVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IosUpdateDeviceStatus) GetOsVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OsVersion.Get(), o.OsVersion.IsSet()
}

// HasOsVersion returns a boolean if a field has been set.
func (o *IosUpdateDeviceStatus) HasOsVersion() bool {
	if o != nil && o.OsVersion.IsSet() {
		return true
	}

	return false
}

// SetOsVersion gets a reference to the given NullableString and assigns it to the OsVersion field.
func (o *IosUpdateDeviceStatus) SetOsVersion(v string) {
	o.OsVersion.Set(&v)
}
// SetOsVersionNil sets the value for OsVersion to be an explicit nil
func (o *IosUpdateDeviceStatus) SetOsVersionNil() {
	o.OsVersion.Set(nil)
}

// UnsetOsVersion ensures that no value is present for OsVersion, not even an explicit nil
func (o *IosUpdateDeviceStatus) UnsetOsVersion() {
	o.OsVersion.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IosUpdateDeviceStatus) GetStatus() AnyOfmicrosoftGraphComplianceStatus {
	if o == nil  {
		var ret AnyOfmicrosoftGraphComplianceStatus
		return ret
	}
	return o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IosUpdateDeviceStatus) GetStatusOk() (*AnyOfmicrosoftGraphComplianceStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return &o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *IosUpdateDeviceStatus) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given AnyOfmicrosoftGraphComplianceStatus and assigns it to the Status field.
func (o *IosUpdateDeviceStatus) SetStatus(v AnyOfmicrosoftGraphComplianceStatus) {
	o.Status = v
}

// GetUserId returns the UserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IosUpdateDeviceStatus) GetUserId() string {
	if o == nil || o.UserId.Get() == nil {
		var ret string
		return ret
	}
	return *o.UserId.Get()
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IosUpdateDeviceStatus) GetUserIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UserId.Get(), o.UserId.IsSet()
}

// HasUserId returns a boolean if a field has been set.
func (o *IosUpdateDeviceStatus) HasUserId() bool {
	if o != nil && o.UserId.IsSet() {
		return true
	}

	return false
}

// SetUserId gets a reference to the given NullableString and assigns it to the UserId field.
func (o *IosUpdateDeviceStatus) SetUserId(v string) {
	o.UserId.Set(&v)
}
// SetUserIdNil sets the value for UserId to be an explicit nil
func (o *IosUpdateDeviceStatus) SetUserIdNil() {
	o.UserId.Set(nil)
}

// UnsetUserId ensures that no value is present for UserId, not even an explicit nil
func (o *IosUpdateDeviceStatus) UnsetUserId() {
	o.UserId.Unset()
}

// GetUserName returns the UserName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IosUpdateDeviceStatus) GetUserName() string {
	if o == nil || o.UserName.Get() == nil {
		var ret string
		return ret
	}
	return *o.UserName.Get()
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IosUpdateDeviceStatus) GetUserNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UserName.Get(), o.UserName.IsSet()
}

// HasUserName returns a boolean if a field has been set.
func (o *IosUpdateDeviceStatus) HasUserName() bool {
	if o != nil && o.UserName.IsSet() {
		return true
	}

	return false
}

// SetUserName gets a reference to the given NullableString and assigns it to the UserName field.
func (o *IosUpdateDeviceStatus) SetUserName(v string) {
	o.UserName.Set(&v)
}
// SetUserNameNil sets the value for UserName to be an explicit nil
func (o *IosUpdateDeviceStatus) SetUserNameNil() {
	o.UserName.Set(nil)
}

// UnsetUserName ensures that no value is present for UserName, not even an explicit nil
func (o *IosUpdateDeviceStatus) UnsetUserName() {
	o.UserName.Unset()
}

// GetUserPrincipalName returns the UserPrincipalName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IosUpdateDeviceStatus) GetUserPrincipalName() string {
	if o == nil || o.UserPrincipalName.Get() == nil {
		var ret string
		return ret
	}
	return *o.UserPrincipalName.Get()
}

// GetUserPrincipalNameOk returns a tuple with the UserPrincipalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IosUpdateDeviceStatus) GetUserPrincipalNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UserPrincipalName.Get(), o.UserPrincipalName.IsSet()
}

// HasUserPrincipalName returns a boolean if a field has been set.
func (o *IosUpdateDeviceStatus) HasUserPrincipalName() bool {
	if o != nil && o.UserPrincipalName.IsSet() {
		return true
	}

	return false
}

// SetUserPrincipalName gets a reference to the given NullableString and assigns it to the UserPrincipalName field.
func (o *IosUpdateDeviceStatus) SetUserPrincipalName(v string) {
	o.UserPrincipalName.Set(&v)
}
// SetUserPrincipalNameNil sets the value for UserPrincipalName to be an explicit nil
func (o *IosUpdateDeviceStatus) SetUserPrincipalNameNil() {
	o.UserPrincipalName.Set(nil)
}

// UnsetUserPrincipalName ensures that no value is present for UserPrincipalName, not even an explicit nil
func (o *IosUpdateDeviceStatus) UnsetUserPrincipalName() {
	o.UserPrincipalName.Unset()
}

func (o IosUpdateDeviceStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ComplianceGracePeriodExpirationDateTime != nil {
		toSerialize["complianceGracePeriodExpirationDateTime"] = o.ComplianceGracePeriodExpirationDateTime
	}
	if o.DeviceDisplayName.IsSet() {
		toSerialize["deviceDisplayName"] = o.DeviceDisplayName.Get()
	}
	if o.DeviceId.IsSet() {
		toSerialize["deviceId"] = o.DeviceId.Get()
	}
	if o.DeviceModel.IsSet() {
		toSerialize["deviceModel"] = o.DeviceModel.Get()
	}
	if o.InstallStatus != nil {
		toSerialize["installStatus"] = o.InstallStatus
	}
	if o.LastReportedDateTime != nil {
		toSerialize["lastReportedDateTime"] = o.LastReportedDateTime
	}
	if o.OsVersion.IsSet() {
		toSerialize["osVersion"] = o.OsVersion.Get()
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.UserId.IsSet() {
		toSerialize["userId"] = o.UserId.Get()
	}
	if o.UserName.IsSet() {
		toSerialize["userName"] = o.UserName.Get()
	}
	if o.UserPrincipalName.IsSet() {
		toSerialize["userPrincipalName"] = o.UserPrincipalName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableIosUpdateDeviceStatus struct {
	value *IosUpdateDeviceStatus
	isSet bool
}

func (v NullableIosUpdateDeviceStatus) Get() *IosUpdateDeviceStatus {
	return v.value
}

func (v *NullableIosUpdateDeviceStatus) Set(val *IosUpdateDeviceStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableIosUpdateDeviceStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableIosUpdateDeviceStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIosUpdateDeviceStatus(val *IosUpdateDeviceStatus) *NullableIosUpdateDeviceStatus {
	return &NullableIosUpdateDeviceStatus{value: val, isSet: true}
}

func (v NullableIosUpdateDeviceStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIosUpdateDeviceStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


