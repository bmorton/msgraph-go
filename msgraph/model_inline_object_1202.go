/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// InlineObject1202 struct for InlineObject1202
type InlineObject1202 struct {
	ParentReference AnyOfmicrosoftGraphItemReference `json:"parentReference,omitempty"`
	Name NullableString `json:"name,omitempty"`
}

// NewInlineObject1202 instantiates a new InlineObject1202 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject1202() *InlineObject1202 {
	this := InlineObject1202{}
	return &this
}

// NewInlineObject1202WithDefaults instantiates a new InlineObject1202 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject1202WithDefaults() *InlineObject1202 {
	this := InlineObject1202{}
	return &this
}

// GetParentReference returns the ParentReference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1202) GetParentReference() AnyOfmicrosoftGraphItemReference {
	if o == nil  {
		var ret AnyOfmicrosoftGraphItemReference
		return ret
	}
	return o.ParentReference
}

// GetParentReferenceOk returns a tuple with the ParentReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1202) GetParentReferenceOk() (*AnyOfmicrosoftGraphItemReference, bool) {
	if o == nil || o.ParentReference == nil {
		return nil, false
	}
	return &o.ParentReference, true
}

// HasParentReference returns a boolean if a field has been set.
func (o *InlineObject1202) HasParentReference() bool {
	if o != nil && o.ParentReference != nil {
		return true
	}

	return false
}

// SetParentReference gets a reference to the given AnyOfmicrosoftGraphItemReference and assigns it to the ParentReference field.
func (o *InlineObject1202) SetParentReference(v AnyOfmicrosoftGraphItemReference) {
	o.ParentReference = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1202) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1202) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *InlineObject1202) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *InlineObject1202) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *InlineObject1202) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *InlineObject1202) UnsetName() {
	o.Name.Unset()
}

func (o InlineObject1202) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ParentReference != nil {
		toSerialize["parentReference"] = o.ParentReference
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject1202 struct {
	value *InlineObject1202
	isSet bool
}

func (v NullableInlineObject1202) Get() *InlineObject1202 {
	return v.value
}

func (v *NullableInlineObject1202) Set(val *InlineObject1202) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject1202) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject1202) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject1202(val *InlineObject1202) *NullableInlineObject1202 {
	return &NullableInlineObject1202{value: val, isSet: true}
}

func (v NullableInlineObject1202) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject1202) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


