/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphApprovalFilterByCurrentUserOptions the model 'MicrosoftGraphApprovalFilterByCurrentUserOptions'
type MicrosoftGraphApprovalFilterByCurrentUserOptions string

// List of microsoft.graph.approvalFilterByCurrentUserOptions
const (
	TARGET MicrosoftGraphApprovalFilterByCurrentUserOptions = "target"
	CREATED_BY MicrosoftGraphApprovalFilterByCurrentUserOptions = "createdBy"
	APPROVER MicrosoftGraphApprovalFilterByCurrentUserOptions = "approver"
	UNKNOWN_FUTURE_VALUE MicrosoftGraphApprovalFilterByCurrentUserOptions = "unknownFutureValue"
)

// All allowed values of MicrosoftGraphApprovalFilterByCurrentUserOptions enum
var AllowedMicrosoftGraphApprovalFilterByCurrentUserOptionsEnumValues = []MicrosoftGraphApprovalFilterByCurrentUserOptions{
	"target",
	"createdBy",
	"approver",
	"unknownFutureValue",
}

func (v *MicrosoftGraphApprovalFilterByCurrentUserOptions) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphApprovalFilterByCurrentUserOptions(value)
	for _, existing := range AllowedMicrosoftGraphApprovalFilterByCurrentUserOptionsEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphApprovalFilterByCurrentUserOptions", value)
}

// NewMicrosoftGraphApprovalFilterByCurrentUserOptionsFromValue returns a pointer to a valid MicrosoftGraphApprovalFilterByCurrentUserOptions
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphApprovalFilterByCurrentUserOptionsFromValue(v string) (*MicrosoftGraphApprovalFilterByCurrentUserOptions, error) {
	ev := MicrosoftGraphApprovalFilterByCurrentUserOptions(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphApprovalFilterByCurrentUserOptions: valid values are %v", v, AllowedMicrosoftGraphApprovalFilterByCurrentUserOptionsEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphApprovalFilterByCurrentUserOptions) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphApprovalFilterByCurrentUserOptionsEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.approvalFilterByCurrentUserOptions value
func (v MicrosoftGraphApprovalFilterByCurrentUserOptions) Ptr() *MicrosoftGraphApprovalFilterByCurrentUserOptions {
	return &v
}

type NullableMicrosoftGraphApprovalFilterByCurrentUserOptions struct {
	value *MicrosoftGraphApprovalFilterByCurrentUserOptions
	isSet bool
}

func (v NullableMicrosoftGraphApprovalFilterByCurrentUserOptions) Get() *MicrosoftGraphApprovalFilterByCurrentUserOptions {
	return v.value
}

func (v *NullableMicrosoftGraphApprovalFilterByCurrentUserOptions) Set(val *MicrosoftGraphApprovalFilterByCurrentUserOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphApprovalFilterByCurrentUserOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphApprovalFilterByCurrentUserOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphApprovalFilterByCurrentUserOptions(val *MicrosoftGraphApprovalFilterByCurrentUserOptions) *NullableMicrosoftGraphApprovalFilterByCurrentUserOptions {
	return &NullableMicrosoftGraphApprovalFilterByCurrentUserOptions{value: val, isSet: true}
}

func (v NullableMicrosoftGraphApprovalFilterByCurrentUserOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphApprovalFilterByCurrentUserOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

