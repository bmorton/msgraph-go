/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// CertificateBasedAuthConfiguration struct for CertificateBasedAuthConfiguration
type CertificateBasedAuthConfiguration struct {
	// Collection of certificate authorities which creates a trusted certificate chain.
	CertificateAuthorities *[]MicrosoftGraphCertificateAuthority `json:"certificateAuthorities,omitempty"`
}

// NewCertificateBasedAuthConfiguration instantiates a new CertificateBasedAuthConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCertificateBasedAuthConfiguration() *CertificateBasedAuthConfiguration {
	this := CertificateBasedAuthConfiguration{}
	return &this
}

// NewCertificateBasedAuthConfigurationWithDefaults instantiates a new CertificateBasedAuthConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCertificateBasedAuthConfigurationWithDefaults() *CertificateBasedAuthConfiguration {
	this := CertificateBasedAuthConfiguration{}
	return &this
}

// GetCertificateAuthorities returns the CertificateAuthorities field value if set, zero value otherwise.
func (o *CertificateBasedAuthConfiguration) GetCertificateAuthorities() []MicrosoftGraphCertificateAuthority {
	if o == nil || o.CertificateAuthorities == nil {
		var ret []MicrosoftGraphCertificateAuthority
		return ret
	}
	return *o.CertificateAuthorities
}

// GetCertificateAuthoritiesOk returns a tuple with the CertificateAuthorities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateBasedAuthConfiguration) GetCertificateAuthoritiesOk() (*[]MicrosoftGraphCertificateAuthority, bool) {
	if o == nil || o.CertificateAuthorities == nil {
		return nil, false
	}
	return o.CertificateAuthorities, true
}

// HasCertificateAuthorities returns a boolean if a field has been set.
func (o *CertificateBasedAuthConfiguration) HasCertificateAuthorities() bool {
	if o != nil && o.CertificateAuthorities != nil {
		return true
	}

	return false
}

// SetCertificateAuthorities gets a reference to the given []MicrosoftGraphCertificateAuthority and assigns it to the CertificateAuthorities field.
func (o *CertificateBasedAuthConfiguration) SetCertificateAuthorities(v []MicrosoftGraphCertificateAuthority) {
	o.CertificateAuthorities = &v
}

func (o CertificateBasedAuthConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CertificateAuthorities != nil {
		toSerialize["certificateAuthorities"] = o.CertificateAuthorities
	}
	return json.Marshal(toSerialize)
}

type NullableCertificateBasedAuthConfiguration struct {
	value *CertificateBasedAuthConfiguration
	isSet bool
}

func (v NullableCertificateBasedAuthConfiguration) Get() *CertificateBasedAuthConfiguration {
	return v.value
}

func (v *NullableCertificateBasedAuthConfiguration) Set(val *CertificateBasedAuthConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableCertificateBasedAuthConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableCertificateBasedAuthConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCertificateBasedAuthConfiguration(val *CertificateBasedAuthConfiguration) *NullableCertificateBasedAuthConfiguration {
	return &NullableCertificateBasedAuthConfiguration{value: val, isSet: true}
}

func (v NullableCertificateBasedAuthConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCertificateBasedAuthConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


