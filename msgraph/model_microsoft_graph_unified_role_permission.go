/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphUnifiedRolePermission struct for MicrosoftGraphUnifiedRolePermission
type MicrosoftGraphUnifiedRolePermission struct {
	// Set of tasks that can be performed on a resource. Required.
	AllowedResourceActions *[]string `json:"allowedResourceActions,omitempty"`
	// Optional constraints that must be met for the permission to be effective.
	Condition NullableString `json:"condition,omitempty"`
	// Set of tasks that may not be performed on a resource. Not yet supported.
	ExcludedResourceActions *[]*string `json:"excludedResourceActions,omitempty"`
}

// NewMicrosoftGraphUnifiedRolePermission instantiates a new MicrosoftGraphUnifiedRolePermission object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphUnifiedRolePermission() *MicrosoftGraphUnifiedRolePermission {
	this := MicrosoftGraphUnifiedRolePermission{}
	return &this
}

// NewMicrosoftGraphUnifiedRolePermissionWithDefaults instantiates a new MicrosoftGraphUnifiedRolePermission object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphUnifiedRolePermissionWithDefaults() *MicrosoftGraphUnifiedRolePermission {
	this := MicrosoftGraphUnifiedRolePermission{}
	return &this
}

// GetAllowedResourceActions returns the AllowedResourceActions field value if set, zero value otherwise.
func (o *MicrosoftGraphUnifiedRolePermission) GetAllowedResourceActions() []string {
	if o == nil || o.AllowedResourceActions == nil {
		var ret []string
		return ret
	}
	return *o.AllowedResourceActions
}

// GetAllowedResourceActionsOk returns a tuple with the AllowedResourceActions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphUnifiedRolePermission) GetAllowedResourceActionsOk() (*[]string, bool) {
	if o == nil || o.AllowedResourceActions == nil {
		return nil, false
	}
	return o.AllowedResourceActions, true
}

// HasAllowedResourceActions returns a boolean if a field has been set.
func (o *MicrosoftGraphUnifiedRolePermission) HasAllowedResourceActions() bool {
	if o != nil && o.AllowedResourceActions != nil {
		return true
	}

	return false
}

// SetAllowedResourceActions gets a reference to the given []string and assigns it to the AllowedResourceActions field.
func (o *MicrosoftGraphUnifiedRolePermission) SetAllowedResourceActions(v []string) {
	o.AllowedResourceActions = &v
}

// GetCondition returns the Condition field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphUnifiedRolePermission) GetCondition() string {
	if o == nil || o.Condition.Get() == nil {
		var ret string
		return ret
	}
	return *o.Condition.Get()
}

// GetConditionOk returns a tuple with the Condition field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphUnifiedRolePermission) GetConditionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Condition.Get(), o.Condition.IsSet()
}

// HasCondition returns a boolean if a field has been set.
func (o *MicrosoftGraphUnifiedRolePermission) HasCondition() bool {
	if o != nil && o.Condition.IsSet() {
		return true
	}

	return false
}

// SetCondition gets a reference to the given NullableString and assigns it to the Condition field.
func (o *MicrosoftGraphUnifiedRolePermission) SetCondition(v string) {
	o.Condition.Set(&v)
}
// SetConditionNil sets the value for Condition to be an explicit nil
func (o *MicrosoftGraphUnifiedRolePermission) SetConditionNil() {
	o.Condition.Set(nil)
}

// UnsetCondition ensures that no value is present for Condition, not even an explicit nil
func (o *MicrosoftGraphUnifiedRolePermission) UnsetCondition() {
	o.Condition.Unset()
}

// GetExcludedResourceActions returns the ExcludedResourceActions field value if set, zero value otherwise.
func (o *MicrosoftGraphUnifiedRolePermission) GetExcludedResourceActions() []*string {
	if o == nil || o.ExcludedResourceActions == nil {
		var ret []*string
		return ret
	}
	return *o.ExcludedResourceActions
}

// GetExcludedResourceActionsOk returns a tuple with the ExcludedResourceActions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphUnifiedRolePermission) GetExcludedResourceActionsOk() (*[]*string, bool) {
	if o == nil || o.ExcludedResourceActions == nil {
		return nil, false
	}
	return o.ExcludedResourceActions, true
}

// HasExcludedResourceActions returns a boolean if a field has been set.
func (o *MicrosoftGraphUnifiedRolePermission) HasExcludedResourceActions() bool {
	if o != nil && o.ExcludedResourceActions != nil {
		return true
	}

	return false
}

// SetExcludedResourceActions gets a reference to the given []*string and assigns it to the ExcludedResourceActions field.
func (o *MicrosoftGraphUnifiedRolePermission) SetExcludedResourceActions(v []*string) {
	o.ExcludedResourceActions = &v
}

func (o MicrosoftGraphUnifiedRolePermission) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowedResourceActions != nil {
		toSerialize["allowedResourceActions"] = o.AllowedResourceActions
	}
	if o.Condition.IsSet() {
		toSerialize["condition"] = o.Condition.Get()
	}
	if o.ExcludedResourceActions != nil {
		toSerialize["excludedResourceActions"] = o.ExcludedResourceActions
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphUnifiedRolePermission struct {
	value *MicrosoftGraphUnifiedRolePermission
	isSet bool
}

func (v NullableMicrosoftGraphUnifiedRolePermission) Get() *MicrosoftGraphUnifiedRolePermission {
	return v.value
}

func (v *NullableMicrosoftGraphUnifiedRolePermission) Set(val *MicrosoftGraphUnifiedRolePermission) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphUnifiedRolePermission) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphUnifiedRolePermission) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphUnifiedRolePermission(val *MicrosoftGraphUnifiedRolePermission) *NullableMicrosoftGraphUnifiedRolePermission {
	return &NullableMicrosoftGraphUnifiedRolePermission{value: val, isSet: true}
}

func (v NullableMicrosoftGraphUnifiedRolePermission) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphUnifiedRolePermission) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


