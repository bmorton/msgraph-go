/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// PrinterShare struct for PrinterShare
type PrinterShare struct {
	// If true, all users and groups will be granted access to this printer share. This supersedes the allow lists defined by the allowedUsers and allowedGroups navigation properties.
	AllowAllUsers *bool `json:"allowAllUsers,omitempty"`
	// The DateTimeOffset when the printer share was created. Read-only.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// The groups whose users have access to print using the printer.
	AllowedGroups *[]MicrosoftGraphGroup `json:"allowedGroups,omitempty"`
	// The users who have access to print using the printer.
	AllowedUsers *[]MicrosoftGraphUser `json:"allowedUsers,omitempty"`
	// The printer that this printer share is related to.
	Printer AnyOfmicrosoftGraphPrinter `json:"printer,omitempty"`
}

// NewPrinterShare instantiates a new PrinterShare object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrinterShare() *PrinterShare {
	this := PrinterShare{}
	return &this
}

// NewPrinterShareWithDefaults instantiates a new PrinterShare object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrinterShareWithDefaults() *PrinterShare {
	this := PrinterShare{}
	return &this
}

// GetAllowAllUsers returns the AllowAllUsers field value if set, zero value otherwise.
func (o *PrinterShare) GetAllowAllUsers() bool {
	if o == nil || o.AllowAllUsers == nil {
		var ret bool
		return ret
	}
	return *o.AllowAllUsers
}

// GetAllowAllUsersOk returns a tuple with the AllowAllUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrinterShare) GetAllowAllUsersOk() (*bool, bool) {
	if o == nil || o.AllowAllUsers == nil {
		return nil, false
	}
	return o.AllowAllUsers, true
}

// HasAllowAllUsers returns a boolean if a field has been set.
func (o *PrinterShare) HasAllowAllUsers() bool {
	if o != nil && o.AllowAllUsers != nil {
		return true
	}

	return false
}

// SetAllowAllUsers gets a reference to the given bool and assigns it to the AllowAllUsers field.
func (o *PrinterShare) SetAllowAllUsers(v bool) {
	o.AllowAllUsers = &v
}

// GetCreatedDateTime returns the CreatedDateTime field value if set, zero value otherwise.
func (o *PrinterShare) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrinterShare) GetCreatedDateTimeOk() (*time.Time, bool) {
	if o == nil || o.CreatedDateTime == nil {
		return nil, false
	}
	return o.CreatedDateTime, true
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *PrinterShare) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime != nil {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given time.Time and assigns it to the CreatedDateTime field.
func (o *PrinterShare) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime = &v
}

// GetAllowedGroups returns the AllowedGroups field value if set, zero value otherwise.
func (o *PrinterShare) GetAllowedGroups() []MicrosoftGraphGroup {
	if o == nil || o.AllowedGroups == nil {
		var ret []MicrosoftGraphGroup
		return ret
	}
	return *o.AllowedGroups
}

// GetAllowedGroupsOk returns a tuple with the AllowedGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrinterShare) GetAllowedGroupsOk() (*[]MicrosoftGraphGroup, bool) {
	if o == nil || o.AllowedGroups == nil {
		return nil, false
	}
	return o.AllowedGroups, true
}

// HasAllowedGroups returns a boolean if a field has been set.
func (o *PrinterShare) HasAllowedGroups() bool {
	if o != nil && o.AllowedGroups != nil {
		return true
	}

	return false
}

// SetAllowedGroups gets a reference to the given []MicrosoftGraphGroup and assigns it to the AllowedGroups field.
func (o *PrinterShare) SetAllowedGroups(v []MicrosoftGraphGroup) {
	o.AllowedGroups = &v
}

// GetAllowedUsers returns the AllowedUsers field value if set, zero value otherwise.
func (o *PrinterShare) GetAllowedUsers() []MicrosoftGraphUser {
	if o == nil || o.AllowedUsers == nil {
		var ret []MicrosoftGraphUser
		return ret
	}
	return *o.AllowedUsers
}

// GetAllowedUsersOk returns a tuple with the AllowedUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrinterShare) GetAllowedUsersOk() (*[]MicrosoftGraphUser, bool) {
	if o == nil || o.AllowedUsers == nil {
		return nil, false
	}
	return o.AllowedUsers, true
}

// HasAllowedUsers returns a boolean if a field has been set.
func (o *PrinterShare) HasAllowedUsers() bool {
	if o != nil && o.AllowedUsers != nil {
		return true
	}

	return false
}

// SetAllowedUsers gets a reference to the given []MicrosoftGraphUser and assigns it to the AllowedUsers field.
func (o *PrinterShare) SetAllowedUsers(v []MicrosoftGraphUser) {
	o.AllowedUsers = &v
}

// GetPrinter returns the Printer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PrinterShare) GetPrinter() AnyOfmicrosoftGraphPrinter {
	if o == nil  {
		var ret AnyOfmicrosoftGraphPrinter
		return ret
	}
	return o.Printer
}

// GetPrinterOk returns a tuple with the Printer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrinterShare) GetPrinterOk() (*AnyOfmicrosoftGraphPrinter, bool) {
	if o == nil || o.Printer == nil {
		return nil, false
	}
	return &o.Printer, true
}

// HasPrinter returns a boolean if a field has been set.
func (o *PrinterShare) HasPrinter() bool {
	if o != nil && o.Printer != nil {
		return true
	}

	return false
}

// SetPrinter gets a reference to the given AnyOfmicrosoftGraphPrinter and assigns it to the Printer field.
func (o *PrinterShare) SetPrinter(v AnyOfmicrosoftGraphPrinter) {
	o.Printer = v
}

func (o PrinterShare) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowAllUsers != nil {
		toSerialize["allowAllUsers"] = o.AllowAllUsers
	}
	if o.CreatedDateTime != nil {
		toSerialize["createdDateTime"] = o.CreatedDateTime
	}
	if o.AllowedGroups != nil {
		toSerialize["allowedGroups"] = o.AllowedGroups
	}
	if o.AllowedUsers != nil {
		toSerialize["allowedUsers"] = o.AllowedUsers
	}
	if o.Printer != nil {
		toSerialize["printer"] = o.Printer
	}
	return json.Marshal(toSerialize)
}

type NullablePrinterShare struct {
	value *PrinterShare
	isSet bool
}

func (v NullablePrinterShare) Get() *PrinterShare {
	return v.value
}

func (v *NullablePrinterShare) Set(val *PrinterShare) {
	v.value = val
	v.isSet = true
}

func (v NullablePrinterShare) IsSet() bool {
	return v.isSet
}

func (v *NullablePrinterShare) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrinterShare(val *PrinterShare) *NullablePrinterShare {
	return &NullablePrinterShare{value: val, isSet: true}
}

func (v NullablePrinterShare) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrinterShare) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


