/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphApplication struct for MicrosoftGraphApplication
type MicrosoftGraphApplication struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	DeletedDateTime NullableTime `json:"deletedDateTime,omitempty"`
	// Defines custom behavior that a consuming service can use to call an app in specific contexts. For example, applications that can render file streams may set the addIns property for its 'FileHandler' functionality. This will let services like Office 365 call the application in the context of a document the user is working on.
	AddIns *[]MicrosoftGraphAddIn `json:"addIns,omitempty"`
	// Specifies settings for an application that implements a web API.
	Api AnyOfmicrosoftGraphApiApplication `json:"api,omitempty"`
	// The unique identifier for the application that is assigned to an application by Azure AD. Not nullable. Read-only.
	AppId NullableString `json:"appId,omitempty"`
	// Unique identifier of the applicationTemplate. Supports $filter (eq, not, ne).
	ApplicationTemplateId NullableString `json:"applicationTemplateId,omitempty"`
	// The collection of roles assigned to the application. With app role assignments, these roles can be assigned to users, groups, or service principals associated with other applications. Not nullable.
	AppRoles *[]MicrosoftGraphAppRole `json:"appRoles,omitempty"`
	// The date and time the application was registered. The DateTimeOffset type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.  Supports $filter (eq, ne, not, ge, le, in, and eq on null values) and $orderBy.
	CreatedDateTime NullableTime `json:"createdDateTime,omitempty"`
	// Free text field to provide a description of the application object to end users. The maximum allowed size is 1024 characters. Supports $filter (eq, ne, not, ge, le, startsWith) and $search.
	Description NullableString `json:"description,omitempty"`
	// Specifies whether Microsoft has disabled the registered application. Possible values are: null (default value), NotDisabled, and DisabledDueToViolationOfServicesAgreement (reasons may include suspicious, abusive, or malicious activity, or a violation of the Microsoft Services Agreement).  Supports $filter (eq, ne, not).
	DisabledByMicrosoftStatus NullableString `json:"disabledByMicrosoftStatus,omitempty"`
	// The display name for the application. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values), $search, and $orderBy.
	DisplayName NullableString `json:"displayName,omitempty"`
	// Configures the groups claim issued in a user or OAuth 2.0 access token that the application expects. To set this attribute, use one of the following valid string values: None, SecurityGroup (for security groups and Azure AD roles), All (this gets all of the security groups, distribution groups, and Azure AD directory roles that the signed-in user is a member of).
	GroupMembershipClaims NullableString `json:"groupMembershipClaims,omitempty"`
	// Also known as App ID URI, this value is set when an application is used as a resource app. The identifierUris acts as the prefix for the scopes you'll reference in your API's code, and it must be globally unique. You can use the default value provided, which is in the form api://<application-client-id>, or specify a more readable URI like https://contoso.com/api. For more information on valid identifierUris patterns and best practices, see Azure AD application registration security best practices. Not nullable. Supports $filter (eq, ne, ge, le, startsWith).
	IdentifierUris *[]string `json:"identifierUris,omitempty"`
	// Basic profile information of the application such as  app's marketing, support, terms of service and privacy statement URLs. The terms of service and privacy statement are surfaced to users through the user consent experience. For more info, see How to: Add Terms of service and privacy statement for registered Azure AD apps. Supports $filter (eq, ne, not, ge, le, and eq on null values).
	Info AnyOfmicrosoftGraphInformationalUrl `json:"info,omitempty"`
	// Specifies whether this application supports device authentication without a user. The default is false.
	IsDeviceOnlyAuthSupported NullableBool `json:"isDeviceOnlyAuthSupported,omitempty"`
	// Specifies the fallback application type as public client, such as an installed application running on a mobile device. The default value is false which means the fallback application type is confidential client such as a web app. There are certain scenarios where Azure AD cannot determine the client application type. For example, the ROPC flow where it is configured without specifying a redirect URI. In those cases Azure AD interprets the application type based on the value of this property.
	IsFallbackPublicClient NullableBool `json:"isFallbackPublicClient,omitempty"`
	// The collection of key credentials associated with the application. Not nullable. Supports $filter (eq, not, ge, le).
	KeyCredentials *[]MicrosoftGraphKeyCredential `json:"keyCredentials,omitempty"`
	// The main logo for the application. Not nullable.
	Logo *string `json:"logo,omitempty"`
	// Notes relevant for the management of the application.
	Notes NullableString `json:"notes,omitempty"`
	Oauth2RequirePostResponse *bool `json:"oauth2RequirePostResponse,omitempty"`
	// Application developers can configure optional claims in their Azure AD applications to specify the claims that are sent to their application by the Microsoft security token service. For more information, see How to: Provide optional claims to your app.
	OptionalClaims AnyOfmicrosoftGraphOptionalClaims `json:"optionalClaims,omitempty"`
	// Specifies parental control settings for an application.
	ParentalControlSettings AnyOfmicrosoftGraphParentalControlSettings `json:"parentalControlSettings,omitempty"`
	// The collection of password credentials associated with the application. Not nullable.
	PasswordCredentials *[]MicrosoftGraphPasswordCredential `json:"passwordCredentials,omitempty"`
	// Specifies settings for installed clients such as desktop or mobile devices.
	PublicClient AnyOfmicrosoftGraphPublicClientApplication `json:"publicClient,omitempty"`
	// The verified publisher domain for the application. Read-only. For more information, see How to: Configure an application's publisher domain. Supports $filter (eq, ne, ge, le, startsWith).
	PublisherDomain NullableString `json:"publisherDomain,omitempty"`
	// Specifies the resources that the application needs to access. This property also specifies the set of delegated permissions and application roles that it needs for each of those resources. This configuration of access to the required resources drives the consent experience. No more than 50 resource services (APIs) can be configured. Beginning mid-October 2021, the total number of required permissions must not exceed 400. Not nullable. Supports $filter (eq, not, ge, le).
	RequiredResourceAccess *[]MicrosoftGraphRequiredResourceAccess `json:"requiredResourceAccess,omitempty"`
	// Specifies the Microsoft accounts that are supported for the current application. The possible values are: AzureADMyOrg, AzureADMultipleOrgs, AzureADandPersonalMicrosoftAccount (default), and PersonalMicrosoftAccount. See more in the table below. Supports $filter (eq, ne, not).
	SignInAudience NullableString `json:"signInAudience,omitempty"`
	// Specifies settings for a single-page application, including sign out URLs and redirect URIs for authorization codes and access tokens.
	Spa AnyOfmicrosoftGraphSpaApplication `json:"spa,omitempty"`
	// Custom strings that can be used to categorize and identify the application. Not nullable. Supports $filter (eq, not, ge, le, startsWith).
	Tags *[]string `json:"tags,omitempty"`
	// Specifies the keyId of a public key from the keyCredentials collection. When configured, Azure AD encrypts all the tokens it emits by using the key this property points to. The application code that receives the encrypted token must use the matching private key to decrypt the token before it can be used for the signed-in user.
	TokenEncryptionKeyId NullableString `json:"tokenEncryptionKeyId,omitempty"`
	// Specifies the verified publisher of the application.
	VerifiedPublisher AnyOfmicrosoftGraphVerifiedPublisher `json:"verifiedPublisher,omitempty"`
	// Specifies settings for a web application.
	Web AnyOfmicrosoftGraphWebApplication `json:"web,omitempty"`
	// Read-only.
	CreatedOnBehalfOf AnyOfmicrosoftGraphDirectoryObject `json:"createdOnBehalfOf,omitempty"`
	// Read-only. Nullable.
	ExtensionProperties *[]MicrosoftGraphExtensionProperty `json:"extensionProperties,omitempty"`
	HomeRealmDiscoveryPolicies *[]MicrosoftGraphHomeRealmDiscoveryPolicy `json:"homeRealmDiscoveryPolicies,omitempty"`
	// Directory objects that are owners of the application. Read-only. Nullable. Supports $expand.
	Owners *[]MicrosoftGraphDirectoryObject `json:"owners,omitempty"`
	TokenIssuancePolicies *[]MicrosoftGraphTokenIssuancePolicy `json:"tokenIssuancePolicies,omitempty"`
	// The tokenLifetimePolicies assigned to this application. Supports $expand.
	TokenLifetimePolicies *[]MicrosoftGraphTokenLifetimePolicy `json:"tokenLifetimePolicies,omitempty"`
}

// NewMicrosoftGraphApplication instantiates a new MicrosoftGraphApplication object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphApplication() *MicrosoftGraphApplication {
	this := MicrosoftGraphApplication{}
	return &this
}

// NewMicrosoftGraphApplicationWithDefaults instantiates a new MicrosoftGraphApplication object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphApplicationWithDefaults() *MicrosoftGraphApplication {
	this := MicrosoftGraphApplication{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphApplication) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphApplication) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphApplication) SetId(v string) {
	o.Id = &v
}

// GetDeletedDateTime returns the DeletedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphApplication) GetDeletedDateTime() time.Time {
	if o == nil || o.DeletedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.DeletedDateTime.Get()
}

// GetDeletedDateTimeOk returns a tuple with the DeletedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphApplication) GetDeletedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DeletedDateTime.Get(), o.DeletedDateTime.IsSet()
}

// HasDeletedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasDeletedDateTime() bool {
	if o != nil && o.DeletedDateTime.IsSet() {
		return true
	}

	return false
}

// SetDeletedDateTime gets a reference to the given NullableTime and assigns it to the DeletedDateTime field.
func (o *MicrosoftGraphApplication) SetDeletedDateTime(v time.Time) {
	o.DeletedDateTime.Set(&v)
}
// SetDeletedDateTimeNil sets the value for DeletedDateTime to be an explicit nil
func (o *MicrosoftGraphApplication) SetDeletedDateTimeNil() {
	o.DeletedDateTime.Set(nil)
}

// UnsetDeletedDateTime ensures that no value is present for DeletedDateTime, not even an explicit nil
func (o *MicrosoftGraphApplication) UnsetDeletedDateTime() {
	o.DeletedDateTime.Unset()
}

// GetAddIns returns the AddIns field value if set, zero value otherwise.
func (o *MicrosoftGraphApplication) GetAddIns() []MicrosoftGraphAddIn {
	if o == nil || o.AddIns == nil {
		var ret []MicrosoftGraphAddIn
		return ret
	}
	return *o.AddIns
}

// GetAddInsOk returns a tuple with the AddIns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphApplication) GetAddInsOk() (*[]MicrosoftGraphAddIn, bool) {
	if o == nil || o.AddIns == nil {
		return nil, false
	}
	return o.AddIns, true
}

// HasAddIns returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasAddIns() bool {
	if o != nil && o.AddIns != nil {
		return true
	}

	return false
}

// SetAddIns gets a reference to the given []MicrosoftGraphAddIn and assigns it to the AddIns field.
func (o *MicrosoftGraphApplication) SetAddIns(v []MicrosoftGraphAddIn) {
	o.AddIns = &v
}

// GetApi returns the Api field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphApplication) GetApi() AnyOfmicrosoftGraphApiApplication {
	if o == nil  {
		var ret AnyOfmicrosoftGraphApiApplication
		return ret
	}
	return o.Api
}

// GetApiOk returns a tuple with the Api field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphApplication) GetApiOk() (*AnyOfmicrosoftGraphApiApplication, bool) {
	if o == nil || o.Api == nil {
		return nil, false
	}
	return &o.Api, true
}

// HasApi returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasApi() bool {
	if o != nil && o.Api != nil {
		return true
	}

	return false
}

// SetApi gets a reference to the given AnyOfmicrosoftGraphApiApplication and assigns it to the Api field.
func (o *MicrosoftGraphApplication) SetApi(v AnyOfmicrosoftGraphApiApplication) {
	o.Api = v
}

// GetAppId returns the AppId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphApplication) GetAppId() string {
	if o == nil || o.AppId.Get() == nil {
		var ret string
		return ret
	}
	return *o.AppId.Get()
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphApplication) GetAppIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AppId.Get(), o.AppId.IsSet()
}

// HasAppId returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasAppId() bool {
	if o != nil && o.AppId.IsSet() {
		return true
	}

	return false
}

// SetAppId gets a reference to the given NullableString and assigns it to the AppId field.
func (o *MicrosoftGraphApplication) SetAppId(v string) {
	o.AppId.Set(&v)
}
// SetAppIdNil sets the value for AppId to be an explicit nil
func (o *MicrosoftGraphApplication) SetAppIdNil() {
	o.AppId.Set(nil)
}

// UnsetAppId ensures that no value is present for AppId, not even an explicit nil
func (o *MicrosoftGraphApplication) UnsetAppId() {
	o.AppId.Unset()
}

// GetApplicationTemplateId returns the ApplicationTemplateId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphApplication) GetApplicationTemplateId() string {
	if o == nil || o.ApplicationTemplateId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ApplicationTemplateId.Get()
}

// GetApplicationTemplateIdOk returns a tuple with the ApplicationTemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphApplication) GetApplicationTemplateIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ApplicationTemplateId.Get(), o.ApplicationTemplateId.IsSet()
}

// HasApplicationTemplateId returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasApplicationTemplateId() bool {
	if o != nil && o.ApplicationTemplateId.IsSet() {
		return true
	}

	return false
}

// SetApplicationTemplateId gets a reference to the given NullableString and assigns it to the ApplicationTemplateId field.
func (o *MicrosoftGraphApplication) SetApplicationTemplateId(v string) {
	o.ApplicationTemplateId.Set(&v)
}
// SetApplicationTemplateIdNil sets the value for ApplicationTemplateId to be an explicit nil
func (o *MicrosoftGraphApplication) SetApplicationTemplateIdNil() {
	o.ApplicationTemplateId.Set(nil)
}

// UnsetApplicationTemplateId ensures that no value is present for ApplicationTemplateId, not even an explicit nil
func (o *MicrosoftGraphApplication) UnsetApplicationTemplateId() {
	o.ApplicationTemplateId.Unset()
}

// GetAppRoles returns the AppRoles field value if set, zero value otherwise.
func (o *MicrosoftGraphApplication) GetAppRoles() []MicrosoftGraphAppRole {
	if o == nil || o.AppRoles == nil {
		var ret []MicrosoftGraphAppRole
		return ret
	}
	return *o.AppRoles
}

// GetAppRolesOk returns a tuple with the AppRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphApplication) GetAppRolesOk() (*[]MicrosoftGraphAppRole, bool) {
	if o == nil || o.AppRoles == nil {
		return nil, false
	}
	return o.AppRoles, true
}

// HasAppRoles returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasAppRoles() bool {
	if o != nil && o.AppRoles != nil {
		return true
	}

	return false
}

// SetAppRoles gets a reference to the given []MicrosoftGraphAppRole and assigns it to the AppRoles field.
func (o *MicrosoftGraphApplication) SetAppRoles(v []MicrosoftGraphAppRole) {
	o.AppRoles = &v
}

// GetCreatedDateTime returns the CreatedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphApplication) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime.Get()
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphApplication) GetCreatedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatedDateTime.Get(), o.CreatedDateTime.IsSet()
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime.IsSet() {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given NullableTime and assigns it to the CreatedDateTime field.
func (o *MicrosoftGraphApplication) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime.Set(&v)
}
// SetCreatedDateTimeNil sets the value for CreatedDateTime to be an explicit nil
func (o *MicrosoftGraphApplication) SetCreatedDateTimeNil() {
	o.CreatedDateTime.Set(nil)
}

// UnsetCreatedDateTime ensures that no value is present for CreatedDateTime, not even an explicit nil
func (o *MicrosoftGraphApplication) UnsetCreatedDateTime() {
	o.CreatedDateTime.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphApplication) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphApplication) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *MicrosoftGraphApplication) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *MicrosoftGraphApplication) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *MicrosoftGraphApplication) UnsetDescription() {
	o.Description.Unset()
}

// GetDisabledByMicrosoftStatus returns the DisabledByMicrosoftStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphApplication) GetDisabledByMicrosoftStatus() string {
	if o == nil || o.DisabledByMicrosoftStatus.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisabledByMicrosoftStatus.Get()
}

// GetDisabledByMicrosoftStatusOk returns a tuple with the DisabledByMicrosoftStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphApplication) GetDisabledByMicrosoftStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisabledByMicrosoftStatus.Get(), o.DisabledByMicrosoftStatus.IsSet()
}

// HasDisabledByMicrosoftStatus returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasDisabledByMicrosoftStatus() bool {
	if o != nil && o.DisabledByMicrosoftStatus.IsSet() {
		return true
	}

	return false
}

// SetDisabledByMicrosoftStatus gets a reference to the given NullableString and assigns it to the DisabledByMicrosoftStatus field.
func (o *MicrosoftGraphApplication) SetDisabledByMicrosoftStatus(v string) {
	o.DisabledByMicrosoftStatus.Set(&v)
}
// SetDisabledByMicrosoftStatusNil sets the value for DisabledByMicrosoftStatus to be an explicit nil
func (o *MicrosoftGraphApplication) SetDisabledByMicrosoftStatusNil() {
	o.DisabledByMicrosoftStatus.Set(nil)
}

// UnsetDisabledByMicrosoftStatus ensures that no value is present for DisabledByMicrosoftStatus, not even an explicit nil
func (o *MicrosoftGraphApplication) UnsetDisabledByMicrosoftStatus() {
	o.DisabledByMicrosoftStatus.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphApplication) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphApplication) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *MicrosoftGraphApplication) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *MicrosoftGraphApplication) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *MicrosoftGraphApplication) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetGroupMembershipClaims returns the GroupMembershipClaims field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphApplication) GetGroupMembershipClaims() string {
	if o == nil || o.GroupMembershipClaims.Get() == nil {
		var ret string
		return ret
	}
	return *o.GroupMembershipClaims.Get()
}

// GetGroupMembershipClaimsOk returns a tuple with the GroupMembershipClaims field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphApplication) GetGroupMembershipClaimsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.GroupMembershipClaims.Get(), o.GroupMembershipClaims.IsSet()
}

// HasGroupMembershipClaims returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasGroupMembershipClaims() bool {
	if o != nil && o.GroupMembershipClaims.IsSet() {
		return true
	}

	return false
}

// SetGroupMembershipClaims gets a reference to the given NullableString and assigns it to the GroupMembershipClaims field.
func (o *MicrosoftGraphApplication) SetGroupMembershipClaims(v string) {
	o.GroupMembershipClaims.Set(&v)
}
// SetGroupMembershipClaimsNil sets the value for GroupMembershipClaims to be an explicit nil
func (o *MicrosoftGraphApplication) SetGroupMembershipClaimsNil() {
	o.GroupMembershipClaims.Set(nil)
}

// UnsetGroupMembershipClaims ensures that no value is present for GroupMembershipClaims, not even an explicit nil
func (o *MicrosoftGraphApplication) UnsetGroupMembershipClaims() {
	o.GroupMembershipClaims.Unset()
}

// GetIdentifierUris returns the IdentifierUris field value if set, zero value otherwise.
func (o *MicrosoftGraphApplication) GetIdentifierUris() []string {
	if o == nil || o.IdentifierUris == nil {
		var ret []string
		return ret
	}
	return *o.IdentifierUris
}

// GetIdentifierUrisOk returns a tuple with the IdentifierUris field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphApplication) GetIdentifierUrisOk() (*[]string, bool) {
	if o == nil || o.IdentifierUris == nil {
		return nil, false
	}
	return o.IdentifierUris, true
}

// HasIdentifierUris returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasIdentifierUris() bool {
	if o != nil && o.IdentifierUris != nil {
		return true
	}

	return false
}

// SetIdentifierUris gets a reference to the given []string and assigns it to the IdentifierUris field.
func (o *MicrosoftGraphApplication) SetIdentifierUris(v []string) {
	o.IdentifierUris = &v
}

// GetInfo returns the Info field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphApplication) GetInfo() AnyOfmicrosoftGraphInformationalUrl {
	if o == nil  {
		var ret AnyOfmicrosoftGraphInformationalUrl
		return ret
	}
	return o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphApplication) GetInfoOk() (*AnyOfmicrosoftGraphInformationalUrl, bool) {
	if o == nil || o.Info == nil {
		return nil, false
	}
	return &o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasInfo() bool {
	if o != nil && o.Info != nil {
		return true
	}

	return false
}

// SetInfo gets a reference to the given AnyOfmicrosoftGraphInformationalUrl and assigns it to the Info field.
func (o *MicrosoftGraphApplication) SetInfo(v AnyOfmicrosoftGraphInformationalUrl) {
	o.Info = v
}

// GetIsDeviceOnlyAuthSupported returns the IsDeviceOnlyAuthSupported field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphApplication) GetIsDeviceOnlyAuthSupported() bool {
	if o == nil || o.IsDeviceOnlyAuthSupported.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsDeviceOnlyAuthSupported.Get()
}

// GetIsDeviceOnlyAuthSupportedOk returns a tuple with the IsDeviceOnlyAuthSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphApplication) GetIsDeviceOnlyAuthSupportedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsDeviceOnlyAuthSupported.Get(), o.IsDeviceOnlyAuthSupported.IsSet()
}

// HasIsDeviceOnlyAuthSupported returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasIsDeviceOnlyAuthSupported() bool {
	if o != nil && o.IsDeviceOnlyAuthSupported.IsSet() {
		return true
	}

	return false
}

// SetIsDeviceOnlyAuthSupported gets a reference to the given NullableBool and assigns it to the IsDeviceOnlyAuthSupported field.
func (o *MicrosoftGraphApplication) SetIsDeviceOnlyAuthSupported(v bool) {
	o.IsDeviceOnlyAuthSupported.Set(&v)
}
// SetIsDeviceOnlyAuthSupportedNil sets the value for IsDeviceOnlyAuthSupported to be an explicit nil
func (o *MicrosoftGraphApplication) SetIsDeviceOnlyAuthSupportedNil() {
	o.IsDeviceOnlyAuthSupported.Set(nil)
}

// UnsetIsDeviceOnlyAuthSupported ensures that no value is present for IsDeviceOnlyAuthSupported, not even an explicit nil
func (o *MicrosoftGraphApplication) UnsetIsDeviceOnlyAuthSupported() {
	o.IsDeviceOnlyAuthSupported.Unset()
}

// GetIsFallbackPublicClient returns the IsFallbackPublicClient field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphApplication) GetIsFallbackPublicClient() bool {
	if o == nil || o.IsFallbackPublicClient.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsFallbackPublicClient.Get()
}

// GetIsFallbackPublicClientOk returns a tuple with the IsFallbackPublicClient field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphApplication) GetIsFallbackPublicClientOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsFallbackPublicClient.Get(), o.IsFallbackPublicClient.IsSet()
}

// HasIsFallbackPublicClient returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasIsFallbackPublicClient() bool {
	if o != nil && o.IsFallbackPublicClient.IsSet() {
		return true
	}

	return false
}

// SetIsFallbackPublicClient gets a reference to the given NullableBool and assigns it to the IsFallbackPublicClient field.
func (o *MicrosoftGraphApplication) SetIsFallbackPublicClient(v bool) {
	o.IsFallbackPublicClient.Set(&v)
}
// SetIsFallbackPublicClientNil sets the value for IsFallbackPublicClient to be an explicit nil
func (o *MicrosoftGraphApplication) SetIsFallbackPublicClientNil() {
	o.IsFallbackPublicClient.Set(nil)
}

// UnsetIsFallbackPublicClient ensures that no value is present for IsFallbackPublicClient, not even an explicit nil
func (o *MicrosoftGraphApplication) UnsetIsFallbackPublicClient() {
	o.IsFallbackPublicClient.Unset()
}

// GetKeyCredentials returns the KeyCredentials field value if set, zero value otherwise.
func (o *MicrosoftGraphApplication) GetKeyCredentials() []MicrosoftGraphKeyCredential {
	if o == nil || o.KeyCredentials == nil {
		var ret []MicrosoftGraphKeyCredential
		return ret
	}
	return *o.KeyCredentials
}

// GetKeyCredentialsOk returns a tuple with the KeyCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphApplication) GetKeyCredentialsOk() (*[]MicrosoftGraphKeyCredential, bool) {
	if o == nil || o.KeyCredentials == nil {
		return nil, false
	}
	return o.KeyCredentials, true
}

// HasKeyCredentials returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasKeyCredentials() bool {
	if o != nil && o.KeyCredentials != nil {
		return true
	}

	return false
}

// SetKeyCredentials gets a reference to the given []MicrosoftGraphKeyCredential and assigns it to the KeyCredentials field.
func (o *MicrosoftGraphApplication) SetKeyCredentials(v []MicrosoftGraphKeyCredential) {
	o.KeyCredentials = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *MicrosoftGraphApplication) GetLogo() string {
	if o == nil || o.Logo == nil {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphApplication) GetLogoOk() (*string, bool) {
	if o == nil || o.Logo == nil {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasLogo() bool {
	if o != nil && o.Logo != nil {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *MicrosoftGraphApplication) SetLogo(v string) {
	o.Logo = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphApplication) GetNotes() string {
	if o == nil || o.Notes.Get() == nil {
		var ret string
		return ret
	}
	return *o.Notes.Get()
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphApplication) GetNotesOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Notes.Get(), o.Notes.IsSet()
}

// HasNotes returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasNotes() bool {
	if o != nil && o.Notes.IsSet() {
		return true
	}

	return false
}

// SetNotes gets a reference to the given NullableString and assigns it to the Notes field.
func (o *MicrosoftGraphApplication) SetNotes(v string) {
	o.Notes.Set(&v)
}
// SetNotesNil sets the value for Notes to be an explicit nil
func (o *MicrosoftGraphApplication) SetNotesNil() {
	o.Notes.Set(nil)
}

// UnsetNotes ensures that no value is present for Notes, not even an explicit nil
func (o *MicrosoftGraphApplication) UnsetNotes() {
	o.Notes.Unset()
}

// GetOauth2RequirePostResponse returns the Oauth2RequirePostResponse field value if set, zero value otherwise.
func (o *MicrosoftGraphApplication) GetOauth2RequirePostResponse() bool {
	if o == nil || o.Oauth2RequirePostResponse == nil {
		var ret bool
		return ret
	}
	return *o.Oauth2RequirePostResponse
}

// GetOauth2RequirePostResponseOk returns a tuple with the Oauth2RequirePostResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphApplication) GetOauth2RequirePostResponseOk() (*bool, bool) {
	if o == nil || o.Oauth2RequirePostResponse == nil {
		return nil, false
	}
	return o.Oauth2RequirePostResponse, true
}

// HasOauth2RequirePostResponse returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasOauth2RequirePostResponse() bool {
	if o != nil && o.Oauth2RequirePostResponse != nil {
		return true
	}

	return false
}

// SetOauth2RequirePostResponse gets a reference to the given bool and assigns it to the Oauth2RequirePostResponse field.
func (o *MicrosoftGraphApplication) SetOauth2RequirePostResponse(v bool) {
	o.Oauth2RequirePostResponse = &v
}

// GetOptionalClaims returns the OptionalClaims field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphApplication) GetOptionalClaims() AnyOfmicrosoftGraphOptionalClaims {
	if o == nil  {
		var ret AnyOfmicrosoftGraphOptionalClaims
		return ret
	}
	return o.OptionalClaims
}

// GetOptionalClaimsOk returns a tuple with the OptionalClaims field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphApplication) GetOptionalClaimsOk() (*AnyOfmicrosoftGraphOptionalClaims, bool) {
	if o == nil || o.OptionalClaims == nil {
		return nil, false
	}
	return &o.OptionalClaims, true
}

// HasOptionalClaims returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasOptionalClaims() bool {
	if o != nil && o.OptionalClaims != nil {
		return true
	}

	return false
}

// SetOptionalClaims gets a reference to the given AnyOfmicrosoftGraphOptionalClaims and assigns it to the OptionalClaims field.
func (o *MicrosoftGraphApplication) SetOptionalClaims(v AnyOfmicrosoftGraphOptionalClaims) {
	o.OptionalClaims = v
}

// GetParentalControlSettings returns the ParentalControlSettings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphApplication) GetParentalControlSettings() AnyOfmicrosoftGraphParentalControlSettings {
	if o == nil  {
		var ret AnyOfmicrosoftGraphParentalControlSettings
		return ret
	}
	return o.ParentalControlSettings
}

// GetParentalControlSettingsOk returns a tuple with the ParentalControlSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphApplication) GetParentalControlSettingsOk() (*AnyOfmicrosoftGraphParentalControlSettings, bool) {
	if o == nil || o.ParentalControlSettings == nil {
		return nil, false
	}
	return &o.ParentalControlSettings, true
}

// HasParentalControlSettings returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasParentalControlSettings() bool {
	if o != nil && o.ParentalControlSettings != nil {
		return true
	}

	return false
}

// SetParentalControlSettings gets a reference to the given AnyOfmicrosoftGraphParentalControlSettings and assigns it to the ParentalControlSettings field.
func (o *MicrosoftGraphApplication) SetParentalControlSettings(v AnyOfmicrosoftGraphParentalControlSettings) {
	o.ParentalControlSettings = v
}

// GetPasswordCredentials returns the PasswordCredentials field value if set, zero value otherwise.
func (o *MicrosoftGraphApplication) GetPasswordCredentials() []MicrosoftGraphPasswordCredential {
	if o == nil || o.PasswordCredentials == nil {
		var ret []MicrosoftGraphPasswordCredential
		return ret
	}
	return *o.PasswordCredentials
}

// GetPasswordCredentialsOk returns a tuple with the PasswordCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphApplication) GetPasswordCredentialsOk() (*[]MicrosoftGraphPasswordCredential, bool) {
	if o == nil || o.PasswordCredentials == nil {
		return nil, false
	}
	return o.PasswordCredentials, true
}

// HasPasswordCredentials returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasPasswordCredentials() bool {
	if o != nil && o.PasswordCredentials != nil {
		return true
	}

	return false
}

// SetPasswordCredentials gets a reference to the given []MicrosoftGraphPasswordCredential and assigns it to the PasswordCredentials field.
func (o *MicrosoftGraphApplication) SetPasswordCredentials(v []MicrosoftGraphPasswordCredential) {
	o.PasswordCredentials = &v
}

// GetPublicClient returns the PublicClient field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphApplication) GetPublicClient() AnyOfmicrosoftGraphPublicClientApplication {
	if o == nil  {
		var ret AnyOfmicrosoftGraphPublicClientApplication
		return ret
	}
	return o.PublicClient
}

// GetPublicClientOk returns a tuple with the PublicClient field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphApplication) GetPublicClientOk() (*AnyOfmicrosoftGraphPublicClientApplication, bool) {
	if o == nil || o.PublicClient == nil {
		return nil, false
	}
	return &o.PublicClient, true
}

// HasPublicClient returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasPublicClient() bool {
	if o != nil && o.PublicClient != nil {
		return true
	}

	return false
}

// SetPublicClient gets a reference to the given AnyOfmicrosoftGraphPublicClientApplication and assigns it to the PublicClient field.
func (o *MicrosoftGraphApplication) SetPublicClient(v AnyOfmicrosoftGraphPublicClientApplication) {
	o.PublicClient = v
}

// GetPublisherDomain returns the PublisherDomain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphApplication) GetPublisherDomain() string {
	if o == nil || o.PublisherDomain.Get() == nil {
		var ret string
		return ret
	}
	return *o.PublisherDomain.Get()
}

// GetPublisherDomainOk returns a tuple with the PublisherDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphApplication) GetPublisherDomainOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PublisherDomain.Get(), o.PublisherDomain.IsSet()
}

// HasPublisherDomain returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasPublisherDomain() bool {
	if o != nil && o.PublisherDomain.IsSet() {
		return true
	}

	return false
}

// SetPublisherDomain gets a reference to the given NullableString and assigns it to the PublisherDomain field.
func (o *MicrosoftGraphApplication) SetPublisherDomain(v string) {
	o.PublisherDomain.Set(&v)
}
// SetPublisherDomainNil sets the value for PublisherDomain to be an explicit nil
func (o *MicrosoftGraphApplication) SetPublisherDomainNil() {
	o.PublisherDomain.Set(nil)
}

// UnsetPublisherDomain ensures that no value is present for PublisherDomain, not even an explicit nil
func (o *MicrosoftGraphApplication) UnsetPublisherDomain() {
	o.PublisherDomain.Unset()
}

// GetRequiredResourceAccess returns the RequiredResourceAccess field value if set, zero value otherwise.
func (o *MicrosoftGraphApplication) GetRequiredResourceAccess() []MicrosoftGraphRequiredResourceAccess {
	if o == nil || o.RequiredResourceAccess == nil {
		var ret []MicrosoftGraphRequiredResourceAccess
		return ret
	}
	return *o.RequiredResourceAccess
}

// GetRequiredResourceAccessOk returns a tuple with the RequiredResourceAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphApplication) GetRequiredResourceAccessOk() (*[]MicrosoftGraphRequiredResourceAccess, bool) {
	if o == nil || o.RequiredResourceAccess == nil {
		return nil, false
	}
	return o.RequiredResourceAccess, true
}

// HasRequiredResourceAccess returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasRequiredResourceAccess() bool {
	if o != nil && o.RequiredResourceAccess != nil {
		return true
	}

	return false
}

// SetRequiredResourceAccess gets a reference to the given []MicrosoftGraphRequiredResourceAccess and assigns it to the RequiredResourceAccess field.
func (o *MicrosoftGraphApplication) SetRequiredResourceAccess(v []MicrosoftGraphRequiredResourceAccess) {
	o.RequiredResourceAccess = &v
}

// GetSignInAudience returns the SignInAudience field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphApplication) GetSignInAudience() string {
	if o == nil || o.SignInAudience.Get() == nil {
		var ret string
		return ret
	}
	return *o.SignInAudience.Get()
}

// GetSignInAudienceOk returns a tuple with the SignInAudience field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphApplication) GetSignInAudienceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SignInAudience.Get(), o.SignInAudience.IsSet()
}

// HasSignInAudience returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasSignInAudience() bool {
	if o != nil && o.SignInAudience.IsSet() {
		return true
	}

	return false
}

// SetSignInAudience gets a reference to the given NullableString and assigns it to the SignInAudience field.
func (o *MicrosoftGraphApplication) SetSignInAudience(v string) {
	o.SignInAudience.Set(&v)
}
// SetSignInAudienceNil sets the value for SignInAudience to be an explicit nil
func (o *MicrosoftGraphApplication) SetSignInAudienceNil() {
	o.SignInAudience.Set(nil)
}

// UnsetSignInAudience ensures that no value is present for SignInAudience, not even an explicit nil
func (o *MicrosoftGraphApplication) UnsetSignInAudience() {
	o.SignInAudience.Unset()
}

// GetSpa returns the Spa field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphApplication) GetSpa() AnyOfmicrosoftGraphSpaApplication {
	if o == nil  {
		var ret AnyOfmicrosoftGraphSpaApplication
		return ret
	}
	return o.Spa
}

// GetSpaOk returns a tuple with the Spa field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphApplication) GetSpaOk() (*AnyOfmicrosoftGraphSpaApplication, bool) {
	if o == nil || o.Spa == nil {
		return nil, false
	}
	return &o.Spa, true
}

// HasSpa returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasSpa() bool {
	if o != nil && o.Spa != nil {
		return true
	}

	return false
}

// SetSpa gets a reference to the given AnyOfmicrosoftGraphSpaApplication and assigns it to the Spa field.
func (o *MicrosoftGraphApplication) SetSpa(v AnyOfmicrosoftGraphSpaApplication) {
	o.Spa = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *MicrosoftGraphApplication) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphApplication) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *MicrosoftGraphApplication) SetTags(v []string) {
	o.Tags = &v
}

// GetTokenEncryptionKeyId returns the TokenEncryptionKeyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphApplication) GetTokenEncryptionKeyId() string {
	if o == nil || o.TokenEncryptionKeyId.Get() == nil {
		var ret string
		return ret
	}
	return *o.TokenEncryptionKeyId.Get()
}

// GetTokenEncryptionKeyIdOk returns a tuple with the TokenEncryptionKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphApplication) GetTokenEncryptionKeyIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TokenEncryptionKeyId.Get(), o.TokenEncryptionKeyId.IsSet()
}

// HasTokenEncryptionKeyId returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasTokenEncryptionKeyId() bool {
	if o != nil && o.TokenEncryptionKeyId.IsSet() {
		return true
	}

	return false
}

// SetTokenEncryptionKeyId gets a reference to the given NullableString and assigns it to the TokenEncryptionKeyId field.
func (o *MicrosoftGraphApplication) SetTokenEncryptionKeyId(v string) {
	o.TokenEncryptionKeyId.Set(&v)
}
// SetTokenEncryptionKeyIdNil sets the value for TokenEncryptionKeyId to be an explicit nil
func (o *MicrosoftGraphApplication) SetTokenEncryptionKeyIdNil() {
	o.TokenEncryptionKeyId.Set(nil)
}

// UnsetTokenEncryptionKeyId ensures that no value is present for TokenEncryptionKeyId, not even an explicit nil
func (o *MicrosoftGraphApplication) UnsetTokenEncryptionKeyId() {
	o.TokenEncryptionKeyId.Unset()
}

// GetVerifiedPublisher returns the VerifiedPublisher field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphApplication) GetVerifiedPublisher() AnyOfmicrosoftGraphVerifiedPublisher {
	if o == nil  {
		var ret AnyOfmicrosoftGraphVerifiedPublisher
		return ret
	}
	return o.VerifiedPublisher
}

// GetVerifiedPublisherOk returns a tuple with the VerifiedPublisher field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphApplication) GetVerifiedPublisherOk() (*AnyOfmicrosoftGraphVerifiedPublisher, bool) {
	if o == nil || o.VerifiedPublisher == nil {
		return nil, false
	}
	return &o.VerifiedPublisher, true
}

// HasVerifiedPublisher returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasVerifiedPublisher() bool {
	if o != nil && o.VerifiedPublisher != nil {
		return true
	}

	return false
}

// SetVerifiedPublisher gets a reference to the given AnyOfmicrosoftGraphVerifiedPublisher and assigns it to the VerifiedPublisher field.
func (o *MicrosoftGraphApplication) SetVerifiedPublisher(v AnyOfmicrosoftGraphVerifiedPublisher) {
	o.VerifiedPublisher = v
}

// GetWeb returns the Web field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphApplication) GetWeb() AnyOfmicrosoftGraphWebApplication {
	if o == nil  {
		var ret AnyOfmicrosoftGraphWebApplication
		return ret
	}
	return o.Web
}

// GetWebOk returns a tuple with the Web field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphApplication) GetWebOk() (*AnyOfmicrosoftGraphWebApplication, bool) {
	if o == nil || o.Web == nil {
		return nil, false
	}
	return &o.Web, true
}

// HasWeb returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasWeb() bool {
	if o != nil && o.Web != nil {
		return true
	}

	return false
}

// SetWeb gets a reference to the given AnyOfmicrosoftGraphWebApplication and assigns it to the Web field.
func (o *MicrosoftGraphApplication) SetWeb(v AnyOfmicrosoftGraphWebApplication) {
	o.Web = v
}

// GetCreatedOnBehalfOf returns the CreatedOnBehalfOf field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphApplication) GetCreatedOnBehalfOf() AnyOfmicrosoftGraphDirectoryObject {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDirectoryObject
		return ret
	}
	return o.CreatedOnBehalfOf
}

// GetCreatedOnBehalfOfOk returns a tuple with the CreatedOnBehalfOf field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphApplication) GetCreatedOnBehalfOfOk() (*AnyOfmicrosoftGraphDirectoryObject, bool) {
	if o == nil || o.CreatedOnBehalfOf == nil {
		return nil, false
	}
	return &o.CreatedOnBehalfOf, true
}

// HasCreatedOnBehalfOf returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasCreatedOnBehalfOf() bool {
	if o != nil && o.CreatedOnBehalfOf != nil {
		return true
	}

	return false
}

// SetCreatedOnBehalfOf gets a reference to the given AnyOfmicrosoftGraphDirectoryObject and assigns it to the CreatedOnBehalfOf field.
func (o *MicrosoftGraphApplication) SetCreatedOnBehalfOf(v AnyOfmicrosoftGraphDirectoryObject) {
	o.CreatedOnBehalfOf = v
}

// GetExtensionProperties returns the ExtensionProperties field value if set, zero value otherwise.
func (o *MicrosoftGraphApplication) GetExtensionProperties() []MicrosoftGraphExtensionProperty {
	if o == nil || o.ExtensionProperties == nil {
		var ret []MicrosoftGraphExtensionProperty
		return ret
	}
	return *o.ExtensionProperties
}

// GetExtensionPropertiesOk returns a tuple with the ExtensionProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphApplication) GetExtensionPropertiesOk() (*[]MicrosoftGraphExtensionProperty, bool) {
	if o == nil || o.ExtensionProperties == nil {
		return nil, false
	}
	return o.ExtensionProperties, true
}

// HasExtensionProperties returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasExtensionProperties() bool {
	if o != nil && o.ExtensionProperties != nil {
		return true
	}

	return false
}

// SetExtensionProperties gets a reference to the given []MicrosoftGraphExtensionProperty and assigns it to the ExtensionProperties field.
func (o *MicrosoftGraphApplication) SetExtensionProperties(v []MicrosoftGraphExtensionProperty) {
	o.ExtensionProperties = &v
}

// GetHomeRealmDiscoveryPolicies returns the HomeRealmDiscoveryPolicies field value if set, zero value otherwise.
func (o *MicrosoftGraphApplication) GetHomeRealmDiscoveryPolicies() []MicrosoftGraphHomeRealmDiscoveryPolicy {
	if o == nil || o.HomeRealmDiscoveryPolicies == nil {
		var ret []MicrosoftGraphHomeRealmDiscoveryPolicy
		return ret
	}
	return *o.HomeRealmDiscoveryPolicies
}

// GetHomeRealmDiscoveryPoliciesOk returns a tuple with the HomeRealmDiscoveryPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphApplication) GetHomeRealmDiscoveryPoliciesOk() (*[]MicrosoftGraphHomeRealmDiscoveryPolicy, bool) {
	if o == nil || o.HomeRealmDiscoveryPolicies == nil {
		return nil, false
	}
	return o.HomeRealmDiscoveryPolicies, true
}

// HasHomeRealmDiscoveryPolicies returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasHomeRealmDiscoveryPolicies() bool {
	if o != nil && o.HomeRealmDiscoveryPolicies != nil {
		return true
	}

	return false
}

// SetHomeRealmDiscoveryPolicies gets a reference to the given []MicrosoftGraphHomeRealmDiscoveryPolicy and assigns it to the HomeRealmDiscoveryPolicies field.
func (o *MicrosoftGraphApplication) SetHomeRealmDiscoveryPolicies(v []MicrosoftGraphHomeRealmDiscoveryPolicy) {
	o.HomeRealmDiscoveryPolicies = &v
}

// GetOwners returns the Owners field value if set, zero value otherwise.
func (o *MicrosoftGraphApplication) GetOwners() []MicrosoftGraphDirectoryObject {
	if o == nil || o.Owners == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret
	}
	return *o.Owners
}

// GetOwnersOk returns a tuple with the Owners field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphApplication) GetOwnersOk() (*[]MicrosoftGraphDirectoryObject, bool) {
	if o == nil || o.Owners == nil {
		return nil, false
	}
	return o.Owners, true
}

// HasOwners returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasOwners() bool {
	if o != nil && o.Owners != nil {
		return true
	}

	return false
}

// SetOwners gets a reference to the given []MicrosoftGraphDirectoryObject and assigns it to the Owners field.
func (o *MicrosoftGraphApplication) SetOwners(v []MicrosoftGraphDirectoryObject) {
	o.Owners = &v
}

// GetTokenIssuancePolicies returns the TokenIssuancePolicies field value if set, zero value otherwise.
func (o *MicrosoftGraphApplication) GetTokenIssuancePolicies() []MicrosoftGraphTokenIssuancePolicy {
	if o == nil || o.TokenIssuancePolicies == nil {
		var ret []MicrosoftGraphTokenIssuancePolicy
		return ret
	}
	return *o.TokenIssuancePolicies
}

// GetTokenIssuancePoliciesOk returns a tuple with the TokenIssuancePolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphApplication) GetTokenIssuancePoliciesOk() (*[]MicrosoftGraphTokenIssuancePolicy, bool) {
	if o == nil || o.TokenIssuancePolicies == nil {
		return nil, false
	}
	return o.TokenIssuancePolicies, true
}

// HasTokenIssuancePolicies returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasTokenIssuancePolicies() bool {
	if o != nil && o.TokenIssuancePolicies != nil {
		return true
	}

	return false
}

// SetTokenIssuancePolicies gets a reference to the given []MicrosoftGraphTokenIssuancePolicy and assigns it to the TokenIssuancePolicies field.
func (o *MicrosoftGraphApplication) SetTokenIssuancePolicies(v []MicrosoftGraphTokenIssuancePolicy) {
	o.TokenIssuancePolicies = &v
}

// GetTokenLifetimePolicies returns the TokenLifetimePolicies field value if set, zero value otherwise.
func (o *MicrosoftGraphApplication) GetTokenLifetimePolicies() []MicrosoftGraphTokenLifetimePolicy {
	if o == nil || o.TokenLifetimePolicies == nil {
		var ret []MicrosoftGraphTokenLifetimePolicy
		return ret
	}
	return *o.TokenLifetimePolicies
}

// GetTokenLifetimePoliciesOk returns a tuple with the TokenLifetimePolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphApplication) GetTokenLifetimePoliciesOk() (*[]MicrosoftGraphTokenLifetimePolicy, bool) {
	if o == nil || o.TokenLifetimePolicies == nil {
		return nil, false
	}
	return o.TokenLifetimePolicies, true
}

// HasTokenLifetimePolicies returns a boolean if a field has been set.
func (o *MicrosoftGraphApplication) HasTokenLifetimePolicies() bool {
	if o != nil && o.TokenLifetimePolicies != nil {
		return true
	}

	return false
}

// SetTokenLifetimePolicies gets a reference to the given []MicrosoftGraphTokenLifetimePolicy and assigns it to the TokenLifetimePolicies field.
func (o *MicrosoftGraphApplication) SetTokenLifetimePolicies(v []MicrosoftGraphTokenLifetimePolicy) {
	o.TokenLifetimePolicies = &v
}

func (o MicrosoftGraphApplication) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.DeletedDateTime.IsSet() {
		toSerialize["deletedDateTime"] = o.DeletedDateTime.Get()
	}
	if o.AddIns != nil {
		toSerialize["addIns"] = o.AddIns
	}
	if o.Api != nil {
		toSerialize["api"] = o.Api
	}
	if o.AppId.IsSet() {
		toSerialize["appId"] = o.AppId.Get()
	}
	if o.ApplicationTemplateId.IsSet() {
		toSerialize["applicationTemplateId"] = o.ApplicationTemplateId.Get()
	}
	if o.AppRoles != nil {
		toSerialize["appRoles"] = o.AppRoles
	}
	if o.CreatedDateTime.IsSet() {
		toSerialize["createdDateTime"] = o.CreatedDateTime.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.DisabledByMicrosoftStatus.IsSet() {
		toSerialize["disabledByMicrosoftStatus"] = o.DisabledByMicrosoftStatus.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.GroupMembershipClaims.IsSet() {
		toSerialize["groupMembershipClaims"] = o.GroupMembershipClaims.Get()
	}
	if o.IdentifierUris != nil {
		toSerialize["identifierUris"] = o.IdentifierUris
	}
	if o.Info != nil {
		toSerialize["info"] = o.Info
	}
	if o.IsDeviceOnlyAuthSupported.IsSet() {
		toSerialize["isDeviceOnlyAuthSupported"] = o.IsDeviceOnlyAuthSupported.Get()
	}
	if o.IsFallbackPublicClient.IsSet() {
		toSerialize["isFallbackPublicClient"] = o.IsFallbackPublicClient.Get()
	}
	if o.KeyCredentials != nil {
		toSerialize["keyCredentials"] = o.KeyCredentials
	}
	if o.Logo != nil {
		toSerialize["logo"] = o.Logo
	}
	if o.Notes.IsSet() {
		toSerialize["notes"] = o.Notes.Get()
	}
	if o.Oauth2RequirePostResponse != nil {
		toSerialize["oauth2RequirePostResponse"] = o.Oauth2RequirePostResponse
	}
	if o.OptionalClaims != nil {
		toSerialize["optionalClaims"] = o.OptionalClaims
	}
	if o.ParentalControlSettings != nil {
		toSerialize["parentalControlSettings"] = o.ParentalControlSettings
	}
	if o.PasswordCredentials != nil {
		toSerialize["passwordCredentials"] = o.PasswordCredentials
	}
	if o.PublicClient != nil {
		toSerialize["publicClient"] = o.PublicClient
	}
	if o.PublisherDomain.IsSet() {
		toSerialize["publisherDomain"] = o.PublisherDomain.Get()
	}
	if o.RequiredResourceAccess != nil {
		toSerialize["requiredResourceAccess"] = o.RequiredResourceAccess
	}
	if o.SignInAudience.IsSet() {
		toSerialize["signInAudience"] = o.SignInAudience.Get()
	}
	if o.Spa != nil {
		toSerialize["spa"] = o.Spa
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.TokenEncryptionKeyId.IsSet() {
		toSerialize["tokenEncryptionKeyId"] = o.TokenEncryptionKeyId.Get()
	}
	if o.VerifiedPublisher != nil {
		toSerialize["verifiedPublisher"] = o.VerifiedPublisher
	}
	if o.Web != nil {
		toSerialize["web"] = o.Web
	}
	if o.CreatedOnBehalfOf != nil {
		toSerialize["createdOnBehalfOf"] = o.CreatedOnBehalfOf
	}
	if o.ExtensionProperties != nil {
		toSerialize["extensionProperties"] = o.ExtensionProperties
	}
	if o.HomeRealmDiscoveryPolicies != nil {
		toSerialize["homeRealmDiscoveryPolicies"] = o.HomeRealmDiscoveryPolicies
	}
	if o.Owners != nil {
		toSerialize["owners"] = o.Owners
	}
	if o.TokenIssuancePolicies != nil {
		toSerialize["tokenIssuancePolicies"] = o.TokenIssuancePolicies
	}
	if o.TokenLifetimePolicies != nil {
		toSerialize["tokenLifetimePolicies"] = o.TokenLifetimePolicies
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphApplication struct {
	value *MicrosoftGraphApplication
	isSet bool
}

func (v NullableMicrosoftGraphApplication) Get() *MicrosoftGraphApplication {
	return v.value
}

func (v *NullableMicrosoftGraphApplication) Set(val *MicrosoftGraphApplication) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphApplication) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphApplication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphApplication(val *MicrosoftGraphApplication) *NullableMicrosoftGraphApplication {
	return &NullableMicrosoftGraphApplication{value: val, isSet: true}
}

func (v NullableMicrosoftGraphApplication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphApplication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


