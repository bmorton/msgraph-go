/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject1242 struct for InlineObject1242
type InlineObject1242 struct {
	Trials AnyOfobject `json:"trials,omitempty"`
	ProbabilityS AnyOfobject `json:"probabilityS,omitempty"`
	Alpha AnyOfobject `json:"alpha,omitempty"`
}

// NewInlineObject1242 instantiates a new InlineObject1242 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject1242() *InlineObject1242 {
	this := InlineObject1242{}
	return &this
}

// NewInlineObject1242WithDefaults instantiates a new InlineObject1242 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject1242WithDefaults() *InlineObject1242 {
	this := InlineObject1242{}
	return &this
}

// GetTrials returns the Trials field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1242) GetTrials() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Trials
}

// GetTrialsOk returns a tuple with the Trials field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1242) GetTrialsOk() (*AnyOfobject, bool) {
	if o == nil || o.Trials == nil {
		return nil, false
	}
	return &o.Trials, true
}

// HasTrials returns a boolean if a field has been set.
func (o *InlineObject1242) HasTrials() bool {
	if o != nil && o.Trials != nil {
		return true
	}

	return false
}

// SetTrials gets a reference to the given AnyOfobject and assigns it to the Trials field.
func (o *InlineObject1242) SetTrials(v AnyOfobject) {
	o.Trials = v
}

// GetProbabilityS returns the ProbabilityS field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1242) GetProbabilityS() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.ProbabilityS
}

// GetProbabilitySOk returns a tuple with the ProbabilityS field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1242) GetProbabilitySOk() (*AnyOfobject, bool) {
	if o == nil || o.ProbabilityS == nil {
		return nil, false
	}
	return &o.ProbabilityS, true
}

// HasProbabilityS returns a boolean if a field has been set.
func (o *InlineObject1242) HasProbabilityS() bool {
	if o != nil && o.ProbabilityS != nil {
		return true
	}

	return false
}

// SetProbabilityS gets a reference to the given AnyOfobject and assigns it to the ProbabilityS field.
func (o *InlineObject1242) SetProbabilityS(v AnyOfobject) {
	o.ProbabilityS = v
}

// GetAlpha returns the Alpha field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1242) GetAlpha() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Alpha
}

// GetAlphaOk returns a tuple with the Alpha field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1242) GetAlphaOk() (*AnyOfobject, bool) {
	if o == nil || o.Alpha == nil {
		return nil, false
	}
	return &o.Alpha, true
}

// HasAlpha returns a boolean if a field has been set.
func (o *InlineObject1242) HasAlpha() bool {
	if o != nil && o.Alpha != nil {
		return true
	}

	return false
}

// SetAlpha gets a reference to the given AnyOfobject and assigns it to the Alpha field.
func (o *InlineObject1242) SetAlpha(v AnyOfobject) {
	o.Alpha = v
}

func (o InlineObject1242) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Trials != nil {
		toSerialize["trials"] = o.Trials
	}
	if o.ProbabilityS != nil {
		toSerialize["probabilityS"] = o.ProbabilityS
	}
	if o.Alpha != nil {
		toSerialize["alpha"] = o.Alpha
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject1242 struct {
	value *InlineObject1242
	isSet bool
}

func (v NullableInlineObject1242) Get() *InlineObject1242 {
	return v.value
}

func (v *NullableInlineObject1242) Set(val *InlineObject1242) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject1242) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject1242) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject1242(val *InlineObject1242) *NullableInlineObject1242 {
	return &NullableInlineObject1242{value: val, isSet: true}
}

func (v NullableInlineObject1242) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject1242) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


