/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphWorkbookChartSeries struct for MicrosoftGraphWorkbookChartSeries
type MicrosoftGraphWorkbookChartSeries struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// Represents the name of a series in a chart.
	Name NullableString `json:"name,omitempty"`
	// Represents the formatting of a chart series, which includes fill and line formatting. Read-only.
	Format AnyOfmicrosoftGraphWorkbookChartSeriesFormat `json:"format,omitempty"`
	// Represents a collection of all points in the series. Read-only.
	Points *[]MicrosoftGraphWorkbookChartPoint `json:"points,omitempty"`
}

// NewMicrosoftGraphWorkbookChartSeries instantiates a new MicrosoftGraphWorkbookChartSeries object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphWorkbookChartSeries() *MicrosoftGraphWorkbookChartSeries {
	this := MicrosoftGraphWorkbookChartSeries{}
	return &this
}

// NewMicrosoftGraphWorkbookChartSeriesWithDefaults instantiates a new MicrosoftGraphWorkbookChartSeries object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphWorkbookChartSeriesWithDefaults() *MicrosoftGraphWorkbookChartSeries {
	this := MicrosoftGraphWorkbookChartSeries{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphWorkbookChartSeries) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWorkbookChartSeries) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkbookChartSeries) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphWorkbookChartSeries) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphWorkbookChartSeries) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphWorkbookChartSeries) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkbookChartSeries) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *MicrosoftGraphWorkbookChartSeries) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *MicrosoftGraphWorkbookChartSeries) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *MicrosoftGraphWorkbookChartSeries) UnsetName() {
	o.Name.Unset()
}

// GetFormat returns the Format field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphWorkbookChartSeries) GetFormat() AnyOfmicrosoftGraphWorkbookChartSeriesFormat {
	if o == nil  {
		var ret AnyOfmicrosoftGraphWorkbookChartSeriesFormat
		return ret
	}
	return o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphWorkbookChartSeries) GetFormatOk() (*AnyOfmicrosoftGraphWorkbookChartSeriesFormat, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return &o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkbookChartSeries) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given AnyOfmicrosoftGraphWorkbookChartSeriesFormat and assigns it to the Format field.
func (o *MicrosoftGraphWorkbookChartSeries) SetFormat(v AnyOfmicrosoftGraphWorkbookChartSeriesFormat) {
	o.Format = v
}

// GetPoints returns the Points field value if set, zero value otherwise.
func (o *MicrosoftGraphWorkbookChartSeries) GetPoints() []MicrosoftGraphWorkbookChartPoint {
	if o == nil || o.Points == nil {
		var ret []MicrosoftGraphWorkbookChartPoint
		return ret
	}
	return *o.Points
}

// GetPointsOk returns a tuple with the Points field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWorkbookChartSeries) GetPointsOk() (*[]MicrosoftGraphWorkbookChartPoint, bool) {
	if o == nil || o.Points == nil {
		return nil, false
	}
	return o.Points, true
}

// HasPoints returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkbookChartSeries) HasPoints() bool {
	if o != nil && o.Points != nil {
		return true
	}

	return false
}

// SetPoints gets a reference to the given []MicrosoftGraphWorkbookChartPoint and assigns it to the Points field.
func (o *MicrosoftGraphWorkbookChartSeries) SetPoints(v []MicrosoftGraphWorkbookChartPoint) {
	o.Points = &v
}

func (o MicrosoftGraphWorkbookChartSeries) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	if o.Points != nil {
		toSerialize["points"] = o.Points
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphWorkbookChartSeries struct {
	value *MicrosoftGraphWorkbookChartSeries
	isSet bool
}

func (v NullableMicrosoftGraphWorkbookChartSeries) Get() *MicrosoftGraphWorkbookChartSeries {
	return v.value
}

func (v *NullableMicrosoftGraphWorkbookChartSeries) Set(val *MicrosoftGraphWorkbookChartSeries) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphWorkbookChartSeries) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphWorkbookChartSeries) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphWorkbookChartSeries(val *MicrosoftGraphWorkbookChartSeries) *NullableMicrosoftGraphWorkbookChartSeries {
	return &NullableMicrosoftGraphWorkbookChartSeries{value: val, isSet: true}
}

func (v NullableMicrosoftGraphWorkbookChartSeries) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphWorkbookChartSeries) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


