/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphSignInFrequencySessionControl struct for MicrosoftGraphSignInFrequencySessionControl
type MicrosoftGraphSignInFrequencySessionControl struct {
	// Specifies whether the session control is enabled.
	IsEnabled NullableBool `json:"isEnabled,omitempty"`
	// Possible values are: days, hours.
	Type AnyOfmicrosoftGraphSigninFrequencyType `json:"type,omitempty"`
	// The number of days or hours.
	Value NullableInt32 `json:"value,omitempty"`
}

// NewMicrosoftGraphSignInFrequencySessionControl instantiates a new MicrosoftGraphSignInFrequencySessionControl object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphSignInFrequencySessionControl() *MicrosoftGraphSignInFrequencySessionControl {
	this := MicrosoftGraphSignInFrequencySessionControl{}
	return &this
}

// NewMicrosoftGraphSignInFrequencySessionControlWithDefaults instantiates a new MicrosoftGraphSignInFrequencySessionControl object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphSignInFrequencySessionControlWithDefaults() *MicrosoftGraphSignInFrequencySessionControl {
	this := MicrosoftGraphSignInFrequencySessionControl{}
	return &this
}

// GetIsEnabled returns the IsEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSignInFrequencySessionControl) GetIsEnabled() bool {
	if o == nil || o.IsEnabled.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsEnabled.Get()
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSignInFrequencySessionControl) GetIsEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsEnabled.Get(), o.IsEnabled.IsSet()
}

// HasIsEnabled returns a boolean if a field has been set.
func (o *MicrosoftGraphSignInFrequencySessionControl) HasIsEnabled() bool {
	if o != nil && o.IsEnabled.IsSet() {
		return true
	}

	return false
}

// SetIsEnabled gets a reference to the given NullableBool and assigns it to the IsEnabled field.
func (o *MicrosoftGraphSignInFrequencySessionControl) SetIsEnabled(v bool) {
	o.IsEnabled.Set(&v)
}
// SetIsEnabledNil sets the value for IsEnabled to be an explicit nil
func (o *MicrosoftGraphSignInFrequencySessionControl) SetIsEnabledNil() {
	o.IsEnabled.Set(nil)
}

// UnsetIsEnabled ensures that no value is present for IsEnabled, not even an explicit nil
func (o *MicrosoftGraphSignInFrequencySessionControl) UnsetIsEnabled() {
	o.IsEnabled.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSignInFrequencySessionControl) GetType() AnyOfmicrosoftGraphSigninFrequencyType {
	if o == nil  {
		var ret AnyOfmicrosoftGraphSigninFrequencyType
		return ret
	}
	return o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSignInFrequencySessionControl) GetTypeOk() (*AnyOfmicrosoftGraphSigninFrequencyType, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return &o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MicrosoftGraphSignInFrequencySessionControl) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given AnyOfmicrosoftGraphSigninFrequencyType and assigns it to the Type field.
func (o *MicrosoftGraphSignInFrequencySessionControl) SetType(v AnyOfmicrosoftGraphSigninFrequencyType) {
	o.Type = v
}

// GetValue returns the Value field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSignInFrequencySessionControl) GetValue() int32 {
	if o == nil || o.Value.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Value.Get()
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSignInFrequencySessionControl) GetValueOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Value.Get(), o.Value.IsSet()
}

// HasValue returns a boolean if a field has been set.
func (o *MicrosoftGraphSignInFrequencySessionControl) HasValue() bool {
	if o != nil && o.Value.IsSet() {
		return true
	}

	return false
}

// SetValue gets a reference to the given NullableInt32 and assigns it to the Value field.
func (o *MicrosoftGraphSignInFrequencySessionControl) SetValue(v int32) {
	o.Value.Set(&v)
}
// SetValueNil sets the value for Value to be an explicit nil
func (o *MicrosoftGraphSignInFrequencySessionControl) SetValueNil() {
	o.Value.Set(nil)
}

// UnsetValue ensures that no value is present for Value, not even an explicit nil
func (o *MicrosoftGraphSignInFrequencySessionControl) UnsetValue() {
	o.Value.Unset()
}

func (o MicrosoftGraphSignInFrequencySessionControl) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsEnabled.IsSet() {
		toSerialize["isEnabled"] = o.IsEnabled.Get()
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Value.IsSet() {
		toSerialize["value"] = o.Value.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphSignInFrequencySessionControl struct {
	value *MicrosoftGraphSignInFrequencySessionControl
	isSet bool
}

func (v NullableMicrosoftGraphSignInFrequencySessionControl) Get() *MicrosoftGraphSignInFrequencySessionControl {
	return v.value
}

func (v *NullableMicrosoftGraphSignInFrequencySessionControl) Set(val *MicrosoftGraphSignInFrequencySessionControl) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphSignInFrequencySessionControl) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphSignInFrequencySessionControl) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphSignInFrequencySessionControl(val *MicrosoftGraphSignInFrequencySessionControl) *NullableMicrosoftGraphSignInFrequencySessionControl {
	return &NullableMicrosoftGraphSignInFrequencySessionControl{value: val, isSet: true}
}

func (v NullableMicrosoftGraphSignInFrequencySessionControl) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphSignInFrequencySessionControl) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


