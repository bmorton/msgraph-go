/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// TimeOff struct for TimeOff
type TimeOff struct {
	// The draft version of this timeOff that is viewable by managers. Required.
	DraftTimeOff AnyOfmicrosoftGraphTimeOffItem `json:"draftTimeOff,omitempty"`
	// The shared version of this timeOff that is viewable by both employees and managers. Required.
	SharedTimeOff AnyOfmicrosoftGraphTimeOffItem `json:"sharedTimeOff,omitempty"`
	// ID of the user assigned to the timeOff. Required.
	UserId NullableString `json:"userId,omitempty"`
}

// NewTimeOff instantiates a new TimeOff object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimeOff() *TimeOff {
	this := TimeOff{}
	return &this
}

// NewTimeOffWithDefaults instantiates a new TimeOff object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimeOffWithDefaults() *TimeOff {
	this := TimeOff{}
	return &this
}

// GetDraftTimeOff returns the DraftTimeOff field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TimeOff) GetDraftTimeOff() AnyOfmicrosoftGraphTimeOffItem {
	if o == nil  {
		var ret AnyOfmicrosoftGraphTimeOffItem
		return ret
	}
	return o.DraftTimeOff
}

// GetDraftTimeOffOk returns a tuple with the DraftTimeOff field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimeOff) GetDraftTimeOffOk() (*AnyOfmicrosoftGraphTimeOffItem, bool) {
	if o == nil || o.DraftTimeOff == nil {
		return nil, false
	}
	return &o.DraftTimeOff, true
}

// HasDraftTimeOff returns a boolean if a field has been set.
func (o *TimeOff) HasDraftTimeOff() bool {
	if o != nil && o.DraftTimeOff != nil {
		return true
	}

	return false
}

// SetDraftTimeOff gets a reference to the given AnyOfmicrosoftGraphTimeOffItem and assigns it to the DraftTimeOff field.
func (o *TimeOff) SetDraftTimeOff(v AnyOfmicrosoftGraphTimeOffItem) {
	o.DraftTimeOff = v
}

// GetSharedTimeOff returns the SharedTimeOff field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TimeOff) GetSharedTimeOff() AnyOfmicrosoftGraphTimeOffItem {
	if o == nil  {
		var ret AnyOfmicrosoftGraphTimeOffItem
		return ret
	}
	return o.SharedTimeOff
}

// GetSharedTimeOffOk returns a tuple with the SharedTimeOff field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimeOff) GetSharedTimeOffOk() (*AnyOfmicrosoftGraphTimeOffItem, bool) {
	if o == nil || o.SharedTimeOff == nil {
		return nil, false
	}
	return &o.SharedTimeOff, true
}

// HasSharedTimeOff returns a boolean if a field has been set.
func (o *TimeOff) HasSharedTimeOff() bool {
	if o != nil && o.SharedTimeOff != nil {
		return true
	}

	return false
}

// SetSharedTimeOff gets a reference to the given AnyOfmicrosoftGraphTimeOffItem and assigns it to the SharedTimeOff field.
func (o *TimeOff) SetSharedTimeOff(v AnyOfmicrosoftGraphTimeOffItem) {
	o.SharedTimeOff = v
}

// GetUserId returns the UserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TimeOff) GetUserId() string {
	if o == nil || o.UserId.Get() == nil {
		var ret string
		return ret
	}
	return *o.UserId.Get()
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TimeOff) GetUserIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UserId.Get(), o.UserId.IsSet()
}

// HasUserId returns a boolean if a field has been set.
func (o *TimeOff) HasUserId() bool {
	if o != nil && o.UserId.IsSet() {
		return true
	}

	return false
}

// SetUserId gets a reference to the given NullableString and assigns it to the UserId field.
func (o *TimeOff) SetUserId(v string) {
	o.UserId.Set(&v)
}
// SetUserIdNil sets the value for UserId to be an explicit nil
func (o *TimeOff) SetUserIdNil() {
	o.UserId.Set(nil)
}

// UnsetUserId ensures that no value is present for UserId, not even an explicit nil
func (o *TimeOff) UnsetUserId() {
	o.UserId.Unset()
}

func (o TimeOff) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DraftTimeOff != nil {
		toSerialize["draftTimeOff"] = o.DraftTimeOff
	}
	if o.SharedTimeOff != nil {
		toSerialize["sharedTimeOff"] = o.SharedTimeOff
	}
	if o.UserId.IsSet() {
		toSerialize["userId"] = o.UserId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableTimeOff struct {
	value *TimeOff
	isSet bool
}

func (v NullableTimeOff) Get() *TimeOff {
	return v.value
}

func (v *NullableTimeOff) Set(val *TimeOff) {
	v.value = val
	v.isSet = true
}

func (v NullableTimeOff) IsSet() bool {
	return v.isSet
}

func (v *NullableTimeOff) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimeOff(val *TimeOff) *NullableTimeOff {
	return &NullableTimeOff{value: val, isSet: true}
}

func (v NullableTimeOff) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimeOff) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


