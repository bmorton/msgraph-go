/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphServiceUpdateMessageViewpoint struct for MicrosoftGraphServiceUpdateMessageViewpoint
type MicrosoftGraphServiceUpdateMessageViewpoint struct {
	// Indicates whether the user archived the message.
	IsArchived NullableBool `json:"isArchived,omitempty"`
	// Indicates whether the user marked the message as favorite.
	IsFavorited NullableBool `json:"isFavorited,omitempty"`
	// Indicates whether the user read the message.
	IsRead NullableBool `json:"isRead,omitempty"`
}

// NewMicrosoftGraphServiceUpdateMessageViewpoint instantiates a new MicrosoftGraphServiceUpdateMessageViewpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphServiceUpdateMessageViewpoint() *MicrosoftGraphServiceUpdateMessageViewpoint {
	this := MicrosoftGraphServiceUpdateMessageViewpoint{}
	return &this
}

// NewMicrosoftGraphServiceUpdateMessageViewpointWithDefaults instantiates a new MicrosoftGraphServiceUpdateMessageViewpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphServiceUpdateMessageViewpointWithDefaults() *MicrosoftGraphServiceUpdateMessageViewpoint {
	this := MicrosoftGraphServiceUpdateMessageViewpoint{}
	return &this
}

// GetIsArchived returns the IsArchived field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphServiceUpdateMessageViewpoint) GetIsArchived() bool {
	if o == nil || o.IsArchived.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsArchived.Get()
}

// GetIsArchivedOk returns a tuple with the IsArchived field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphServiceUpdateMessageViewpoint) GetIsArchivedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsArchived.Get(), o.IsArchived.IsSet()
}

// HasIsArchived returns a boolean if a field has been set.
func (o *MicrosoftGraphServiceUpdateMessageViewpoint) HasIsArchived() bool {
	if o != nil && o.IsArchived.IsSet() {
		return true
	}

	return false
}

// SetIsArchived gets a reference to the given NullableBool and assigns it to the IsArchived field.
func (o *MicrosoftGraphServiceUpdateMessageViewpoint) SetIsArchived(v bool) {
	o.IsArchived.Set(&v)
}
// SetIsArchivedNil sets the value for IsArchived to be an explicit nil
func (o *MicrosoftGraphServiceUpdateMessageViewpoint) SetIsArchivedNil() {
	o.IsArchived.Set(nil)
}

// UnsetIsArchived ensures that no value is present for IsArchived, not even an explicit nil
func (o *MicrosoftGraphServiceUpdateMessageViewpoint) UnsetIsArchived() {
	o.IsArchived.Unset()
}

// GetIsFavorited returns the IsFavorited field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphServiceUpdateMessageViewpoint) GetIsFavorited() bool {
	if o == nil || o.IsFavorited.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsFavorited.Get()
}

// GetIsFavoritedOk returns a tuple with the IsFavorited field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphServiceUpdateMessageViewpoint) GetIsFavoritedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsFavorited.Get(), o.IsFavorited.IsSet()
}

// HasIsFavorited returns a boolean if a field has been set.
func (o *MicrosoftGraphServiceUpdateMessageViewpoint) HasIsFavorited() bool {
	if o != nil && o.IsFavorited.IsSet() {
		return true
	}

	return false
}

// SetIsFavorited gets a reference to the given NullableBool and assigns it to the IsFavorited field.
func (o *MicrosoftGraphServiceUpdateMessageViewpoint) SetIsFavorited(v bool) {
	o.IsFavorited.Set(&v)
}
// SetIsFavoritedNil sets the value for IsFavorited to be an explicit nil
func (o *MicrosoftGraphServiceUpdateMessageViewpoint) SetIsFavoritedNil() {
	o.IsFavorited.Set(nil)
}

// UnsetIsFavorited ensures that no value is present for IsFavorited, not even an explicit nil
func (o *MicrosoftGraphServiceUpdateMessageViewpoint) UnsetIsFavorited() {
	o.IsFavorited.Unset()
}

// GetIsRead returns the IsRead field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphServiceUpdateMessageViewpoint) GetIsRead() bool {
	if o == nil || o.IsRead.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsRead.Get()
}

// GetIsReadOk returns a tuple with the IsRead field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphServiceUpdateMessageViewpoint) GetIsReadOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsRead.Get(), o.IsRead.IsSet()
}

// HasIsRead returns a boolean if a field has been set.
func (o *MicrosoftGraphServiceUpdateMessageViewpoint) HasIsRead() bool {
	if o != nil && o.IsRead.IsSet() {
		return true
	}

	return false
}

// SetIsRead gets a reference to the given NullableBool and assigns it to the IsRead field.
func (o *MicrosoftGraphServiceUpdateMessageViewpoint) SetIsRead(v bool) {
	o.IsRead.Set(&v)
}
// SetIsReadNil sets the value for IsRead to be an explicit nil
func (o *MicrosoftGraphServiceUpdateMessageViewpoint) SetIsReadNil() {
	o.IsRead.Set(nil)
}

// UnsetIsRead ensures that no value is present for IsRead, not even an explicit nil
func (o *MicrosoftGraphServiceUpdateMessageViewpoint) UnsetIsRead() {
	o.IsRead.Unset()
}

func (o MicrosoftGraphServiceUpdateMessageViewpoint) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsArchived.IsSet() {
		toSerialize["isArchived"] = o.IsArchived.Get()
	}
	if o.IsFavorited.IsSet() {
		toSerialize["isFavorited"] = o.IsFavorited.Get()
	}
	if o.IsRead.IsSet() {
		toSerialize["isRead"] = o.IsRead.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphServiceUpdateMessageViewpoint struct {
	value *MicrosoftGraphServiceUpdateMessageViewpoint
	isSet bool
}

func (v NullableMicrosoftGraphServiceUpdateMessageViewpoint) Get() *MicrosoftGraphServiceUpdateMessageViewpoint {
	return v.value
}

func (v *NullableMicrosoftGraphServiceUpdateMessageViewpoint) Set(val *MicrosoftGraphServiceUpdateMessageViewpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphServiceUpdateMessageViewpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphServiceUpdateMessageViewpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphServiceUpdateMessageViewpoint(val *MicrosoftGraphServiceUpdateMessageViewpoint) *NullableMicrosoftGraphServiceUpdateMessageViewpoint {
	return &NullableMicrosoftGraphServiceUpdateMessageViewpoint{value: val, isSet: true}
}

func (v NullableMicrosoftGraphServiceUpdateMessageViewpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphServiceUpdateMessageViewpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


