/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// InlineObject1445 struct for InlineObject1445
type InlineObject1445 struct {
	Rate AnyOfobject `json:"rate,omitempty"`
	Pmt AnyOfobject `json:"pmt,omitempty"`
	Pv AnyOfobject `json:"pv,omitempty"`
	Fv AnyOfobject `json:"fv,omitempty"`
	Type AnyOfobject `json:"type,omitempty"`
}

// NewInlineObject1445 instantiates a new InlineObject1445 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject1445() *InlineObject1445 {
	this := InlineObject1445{}
	return &this
}

// NewInlineObject1445WithDefaults instantiates a new InlineObject1445 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject1445WithDefaults() *InlineObject1445 {
	this := InlineObject1445{}
	return &this
}

// GetRate returns the Rate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1445) GetRate() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Rate
}

// GetRateOk returns a tuple with the Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1445) GetRateOk() (*AnyOfobject, bool) {
	if o == nil || o.Rate == nil {
		return nil, false
	}
	return &o.Rate, true
}

// HasRate returns a boolean if a field has been set.
func (o *InlineObject1445) HasRate() bool {
	if o != nil && o.Rate != nil {
		return true
	}

	return false
}

// SetRate gets a reference to the given AnyOfobject and assigns it to the Rate field.
func (o *InlineObject1445) SetRate(v AnyOfobject) {
	o.Rate = v
}

// GetPmt returns the Pmt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1445) GetPmt() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Pmt
}

// GetPmtOk returns a tuple with the Pmt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1445) GetPmtOk() (*AnyOfobject, bool) {
	if o == nil || o.Pmt == nil {
		return nil, false
	}
	return &o.Pmt, true
}

// HasPmt returns a boolean if a field has been set.
func (o *InlineObject1445) HasPmt() bool {
	if o != nil && o.Pmt != nil {
		return true
	}

	return false
}

// SetPmt gets a reference to the given AnyOfobject and assigns it to the Pmt field.
func (o *InlineObject1445) SetPmt(v AnyOfobject) {
	o.Pmt = v
}

// GetPv returns the Pv field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1445) GetPv() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Pv
}

// GetPvOk returns a tuple with the Pv field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1445) GetPvOk() (*AnyOfobject, bool) {
	if o == nil || o.Pv == nil {
		return nil, false
	}
	return &o.Pv, true
}

// HasPv returns a boolean if a field has been set.
func (o *InlineObject1445) HasPv() bool {
	if o != nil && o.Pv != nil {
		return true
	}

	return false
}

// SetPv gets a reference to the given AnyOfobject and assigns it to the Pv field.
func (o *InlineObject1445) SetPv(v AnyOfobject) {
	o.Pv = v
}

// GetFv returns the Fv field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1445) GetFv() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Fv
}

// GetFvOk returns a tuple with the Fv field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1445) GetFvOk() (*AnyOfobject, bool) {
	if o == nil || o.Fv == nil {
		return nil, false
	}
	return &o.Fv, true
}

// HasFv returns a boolean if a field has been set.
func (o *InlineObject1445) HasFv() bool {
	if o != nil && o.Fv != nil {
		return true
	}

	return false
}

// SetFv gets a reference to the given AnyOfobject and assigns it to the Fv field.
func (o *InlineObject1445) SetFv(v AnyOfobject) {
	o.Fv = v
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1445) GetType() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1445) GetTypeOk() (*AnyOfobject, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return &o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *InlineObject1445) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given AnyOfobject and assigns it to the Type field.
func (o *InlineObject1445) SetType(v AnyOfobject) {
	o.Type = v
}

func (o InlineObject1445) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Rate != nil {
		toSerialize["rate"] = o.Rate
	}
	if o.Pmt != nil {
		toSerialize["pmt"] = o.Pmt
	}
	if o.Pv != nil {
		toSerialize["pv"] = o.Pv
	}
	if o.Fv != nil {
		toSerialize["fv"] = o.Fv
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject1445 struct {
	value *InlineObject1445
	isSet bool
}

func (v NullableInlineObject1445) Get() *InlineObject1445 {
	return v.value
}

func (v *NullableInlineObject1445) Set(val *InlineObject1445) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject1445) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject1445) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject1445(val *InlineObject1445) *NullableInlineObject1445 {
	return &NullableInlineObject1445{value: val, isSet: true}
}

func (v NullableInlineObject1445) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject1445) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


