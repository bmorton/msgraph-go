/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject1286 struct for InlineObject1286
type InlineObject1286 struct {
	DateText AnyOfobject `json:"dateText,omitempty"`
}

// NewInlineObject1286 instantiates a new InlineObject1286 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject1286() *InlineObject1286 {
	this := InlineObject1286{}
	return &this
}

// NewInlineObject1286WithDefaults instantiates a new InlineObject1286 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject1286WithDefaults() *InlineObject1286 {
	this := InlineObject1286{}
	return &this
}

// GetDateText returns the DateText field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1286) GetDateText() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.DateText
}

// GetDateTextOk returns a tuple with the DateText field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1286) GetDateTextOk() (*AnyOfobject, bool) {
	if o == nil || o.DateText == nil {
		return nil, false
	}
	return &o.DateText, true
}

// HasDateText returns a boolean if a field has been set.
func (o *InlineObject1286) HasDateText() bool {
	if o != nil && o.DateText != nil {
		return true
	}

	return false
}

// SetDateText gets a reference to the given AnyOfobject and assigns it to the DateText field.
func (o *InlineObject1286) SetDateText(v AnyOfobject) {
	o.DateText = v
}

func (o InlineObject1286) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DateText != nil {
		toSerialize["dateText"] = o.DateText
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject1286 struct {
	value *InlineObject1286
	isSet bool
}

func (v NullableInlineObject1286) Get() *InlineObject1286 {
	return v.value
}

func (v *NullableInlineObject1286) Set(val *InlineObject1286) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject1286) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject1286) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject1286(val *InlineObject1286) *NullableInlineObject1286 {
	return &NullableInlineObject1286{value: val, isSet: true}
}

func (v NullableInlineObject1286) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject1286) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


