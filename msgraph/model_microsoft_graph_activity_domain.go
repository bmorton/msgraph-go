/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphActivityDomain the model 'MicrosoftGraphActivityDomain'
type MicrosoftGraphActivityDomain string

// List of microsoft.graph.activityDomain
const (
	UNKNOWN MicrosoftGraphActivityDomain = "unknown"
	WORK MicrosoftGraphActivityDomain = "work"
	PERSONAL MicrosoftGraphActivityDomain = "personal"
	UNRESTRICTED MicrosoftGraphActivityDomain = "unrestricted"
)

// All allowed values of MicrosoftGraphActivityDomain enum
var AllowedMicrosoftGraphActivityDomainEnumValues = []MicrosoftGraphActivityDomain{
	"unknown",
	"work",
	"personal",
	"unrestricted",
}

func (v *MicrosoftGraphActivityDomain) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphActivityDomain(value)
	for _, existing := range AllowedMicrosoftGraphActivityDomainEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphActivityDomain", value)
}

// NewMicrosoftGraphActivityDomainFromValue returns a pointer to a valid MicrosoftGraphActivityDomain
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphActivityDomainFromValue(v string) (*MicrosoftGraphActivityDomain, error) {
	ev := MicrosoftGraphActivityDomain(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphActivityDomain: valid values are %v", v, AllowedMicrosoftGraphActivityDomainEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphActivityDomain) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphActivityDomainEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.activityDomain value
func (v MicrosoftGraphActivityDomain) Ptr() *MicrosoftGraphActivityDomain {
	return &v
}

type NullableMicrosoftGraphActivityDomain struct {
	value *MicrosoftGraphActivityDomain
	isSet bool
}

func (v NullableMicrosoftGraphActivityDomain) Get() *MicrosoftGraphActivityDomain {
	return v.value
}

func (v *NullableMicrosoftGraphActivityDomain) Set(val *MicrosoftGraphActivityDomain) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphActivityDomain) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphActivityDomain) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphActivityDomain(val *MicrosoftGraphActivityDomain) *NullableMicrosoftGraphActivityDomain {
	return &NullableMicrosoftGraphActivityDomain{value: val, isSet: true}
}

func (v NullableMicrosoftGraphActivityDomain) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphActivityDomain) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

