/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IosManagedAppProtection Policy used to configure detailed management settings targeted to specific security groups and for a specified set of apps on an iOS device
type IosManagedAppProtection struct {
	// Type of encryption which should be used for data in a managed app. Possible values are: useDeviceSettings, afterDeviceRestart, whenDeviceLockedExceptOpenFiles, whenDeviceLocked.
	AppDataEncryptionType AnyOfmicrosoftGraphManagedAppDataEncryptionType `json:"appDataEncryptionType,omitempty"`
	// A custom browser protocol to open weblink on iOS. When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
	CustomBrowserProtocol NullableString `json:"customBrowserProtocol,omitempty"`
	// Count of apps to which the current policy is deployed.
	DeployedAppCount *int32 `json:"deployedAppCount,omitempty"`
	// Indicates whether use of the FaceID is allowed in place of a pin if PinRequired is set to True.
	FaceIdBlocked *bool `json:"faceIdBlocked,omitempty"`
	// Versions less than the specified version will block the managed app from accessing company data.
	MinimumRequiredSdkVersion NullableString `json:"minimumRequiredSdkVersion,omitempty"`
	// List of apps to which the policy is deployed.
	Apps *[]MicrosoftGraphManagedMobileApp `json:"apps,omitempty"`
	// Navigation property to deployment summary of the configuration.
	DeploymentSummary AnyOfmicrosoftGraphManagedAppPolicyDeploymentSummary `json:"deploymentSummary,omitempty"`
}

// NewIosManagedAppProtection instantiates a new IosManagedAppProtection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIosManagedAppProtection() *IosManagedAppProtection {
	this := IosManagedAppProtection{}
	return &this
}

// NewIosManagedAppProtectionWithDefaults instantiates a new IosManagedAppProtection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIosManagedAppProtectionWithDefaults() *IosManagedAppProtection {
	this := IosManagedAppProtection{}
	return &this
}

// GetAppDataEncryptionType returns the AppDataEncryptionType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IosManagedAppProtection) GetAppDataEncryptionType() AnyOfmicrosoftGraphManagedAppDataEncryptionType {
	if o == nil  {
		var ret AnyOfmicrosoftGraphManagedAppDataEncryptionType
		return ret
	}
	return o.AppDataEncryptionType
}

// GetAppDataEncryptionTypeOk returns a tuple with the AppDataEncryptionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IosManagedAppProtection) GetAppDataEncryptionTypeOk() (*AnyOfmicrosoftGraphManagedAppDataEncryptionType, bool) {
	if o == nil || o.AppDataEncryptionType == nil {
		return nil, false
	}
	return &o.AppDataEncryptionType, true
}

// HasAppDataEncryptionType returns a boolean if a field has been set.
func (o *IosManagedAppProtection) HasAppDataEncryptionType() bool {
	if o != nil && o.AppDataEncryptionType != nil {
		return true
	}

	return false
}

// SetAppDataEncryptionType gets a reference to the given AnyOfmicrosoftGraphManagedAppDataEncryptionType and assigns it to the AppDataEncryptionType field.
func (o *IosManagedAppProtection) SetAppDataEncryptionType(v AnyOfmicrosoftGraphManagedAppDataEncryptionType) {
	o.AppDataEncryptionType = v
}

// GetCustomBrowserProtocol returns the CustomBrowserProtocol field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IosManagedAppProtection) GetCustomBrowserProtocol() string {
	if o == nil || o.CustomBrowserProtocol.Get() == nil {
		var ret string
		return ret
	}
	return *o.CustomBrowserProtocol.Get()
}

// GetCustomBrowserProtocolOk returns a tuple with the CustomBrowserProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IosManagedAppProtection) GetCustomBrowserProtocolOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CustomBrowserProtocol.Get(), o.CustomBrowserProtocol.IsSet()
}

// HasCustomBrowserProtocol returns a boolean if a field has been set.
func (o *IosManagedAppProtection) HasCustomBrowserProtocol() bool {
	if o != nil && o.CustomBrowserProtocol.IsSet() {
		return true
	}

	return false
}

// SetCustomBrowserProtocol gets a reference to the given NullableString and assigns it to the CustomBrowserProtocol field.
func (o *IosManagedAppProtection) SetCustomBrowserProtocol(v string) {
	o.CustomBrowserProtocol.Set(&v)
}
// SetCustomBrowserProtocolNil sets the value for CustomBrowserProtocol to be an explicit nil
func (o *IosManagedAppProtection) SetCustomBrowserProtocolNil() {
	o.CustomBrowserProtocol.Set(nil)
}

// UnsetCustomBrowserProtocol ensures that no value is present for CustomBrowserProtocol, not even an explicit nil
func (o *IosManagedAppProtection) UnsetCustomBrowserProtocol() {
	o.CustomBrowserProtocol.Unset()
}

// GetDeployedAppCount returns the DeployedAppCount field value if set, zero value otherwise.
func (o *IosManagedAppProtection) GetDeployedAppCount() int32 {
	if o == nil || o.DeployedAppCount == nil {
		var ret int32
		return ret
	}
	return *o.DeployedAppCount
}

// GetDeployedAppCountOk returns a tuple with the DeployedAppCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IosManagedAppProtection) GetDeployedAppCountOk() (*int32, bool) {
	if o == nil || o.DeployedAppCount == nil {
		return nil, false
	}
	return o.DeployedAppCount, true
}

// HasDeployedAppCount returns a boolean if a field has been set.
func (o *IosManagedAppProtection) HasDeployedAppCount() bool {
	if o != nil && o.DeployedAppCount != nil {
		return true
	}

	return false
}

// SetDeployedAppCount gets a reference to the given int32 and assigns it to the DeployedAppCount field.
func (o *IosManagedAppProtection) SetDeployedAppCount(v int32) {
	o.DeployedAppCount = &v
}

// GetFaceIdBlocked returns the FaceIdBlocked field value if set, zero value otherwise.
func (o *IosManagedAppProtection) GetFaceIdBlocked() bool {
	if o == nil || o.FaceIdBlocked == nil {
		var ret bool
		return ret
	}
	return *o.FaceIdBlocked
}

// GetFaceIdBlockedOk returns a tuple with the FaceIdBlocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IosManagedAppProtection) GetFaceIdBlockedOk() (*bool, bool) {
	if o == nil || o.FaceIdBlocked == nil {
		return nil, false
	}
	return o.FaceIdBlocked, true
}

// HasFaceIdBlocked returns a boolean if a field has been set.
func (o *IosManagedAppProtection) HasFaceIdBlocked() bool {
	if o != nil && o.FaceIdBlocked != nil {
		return true
	}

	return false
}

// SetFaceIdBlocked gets a reference to the given bool and assigns it to the FaceIdBlocked field.
func (o *IosManagedAppProtection) SetFaceIdBlocked(v bool) {
	o.FaceIdBlocked = &v
}

// GetMinimumRequiredSdkVersion returns the MinimumRequiredSdkVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IosManagedAppProtection) GetMinimumRequiredSdkVersion() string {
	if o == nil || o.MinimumRequiredSdkVersion.Get() == nil {
		var ret string
		return ret
	}
	return *o.MinimumRequiredSdkVersion.Get()
}

// GetMinimumRequiredSdkVersionOk returns a tuple with the MinimumRequiredSdkVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IosManagedAppProtection) GetMinimumRequiredSdkVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MinimumRequiredSdkVersion.Get(), o.MinimumRequiredSdkVersion.IsSet()
}

// HasMinimumRequiredSdkVersion returns a boolean if a field has been set.
func (o *IosManagedAppProtection) HasMinimumRequiredSdkVersion() bool {
	if o != nil && o.MinimumRequiredSdkVersion.IsSet() {
		return true
	}

	return false
}

// SetMinimumRequiredSdkVersion gets a reference to the given NullableString and assigns it to the MinimumRequiredSdkVersion field.
func (o *IosManagedAppProtection) SetMinimumRequiredSdkVersion(v string) {
	o.MinimumRequiredSdkVersion.Set(&v)
}
// SetMinimumRequiredSdkVersionNil sets the value for MinimumRequiredSdkVersion to be an explicit nil
func (o *IosManagedAppProtection) SetMinimumRequiredSdkVersionNil() {
	o.MinimumRequiredSdkVersion.Set(nil)
}

// UnsetMinimumRequiredSdkVersion ensures that no value is present for MinimumRequiredSdkVersion, not even an explicit nil
func (o *IosManagedAppProtection) UnsetMinimumRequiredSdkVersion() {
	o.MinimumRequiredSdkVersion.Unset()
}

// GetApps returns the Apps field value if set, zero value otherwise.
func (o *IosManagedAppProtection) GetApps() []MicrosoftGraphManagedMobileApp {
	if o == nil || o.Apps == nil {
		var ret []MicrosoftGraphManagedMobileApp
		return ret
	}
	return *o.Apps
}

// GetAppsOk returns a tuple with the Apps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IosManagedAppProtection) GetAppsOk() (*[]MicrosoftGraphManagedMobileApp, bool) {
	if o == nil || o.Apps == nil {
		return nil, false
	}
	return o.Apps, true
}

// HasApps returns a boolean if a field has been set.
func (o *IosManagedAppProtection) HasApps() bool {
	if o != nil && o.Apps != nil {
		return true
	}

	return false
}

// SetApps gets a reference to the given []MicrosoftGraphManagedMobileApp and assigns it to the Apps field.
func (o *IosManagedAppProtection) SetApps(v []MicrosoftGraphManagedMobileApp) {
	o.Apps = &v
}

// GetDeploymentSummary returns the DeploymentSummary field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IosManagedAppProtection) GetDeploymentSummary() AnyOfmicrosoftGraphManagedAppPolicyDeploymentSummary {
	if o == nil  {
		var ret AnyOfmicrosoftGraphManagedAppPolicyDeploymentSummary
		return ret
	}
	return o.DeploymentSummary
}

// GetDeploymentSummaryOk returns a tuple with the DeploymentSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IosManagedAppProtection) GetDeploymentSummaryOk() (*AnyOfmicrosoftGraphManagedAppPolicyDeploymentSummary, bool) {
	if o == nil || o.DeploymentSummary == nil {
		return nil, false
	}
	return &o.DeploymentSummary, true
}

// HasDeploymentSummary returns a boolean if a field has been set.
func (o *IosManagedAppProtection) HasDeploymentSummary() bool {
	if o != nil && o.DeploymentSummary != nil {
		return true
	}

	return false
}

// SetDeploymentSummary gets a reference to the given AnyOfmicrosoftGraphManagedAppPolicyDeploymentSummary and assigns it to the DeploymentSummary field.
func (o *IosManagedAppProtection) SetDeploymentSummary(v AnyOfmicrosoftGraphManagedAppPolicyDeploymentSummary) {
	o.DeploymentSummary = v
}

func (o IosManagedAppProtection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AppDataEncryptionType != nil {
		toSerialize["appDataEncryptionType"] = o.AppDataEncryptionType
	}
	if o.CustomBrowserProtocol.IsSet() {
		toSerialize["customBrowserProtocol"] = o.CustomBrowserProtocol.Get()
	}
	if o.DeployedAppCount != nil {
		toSerialize["deployedAppCount"] = o.DeployedAppCount
	}
	if o.FaceIdBlocked != nil {
		toSerialize["faceIdBlocked"] = o.FaceIdBlocked
	}
	if o.MinimumRequiredSdkVersion.IsSet() {
		toSerialize["minimumRequiredSdkVersion"] = o.MinimumRequiredSdkVersion.Get()
	}
	if o.Apps != nil {
		toSerialize["apps"] = o.Apps
	}
	if o.DeploymentSummary != nil {
		toSerialize["deploymentSummary"] = o.DeploymentSummary
	}
	return json.Marshal(toSerialize)
}

type NullableIosManagedAppProtection struct {
	value *IosManagedAppProtection
	isSet bool
}

func (v NullableIosManagedAppProtection) Get() *IosManagedAppProtection {
	return v.value
}

func (v *NullableIosManagedAppProtection) Set(val *IosManagedAppProtection) {
	v.value = val
	v.isSet = true
}

func (v NullableIosManagedAppProtection) IsSet() bool {
	return v.isSet
}

func (v *NullableIosManagedAppProtection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIosManagedAppProtection(val *IosManagedAppProtection) *NullableIosManagedAppProtection {
	return &NullableIosManagedAppProtection{value: val, isSet: true}
}

func (v NullableIosManagedAppProtection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIosManagedAppProtection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


