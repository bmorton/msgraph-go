/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphDeviceDetail struct for MicrosoftGraphDeviceDetail
type MicrosoftGraphDeviceDetail struct {
	// Indicates the browser information of the used for signing in.
	Browser NullableString `json:"browser,omitempty"`
	// Refers to the UniqueID of the device used for signing in.
	DeviceId NullableString `json:"deviceId,omitempty"`
	// Refers to the name of the device used for signing in.
	DisplayName NullableString `json:"displayName,omitempty"`
	// Indicates whether the device is compliant.
	IsCompliant NullableBool `json:"isCompliant,omitempty"`
	// Indicates whether the device is managed.
	IsManaged NullableBool `json:"isManaged,omitempty"`
	// Indicates the operating system name and version used for signing in.
	OperatingSystem NullableString `json:"operatingSystem,omitempty"`
	// Provides information about whether the signed-in device is Workplace Joined, AzureAD Joined, Domain Joined.
	TrustType NullableString `json:"trustType,omitempty"`
}

// NewMicrosoftGraphDeviceDetail instantiates a new MicrosoftGraphDeviceDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphDeviceDetail() *MicrosoftGraphDeviceDetail {
	this := MicrosoftGraphDeviceDetail{}
	return &this
}

// NewMicrosoftGraphDeviceDetailWithDefaults instantiates a new MicrosoftGraphDeviceDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphDeviceDetailWithDefaults() *MicrosoftGraphDeviceDetail {
	this := MicrosoftGraphDeviceDetail{}
	return &this
}

// GetBrowser returns the Browser field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDeviceDetail) GetBrowser() string {
	if o == nil || o.Browser.Get() == nil {
		var ret string
		return ret
	}
	return *o.Browser.Get()
}

// GetBrowserOk returns a tuple with the Browser field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDeviceDetail) GetBrowserOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Browser.Get(), o.Browser.IsSet()
}

// HasBrowser returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceDetail) HasBrowser() bool {
	if o != nil && o.Browser.IsSet() {
		return true
	}

	return false
}

// SetBrowser gets a reference to the given NullableString and assigns it to the Browser field.
func (o *MicrosoftGraphDeviceDetail) SetBrowser(v string) {
	o.Browser.Set(&v)
}
// SetBrowserNil sets the value for Browser to be an explicit nil
func (o *MicrosoftGraphDeviceDetail) SetBrowserNil() {
	o.Browser.Set(nil)
}

// UnsetBrowser ensures that no value is present for Browser, not even an explicit nil
func (o *MicrosoftGraphDeviceDetail) UnsetBrowser() {
	o.Browser.Unset()
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDeviceDetail) GetDeviceId() string {
	if o == nil || o.DeviceId.Get() == nil {
		var ret string
		return ret
	}
	return *o.DeviceId.Get()
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDeviceDetail) GetDeviceIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DeviceId.Get(), o.DeviceId.IsSet()
}

// HasDeviceId returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceDetail) HasDeviceId() bool {
	if o != nil && o.DeviceId.IsSet() {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given NullableString and assigns it to the DeviceId field.
func (o *MicrosoftGraphDeviceDetail) SetDeviceId(v string) {
	o.DeviceId.Set(&v)
}
// SetDeviceIdNil sets the value for DeviceId to be an explicit nil
func (o *MicrosoftGraphDeviceDetail) SetDeviceIdNil() {
	o.DeviceId.Set(nil)
}

// UnsetDeviceId ensures that no value is present for DeviceId, not even an explicit nil
func (o *MicrosoftGraphDeviceDetail) UnsetDeviceId() {
	o.DeviceId.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDeviceDetail) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDeviceDetail) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceDetail) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *MicrosoftGraphDeviceDetail) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *MicrosoftGraphDeviceDetail) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *MicrosoftGraphDeviceDetail) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetIsCompliant returns the IsCompliant field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDeviceDetail) GetIsCompliant() bool {
	if o == nil || o.IsCompliant.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsCompliant.Get()
}

// GetIsCompliantOk returns a tuple with the IsCompliant field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDeviceDetail) GetIsCompliantOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsCompliant.Get(), o.IsCompliant.IsSet()
}

// HasIsCompliant returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceDetail) HasIsCompliant() bool {
	if o != nil && o.IsCompliant.IsSet() {
		return true
	}

	return false
}

// SetIsCompliant gets a reference to the given NullableBool and assigns it to the IsCompliant field.
func (o *MicrosoftGraphDeviceDetail) SetIsCompliant(v bool) {
	o.IsCompliant.Set(&v)
}
// SetIsCompliantNil sets the value for IsCompliant to be an explicit nil
func (o *MicrosoftGraphDeviceDetail) SetIsCompliantNil() {
	o.IsCompliant.Set(nil)
}

// UnsetIsCompliant ensures that no value is present for IsCompliant, not even an explicit nil
func (o *MicrosoftGraphDeviceDetail) UnsetIsCompliant() {
	o.IsCompliant.Unset()
}

// GetIsManaged returns the IsManaged field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDeviceDetail) GetIsManaged() bool {
	if o == nil || o.IsManaged.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsManaged.Get()
}

// GetIsManagedOk returns a tuple with the IsManaged field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDeviceDetail) GetIsManagedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsManaged.Get(), o.IsManaged.IsSet()
}

// HasIsManaged returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceDetail) HasIsManaged() bool {
	if o != nil && o.IsManaged.IsSet() {
		return true
	}

	return false
}

// SetIsManaged gets a reference to the given NullableBool and assigns it to the IsManaged field.
func (o *MicrosoftGraphDeviceDetail) SetIsManaged(v bool) {
	o.IsManaged.Set(&v)
}
// SetIsManagedNil sets the value for IsManaged to be an explicit nil
func (o *MicrosoftGraphDeviceDetail) SetIsManagedNil() {
	o.IsManaged.Set(nil)
}

// UnsetIsManaged ensures that no value is present for IsManaged, not even an explicit nil
func (o *MicrosoftGraphDeviceDetail) UnsetIsManaged() {
	o.IsManaged.Unset()
}

// GetOperatingSystem returns the OperatingSystem field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDeviceDetail) GetOperatingSystem() string {
	if o == nil || o.OperatingSystem.Get() == nil {
		var ret string
		return ret
	}
	return *o.OperatingSystem.Get()
}

// GetOperatingSystemOk returns a tuple with the OperatingSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDeviceDetail) GetOperatingSystemOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OperatingSystem.Get(), o.OperatingSystem.IsSet()
}

// HasOperatingSystem returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceDetail) HasOperatingSystem() bool {
	if o != nil && o.OperatingSystem.IsSet() {
		return true
	}

	return false
}

// SetOperatingSystem gets a reference to the given NullableString and assigns it to the OperatingSystem field.
func (o *MicrosoftGraphDeviceDetail) SetOperatingSystem(v string) {
	o.OperatingSystem.Set(&v)
}
// SetOperatingSystemNil sets the value for OperatingSystem to be an explicit nil
func (o *MicrosoftGraphDeviceDetail) SetOperatingSystemNil() {
	o.OperatingSystem.Set(nil)
}

// UnsetOperatingSystem ensures that no value is present for OperatingSystem, not even an explicit nil
func (o *MicrosoftGraphDeviceDetail) UnsetOperatingSystem() {
	o.OperatingSystem.Unset()
}

// GetTrustType returns the TrustType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDeviceDetail) GetTrustType() string {
	if o == nil || o.TrustType.Get() == nil {
		var ret string
		return ret
	}
	return *o.TrustType.Get()
}

// GetTrustTypeOk returns a tuple with the TrustType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDeviceDetail) GetTrustTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TrustType.Get(), o.TrustType.IsSet()
}

// HasTrustType returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceDetail) HasTrustType() bool {
	if o != nil && o.TrustType.IsSet() {
		return true
	}

	return false
}

// SetTrustType gets a reference to the given NullableString and assigns it to the TrustType field.
func (o *MicrosoftGraphDeviceDetail) SetTrustType(v string) {
	o.TrustType.Set(&v)
}
// SetTrustTypeNil sets the value for TrustType to be an explicit nil
func (o *MicrosoftGraphDeviceDetail) SetTrustTypeNil() {
	o.TrustType.Set(nil)
}

// UnsetTrustType ensures that no value is present for TrustType, not even an explicit nil
func (o *MicrosoftGraphDeviceDetail) UnsetTrustType() {
	o.TrustType.Unset()
}

func (o MicrosoftGraphDeviceDetail) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Browser.IsSet() {
		toSerialize["browser"] = o.Browser.Get()
	}
	if o.DeviceId.IsSet() {
		toSerialize["deviceId"] = o.DeviceId.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.IsCompliant.IsSet() {
		toSerialize["isCompliant"] = o.IsCompliant.Get()
	}
	if o.IsManaged.IsSet() {
		toSerialize["isManaged"] = o.IsManaged.Get()
	}
	if o.OperatingSystem.IsSet() {
		toSerialize["operatingSystem"] = o.OperatingSystem.Get()
	}
	if o.TrustType.IsSet() {
		toSerialize["trustType"] = o.TrustType.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphDeviceDetail struct {
	value *MicrosoftGraphDeviceDetail
	isSet bool
}

func (v NullableMicrosoftGraphDeviceDetail) Get() *MicrosoftGraphDeviceDetail {
	return v.value
}

func (v *NullableMicrosoftGraphDeviceDetail) Set(val *MicrosoftGraphDeviceDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphDeviceDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphDeviceDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphDeviceDetail(val *MicrosoftGraphDeviceDetail) *NullableMicrosoftGraphDeviceDetail {
	return &NullableMicrosoftGraphDeviceDetail{value: val, isSet: true}
}

func (v NullableMicrosoftGraphDeviceDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphDeviceDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


