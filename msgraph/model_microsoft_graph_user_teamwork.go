/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphUserTeamwork struct for MicrosoftGraphUserTeamwork
type MicrosoftGraphUserTeamwork struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// The apps installed in the personal scope of this user.
	InstalledApps *[]MicrosoftGraphUserScopeTeamsAppInstallation `json:"installedApps,omitempty"`
}

// NewMicrosoftGraphUserTeamwork instantiates a new MicrosoftGraphUserTeamwork object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphUserTeamwork() *MicrosoftGraphUserTeamwork {
	this := MicrosoftGraphUserTeamwork{}
	return &this
}

// NewMicrosoftGraphUserTeamworkWithDefaults instantiates a new MicrosoftGraphUserTeamwork object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphUserTeamworkWithDefaults() *MicrosoftGraphUserTeamwork {
	this := MicrosoftGraphUserTeamwork{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphUserTeamwork) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphUserTeamwork) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphUserTeamwork) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphUserTeamwork) SetId(v string) {
	o.Id = &v
}

// GetInstalledApps returns the InstalledApps field value if set, zero value otherwise.
func (o *MicrosoftGraphUserTeamwork) GetInstalledApps() []MicrosoftGraphUserScopeTeamsAppInstallation {
	if o == nil || o.InstalledApps == nil {
		var ret []MicrosoftGraphUserScopeTeamsAppInstallation
		return ret
	}
	return *o.InstalledApps
}

// GetInstalledAppsOk returns a tuple with the InstalledApps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphUserTeamwork) GetInstalledAppsOk() (*[]MicrosoftGraphUserScopeTeamsAppInstallation, bool) {
	if o == nil || o.InstalledApps == nil {
		return nil, false
	}
	return o.InstalledApps, true
}

// HasInstalledApps returns a boolean if a field has been set.
func (o *MicrosoftGraphUserTeamwork) HasInstalledApps() bool {
	if o != nil && o.InstalledApps != nil {
		return true
	}

	return false
}

// SetInstalledApps gets a reference to the given []MicrosoftGraphUserScopeTeamsAppInstallation and assigns it to the InstalledApps field.
func (o *MicrosoftGraphUserTeamwork) SetInstalledApps(v []MicrosoftGraphUserScopeTeamsAppInstallation) {
	o.InstalledApps = &v
}

func (o MicrosoftGraphUserTeamwork) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.InstalledApps != nil {
		toSerialize["installedApps"] = o.InstalledApps
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphUserTeamwork struct {
	value *MicrosoftGraphUserTeamwork
	isSet bool
}

func (v NullableMicrosoftGraphUserTeamwork) Get() *MicrosoftGraphUserTeamwork {
	return v.value
}

func (v *NullableMicrosoftGraphUserTeamwork) Set(val *MicrosoftGraphUserTeamwork) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphUserTeamwork) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphUserTeamwork) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphUserTeamwork(val *MicrosoftGraphUserTeamwork) *NullableMicrosoftGraphUserTeamwork {
	return &NullableMicrosoftGraphUserTeamwork{value: val, isSet: true}
}

func (v NullableMicrosoftGraphUserTeamwork) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphUserTeamwork) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


