/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphTermStoreStore struct for MicrosoftGraphTermStoreStore
type MicrosoftGraphTermStoreStore struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// Default language of the term store.
	DefaultLanguageTag *string `json:"defaultLanguageTag,omitempty"`
	// List of languages for the term store.
	LanguageTags *[]string `json:"languageTags,omitempty"`
	// Collection of all groups available in the term store.
	Groups *[]MicrosoftGraphTermStoreGroup `json:"groups,omitempty"`
	// Collection of all sets available in the term store.
	Sets *[]MicrosoftGraphTermStoreSet `json:"sets,omitempty"`
}

// NewMicrosoftGraphTermStoreStore instantiates a new MicrosoftGraphTermStoreStore object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphTermStoreStore() *MicrosoftGraphTermStoreStore {
	this := MicrosoftGraphTermStoreStore{}
	return &this
}

// NewMicrosoftGraphTermStoreStoreWithDefaults instantiates a new MicrosoftGraphTermStoreStore object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphTermStoreStoreWithDefaults() *MicrosoftGraphTermStoreStore {
	this := MicrosoftGraphTermStoreStore{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphTermStoreStore) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTermStoreStore) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphTermStoreStore) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphTermStoreStore) SetId(v string) {
	o.Id = &v
}

// GetDefaultLanguageTag returns the DefaultLanguageTag field value if set, zero value otherwise.
func (o *MicrosoftGraphTermStoreStore) GetDefaultLanguageTag() string {
	if o == nil || o.DefaultLanguageTag == nil {
		var ret string
		return ret
	}
	return *o.DefaultLanguageTag
}

// GetDefaultLanguageTagOk returns a tuple with the DefaultLanguageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTermStoreStore) GetDefaultLanguageTagOk() (*string, bool) {
	if o == nil || o.DefaultLanguageTag == nil {
		return nil, false
	}
	return o.DefaultLanguageTag, true
}

// HasDefaultLanguageTag returns a boolean if a field has been set.
func (o *MicrosoftGraphTermStoreStore) HasDefaultLanguageTag() bool {
	if o != nil && o.DefaultLanguageTag != nil {
		return true
	}

	return false
}

// SetDefaultLanguageTag gets a reference to the given string and assigns it to the DefaultLanguageTag field.
func (o *MicrosoftGraphTermStoreStore) SetDefaultLanguageTag(v string) {
	o.DefaultLanguageTag = &v
}

// GetLanguageTags returns the LanguageTags field value if set, zero value otherwise.
func (o *MicrosoftGraphTermStoreStore) GetLanguageTags() []string {
	if o == nil || o.LanguageTags == nil {
		var ret []string
		return ret
	}
	return *o.LanguageTags
}

// GetLanguageTagsOk returns a tuple with the LanguageTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTermStoreStore) GetLanguageTagsOk() (*[]string, bool) {
	if o == nil || o.LanguageTags == nil {
		return nil, false
	}
	return o.LanguageTags, true
}

// HasLanguageTags returns a boolean if a field has been set.
func (o *MicrosoftGraphTermStoreStore) HasLanguageTags() bool {
	if o != nil && o.LanguageTags != nil {
		return true
	}

	return false
}

// SetLanguageTags gets a reference to the given []string and assigns it to the LanguageTags field.
func (o *MicrosoftGraphTermStoreStore) SetLanguageTags(v []string) {
	o.LanguageTags = &v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *MicrosoftGraphTermStoreStore) GetGroups() []MicrosoftGraphTermStoreGroup {
	if o == nil || o.Groups == nil {
		var ret []MicrosoftGraphTermStoreGroup
		return ret
	}
	return *o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTermStoreStore) GetGroupsOk() (*[]MicrosoftGraphTermStoreGroup, bool) {
	if o == nil || o.Groups == nil {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *MicrosoftGraphTermStoreStore) HasGroups() bool {
	if o != nil && o.Groups != nil {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []MicrosoftGraphTermStoreGroup and assigns it to the Groups field.
func (o *MicrosoftGraphTermStoreStore) SetGroups(v []MicrosoftGraphTermStoreGroup) {
	o.Groups = &v
}

// GetSets returns the Sets field value if set, zero value otherwise.
func (o *MicrosoftGraphTermStoreStore) GetSets() []MicrosoftGraphTermStoreSet {
	if o == nil || o.Sets == nil {
		var ret []MicrosoftGraphTermStoreSet
		return ret
	}
	return *o.Sets
}

// GetSetsOk returns a tuple with the Sets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTermStoreStore) GetSetsOk() (*[]MicrosoftGraphTermStoreSet, bool) {
	if o == nil || o.Sets == nil {
		return nil, false
	}
	return o.Sets, true
}

// HasSets returns a boolean if a field has been set.
func (o *MicrosoftGraphTermStoreStore) HasSets() bool {
	if o != nil && o.Sets != nil {
		return true
	}

	return false
}

// SetSets gets a reference to the given []MicrosoftGraphTermStoreSet and assigns it to the Sets field.
func (o *MicrosoftGraphTermStoreStore) SetSets(v []MicrosoftGraphTermStoreSet) {
	o.Sets = &v
}

func (o MicrosoftGraphTermStoreStore) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.DefaultLanguageTag != nil {
		toSerialize["defaultLanguageTag"] = o.DefaultLanguageTag
	}
	if o.LanguageTags != nil {
		toSerialize["languageTags"] = o.LanguageTags
	}
	if o.Groups != nil {
		toSerialize["groups"] = o.Groups
	}
	if o.Sets != nil {
		toSerialize["sets"] = o.Sets
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphTermStoreStore struct {
	value *MicrosoftGraphTermStoreStore
	isSet bool
}

func (v NullableMicrosoftGraphTermStoreStore) Get() *MicrosoftGraphTermStoreStore {
	return v.value
}

func (v *NullableMicrosoftGraphTermStoreStore) Set(val *MicrosoftGraphTermStoreStore) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphTermStoreStore) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphTermStoreStore) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphTermStoreStore(val *MicrosoftGraphTermStoreStore) *NullableMicrosoftGraphTermStoreStore {
	return &NullableMicrosoftGraphTermStoreStore{value: val, isSet: true}
}

func (v NullableMicrosoftGraphTermStoreStore) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphTermStoreStore) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


