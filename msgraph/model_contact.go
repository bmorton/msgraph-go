/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"time"
)

// Contact struct for Contact
type Contact struct {
	// The name of the contact's assistant.
	AssistantName NullableString `json:"assistantName,omitempty"`
	// The contact's birthday. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
	Birthday NullableTime `json:"birthday,omitempty"`
	// The contact's business address.
	BusinessAddress AnyOfmicrosoftGraphPhysicalAddress `json:"businessAddress,omitempty"`
	// The business home page of the contact.
	BusinessHomePage NullableString `json:"businessHomePage,omitempty"`
	// The contact's business phone numbers.
	BusinessPhones *[]*string `json:"businessPhones,omitempty"`
	// The names of the contact's children.
	Children *[]*string `json:"children,omitempty"`
	// The name of the contact's company.
	CompanyName NullableString `json:"companyName,omitempty"`
	// The contact's department.
	Department NullableString `json:"department,omitempty"`
	// The contact's display name. You can specify the display name in a create or update operation. Note that later updates to other properties may cause an automatically generated value to overwrite the displayName value you have specified. To preserve a pre-existing value, always include it as displayName in an update operation.
	DisplayName NullableString `json:"displayName,omitempty"`
	// The contact's email addresses.
	EmailAddresses *[]*AnyOfmicrosoftGraphEmailAddress `json:"emailAddresses,omitempty"`
	// The name the contact is filed under.
	FileAs NullableString `json:"fileAs,omitempty"`
	// The contact's generation.
	Generation NullableString `json:"generation,omitempty"`
	// The contact's given name.
	GivenName NullableString `json:"givenName,omitempty"`
	// The contact's home address.
	HomeAddress AnyOfmicrosoftGraphPhysicalAddress `json:"homeAddress,omitempty"`
	// The contact's home phone numbers.
	HomePhones *[]*string `json:"homePhones,omitempty"`
	ImAddresses *[]*string `json:"imAddresses,omitempty"`
	Initials NullableString `json:"initials,omitempty"`
	JobTitle NullableString `json:"jobTitle,omitempty"`
	Manager NullableString `json:"manager,omitempty"`
	MiddleName NullableString `json:"middleName,omitempty"`
	MobilePhone NullableString `json:"mobilePhone,omitempty"`
	NickName NullableString `json:"nickName,omitempty"`
	OfficeLocation NullableString `json:"officeLocation,omitempty"`
	OtherAddress AnyOfmicrosoftGraphPhysicalAddress `json:"otherAddress,omitempty"`
	ParentFolderId NullableString `json:"parentFolderId,omitempty"`
	PersonalNotes NullableString `json:"personalNotes,omitempty"`
	Profession NullableString `json:"profession,omitempty"`
	SpouseName NullableString `json:"spouseName,omitempty"`
	Surname NullableString `json:"surname,omitempty"`
	Title NullableString `json:"title,omitempty"`
	YomiCompanyName NullableString `json:"yomiCompanyName,omitempty"`
	YomiGivenName NullableString `json:"yomiGivenName,omitempty"`
	YomiSurname NullableString `json:"yomiSurname,omitempty"`
	// The collection of open extensions defined for the contact. Read-only. Nullable.
	Extensions *[]MicrosoftGraphExtension `json:"extensions,omitempty"`
	// The collection of multi-value extended properties defined for the contact. Read-only. Nullable.
	MultiValueExtendedProperties *[]MicrosoftGraphMultiValueLegacyExtendedProperty `json:"multiValueExtendedProperties,omitempty"`
	// Optional contact picture. You can get or set a photo for a contact.
	Photo AnyOfmicrosoftGraphProfilePhoto `json:"photo,omitempty"`
	// The collection of single-value extended properties defined for the contact. Read-only. Nullable.
	SingleValueExtendedProperties *[]MicrosoftGraphSingleValueLegacyExtendedProperty `json:"singleValueExtendedProperties,omitempty"`
}

// NewContact instantiates a new Contact object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContact() *Contact {
	this := Contact{}
	return &this
}

// NewContactWithDefaults instantiates a new Contact object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContactWithDefaults() *Contact {
	this := Contact{}
	return &this
}

// GetAssistantName returns the AssistantName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetAssistantName() string {
	if o == nil || o.AssistantName.Get() == nil {
		var ret string
		return ret
	}
	return *o.AssistantName.Get()
}

// GetAssistantNameOk returns a tuple with the AssistantName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetAssistantNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AssistantName.Get(), o.AssistantName.IsSet()
}

// HasAssistantName returns a boolean if a field has been set.
func (o *Contact) HasAssistantName() bool {
	if o != nil && o.AssistantName.IsSet() {
		return true
	}

	return false
}

// SetAssistantName gets a reference to the given NullableString and assigns it to the AssistantName field.
func (o *Contact) SetAssistantName(v string) {
	o.AssistantName.Set(&v)
}
// SetAssistantNameNil sets the value for AssistantName to be an explicit nil
func (o *Contact) SetAssistantNameNil() {
	o.AssistantName.Set(nil)
}

// UnsetAssistantName ensures that no value is present for AssistantName, not even an explicit nil
func (o *Contact) UnsetAssistantName() {
	o.AssistantName.Unset()
}

// GetBirthday returns the Birthday field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetBirthday() time.Time {
	if o == nil || o.Birthday.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.Birthday.Get()
}

// GetBirthdayOk returns a tuple with the Birthday field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetBirthdayOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Birthday.Get(), o.Birthday.IsSet()
}

// HasBirthday returns a boolean if a field has been set.
func (o *Contact) HasBirthday() bool {
	if o != nil && o.Birthday.IsSet() {
		return true
	}

	return false
}

// SetBirthday gets a reference to the given NullableTime and assigns it to the Birthday field.
func (o *Contact) SetBirthday(v time.Time) {
	o.Birthday.Set(&v)
}
// SetBirthdayNil sets the value for Birthday to be an explicit nil
func (o *Contact) SetBirthdayNil() {
	o.Birthday.Set(nil)
}

// UnsetBirthday ensures that no value is present for Birthday, not even an explicit nil
func (o *Contact) UnsetBirthday() {
	o.Birthday.Unset()
}

// GetBusinessAddress returns the BusinessAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetBusinessAddress() AnyOfmicrosoftGraphPhysicalAddress {
	if o == nil  {
		var ret AnyOfmicrosoftGraphPhysicalAddress
		return ret
	}
	return o.BusinessAddress
}

// GetBusinessAddressOk returns a tuple with the BusinessAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetBusinessAddressOk() (*AnyOfmicrosoftGraphPhysicalAddress, bool) {
	if o == nil || o.BusinessAddress == nil {
		return nil, false
	}
	return &o.BusinessAddress, true
}

// HasBusinessAddress returns a boolean if a field has been set.
func (o *Contact) HasBusinessAddress() bool {
	if o != nil && o.BusinessAddress != nil {
		return true
	}

	return false
}

// SetBusinessAddress gets a reference to the given AnyOfmicrosoftGraphPhysicalAddress and assigns it to the BusinessAddress field.
func (o *Contact) SetBusinessAddress(v AnyOfmicrosoftGraphPhysicalAddress) {
	o.BusinessAddress = v
}

// GetBusinessHomePage returns the BusinessHomePage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetBusinessHomePage() string {
	if o == nil || o.BusinessHomePage.Get() == nil {
		var ret string
		return ret
	}
	return *o.BusinessHomePage.Get()
}

// GetBusinessHomePageOk returns a tuple with the BusinessHomePage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetBusinessHomePageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BusinessHomePage.Get(), o.BusinessHomePage.IsSet()
}

// HasBusinessHomePage returns a boolean if a field has been set.
func (o *Contact) HasBusinessHomePage() bool {
	if o != nil && o.BusinessHomePage.IsSet() {
		return true
	}

	return false
}

// SetBusinessHomePage gets a reference to the given NullableString and assigns it to the BusinessHomePage field.
func (o *Contact) SetBusinessHomePage(v string) {
	o.BusinessHomePage.Set(&v)
}
// SetBusinessHomePageNil sets the value for BusinessHomePage to be an explicit nil
func (o *Contact) SetBusinessHomePageNil() {
	o.BusinessHomePage.Set(nil)
}

// UnsetBusinessHomePage ensures that no value is present for BusinessHomePage, not even an explicit nil
func (o *Contact) UnsetBusinessHomePage() {
	o.BusinessHomePage.Unset()
}

// GetBusinessPhones returns the BusinessPhones field value if set, zero value otherwise.
func (o *Contact) GetBusinessPhones() []*string {
	if o == nil || o.BusinessPhones == nil {
		var ret []*string
		return ret
	}
	return *o.BusinessPhones
}

// GetBusinessPhonesOk returns a tuple with the BusinessPhones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetBusinessPhonesOk() (*[]*string, bool) {
	if o == nil || o.BusinessPhones == nil {
		return nil, false
	}
	return o.BusinessPhones, true
}

// HasBusinessPhones returns a boolean if a field has been set.
func (o *Contact) HasBusinessPhones() bool {
	if o != nil && o.BusinessPhones != nil {
		return true
	}

	return false
}

// SetBusinessPhones gets a reference to the given []*string and assigns it to the BusinessPhones field.
func (o *Contact) SetBusinessPhones(v []*string) {
	o.BusinessPhones = &v
}

// GetChildren returns the Children field value if set, zero value otherwise.
func (o *Contact) GetChildren() []*string {
	if o == nil || o.Children == nil {
		var ret []*string
		return ret
	}
	return *o.Children
}

// GetChildrenOk returns a tuple with the Children field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetChildrenOk() (*[]*string, bool) {
	if o == nil || o.Children == nil {
		return nil, false
	}
	return o.Children, true
}

// HasChildren returns a boolean if a field has been set.
func (o *Contact) HasChildren() bool {
	if o != nil && o.Children != nil {
		return true
	}

	return false
}

// SetChildren gets a reference to the given []*string and assigns it to the Children field.
func (o *Contact) SetChildren(v []*string) {
	o.Children = &v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetCompanyName() string {
	if o == nil || o.CompanyName.Get() == nil {
		var ret string
		return ret
	}
	return *o.CompanyName.Get()
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetCompanyNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CompanyName.Get(), o.CompanyName.IsSet()
}

// HasCompanyName returns a boolean if a field has been set.
func (o *Contact) HasCompanyName() bool {
	if o != nil && o.CompanyName.IsSet() {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given NullableString and assigns it to the CompanyName field.
func (o *Contact) SetCompanyName(v string) {
	o.CompanyName.Set(&v)
}
// SetCompanyNameNil sets the value for CompanyName to be an explicit nil
func (o *Contact) SetCompanyNameNil() {
	o.CompanyName.Set(nil)
}

// UnsetCompanyName ensures that no value is present for CompanyName, not even an explicit nil
func (o *Contact) UnsetCompanyName() {
	o.CompanyName.Unset()
}

// GetDepartment returns the Department field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetDepartment() string {
	if o == nil || o.Department.Get() == nil {
		var ret string
		return ret
	}
	return *o.Department.Get()
}

// GetDepartmentOk returns a tuple with the Department field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetDepartmentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Department.Get(), o.Department.IsSet()
}

// HasDepartment returns a boolean if a field has been set.
func (o *Contact) HasDepartment() bool {
	if o != nil && o.Department.IsSet() {
		return true
	}

	return false
}

// SetDepartment gets a reference to the given NullableString and assigns it to the Department field.
func (o *Contact) SetDepartment(v string) {
	o.Department.Set(&v)
}
// SetDepartmentNil sets the value for Department to be an explicit nil
func (o *Contact) SetDepartmentNil() {
	o.Department.Set(nil)
}

// UnsetDepartment ensures that no value is present for Department, not even an explicit nil
func (o *Contact) UnsetDepartment() {
	o.Department.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *Contact) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *Contact) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *Contact) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *Contact) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetEmailAddresses returns the EmailAddresses field value if set, zero value otherwise.
func (o *Contact) GetEmailAddresses() []*AnyOfmicrosoftGraphEmailAddress {
	if o == nil || o.EmailAddresses == nil {
		var ret []*AnyOfmicrosoftGraphEmailAddress
		return ret
	}
	return *o.EmailAddresses
}

// GetEmailAddressesOk returns a tuple with the EmailAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetEmailAddressesOk() (*[]*AnyOfmicrosoftGraphEmailAddress, bool) {
	if o == nil || o.EmailAddresses == nil {
		return nil, false
	}
	return o.EmailAddresses, true
}

// HasEmailAddresses returns a boolean if a field has been set.
func (o *Contact) HasEmailAddresses() bool {
	if o != nil && o.EmailAddresses != nil {
		return true
	}

	return false
}

// SetEmailAddresses gets a reference to the given []*AnyOfmicrosoftGraphEmailAddress and assigns it to the EmailAddresses field.
func (o *Contact) SetEmailAddresses(v []*AnyOfmicrosoftGraphEmailAddress) {
	o.EmailAddresses = &v
}

// GetFileAs returns the FileAs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetFileAs() string {
	if o == nil || o.FileAs.Get() == nil {
		var ret string
		return ret
	}
	return *o.FileAs.Get()
}

// GetFileAsOk returns a tuple with the FileAs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetFileAsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FileAs.Get(), o.FileAs.IsSet()
}

// HasFileAs returns a boolean if a field has been set.
func (o *Contact) HasFileAs() bool {
	if o != nil && o.FileAs.IsSet() {
		return true
	}

	return false
}

// SetFileAs gets a reference to the given NullableString and assigns it to the FileAs field.
func (o *Contact) SetFileAs(v string) {
	o.FileAs.Set(&v)
}
// SetFileAsNil sets the value for FileAs to be an explicit nil
func (o *Contact) SetFileAsNil() {
	o.FileAs.Set(nil)
}

// UnsetFileAs ensures that no value is present for FileAs, not even an explicit nil
func (o *Contact) UnsetFileAs() {
	o.FileAs.Unset()
}

// GetGeneration returns the Generation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetGeneration() string {
	if o == nil || o.Generation.Get() == nil {
		var ret string
		return ret
	}
	return *o.Generation.Get()
}

// GetGenerationOk returns a tuple with the Generation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetGenerationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Generation.Get(), o.Generation.IsSet()
}

// HasGeneration returns a boolean if a field has been set.
func (o *Contact) HasGeneration() bool {
	if o != nil && o.Generation.IsSet() {
		return true
	}

	return false
}

// SetGeneration gets a reference to the given NullableString and assigns it to the Generation field.
func (o *Contact) SetGeneration(v string) {
	o.Generation.Set(&v)
}
// SetGenerationNil sets the value for Generation to be an explicit nil
func (o *Contact) SetGenerationNil() {
	o.Generation.Set(nil)
}

// UnsetGeneration ensures that no value is present for Generation, not even an explicit nil
func (o *Contact) UnsetGeneration() {
	o.Generation.Unset()
}

// GetGivenName returns the GivenName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetGivenName() string {
	if o == nil || o.GivenName.Get() == nil {
		var ret string
		return ret
	}
	return *o.GivenName.Get()
}

// GetGivenNameOk returns a tuple with the GivenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetGivenNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.GivenName.Get(), o.GivenName.IsSet()
}

// HasGivenName returns a boolean if a field has been set.
func (o *Contact) HasGivenName() bool {
	if o != nil && o.GivenName.IsSet() {
		return true
	}

	return false
}

// SetGivenName gets a reference to the given NullableString and assigns it to the GivenName field.
func (o *Contact) SetGivenName(v string) {
	o.GivenName.Set(&v)
}
// SetGivenNameNil sets the value for GivenName to be an explicit nil
func (o *Contact) SetGivenNameNil() {
	o.GivenName.Set(nil)
}

// UnsetGivenName ensures that no value is present for GivenName, not even an explicit nil
func (o *Contact) UnsetGivenName() {
	o.GivenName.Unset()
}

// GetHomeAddress returns the HomeAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetHomeAddress() AnyOfmicrosoftGraphPhysicalAddress {
	if o == nil  {
		var ret AnyOfmicrosoftGraphPhysicalAddress
		return ret
	}
	return o.HomeAddress
}

// GetHomeAddressOk returns a tuple with the HomeAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetHomeAddressOk() (*AnyOfmicrosoftGraphPhysicalAddress, bool) {
	if o == nil || o.HomeAddress == nil {
		return nil, false
	}
	return &o.HomeAddress, true
}

// HasHomeAddress returns a boolean if a field has been set.
func (o *Contact) HasHomeAddress() bool {
	if o != nil && o.HomeAddress != nil {
		return true
	}

	return false
}

// SetHomeAddress gets a reference to the given AnyOfmicrosoftGraphPhysicalAddress and assigns it to the HomeAddress field.
func (o *Contact) SetHomeAddress(v AnyOfmicrosoftGraphPhysicalAddress) {
	o.HomeAddress = v
}

// GetHomePhones returns the HomePhones field value if set, zero value otherwise.
func (o *Contact) GetHomePhones() []*string {
	if o == nil || o.HomePhones == nil {
		var ret []*string
		return ret
	}
	return *o.HomePhones
}

// GetHomePhonesOk returns a tuple with the HomePhones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetHomePhonesOk() (*[]*string, bool) {
	if o == nil || o.HomePhones == nil {
		return nil, false
	}
	return o.HomePhones, true
}

// HasHomePhones returns a boolean if a field has been set.
func (o *Contact) HasHomePhones() bool {
	if o != nil && o.HomePhones != nil {
		return true
	}

	return false
}

// SetHomePhones gets a reference to the given []*string and assigns it to the HomePhones field.
func (o *Contact) SetHomePhones(v []*string) {
	o.HomePhones = &v
}

// GetImAddresses returns the ImAddresses field value if set, zero value otherwise.
func (o *Contact) GetImAddresses() []*string {
	if o == nil || o.ImAddresses == nil {
		var ret []*string
		return ret
	}
	return *o.ImAddresses
}

// GetImAddressesOk returns a tuple with the ImAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetImAddressesOk() (*[]*string, bool) {
	if o == nil || o.ImAddresses == nil {
		return nil, false
	}
	return o.ImAddresses, true
}

// HasImAddresses returns a boolean if a field has been set.
func (o *Contact) HasImAddresses() bool {
	if o != nil && o.ImAddresses != nil {
		return true
	}

	return false
}

// SetImAddresses gets a reference to the given []*string and assigns it to the ImAddresses field.
func (o *Contact) SetImAddresses(v []*string) {
	o.ImAddresses = &v
}

// GetInitials returns the Initials field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetInitials() string {
	if o == nil || o.Initials.Get() == nil {
		var ret string
		return ret
	}
	return *o.Initials.Get()
}

// GetInitialsOk returns a tuple with the Initials field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetInitialsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Initials.Get(), o.Initials.IsSet()
}

// HasInitials returns a boolean if a field has been set.
func (o *Contact) HasInitials() bool {
	if o != nil && o.Initials.IsSet() {
		return true
	}

	return false
}

// SetInitials gets a reference to the given NullableString and assigns it to the Initials field.
func (o *Contact) SetInitials(v string) {
	o.Initials.Set(&v)
}
// SetInitialsNil sets the value for Initials to be an explicit nil
func (o *Contact) SetInitialsNil() {
	o.Initials.Set(nil)
}

// UnsetInitials ensures that no value is present for Initials, not even an explicit nil
func (o *Contact) UnsetInitials() {
	o.Initials.Unset()
}

// GetJobTitle returns the JobTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetJobTitle() string {
	if o == nil || o.JobTitle.Get() == nil {
		var ret string
		return ret
	}
	return *o.JobTitle.Get()
}

// GetJobTitleOk returns a tuple with the JobTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetJobTitleOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.JobTitle.Get(), o.JobTitle.IsSet()
}

// HasJobTitle returns a boolean if a field has been set.
func (o *Contact) HasJobTitle() bool {
	if o != nil && o.JobTitle.IsSet() {
		return true
	}

	return false
}

// SetJobTitle gets a reference to the given NullableString and assigns it to the JobTitle field.
func (o *Contact) SetJobTitle(v string) {
	o.JobTitle.Set(&v)
}
// SetJobTitleNil sets the value for JobTitle to be an explicit nil
func (o *Contact) SetJobTitleNil() {
	o.JobTitle.Set(nil)
}

// UnsetJobTitle ensures that no value is present for JobTitle, not even an explicit nil
func (o *Contact) UnsetJobTitle() {
	o.JobTitle.Unset()
}

// GetManager returns the Manager field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetManager() string {
	if o == nil || o.Manager.Get() == nil {
		var ret string
		return ret
	}
	return *o.Manager.Get()
}

// GetManagerOk returns a tuple with the Manager field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetManagerOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Manager.Get(), o.Manager.IsSet()
}

// HasManager returns a boolean if a field has been set.
func (o *Contact) HasManager() bool {
	if o != nil && o.Manager.IsSet() {
		return true
	}

	return false
}

// SetManager gets a reference to the given NullableString and assigns it to the Manager field.
func (o *Contact) SetManager(v string) {
	o.Manager.Set(&v)
}
// SetManagerNil sets the value for Manager to be an explicit nil
func (o *Contact) SetManagerNil() {
	o.Manager.Set(nil)
}

// UnsetManager ensures that no value is present for Manager, not even an explicit nil
func (o *Contact) UnsetManager() {
	o.Manager.Unset()
}

// GetMiddleName returns the MiddleName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetMiddleName() string {
	if o == nil || o.MiddleName.Get() == nil {
		var ret string
		return ret
	}
	return *o.MiddleName.Get()
}

// GetMiddleNameOk returns a tuple with the MiddleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetMiddleNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MiddleName.Get(), o.MiddleName.IsSet()
}

// HasMiddleName returns a boolean if a field has been set.
func (o *Contact) HasMiddleName() bool {
	if o != nil && o.MiddleName.IsSet() {
		return true
	}

	return false
}

// SetMiddleName gets a reference to the given NullableString and assigns it to the MiddleName field.
func (o *Contact) SetMiddleName(v string) {
	o.MiddleName.Set(&v)
}
// SetMiddleNameNil sets the value for MiddleName to be an explicit nil
func (o *Contact) SetMiddleNameNil() {
	o.MiddleName.Set(nil)
}

// UnsetMiddleName ensures that no value is present for MiddleName, not even an explicit nil
func (o *Contact) UnsetMiddleName() {
	o.MiddleName.Unset()
}

// GetMobilePhone returns the MobilePhone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetMobilePhone() string {
	if o == nil || o.MobilePhone.Get() == nil {
		var ret string
		return ret
	}
	return *o.MobilePhone.Get()
}

// GetMobilePhoneOk returns a tuple with the MobilePhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetMobilePhoneOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MobilePhone.Get(), o.MobilePhone.IsSet()
}

// HasMobilePhone returns a boolean if a field has been set.
func (o *Contact) HasMobilePhone() bool {
	if o != nil && o.MobilePhone.IsSet() {
		return true
	}

	return false
}

// SetMobilePhone gets a reference to the given NullableString and assigns it to the MobilePhone field.
func (o *Contact) SetMobilePhone(v string) {
	o.MobilePhone.Set(&v)
}
// SetMobilePhoneNil sets the value for MobilePhone to be an explicit nil
func (o *Contact) SetMobilePhoneNil() {
	o.MobilePhone.Set(nil)
}

// UnsetMobilePhone ensures that no value is present for MobilePhone, not even an explicit nil
func (o *Contact) UnsetMobilePhone() {
	o.MobilePhone.Unset()
}

// GetNickName returns the NickName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetNickName() string {
	if o == nil || o.NickName.Get() == nil {
		var ret string
		return ret
	}
	return *o.NickName.Get()
}

// GetNickNameOk returns a tuple with the NickName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetNickNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NickName.Get(), o.NickName.IsSet()
}

// HasNickName returns a boolean if a field has been set.
func (o *Contact) HasNickName() bool {
	if o != nil && o.NickName.IsSet() {
		return true
	}

	return false
}

// SetNickName gets a reference to the given NullableString and assigns it to the NickName field.
func (o *Contact) SetNickName(v string) {
	o.NickName.Set(&v)
}
// SetNickNameNil sets the value for NickName to be an explicit nil
func (o *Contact) SetNickNameNil() {
	o.NickName.Set(nil)
}

// UnsetNickName ensures that no value is present for NickName, not even an explicit nil
func (o *Contact) UnsetNickName() {
	o.NickName.Unset()
}

// GetOfficeLocation returns the OfficeLocation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetOfficeLocation() string {
	if o == nil || o.OfficeLocation.Get() == nil {
		var ret string
		return ret
	}
	return *o.OfficeLocation.Get()
}

// GetOfficeLocationOk returns a tuple with the OfficeLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetOfficeLocationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OfficeLocation.Get(), o.OfficeLocation.IsSet()
}

// HasOfficeLocation returns a boolean if a field has been set.
func (o *Contact) HasOfficeLocation() bool {
	if o != nil && o.OfficeLocation.IsSet() {
		return true
	}

	return false
}

// SetOfficeLocation gets a reference to the given NullableString and assigns it to the OfficeLocation field.
func (o *Contact) SetOfficeLocation(v string) {
	o.OfficeLocation.Set(&v)
}
// SetOfficeLocationNil sets the value for OfficeLocation to be an explicit nil
func (o *Contact) SetOfficeLocationNil() {
	o.OfficeLocation.Set(nil)
}

// UnsetOfficeLocation ensures that no value is present for OfficeLocation, not even an explicit nil
func (o *Contact) UnsetOfficeLocation() {
	o.OfficeLocation.Unset()
}

// GetOtherAddress returns the OtherAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetOtherAddress() AnyOfmicrosoftGraphPhysicalAddress {
	if o == nil  {
		var ret AnyOfmicrosoftGraphPhysicalAddress
		return ret
	}
	return o.OtherAddress
}

// GetOtherAddressOk returns a tuple with the OtherAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetOtherAddressOk() (*AnyOfmicrosoftGraphPhysicalAddress, bool) {
	if o == nil || o.OtherAddress == nil {
		return nil, false
	}
	return &o.OtherAddress, true
}

// HasOtherAddress returns a boolean if a field has been set.
func (o *Contact) HasOtherAddress() bool {
	if o != nil && o.OtherAddress != nil {
		return true
	}

	return false
}

// SetOtherAddress gets a reference to the given AnyOfmicrosoftGraphPhysicalAddress and assigns it to the OtherAddress field.
func (o *Contact) SetOtherAddress(v AnyOfmicrosoftGraphPhysicalAddress) {
	o.OtherAddress = v
}

// GetParentFolderId returns the ParentFolderId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetParentFolderId() string {
	if o == nil || o.ParentFolderId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ParentFolderId.Get()
}

// GetParentFolderIdOk returns a tuple with the ParentFolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetParentFolderIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ParentFolderId.Get(), o.ParentFolderId.IsSet()
}

// HasParentFolderId returns a boolean if a field has been set.
func (o *Contact) HasParentFolderId() bool {
	if o != nil && o.ParentFolderId.IsSet() {
		return true
	}

	return false
}

// SetParentFolderId gets a reference to the given NullableString and assigns it to the ParentFolderId field.
func (o *Contact) SetParentFolderId(v string) {
	o.ParentFolderId.Set(&v)
}
// SetParentFolderIdNil sets the value for ParentFolderId to be an explicit nil
func (o *Contact) SetParentFolderIdNil() {
	o.ParentFolderId.Set(nil)
}

// UnsetParentFolderId ensures that no value is present for ParentFolderId, not even an explicit nil
func (o *Contact) UnsetParentFolderId() {
	o.ParentFolderId.Unset()
}

// GetPersonalNotes returns the PersonalNotes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetPersonalNotes() string {
	if o == nil || o.PersonalNotes.Get() == nil {
		var ret string
		return ret
	}
	return *o.PersonalNotes.Get()
}

// GetPersonalNotesOk returns a tuple with the PersonalNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetPersonalNotesOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PersonalNotes.Get(), o.PersonalNotes.IsSet()
}

// HasPersonalNotes returns a boolean if a field has been set.
func (o *Contact) HasPersonalNotes() bool {
	if o != nil && o.PersonalNotes.IsSet() {
		return true
	}

	return false
}

// SetPersonalNotes gets a reference to the given NullableString and assigns it to the PersonalNotes field.
func (o *Contact) SetPersonalNotes(v string) {
	o.PersonalNotes.Set(&v)
}
// SetPersonalNotesNil sets the value for PersonalNotes to be an explicit nil
func (o *Contact) SetPersonalNotesNil() {
	o.PersonalNotes.Set(nil)
}

// UnsetPersonalNotes ensures that no value is present for PersonalNotes, not even an explicit nil
func (o *Contact) UnsetPersonalNotes() {
	o.PersonalNotes.Unset()
}

// GetProfession returns the Profession field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetProfession() string {
	if o == nil || o.Profession.Get() == nil {
		var ret string
		return ret
	}
	return *o.Profession.Get()
}

// GetProfessionOk returns a tuple with the Profession field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetProfessionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Profession.Get(), o.Profession.IsSet()
}

// HasProfession returns a boolean if a field has been set.
func (o *Contact) HasProfession() bool {
	if o != nil && o.Profession.IsSet() {
		return true
	}

	return false
}

// SetProfession gets a reference to the given NullableString and assigns it to the Profession field.
func (o *Contact) SetProfession(v string) {
	o.Profession.Set(&v)
}
// SetProfessionNil sets the value for Profession to be an explicit nil
func (o *Contact) SetProfessionNil() {
	o.Profession.Set(nil)
}

// UnsetProfession ensures that no value is present for Profession, not even an explicit nil
func (o *Contact) UnsetProfession() {
	o.Profession.Unset()
}

// GetSpouseName returns the SpouseName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetSpouseName() string {
	if o == nil || o.SpouseName.Get() == nil {
		var ret string
		return ret
	}
	return *o.SpouseName.Get()
}

// GetSpouseNameOk returns a tuple with the SpouseName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetSpouseNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SpouseName.Get(), o.SpouseName.IsSet()
}

// HasSpouseName returns a boolean if a field has been set.
func (o *Contact) HasSpouseName() bool {
	if o != nil && o.SpouseName.IsSet() {
		return true
	}

	return false
}

// SetSpouseName gets a reference to the given NullableString and assigns it to the SpouseName field.
func (o *Contact) SetSpouseName(v string) {
	o.SpouseName.Set(&v)
}
// SetSpouseNameNil sets the value for SpouseName to be an explicit nil
func (o *Contact) SetSpouseNameNil() {
	o.SpouseName.Set(nil)
}

// UnsetSpouseName ensures that no value is present for SpouseName, not even an explicit nil
func (o *Contact) UnsetSpouseName() {
	o.SpouseName.Unset()
}

// GetSurname returns the Surname field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetSurname() string {
	if o == nil || o.Surname.Get() == nil {
		var ret string
		return ret
	}
	return *o.Surname.Get()
}

// GetSurnameOk returns a tuple with the Surname field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetSurnameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Surname.Get(), o.Surname.IsSet()
}

// HasSurname returns a boolean if a field has been set.
func (o *Contact) HasSurname() bool {
	if o != nil && o.Surname.IsSet() {
		return true
	}

	return false
}

// SetSurname gets a reference to the given NullableString and assigns it to the Surname field.
func (o *Contact) SetSurname(v string) {
	o.Surname.Set(&v)
}
// SetSurnameNil sets the value for Surname to be an explicit nil
func (o *Contact) SetSurnameNil() {
	o.Surname.Set(nil)
}

// UnsetSurname ensures that no value is present for Surname, not even an explicit nil
func (o *Contact) UnsetSurname() {
	o.Surname.Unset()
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetTitle() string {
	if o == nil || o.Title.Get() == nil {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetTitleOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *Contact) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *Contact) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *Contact) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *Contact) UnsetTitle() {
	o.Title.Unset()
}

// GetYomiCompanyName returns the YomiCompanyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetYomiCompanyName() string {
	if o == nil || o.YomiCompanyName.Get() == nil {
		var ret string
		return ret
	}
	return *o.YomiCompanyName.Get()
}

// GetYomiCompanyNameOk returns a tuple with the YomiCompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetYomiCompanyNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.YomiCompanyName.Get(), o.YomiCompanyName.IsSet()
}

// HasYomiCompanyName returns a boolean if a field has been set.
func (o *Contact) HasYomiCompanyName() bool {
	if o != nil && o.YomiCompanyName.IsSet() {
		return true
	}

	return false
}

// SetYomiCompanyName gets a reference to the given NullableString and assigns it to the YomiCompanyName field.
func (o *Contact) SetYomiCompanyName(v string) {
	o.YomiCompanyName.Set(&v)
}
// SetYomiCompanyNameNil sets the value for YomiCompanyName to be an explicit nil
func (o *Contact) SetYomiCompanyNameNil() {
	o.YomiCompanyName.Set(nil)
}

// UnsetYomiCompanyName ensures that no value is present for YomiCompanyName, not even an explicit nil
func (o *Contact) UnsetYomiCompanyName() {
	o.YomiCompanyName.Unset()
}

// GetYomiGivenName returns the YomiGivenName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetYomiGivenName() string {
	if o == nil || o.YomiGivenName.Get() == nil {
		var ret string
		return ret
	}
	return *o.YomiGivenName.Get()
}

// GetYomiGivenNameOk returns a tuple with the YomiGivenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetYomiGivenNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.YomiGivenName.Get(), o.YomiGivenName.IsSet()
}

// HasYomiGivenName returns a boolean if a field has been set.
func (o *Contact) HasYomiGivenName() bool {
	if o != nil && o.YomiGivenName.IsSet() {
		return true
	}

	return false
}

// SetYomiGivenName gets a reference to the given NullableString and assigns it to the YomiGivenName field.
func (o *Contact) SetYomiGivenName(v string) {
	o.YomiGivenName.Set(&v)
}
// SetYomiGivenNameNil sets the value for YomiGivenName to be an explicit nil
func (o *Contact) SetYomiGivenNameNil() {
	o.YomiGivenName.Set(nil)
}

// UnsetYomiGivenName ensures that no value is present for YomiGivenName, not even an explicit nil
func (o *Contact) UnsetYomiGivenName() {
	o.YomiGivenName.Unset()
}

// GetYomiSurname returns the YomiSurname field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetYomiSurname() string {
	if o == nil || o.YomiSurname.Get() == nil {
		var ret string
		return ret
	}
	return *o.YomiSurname.Get()
}

// GetYomiSurnameOk returns a tuple with the YomiSurname field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetYomiSurnameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.YomiSurname.Get(), o.YomiSurname.IsSet()
}

// HasYomiSurname returns a boolean if a field has been set.
func (o *Contact) HasYomiSurname() bool {
	if o != nil && o.YomiSurname.IsSet() {
		return true
	}

	return false
}

// SetYomiSurname gets a reference to the given NullableString and assigns it to the YomiSurname field.
func (o *Contact) SetYomiSurname(v string) {
	o.YomiSurname.Set(&v)
}
// SetYomiSurnameNil sets the value for YomiSurname to be an explicit nil
func (o *Contact) SetYomiSurnameNil() {
	o.YomiSurname.Set(nil)
}

// UnsetYomiSurname ensures that no value is present for YomiSurname, not even an explicit nil
func (o *Contact) UnsetYomiSurname() {
	o.YomiSurname.Unset()
}

// GetExtensions returns the Extensions field value if set, zero value otherwise.
func (o *Contact) GetExtensions() []MicrosoftGraphExtension {
	if o == nil || o.Extensions == nil {
		var ret []MicrosoftGraphExtension
		return ret
	}
	return *o.Extensions
}

// GetExtensionsOk returns a tuple with the Extensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetExtensionsOk() (*[]MicrosoftGraphExtension, bool) {
	if o == nil || o.Extensions == nil {
		return nil, false
	}
	return o.Extensions, true
}

// HasExtensions returns a boolean if a field has been set.
func (o *Contact) HasExtensions() bool {
	if o != nil && o.Extensions != nil {
		return true
	}

	return false
}

// SetExtensions gets a reference to the given []MicrosoftGraphExtension and assigns it to the Extensions field.
func (o *Contact) SetExtensions(v []MicrosoftGraphExtension) {
	o.Extensions = &v
}

// GetMultiValueExtendedProperties returns the MultiValueExtendedProperties field value if set, zero value otherwise.
func (o *Contact) GetMultiValueExtendedProperties() []MicrosoftGraphMultiValueLegacyExtendedProperty {
	if o == nil || o.MultiValueExtendedProperties == nil {
		var ret []MicrosoftGraphMultiValueLegacyExtendedProperty
		return ret
	}
	return *o.MultiValueExtendedProperties
}

// GetMultiValueExtendedPropertiesOk returns a tuple with the MultiValueExtendedProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetMultiValueExtendedPropertiesOk() (*[]MicrosoftGraphMultiValueLegacyExtendedProperty, bool) {
	if o == nil || o.MultiValueExtendedProperties == nil {
		return nil, false
	}
	return o.MultiValueExtendedProperties, true
}

// HasMultiValueExtendedProperties returns a boolean if a field has been set.
func (o *Contact) HasMultiValueExtendedProperties() bool {
	if o != nil && o.MultiValueExtendedProperties != nil {
		return true
	}

	return false
}

// SetMultiValueExtendedProperties gets a reference to the given []MicrosoftGraphMultiValueLegacyExtendedProperty and assigns it to the MultiValueExtendedProperties field.
func (o *Contact) SetMultiValueExtendedProperties(v []MicrosoftGraphMultiValueLegacyExtendedProperty) {
	o.MultiValueExtendedProperties = &v
}

// GetPhoto returns the Photo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contact) GetPhoto() AnyOfmicrosoftGraphProfilePhoto {
	if o == nil  {
		var ret AnyOfmicrosoftGraphProfilePhoto
		return ret
	}
	return o.Photo
}

// GetPhotoOk returns a tuple with the Photo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contact) GetPhotoOk() (*AnyOfmicrosoftGraphProfilePhoto, bool) {
	if o == nil || o.Photo == nil {
		return nil, false
	}
	return &o.Photo, true
}

// HasPhoto returns a boolean if a field has been set.
func (o *Contact) HasPhoto() bool {
	if o != nil && o.Photo != nil {
		return true
	}

	return false
}

// SetPhoto gets a reference to the given AnyOfmicrosoftGraphProfilePhoto and assigns it to the Photo field.
func (o *Contact) SetPhoto(v AnyOfmicrosoftGraphProfilePhoto) {
	o.Photo = v
}

// GetSingleValueExtendedProperties returns the SingleValueExtendedProperties field value if set, zero value otherwise.
func (o *Contact) GetSingleValueExtendedProperties() []MicrosoftGraphSingleValueLegacyExtendedProperty {
	if o == nil || o.SingleValueExtendedProperties == nil {
		var ret []MicrosoftGraphSingleValueLegacyExtendedProperty
		return ret
	}
	return *o.SingleValueExtendedProperties
}

// GetSingleValueExtendedPropertiesOk returns a tuple with the SingleValueExtendedProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetSingleValueExtendedPropertiesOk() (*[]MicrosoftGraphSingleValueLegacyExtendedProperty, bool) {
	if o == nil || o.SingleValueExtendedProperties == nil {
		return nil, false
	}
	return o.SingleValueExtendedProperties, true
}

// HasSingleValueExtendedProperties returns a boolean if a field has been set.
func (o *Contact) HasSingleValueExtendedProperties() bool {
	if o != nil && o.SingleValueExtendedProperties != nil {
		return true
	}

	return false
}

// SetSingleValueExtendedProperties gets a reference to the given []MicrosoftGraphSingleValueLegacyExtendedProperty and assigns it to the SingleValueExtendedProperties field.
func (o *Contact) SetSingleValueExtendedProperties(v []MicrosoftGraphSingleValueLegacyExtendedProperty) {
	o.SingleValueExtendedProperties = &v
}

func (o Contact) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AssistantName.IsSet() {
		toSerialize["assistantName"] = o.AssistantName.Get()
	}
	if o.Birthday.IsSet() {
		toSerialize["birthday"] = o.Birthday.Get()
	}
	if o.BusinessAddress != nil {
		toSerialize["businessAddress"] = o.BusinessAddress
	}
	if o.BusinessHomePage.IsSet() {
		toSerialize["businessHomePage"] = o.BusinessHomePage.Get()
	}
	if o.BusinessPhones != nil {
		toSerialize["businessPhones"] = o.BusinessPhones
	}
	if o.Children != nil {
		toSerialize["children"] = o.Children
	}
	if o.CompanyName.IsSet() {
		toSerialize["companyName"] = o.CompanyName.Get()
	}
	if o.Department.IsSet() {
		toSerialize["department"] = o.Department.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.EmailAddresses != nil {
		toSerialize["emailAddresses"] = o.EmailAddresses
	}
	if o.FileAs.IsSet() {
		toSerialize["fileAs"] = o.FileAs.Get()
	}
	if o.Generation.IsSet() {
		toSerialize["generation"] = o.Generation.Get()
	}
	if o.GivenName.IsSet() {
		toSerialize["givenName"] = o.GivenName.Get()
	}
	if o.HomeAddress != nil {
		toSerialize["homeAddress"] = o.HomeAddress
	}
	if o.HomePhones != nil {
		toSerialize["homePhones"] = o.HomePhones
	}
	if o.ImAddresses != nil {
		toSerialize["imAddresses"] = o.ImAddresses
	}
	if o.Initials.IsSet() {
		toSerialize["initials"] = o.Initials.Get()
	}
	if o.JobTitle.IsSet() {
		toSerialize["jobTitle"] = o.JobTitle.Get()
	}
	if o.Manager.IsSet() {
		toSerialize["manager"] = o.Manager.Get()
	}
	if o.MiddleName.IsSet() {
		toSerialize["middleName"] = o.MiddleName.Get()
	}
	if o.MobilePhone.IsSet() {
		toSerialize["mobilePhone"] = o.MobilePhone.Get()
	}
	if o.NickName.IsSet() {
		toSerialize["nickName"] = o.NickName.Get()
	}
	if o.OfficeLocation.IsSet() {
		toSerialize["officeLocation"] = o.OfficeLocation.Get()
	}
	if o.OtherAddress != nil {
		toSerialize["otherAddress"] = o.OtherAddress
	}
	if o.ParentFolderId.IsSet() {
		toSerialize["parentFolderId"] = o.ParentFolderId.Get()
	}
	if o.PersonalNotes.IsSet() {
		toSerialize["personalNotes"] = o.PersonalNotes.Get()
	}
	if o.Profession.IsSet() {
		toSerialize["profession"] = o.Profession.Get()
	}
	if o.SpouseName.IsSet() {
		toSerialize["spouseName"] = o.SpouseName.Get()
	}
	if o.Surname.IsSet() {
		toSerialize["surname"] = o.Surname.Get()
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.YomiCompanyName.IsSet() {
		toSerialize["yomiCompanyName"] = o.YomiCompanyName.Get()
	}
	if o.YomiGivenName.IsSet() {
		toSerialize["yomiGivenName"] = o.YomiGivenName.Get()
	}
	if o.YomiSurname.IsSet() {
		toSerialize["yomiSurname"] = o.YomiSurname.Get()
	}
	if o.Extensions != nil {
		toSerialize["extensions"] = o.Extensions
	}
	if o.MultiValueExtendedProperties != nil {
		toSerialize["multiValueExtendedProperties"] = o.MultiValueExtendedProperties
	}
	if o.Photo != nil {
		toSerialize["photo"] = o.Photo
	}
	if o.SingleValueExtendedProperties != nil {
		toSerialize["singleValueExtendedProperties"] = o.SingleValueExtendedProperties
	}
	return json.Marshal(toSerialize)
}

type NullableContact struct {
	value *Contact
	isSet bool
}

func (v NullableContact) Get() *Contact {
	return v.value
}

func (v *NullableContact) Set(val *Contact) {
	v.value = val
	v.isSet = true
}

func (v NullableContact) IsSet() bool {
	return v.isSet
}

func (v *NullableContact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContact(val *Contact) *NullableContact {
	return &NullableContact{value: val, isSet: true}
}

func (v NullableContact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


