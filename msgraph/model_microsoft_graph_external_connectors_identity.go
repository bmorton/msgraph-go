/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphExternalConnectorsIdentity struct for MicrosoftGraphExternalConnectorsIdentity
type MicrosoftGraphExternalConnectorsIdentity struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// The type of identity. Possible values are: user or group for Azure AD identities and externalgroup for groups in an external system.
	Type AnyOfmicrosoftGraphExternalConnectorsIdentityType `json:"type,omitempty"`
}

// NewMicrosoftGraphExternalConnectorsIdentity instantiates a new MicrosoftGraphExternalConnectorsIdentity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphExternalConnectorsIdentity() *MicrosoftGraphExternalConnectorsIdentity {
	this := MicrosoftGraphExternalConnectorsIdentity{}
	return &this
}

// NewMicrosoftGraphExternalConnectorsIdentityWithDefaults instantiates a new MicrosoftGraphExternalConnectorsIdentity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphExternalConnectorsIdentityWithDefaults() *MicrosoftGraphExternalConnectorsIdentity {
	this := MicrosoftGraphExternalConnectorsIdentity{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphExternalConnectorsIdentity) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphExternalConnectorsIdentity) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphExternalConnectorsIdentity) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphExternalConnectorsIdentity) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphExternalConnectorsIdentity) GetType() AnyOfmicrosoftGraphExternalConnectorsIdentityType {
	if o == nil  {
		var ret AnyOfmicrosoftGraphExternalConnectorsIdentityType
		return ret
	}
	return o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphExternalConnectorsIdentity) GetTypeOk() (*AnyOfmicrosoftGraphExternalConnectorsIdentityType, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return &o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MicrosoftGraphExternalConnectorsIdentity) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given AnyOfmicrosoftGraphExternalConnectorsIdentityType and assigns it to the Type field.
func (o *MicrosoftGraphExternalConnectorsIdentity) SetType(v AnyOfmicrosoftGraphExternalConnectorsIdentityType) {
	o.Type = v
}

func (o MicrosoftGraphExternalConnectorsIdentity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphExternalConnectorsIdentity struct {
	value *MicrosoftGraphExternalConnectorsIdentity
	isSet bool
}

func (v NullableMicrosoftGraphExternalConnectorsIdentity) Get() *MicrosoftGraphExternalConnectorsIdentity {
	return v.value
}

func (v *NullableMicrosoftGraphExternalConnectorsIdentity) Set(val *MicrosoftGraphExternalConnectorsIdentity) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphExternalConnectorsIdentity) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphExternalConnectorsIdentity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphExternalConnectorsIdentity(val *MicrosoftGraphExternalConnectorsIdentity) *NullableMicrosoftGraphExternalConnectorsIdentity {
	return &NullableMicrosoftGraphExternalConnectorsIdentity{value: val, isSet: true}
}

func (v NullableMicrosoftGraphExternalConnectorsIdentity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphExternalConnectorsIdentity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


