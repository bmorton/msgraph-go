/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// InlineObject1534 struct for InlineObject1534
type InlineObject1534 struct {
	Hour AnyOfobject `json:"hour,omitempty"`
	Minute AnyOfobject `json:"minute,omitempty"`
	Second AnyOfobject `json:"second,omitempty"`
}

// NewInlineObject1534 instantiates a new InlineObject1534 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject1534() *InlineObject1534 {
	this := InlineObject1534{}
	return &this
}

// NewInlineObject1534WithDefaults instantiates a new InlineObject1534 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject1534WithDefaults() *InlineObject1534 {
	this := InlineObject1534{}
	return &this
}

// GetHour returns the Hour field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1534) GetHour() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Hour
}

// GetHourOk returns a tuple with the Hour field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1534) GetHourOk() (*AnyOfobject, bool) {
	if o == nil || o.Hour == nil {
		return nil, false
	}
	return &o.Hour, true
}

// HasHour returns a boolean if a field has been set.
func (o *InlineObject1534) HasHour() bool {
	if o != nil && o.Hour != nil {
		return true
	}

	return false
}

// SetHour gets a reference to the given AnyOfobject and assigns it to the Hour field.
func (o *InlineObject1534) SetHour(v AnyOfobject) {
	o.Hour = v
}

// GetMinute returns the Minute field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1534) GetMinute() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Minute
}

// GetMinuteOk returns a tuple with the Minute field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1534) GetMinuteOk() (*AnyOfobject, bool) {
	if o == nil || o.Minute == nil {
		return nil, false
	}
	return &o.Minute, true
}

// HasMinute returns a boolean if a field has been set.
func (o *InlineObject1534) HasMinute() bool {
	if o != nil && o.Minute != nil {
		return true
	}

	return false
}

// SetMinute gets a reference to the given AnyOfobject and assigns it to the Minute field.
func (o *InlineObject1534) SetMinute(v AnyOfobject) {
	o.Minute = v
}

// GetSecond returns the Second field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1534) GetSecond() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Second
}

// GetSecondOk returns a tuple with the Second field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1534) GetSecondOk() (*AnyOfobject, bool) {
	if o == nil || o.Second == nil {
		return nil, false
	}
	return &o.Second, true
}

// HasSecond returns a boolean if a field has been set.
func (o *InlineObject1534) HasSecond() bool {
	if o != nil && o.Second != nil {
		return true
	}

	return false
}

// SetSecond gets a reference to the given AnyOfobject and assigns it to the Second field.
func (o *InlineObject1534) SetSecond(v AnyOfobject) {
	o.Second = v
}

func (o InlineObject1534) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Hour != nil {
		toSerialize["hour"] = o.Hour
	}
	if o.Minute != nil {
		toSerialize["minute"] = o.Minute
	}
	if o.Second != nil {
		toSerialize["second"] = o.Second
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject1534 struct {
	value *InlineObject1534
	isSet bool
}

func (v NullableInlineObject1534) Get() *InlineObject1534 {
	return v.value
}

func (v *NullableInlineObject1534) Set(val *InlineObject1534) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject1534) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject1534) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject1534(val *InlineObject1534) *NullableInlineObject1534 {
	return &NullableInlineObject1534{value: val, isSet: true}
}

func (v NullableInlineObject1534) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject1534) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


