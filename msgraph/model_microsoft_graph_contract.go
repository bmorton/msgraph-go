/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphContract struct for MicrosoftGraphContract
type MicrosoftGraphContract struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	DeletedDateTime NullableTime `json:"deletedDateTime,omitempty"`
	// Type of contract. Possible values are:  SyndicationPartner, BreadthPartner, ResellerPartner. See more in the table below.
	ContractType NullableString `json:"contractType,omitempty"`
	// The unique identifier for the customer tenant referenced by this partnership. Corresponds to the id property of the customer tenant's organization resource.
	CustomerId NullableString `json:"customerId,omitempty"`
	// A copy of the customer tenant's default domain name. The copy is made when the partnership with the customer is established. It is not automatically updated if the customer tenant's default domain name changes.
	DefaultDomainName NullableString `json:"defaultDomainName,omitempty"`
	// A copy of the customer tenant's display name. The copy is made when the partnership with the customer is established. It is not automatically updated if the customer tenant's display name changes.
	DisplayName NullableString `json:"displayName,omitempty"`
}

// NewMicrosoftGraphContract instantiates a new MicrosoftGraphContract object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphContract() *MicrosoftGraphContract {
	this := MicrosoftGraphContract{}
	return &this
}

// NewMicrosoftGraphContractWithDefaults instantiates a new MicrosoftGraphContract object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphContractWithDefaults() *MicrosoftGraphContract {
	this := MicrosoftGraphContract{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphContract) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphContract) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphContract) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphContract) SetId(v string) {
	o.Id = &v
}

// GetDeletedDateTime returns the DeletedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphContract) GetDeletedDateTime() time.Time {
	if o == nil || o.DeletedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.DeletedDateTime.Get()
}

// GetDeletedDateTimeOk returns a tuple with the DeletedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphContract) GetDeletedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DeletedDateTime.Get(), o.DeletedDateTime.IsSet()
}

// HasDeletedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphContract) HasDeletedDateTime() bool {
	if o != nil && o.DeletedDateTime.IsSet() {
		return true
	}

	return false
}

// SetDeletedDateTime gets a reference to the given NullableTime and assigns it to the DeletedDateTime field.
func (o *MicrosoftGraphContract) SetDeletedDateTime(v time.Time) {
	o.DeletedDateTime.Set(&v)
}
// SetDeletedDateTimeNil sets the value for DeletedDateTime to be an explicit nil
func (o *MicrosoftGraphContract) SetDeletedDateTimeNil() {
	o.DeletedDateTime.Set(nil)
}

// UnsetDeletedDateTime ensures that no value is present for DeletedDateTime, not even an explicit nil
func (o *MicrosoftGraphContract) UnsetDeletedDateTime() {
	o.DeletedDateTime.Unset()
}

// GetContractType returns the ContractType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphContract) GetContractType() string {
	if o == nil || o.ContractType.Get() == nil {
		var ret string
		return ret
	}
	return *o.ContractType.Get()
}

// GetContractTypeOk returns a tuple with the ContractType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphContract) GetContractTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ContractType.Get(), o.ContractType.IsSet()
}

// HasContractType returns a boolean if a field has been set.
func (o *MicrosoftGraphContract) HasContractType() bool {
	if o != nil && o.ContractType.IsSet() {
		return true
	}

	return false
}

// SetContractType gets a reference to the given NullableString and assigns it to the ContractType field.
func (o *MicrosoftGraphContract) SetContractType(v string) {
	o.ContractType.Set(&v)
}
// SetContractTypeNil sets the value for ContractType to be an explicit nil
func (o *MicrosoftGraphContract) SetContractTypeNil() {
	o.ContractType.Set(nil)
}

// UnsetContractType ensures that no value is present for ContractType, not even an explicit nil
func (o *MicrosoftGraphContract) UnsetContractType() {
	o.ContractType.Unset()
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphContract) GetCustomerId() string {
	if o == nil || o.CustomerId.Get() == nil {
		var ret string
		return ret
	}
	return *o.CustomerId.Get()
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphContract) GetCustomerIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CustomerId.Get(), o.CustomerId.IsSet()
}

// HasCustomerId returns a boolean if a field has been set.
func (o *MicrosoftGraphContract) HasCustomerId() bool {
	if o != nil && o.CustomerId.IsSet() {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given NullableString and assigns it to the CustomerId field.
func (o *MicrosoftGraphContract) SetCustomerId(v string) {
	o.CustomerId.Set(&v)
}
// SetCustomerIdNil sets the value for CustomerId to be an explicit nil
func (o *MicrosoftGraphContract) SetCustomerIdNil() {
	o.CustomerId.Set(nil)
}

// UnsetCustomerId ensures that no value is present for CustomerId, not even an explicit nil
func (o *MicrosoftGraphContract) UnsetCustomerId() {
	o.CustomerId.Unset()
}

// GetDefaultDomainName returns the DefaultDomainName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphContract) GetDefaultDomainName() string {
	if o == nil || o.DefaultDomainName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DefaultDomainName.Get()
}

// GetDefaultDomainNameOk returns a tuple with the DefaultDomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphContract) GetDefaultDomainNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DefaultDomainName.Get(), o.DefaultDomainName.IsSet()
}

// HasDefaultDomainName returns a boolean if a field has been set.
func (o *MicrosoftGraphContract) HasDefaultDomainName() bool {
	if o != nil && o.DefaultDomainName.IsSet() {
		return true
	}

	return false
}

// SetDefaultDomainName gets a reference to the given NullableString and assigns it to the DefaultDomainName field.
func (o *MicrosoftGraphContract) SetDefaultDomainName(v string) {
	o.DefaultDomainName.Set(&v)
}
// SetDefaultDomainNameNil sets the value for DefaultDomainName to be an explicit nil
func (o *MicrosoftGraphContract) SetDefaultDomainNameNil() {
	o.DefaultDomainName.Set(nil)
}

// UnsetDefaultDomainName ensures that no value is present for DefaultDomainName, not even an explicit nil
func (o *MicrosoftGraphContract) UnsetDefaultDomainName() {
	o.DefaultDomainName.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphContract) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphContract) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphContract) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *MicrosoftGraphContract) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *MicrosoftGraphContract) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *MicrosoftGraphContract) UnsetDisplayName() {
	o.DisplayName.Unset()
}

func (o MicrosoftGraphContract) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.DeletedDateTime.IsSet() {
		toSerialize["deletedDateTime"] = o.DeletedDateTime.Get()
	}
	if o.ContractType.IsSet() {
		toSerialize["contractType"] = o.ContractType.Get()
	}
	if o.CustomerId.IsSet() {
		toSerialize["customerId"] = o.CustomerId.Get()
	}
	if o.DefaultDomainName.IsSet() {
		toSerialize["defaultDomainName"] = o.DefaultDomainName.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphContract struct {
	value *MicrosoftGraphContract
	isSet bool
}

func (v NullableMicrosoftGraphContract) Get() *MicrosoftGraphContract {
	return v.value
}

func (v *NullableMicrosoftGraphContract) Set(val *MicrosoftGraphContract) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphContract) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphContract) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphContract(val *MicrosoftGraphContract) *NullableMicrosoftGraphContract {
	return &NullableMicrosoftGraphContract{value: val, isSet: true}
}

func (v NullableMicrosoftGraphContract) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphContract) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


