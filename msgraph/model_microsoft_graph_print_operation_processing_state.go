/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphPrintOperationProcessingState the model 'MicrosoftGraphPrintOperationProcessingState'
type MicrosoftGraphPrintOperationProcessingState string

// List of microsoft.graph.printOperationProcessingState
const (
	NOT_STARTED MicrosoftGraphPrintOperationProcessingState = "notStarted"
	RUNNING MicrosoftGraphPrintOperationProcessingState = "running"
	SUCCEEDED MicrosoftGraphPrintOperationProcessingState = "succeeded"
	FAILED MicrosoftGraphPrintOperationProcessingState = "failed"
	UNKNOWN_FUTURE_VALUE MicrosoftGraphPrintOperationProcessingState = "unknownFutureValue"
)

// All allowed values of MicrosoftGraphPrintOperationProcessingState enum
var AllowedMicrosoftGraphPrintOperationProcessingStateEnumValues = []MicrosoftGraphPrintOperationProcessingState{
	"notStarted",
	"running",
	"succeeded",
	"failed",
	"unknownFutureValue",
}

func (v *MicrosoftGraphPrintOperationProcessingState) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphPrintOperationProcessingState(value)
	for _, existing := range AllowedMicrosoftGraphPrintOperationProcessingStateEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphPrintOperationProcessingState", value)
}

// NewMicrosoftGraphPrintOperationProcessingStateFromValue returns a pointer to a valid MicrosoftGraphPrintOperationProcessingState
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphPrintOperationProcessingStateFromValue(v string) (*MicrosoftGraphPrintOperationProcessingState, error) {
	ev := MicrosoftGraphPrintOperationProcessingState(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphPrintOperationProcessingState: valid values are %v", v, AllowedMicrosoftGraphPrintOperationProcessingStateEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphPrintOperationProcessingState) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphPrintOperationProcessingStateEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.printOperationProcessingState value
func (v MicrosoftGraphPrintOperationProcessingState) Ptr() *MicrosoftGraphPrintOperationProcessingState {
	return &v
}

type NullableMicrosoftGraphPrintOperationProcessingState struct {
	value *MicrosoftGraphPrintOperationProcessingState
	isSet bool
}

func (v NullableMicrosoftGraphPrintOperationProcessingState) Get() *MicrosoftGraphPrintOperationProcessingState {
	return v.value
}

func (v *NullableMicrosoftGraphPrintOperationProcessingState) Set(val *MicrosoftGraphPrintOperationProcessingState) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphPrintOperationProcessingState) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphPrintOperationProcessingState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphPrintOperationProcessingState(val *MicrosoftGraphPrintOperationProcessingState) *NullableMicrosoftGraphPrintOperationProcessingState {
	return &NullableMicrosoftGraphPrintOperationProcessingState{value: val, isSet: true}
}

func (v NullableMicrosoftGraphPrintOperationProcessingState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphPrintOperationProcessingState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

