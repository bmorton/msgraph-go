/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphWorkbookChartDataLabels struct for MicrosoftGraphWorkbookChartDataLabels
type MicrosoftGraphWorkbookChartDataLabels struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// DataLabelPosition value that represents the position of the data label. The possible values are: None, Center, InsideEnd, InsideBase, OutsideEnd, Left, Right, Top, Bottom, BestFit, Callout.
	Position NullableString `json:"position,omitempty"`
	// String representing the separator used for the data labels on a chart.
	Separator NullableString `json:"separator,omitempty"`
	// Boolean value representing if the data label bubble size is visible or not.
	ShowBubbleSize NullableBool `json:"showBubbleSize,omitempty"`
	// Boolean value representing if the data label category name is visible or not.
	ShowCategoryName NullableBool `json:"showCategoryName,omitempty"`
	// Boolean value representing if the data label legend key is visible or not.
	ShowLegendKey NullableBool `json:"showLegendKey,omitempty"`
	// Boolean value representing if the data label percentage is visible or not.
	ShowPercentage NullableBool `json:"showPercentage,omitempty"`
	// Boolean value representing if the data label series name is visible or not.
	ShowSeriesName NullableBool `json:"showSeriesName,omitempty"`
	// Boolean value representing if the data label value is visible or not.
	ShowValue NullableBool `json:"showValue,omitempty"`
	// Represents the format of chart data labels, which includes fill and font formatting. Read-only.
	Format AnyOfmicrosoftGraphWorkbookChartDataLabelFormat `json:"format,omitempty"`
}

// NewMicrosoftGraphWorkbookChartDataLabels instantiates a new MicrosoftGraphWorkbookChartDataLabels object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphWorkbookChartDataLabels() *MicrosoftGraphWorkbookChartDataLabels {
	this := MicrosoftGraphWorkbookChartDataLabels{}
	return &this
}

// NewMicrosoftGraphWorkbookChartDataLabelsWithDefaults instantiates a new MicrosoftGraphWorkbookChartDataLabels object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphWorkbookChartDataLabelsWithDefaults() *MicrosoftGraphWorkbookChartDataLabels {
	this := MicrosoftGraphWorkbookChartDataLabels{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphWorkbookChartDataLabels) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWorkbookChartDataLabels) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkbookChartDataLabels) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphWorkbookChartDataLabels) SetId(v string) {
	o.Id = &v
}

// GetPosition returns the Position field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphWorkbookChartDataLabels) GetPosition() string {
	if o == nil || o.Position.Get() == nil {
		var ret string
		return ret
	}
	return *o.Position.Get()
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphWorkbookChartDataLabels) GetPositionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Position.Get(), o.Position.IsSet()
}

// HasPosition returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkbookChartDataLabels) HasPosition() bool {
	if o != nil && o.Position.IsSet() {
		return true
	}

	return false
}

// SetPosition gets a reference to the given NullableString and assigns it to the Position field.
func (o *MicrosoftGraphWorkbookChartDataLabels) SetPosition(v string) {
	o.Position.Set(&v)
}
// SetPositionNil sets the value for Position to be an explicit nil
func (o *MicrosoftGraphWorkbookChartDataLabels) SetPositionNil() {
	o.Position.Set(nil)
}

// UnsetPosition ensures that no value is present for Position, not even an explicit nil
func (o *MicrosoftGraphWorkbookChartDataLabels) UnsetPosition() {
	o.Position.Unset()
}

// GetSeparator returns the Separator field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphWorkbookChartDataLabels) GetSeparator() string {
	if o == nil || o.Separator.Get() == nil {
		var ret string
		return ret
	}
	return *o.Separator.Get()
}

// GetSeparatorOk returns a tuple with the Separator field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphWorkbookChartDataLabels) GetSeparatorOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Separator.Get(), o.Separator.IsSet()
}

// HasSeparator returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkbookChartDataLabels) HasSeparator() bool {
	if o != nil && o.Separator.IsSet() {
		return true
	}

	return false
}

// SetSeparator gets a reference to the given NullableString and assigns it to the Separator field.
func (o *MicrosoftGraphWorkbookChartDataLabels) SetSeparator(v string) {
	o.Separator.Set(&v)
}
// SetSeparatorNil sets the value for Separator to be an explicit nil
func (o *MicrosoftGraphWorkbookChartDataLabels) SetSeparatorNil() {
	o.Separator.Set(nil)
}

// UnsetSeparator ensures that no value is present for Separator, not even an explicit nil
func (o *MicrosoftGraphWorkbookChartDataLabels) UnsetSeparator() {
	o.Separator.Unset()
}

// GetShowBubbleSize returns the ShowBubbleSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphWorkbookChartDataLabels) GetShowBubbleSize() bool {
	if o == nil || o.ShowBubbleSize.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ShowBubbleSize.Get()
}

// GetShowBubbleSizeOk returns a tuple with the ShowBubbleSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphWorkbookChartDataLabels) GetShowBubbleSizeOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ShowBubbleSize.Get(), o.ShowBubbleSize.IsSet()
}

// HasShowBubbleSize returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkbookChartDataLabels) HasShowBubbleSize() bool {
	if o != nil && o.ShowBubbleSize.IsSet() {
		return true
	}

	return false
}

// SetShowBubbleSize gets a reference to the given NullableBool and assigns it to the ShowBubbleSize field.
func (o *MicrosoftGraphWorkbookChartDataLabels) SetShowBubbleSize(v bool) {
	o.ShowBubbleSize.Set(&v)
}
// SetShowBubbleSizeNil sets the value for ShowBubbleSize to be an explicit nil
func (o *MicrosoftGraphWorkbookChartDataLabels) SetShowBubbleSizeNil() {
	o.ShowBubbleSize.Set(nil)
}

// UnsetShowBubbleSize ensures that no value is present for ShowBubbleSize, not even an explicit nil
func (o *MicrosoftGraphWorkbookChartDataLabels) UnsetShowBubbleSize() {
	o.ShowBubbleSize.Unset()
}

// GetShowCategoryName returns the ShowCategoryName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphWorkbookChartDataLabels) GetShowCategoryName() bool {
	if o == nil || o.ShowCategoryName.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ShowCategoryName.Get()
}

// GetShowCategoryNameOk returns a tuple with the ShowCategoryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphWorkbookChartDataLabels) GetShowCategoryNameOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ShowCategoryName.Get(), o.ShowCategoryName.IsSet()
}

// HasShowCategoryName returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkbookChartDataLabels) HasShowCategoryName() bool {
	if o != nil && o.ShowCategoryName.IsSet() {
		return true
	}

	return false
}

// SetShowCategoryName gets a reference to the given NullableBool and assigns it to the ShowCategoryName field.
func (o *MicrosoftGraphWorkbookChartDataLabels) SetShowCategoryName(v bool) {
	o.ShowCategoryName.Set(&v)
}
// SetShowCategoryNameNil sets the value for ShowCategoryName to be an explicit nil
func (o *MicrosoftGraphWorkbookChartDataLabels) SetShowCategoryNameNil() {
	o.ShowCategoryName.Set(nil)
}

// UnsetShowCategoryName ensures that no value is present for ShowCategoryName, not even an explicit nil
func (o *MicrosoftGraphWorkbookChartDataLabels) UnsetShowCategoryName() {
	o.ShowCategoryName.Unset()
}

// GetShowLegendKey returns the ShowLegendKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphWorkbookChartDataLabels) GetShowLegendKey() bool {
	if o == nil || o.ShowLegendKey.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ShowLegendKey.Get()
}

// GetShowLegendKeyOk returns a tuple with the ShowLegendKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphWorkbookChartDataLabels) GetShowLegendKeyOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ShowLegendKey.Get(), o.ShowLegendKey.IsSet()
}

// HasShowLegendKey returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkbookChartDataLabels) HasShowLegendKey() bool {
	if o != nil && o.ShowLegendKey.IsSet() {
		return true
	}

	return false
}

// SetShowLegendKey gets a reference to the given NullableBool and assigns it to the ShowLegendKey field.
func (o *MicrosoftGraphWorkbookChartDataLabels) SetShowLegendKey(v bool) {
	o.ShowLegendKey.Set(&v)
}
// SetShowLegendKeyNil sets the value for ShowLegendKey to be an explicit nil
func (o *MicrosoftGraphWorkbookChartDataLabels) SetShowLegendKeyNil() {
	o.ShowLegendKey.Set(nil)
}

// UnsetShowLegendKey ensures that no value is present for ShowLegendKey, not even an explicit nil
func (o *MicrosoftGraphWorkbookChartDataLabels) UnsetShowLegendKey() {
	o.ShowLegendKey.Unset()
}

// GetShowPercentage returns the ShowPercentage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphWorkbookChartDataLabels) GetShowPercentage() bool {
	if o == nil || o.ShowPercentage.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ShowPercentage.Get()
}

// GetShowPercentageOk returns a tuple with the ShowPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphWorkbookChartDataLabels) GetShowPercentageOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ShowPercentage.Get(), o.ShowPercentage.IsSet()
}

// HasShowPercentage returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkbookChartDataLabels) HasShowPercentage() bool {
	if o != nil && o.ShowPercentage.IsSet() {
		return true
	}

	return false
}

// SetShowPercentage gets a reference to the given NullableBool and assigns it to the ShowPercentage field.
func (o *MicrosoftGraphWorkbookChartDataLabels) SetShowPercentage(v bool) {
	o.ShowPercentage.Set(&v)
}
// SetShowPercentageNil sets the value for ShowPercentage to be an explicit nil
func (o *MicrosoftGraphWorkbookChartDataLabels) SetShowPercentageNil() {
	o.ShowPercentage.Set(nil)
}

// UnsetShowPercentage ensures that no value is present for ShowPercentage, not even an explicit nil
func (o *MicrosoftGraphWorkbookChartDataLabels) UnsetShowPercentage() {
	o.ShowPercentage.Unset()
}

// GetShowSeriesName returns the ShowSeriesName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphWorkbookChartDataLabels) GetShowSeriesName() bool {
	if o == nil || o.ShowSeriesName.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ShowSeriesName.Get()
}

// GetShowSeriesNameOk returns a tuple with the ShowSeriesName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphWorkbookChartDataLabels) GetShowSeriesNameOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ShowSeriesName.Get(), o.ShowSeriesName.IsSet()
}

// HasShowSeriesName returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkbookChartDataLabels) HasShowSeriesName() bool {
	if o != nil && o.ShowSeriesName.IsSet() {
		return true
	}

	return false
}

// SetShowSeriesName gets a reference to the given NullableBool and assigns it to the ShowSeriesName field.
func (o *MicrosoftGraphWorkbookChartDataLabels) SetShowSeriesName(v bool) {
	o.ShowSeriesName.Set(&v)
}
// SetShowSeriesNameNil sets the value for ShowSeriesName to be an explicit nil
func (o *MicrosoftGraphWorkbookChartDataLabels) SetShowSeriesNameNil() {
	o.ShowSeriesName.Set(nil)
}

// UnsetShowSeriesName ensures that no value is present for ShowSeriesName, not even an explicit nil
func (o *MicrosoftGraphWorkbookChartDataLabels) UnsetShowSeriesName() {
	o.ShowSeriesName.Unset()
}

// GetShowValue returns the ShowValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphWorkbookChartDataLabels) GetShowValue() bool {
	if o == nil || o.ShowValue.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ShowValue.Get()
}

// GetShowValueOk returns a tuple with the ShowValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphWorkbookChartDataLabels) GetShowValueOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ShowValue.Get(), o.ShowValue.IsSet()
}

// HasShowValue returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkbookChartDataLabels) HasShowValue() bool {
	if o != nil && o.ShowValue.IsSet() {
		return true
	}

	return false
}

// SetShowValue gets a reference to the given NullableBool and assigns it to the ShowValue field.
func (o *MicrosoftGraphWorkbookChartDataLabels) SetShowValue(v bool) {
	o.ShowValue.Set(&v)
}
// SetShowValueNil sets the value for ShowValue to be an explicit nil
func (o *MicrosoftGraphWorkbookChartDataLabels) SetShowValueNil() {
	o.ShowValue.Set(nil)
}

// UnsetShowValue ensures that no value is present for ShowValue, not even an explicit nil
func (o *MicrosoftGraphWorkbookChartDataLabels) UnsetShowValue() {
	o.ShowValue.Unset()
}

// GetFormat returns the Format field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphWorkbookChartDataLabels) GetFormat() AnyOfmicrosoftGraphWorkbookChartDataLabelFormat {
	if o == nil  {
		var ret AnyOfmicrosoftGraphWorkbookChartDataLabelFormat
		return ret
	}
	return o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphWorkbookChartDataLabels) GetFormatOk() (*AnyOfmicrosoftGraphWorkbookChartDataLabelFormat, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return &o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkbookChartDataLabels) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given AnyOfmicrosoftGraphWorkbookChartDataLabelFormat and assigns it to the Format field.
func (o *MicrosoftGraphWorkbookChartDataLabels) SetFormat(v AnyOfmicrosoftGraphWorkbookChartDataLabelFormat) {
	o.Format = v
}

func (o MicrosoftGraphWorkbookChartDataLabels) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Position.IsSet() {
		toSerialize["position"] = o.Position.Get()
	}
	if o.Separator.IsSet() {
		toSerialize["separator"] = o.Separator.Get()
	}
	if o.ShowBubbleSize.IsSet() {
		toSerialize["showBubbleSize"] = o.ShowBubbleSize.Get()
	}
	if o.ShowCategoryName.IsSet() {
		toSerialize["showCategoryName"] = o.ShowCategoryName.Get()
	}
	if o.ShowLegendKey.IsSet() {
		toSerialize["showLegendKey"] = o.ShowLegendKey.Get()
	}
	if o.ShowPercentage.IsSet() {
		toSerialize["showPercentage"] = o.ShowPercentage.Get()
	}
	if o.ShowSeriesName.IsSet() {
		toSerialize["showSeriesName"] = o.ShowSeriesName.Get()
	}
	if o.ShowValue.IsSet() {
		toSerialize["showValue"] = o.ShowValue.Get()
	}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphWorkbookChartDataLabels struct {
	value *MicrosoftGraphWorkbookChartDataLabels
	isSet bool
}

func (v NullableMicrosoftGraphWorkbookChartDataLabels) Get() *MicrosoftGraphWorkbookChartDataLabels {
	return v.value
}

func (v *NullableMicrosoftGraphWorkbookChartDataLabels) Set(val *MicrosoftGraphWorkbookChartDataLabels) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphWorkbookChartDataLabels) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphWorkbookChartDataLabels) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphWorkbookChartDataLabels(val *MicrosoftGraphWorkbookChartDataLabels) *NullableMicrosoftGraphWorkbookChartDataLabels {
	return &NullableMicrosoftGraphWorkbookChartDataLabels{value: val, isSet: true}
}

func (v NullableMicrosoftGraphWorkbookChartDataLabels) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphWorkbookChartDataLabels) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


