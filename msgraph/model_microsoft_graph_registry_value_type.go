/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphRegistryValueType the model 'MicrosoftGraphRegistryValueType'
type MicrosoftGraphRegistryValueType string

// List of microsoft.graph.registryValueType
const (
	UNKNOWN MicrosoftGraphRegistryValueType = "unknown"
	BINARY MicrosoftGraphRegistryValueType = "binary"
	DWORD MicrosoftGraphRegistryValueType = "dword"
	DWORD_LITTLE_ENDIAN MicrosoftGraphRegistryValueType = "dwordLittleEndian"
	DWORD_BIG_ENDIAN MicrosoftGraphRegistryValueType = "dwordBigEndian"
	EXPAND_SZ MicrosoftGraphRegistryValueType = "expandSz"
	LINK MicrosoftGraphRegistryValueType = "link"
	MULTI_SZ MicrosoftGraphRegistryValueType = "multiSz"
	NONE MicrosoftGraphRegistryValueType = "none"
	QWORD MicrosoftGraphRegistryValueType = "qword"
	QWORDLITTLE_ENDIAN MicrosoftGraphRegistryValueType = "qwordlittleEndian"
	SZ MicrosoftGraphRegistryValueType = "sz"
	UNKNOWN_FUTURE_VALUE MicrosoftGraphRegistryValueType = "unknownFutureValue"
)

// All allowed values of MicrosoftGraphRegistryValueType enum
var AllowedMicrosoftGraphRegistryValueTypeEnumValues = []MicrosoftGraphRegistryValueType{
	"unknown",
	"binary",
	"dword",
	"dwordLittleEndian",
	"dwordBigEndian",
	"expandSz",
	"link",
	"multiSz",
	"none",
	"qword",
	"qwordlittleEndian",
	"sz",
	"unknownFutureValue",
}

func (v *MicrosoftGraphRegistryValueType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphRegistryValueType(value)
	for _, existing := range AllowedMicrosoftGraphRegistryValueTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphRegistryValueType", value)
}

// NewMicrosoftGraphRegistryValueTypeFromValue returns a pointer to a valid MicrosoftGraphRegistryValueType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphRegistryValueTypeFromValue(v string) (*MicrosoftGraphRegistryValueType, error) {
	ev := MicrosoftGraphRegistryValueType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphRegistryValueType: valid values are %v", v, AllowedMicrosoftGraphRegistryValueTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphRegistryValueType) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphRegistryValueTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.registryValueType value
func (v MicrosoftGraphRegistryValueType) Ptr() *MicrosoftGraphRegistryValueType {
	return &v
}

type NullableMicrosoftGraphRegistryValueType struct {
	value *MicrosoftGraphRegistryValueType
	isSet bool
}

func (v NullableMicrosoftGraphRegistryValueType) Get() *MicrosoftGraphRegistryValueType {
	return v.value
}

func (v *NullableMicrosoftGraphRegistryValueType) Set(val *MicrosoftGraphRegistryValueType) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphRegistryValueType) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphRegistryValueType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphRegistryValueType(val *MicrosoftGraphRegistryValueType) *NullableMicrosoftGraphRegistryValueType {
	return &NullableMicrosoftGraphRegistryValueType{value: val, isSet: true}
}

func (v NullableMicrosoftGraphRegistryValueType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphRegistryValueType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

