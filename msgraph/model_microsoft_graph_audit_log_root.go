/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphAuditLogRoot struct for MicrosoftGraphAuditLogRoot
type MicrosoftGraphAuditLogRoot struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// Read-only. Nullable.
	DirectoryAudits *[]MicrosoftGraphDirectoryAudit `json:"directoryAudits,omitempty"`
	Provisioning *[]MicrosoftGraphProvisioningObjectSummary `json:"provisioning,omitempty"`
	RestrictedSignIns *[]MicrosoftGraphRestrictedSignIn `json:"restrictedSignIns,omitempty"`
	// Read-only. Nullable.
	SignIns *[]MicrosoftGraphSignIn `json:"signIns,omitempty"`
}

// NewMicrosoftGraphAuditLogRoot instantiates a new MicrosoftGraphAuditLogRoot object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphAuditLogRoot() *MicrosoftGraphAuditLogRoot {
	this := MicrosoftGraphAuditLogRoot{}
	return &this
}

// NewMicrosoftGraphAuditLogRootWithDefaults instantiates a new MicrosoftGraphAuditLogRoot object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphAuditLogRootWithDefaults() *MicrosoftGraphAuditLogRoot {
	this := MicrosoftGraphAuditLogRoot{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphAuditLogRoot) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAuditLogRoot) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphAuditLogRoot) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphAuditLogRoot) SetId(v string) {
	o.Id = &v
}

// GetDirectoryAudits returns the DirectoryAudits field value if set, zero value otherwise.
func (o *MicrosoftGraphAuditLogRoot) GetDirectoryAudits() []MicrosoftGraphDirectoryAudit {
	if o == nil || o.DirectoryAudits == nil {
		var ret []MicrosoftGraphDirectoryAudit
		return ret
	}
	return *o.DirectoryAudits
}

// GetDirectoryAuditsOk returns a tuple with the DirectoryAudits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAuditLogRoot) GetDirectoryAuditsOk() (*[]MicrosoftGraphDirectoryAudit, bool) {
	if o == nil || o.DirectoryAudits == nil {
		return nil, false
	}
	return o.DirectoryAudits, true
}

// HasDirectoryAudits returns a boolean if a field has been set.
func (o *MicrosoftGraphAuditLogRoot) HasDirectoryAudits() bool {
	if o != nil && o.DirectoryAudits != nil {
		return true
	}

	return false
}

// SetDirectoryAudits gets a reference to the given []MicrosoftGraphDirectoryAudit and assigns it to the DirectoryAudits field.
func (o *MicrosoftGraphAuditLogRoot) SetDirectoryAudits(v []MicrosoftGraphDirectoryAudit) {
	o.DirectoryAudits = &v
}

// GetProvisioning returns the Provisioning field value if set, zero value otherwise.
func (o *MicrosoftGraphAuditLogRoot) GetProvisioning() []MicrosoftGraphProvisioningObjectSummary {
	if o == nil || o.Provisioning == nil {
		var ret []MicrosoftGraphProvisioningObjectSummary
		return ret
	}
	return *o.Provisioning
}

// GetProvisioningOk returns a tuple with the Provisioning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAuditLogRoot) GetProvisioningOk() (*[]MicrosoftGraphProvisioningObjectSummary, bool) {
	if o == nil || o.Provisioning == nil {
		return nil, false
	}
	return o.Provisioning, true
}

// HasProvisioning returns a boolean if a field has been set.
func (o *MicrosoftGraphAuditLogRoot) HasProvisioning() bool {
	if o != nil && o.Provisioning != nil {
		return true
	}

	return false
}

// SetProvisioning gets a reference to the given []MicrosoftGraphProvisioningObjectSummary and assigns it to the Provisioning field.
func (o *MicrosoftGraphAuditLogRoot) SetProvisioning(v []MicrosoftGraphProvisioningObjectSummary) {
	o.Provisioning = &v
}

// GetRestrictedSignIns returns the RestrictedSignIns field value if set, zero value otherwise.
func (o *MicrosoftGraphAuditLogRoot) GetRestrictedSignIns() []MicrosoftGraphRestrictedSignIn {
	if o == nil || o.RestrictedSignIns == nil {
		var ret []MicrosoftGraphRestrictedSignIn
		return ret
	}
	return *o.RestrictedSignIns
}

// GetRestrictedSignInsOk returns a tuple with the RestrictedSignIns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAuditLogRoot) GetRestrictedSignInsOk() (*[]MicrosoftGraphRestrictedSignIn, bool) {
	if o == nil || o.RestrictedSignIns == nil {
		return nil, false
	}
	return o.RestrictedSignIns, true
}

// HasRestrictedSignIns returns a boolean if a field has been set.
func (o *MicrosoftGraphAuditLogRoot) HasRestrictedSignIns() bool {
	if o != nil && o.RestrictedSignIns != nil {
		return true
	}

	return false
}

// SetRestrictedSignIns gets a reference to the given []MicrosoftGraphRestrictedSignIn and assigns it to the RestrictedSignIns field.
func (o *MicrosoftGraphAuditLogRoot) SetRestrictedSignIns(v []MicrosoftGraphRestrictedSignIn) {
	o.RestrictedSignIns = &v
}

// GetSignIns returns the SignIns field value if set, zero value otherwise.
func (o *MicrosoftGraphAuditLogRoot) GetSignIns() []MicrosoftGraphSignIn {
	if o == nil || o.SignIns == nil {
		var ret []MicrosoftGraphSignIn
		return ret
	}
	return *o.SignIns
}

// GetSignInsOk returns a tuple with the SignIns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAuditLogRoot) GetSignInsOk() (*[]MicrosoftGraphSignIn, bool) {
	if o == nil || o.SignIns == nil {
		return nil, false
	}
	return o.SignIns, true
}

// HasSignIns returns a boolean if a field has been set.
func (o *MicrosoftGraphAuditLogRoot) HasSignIns() bool {
	if o != nil && o.SignIns != nil {
		return true
	}

	return false
}

// SetSignIns gets a reference to the given []MicrosoftGraphSignIn and assigns it to the SignIns field.
func (o *MicrosoftGraphAuditLogRoot) SetSignIns(v []MicrosoftGraphSignIn) {
	o.SignIns = &v
}

func (o MicrosoftGraphAuditLogRoot) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.DirectoryAudits != nil {
		toSerialize["directoryAudits"] = o.DirectoryAudits
	}
	if o.Provisioning != nil {
		toSerialize["provisioning"] = o.Provisioning
	}
	if o.RestrictedSignIns != nil {
		toSerialize["restrictedSignIns"] = o.RestrictedSignIns
	}
	if o.SignIns != nil {
		toSerialize["signIns"] = o.SignIns
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphAuditLogRoot struct {
	value *MicrosoftGraphAuditLogRoot
	isSet bool
}

func (v NullableMicrosoftGraphAuditLogRoot) Get() *MicrosoftGraphAuditLogRoot {
	return v.value
}

func (v *NullableMicrosoftGraphAuditLogRoot) Set(val *MicrosoftGraphAuditLogRoot) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphAuditLogRoot) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphAuditLogRoot) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphAuditLogRoot(val *MicrosoftGraphAuditLogRoot) *NullableMicrosoftGraphAuditLogRoot {
	return &NullableMicrosoftGraphAuditLogRoot{value: val, isSet: true}
}

func (v NullableMicrosoftGraphAuditLogRoot) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphAuditLogRoot) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


