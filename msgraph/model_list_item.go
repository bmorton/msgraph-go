/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// ListItem struct for ListItem
type ListItem struct {
	// The content type of this list item
	ContentType AnyOfmicrosoftGraphContentTypeInfo `json:"contentType,omitempty"`
	// Returns identifiers useful for SharePoint REST compatibility. Read-only.
	SharepointIds AnyOfmicrosoftGraphSharepointIds `json:"sharepointIds,omitempty"`
	// Analytics about the view activities that took place on this item.
	Analytics AnyOfmicrosoftGraphItemAnalytics `json:"analytics,omitempty"`
	// For document libraries, the driveItem relationship exposes the listItem as a [driveItem][]
	DriveItem AnyOfmicrosoftGraphDriveItem `json:"driveItem,omitempty"`
	// The values of the columns set on this list item.
	Fields AnyOfmicrosoftGraphFieldValueSet `json:"fields,omitempty"`
	// The list of previous versions of the list item.
	Versions *[]MicrosoftGraphListItemVersion `json:"versions,omitempty"`
}

// NewListItem instantiates a new ListItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListItem() *ListItem {
	this := ListItem{}
	return &this
}

// NewListItemWithDefaults instantiates a new ListItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListItemWithDefaults() *ListItem {
	this := ListItem{}
	return &this
}

// GetContentType returns the ContentType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListItem) GetContentType() AnyOfmicrosoftGraphContentTypeInfo {
	if o == nil  {
		var ret AnyOfmicrosoftGraphContentTypeInfo
		return ret
	}
	return o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListItem) GetContentTypeOk() (*AnyOfmicrosoftGraphContentTypeInfo, bool) {
	if o == nil || o.ContentType == nil {
		return nil, false
	}
	return &o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *ListItem) HasContentType() bool {
	if o != nil && o.ContentType != nil {
		return true
	}

	return false
}

// SetContentType gets a reference to the given AnyOfmicrosoftGraphContentTypeInfo and assigns it to the ContentType field.
func (o *ListItem) SetContentType(v AnyOfmicrosoftGraphContentTypeInfo) {
	o.ContentType = v
}

// GetSharepointIds returns the SharepointIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListItem) GetSharepointIds() AnyOfmicrosoftGraphSharepointIds {
	if o == nil  {
		var ret AnyOfmicrosoftGraphSharepointIds
		return ret
	}
	return o.SharepointIds
}

// GetSharepointIdsOk returns a tuple with the SharepointIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListItem) GetSharepointIdsOk() (*AnyOfmicrosoftGraphSharepointIds, bool) {
	if o == nil || o.SharepointIds == nil {
		return nil, false
	}
	return &o.SharepointIds, true
}

// HasSharepointIds returns a boolean if a field has been set.
func (o *ListItem) HasSharepointIds() bool {
	if o != nil && o.SharepointIds != nil {
		return true
	}

	return false
}

// SetSharepointIds gets a reference to the given AnyOfmicrosoftGraphSharepointIds and assigns it to the SharepointIds field.
func (o *ListItem) SetSharepointIds(v AnyOfmicrosoftGraphSharepointIds) {
	o.SharepointIds = v
}

// GetAnalytics returns the Analytics field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListItem) GetAnalytics() AnyOfmicrosoftGraphItemAnalytics {
	if o == nil  {
		var ret AnyOfmicrosoftGraphItemAnalytics
		return ret
	}
	return o.Analytics
}

// GetAnalyticsOk returns a tuple with the Analytics field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListItem) GetAnalyticsOk() (*AnyOfmicrosoftGraphItemAnalytics, bool) {
	if o == nil || o.Analytics == nil {
		return nil, false
	}
	return &o.Analytics, true
}

// HasAnalytics returns a boolean if a field has been set.
func (o *ListItem) HasAnalytics() bool {
	if o != nil && o.Analytics != nil {
		return true
	}

	return false
}

// SetAnalytics gets a reference to the given AnyOfmicrosoftGraphItemAnalytics and assigns it to the Analytics field.
func (o *ListItem) SetAnalytics(v AnyOfmicrosoftGraphItemAnalytics) {
	o.Analytics = v
}

// GetDriveItem returns the DriveItem field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListItem) GetDriveItem() AnyOfmicrosoftGraphDriveItem {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDriveItem
		return ret
	}
	return o.DriveItem
}

// GetDriveItemOk returns a tuple with the DriveItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListItem) GetDriveItemOk() (*AnyOfmicrosoftGraphDriveItem, bool) {
	if o == nil || o.DriveItem == nil {
		return nil, false
	}
	return &o.DriveItem, true
}

// HasDriveItem returns a boolean if a field has been set.
func (o *ListItem) HasDriveItem() bool {
	if o != nil && o.DriveItem != nil {
		return true
	}

	return false
}

// SetDriveItem gets a reference to the given AnyOfmicrosoftGraphDriveItem and assigns it to the DriveItem field.
func (o *ListItem) SetDriveItem(v AnyOfmicrosoftGraphDriveItem) {
	o.DriveItem = v
}

// GetFields returns the Fields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListItem) GetFields() AnyOfmicrosoftGraphFieldValueSet {
	if o == nil  {
		var ret AnyOfmicrosoftGraphFieldValueSet
		return ret
	}
	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListItem) GetFieldsOk() (*AnyOfmicrosoftGraphFieldValueSet, bool) {
	if o == nil || o.Fields == nil {
		return nil, false
	}
	return &o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *ListItem) HasFields() bool {
	if o != nil && o.Fields != nil {
		return true
	}

	return false
}

// SetFields gets a reference to the given AnyOfmicrosoftGraphFieldValueSet and assigns it to the Fields field.
func (o *ListItem) SetFields(v AnyOfmicrosoftGraphFieldValueSet) {
	o.Fields = v
}

// GetVersions returns the Versions field value if set, zero value otherwise.
func (o *ListItem) GetVersions() []MicrosoftGraphListItemVersion {
	if o == nil || o.Versions == nil {
		var ret []MicrosoftGraphListItemVersion
		return ret
	}
	return *o.Versions
}

// GetVersionsOk returns a tuple with the Versions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListItem) GetVersionsOk() (*[]MicrosoftGraphListItemVersion, bool) {
	if o == nil || o.Versions == nil {
		return nil, false
	}
	return o.Versions, true
}

// HasVersions returns a boolean if a field has been set.
func (o *ListItem) HasVersions() bool {
	if o != nil && o.Versions != nil {
		return true
	}

	return false
}

// SetVersions gets a reference to the given []MicrosoftGraphListItemVersion and assigns it to the Versions field.
func (o *ListItem) SetVersions(v []MicrosoftGraphListItemVersion) {
	o.Versions = &v
}

func (o ListItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ContentType != nil {
		toSerialize["contentType"] = o.ContentType
	}
	if o.SharepointIds != nil {
		toSerialize["sharepointIds"] = o.SharepointIds
	}
	if o.Analytics != nil {
		toSerialize["analytics"] = o.Analytics
	}
	if o.DriveItem != nil {
		toSerialize["driveItem"] = o.DriveItem
	}
	if o.Fields != nil {
		toSerialize["fields"] = o.Fields
	}
	if o.Versions != nil {
		toSerialize["versions"] = o.Versions
	}
	return json.Marshal(toSerialize)
}

type NullableListItem struct {
	value *ListItem
	isSet bool
}

func (v NullableListItem) Get() *ListItem {
	return v.value
}

func (v *NullableListItem) Set(val *ListItem) {
	v.value = val
	v.isSet = true
}

func (v NullableListItem) IsSet() bool {
	return v.isSet
}

func (v *NullableListItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListItem(val *ListItem) *NullableListItem {
	return &NullableListItem{value: val, isSet: true}
}

func (v NullableListItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


