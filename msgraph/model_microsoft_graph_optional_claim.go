/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphOptionalClaim struct for MicrosoftGraphOptionalClaim
type MicrosoftGraphOptionalClaim struct {
	// Additional properties of the claim. If a property exists in this collection, it modifies the behavior of the optional claim specified in the name property.
	AdditionalPropertiesField *[]*string `json:"additionalProperties,omitempty"`
	// If the value is true, the claim specified by the client is necessary to ensure a smooth authorization experience for the specific task requested by the end user. The default value is false.
	Essential *bool `json:"essential,omitempty"`
	// The name of the optional claim.
	Name *string `json:"name,omitempty"`
	// The source (directory object) of the claim. There are predefined claims and user-defined claims from extension properties. If the source value is null, the claim is a predefined optional claim. If the source value is user, the value in the name property is the extension property from the user object.
	Source NullableString `json:"source,omitempty"`
}

// NewMicrosoftGraphOptionalClaim instantiates a new MicrosoftGraphOptionalClaim object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphOptionalClaim() *MicrosoftGraphOptionalClaim {
	this := MicrosoftGraphOptionalClaim{}
	return &this
}

// NewMicrosoftGraphOptionalClaimWithDefaults instantiates a new MicrosoftGraphOptionalClaim object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphOptionalClaimWithDefaults() *MicrosoftGraphOptionalClaim {
	this := MicrosoftGraphOptionalClaim{}
	return &this
}

// GetAdditionalPropertiesField returns the AdditionalPropertiesField field value if set, zero value otherwise.
func (o *MicrosoftGraphOptionalClaim) GetAdditionalPropertiesField() []*string {
	if o == nil || o.AdditionalPropertiesField == nil {
		var ret []*string
		return ret
	}
	return *o.AdditionalPropertiesField
}

// GetAdditionalPropertiesFieldOk returns a tuple with the AdditionalPropertiesField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphOptionalClaim) GetAdditionalPropertiesFieldOk() (*[]*string, bool) {
	if o == nil || o.AdditionalPropertiesField == nil {
		return nil, false
	}
	return o.AdditionalPropertiesField, true
}

// HasAdditionalPropertiesField returns a boolean if a field has been set.
func (o *MicrosoftGraphOptionalClaim) HasAdditionalPropertiesField() bool {
	if o != nil && o.AdditionalPropertiesField != nil {
		return true
	}

	return false
}

// SetAdditionalPropertiesField gets a reference to the given []*string and assigns it to the AdditionalPropertiesField field.
func (o *MicrosoftGraphOptionalClaim) SetAdditionalPropertiesField(v []*string) {
	o.AdditionalPropertiesField = &v
}

// GetEssential returns the Essential field value if set, zero value otherwise.
func (o *MicrosoftGraphOptionalClaim) GetEssential() bool {
	if o == nil || o.Essential == nil {
		var ret bool
		return ret
	}
	return *o.Essential
}

// GetEssentialOk returns a tuple with the Essential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphOptionalClaim) GetEssentialOk() (*bool, bool) {
	if o == nil || o.Essential == nil {
		return nil, false
	}
	return o.Essential, true
}

// HasEssential returns a boolean if a field has been set.
func (o *MicrosoftGraphOptionalClaim) HasEssential() bool {
	if o != nil && o.Essential != nil {
		return true
	}

	return false
}

// SetEssential gets a reference to the given bool and assigns it to the Essential field.
func (o *MicrosoftGraphOptionalClaim) SetEssential(v bool) {
	o.Essential = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MicrosoftGraphOptionalClaim) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphOptionalClaim) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MicrosoftGraphOptionalClaim) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MicrosoftGraphOptionalClaim) SetName(v string) {
	o.Name = &v
}

// GetSource returns the Source field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOptionalClaim) GetSource() string {
	if o == nil || o.Source.Get() == nil {
		var ret string
		return ret
	}
	return *o.Source.Get()
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOptionalClaim) GetSourceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Source.Get(), o.Source.IsSet()
}

// HasSource returns a boolean if a field has been set.
func (o *MicrosoftGraphOptionalClaim) HasSource() bool {
	if o != nil && o.Source.IsSet() {
		return true
	}

	return false
}

// SetSource gets a reference to the given NullableString and assigns it to the Source field.
func (o *MicrosoftGraphOptionalClaim) SetSource(v string) {
	o.Source.Set(&v)
}
// SetSourceNil sets the value for Source to be an explicit nil
func (o *MicrosoftGraphOptionalClaim) SetSourceNil() {
	o.Source.Set(nil)
}

// UnsetSource ensures that no value is present for Source, not even an explicit nil
func (o *MicrosoftGraphOptionalClaim) UnsetSource() {
	o.Source.Unset()
}

func (o MicrosoftGraphOptionalClaim) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdditionalPropertiesField != nil {
		toSerialize["additionalProperties"] = o.AdditionalPropertiesField
	}
	if o.Essential != nil {
		toSerialize["essential"] = o.Essential
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Source.IsSet() {
		toSerialize["source"] = o.Source.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphOptionalClaim struct {
	value *MicrosoftGraphOptionalClaim
	isSet bool
}

func (v NullableMicrosoftGraphOptionalClaim) Get() *MicrosoftGraphOptionalClaim {
	return v.value
}

func (v *NullableMicrosoftGraphOptionalClaim) Set(val *MicrosoftGraphOptionalClaim) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphOptionalClaim) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphOptionalClaim) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphOptionalClaim(val *MicrosoftGraphOptionalClaim) *NullableMicrosoftGraphOptionalClaim {
	return &NullableMicrosoftGraphOptionalClaim{value: val, isSet: true}
}

func (v NullableMicrosoftGraphOptionalClaim) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphOptionalClaim) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


