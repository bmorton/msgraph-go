/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PrinterBase struct for PrinterBase
type PrinterBase struct {
	// The capabilities of the printer/printerShare.
	Capabilities AnyOfmicrosoftGraphPrinterCapabilities `json:"capabilities,omitempty"`
	// The default print settings of printer/printerShare.
	Defaults AnyOfmicrosoftGraphPrinterDefaults `json:"defaults,omitempty"`
	// The name of the printer/printerShare.
	DisplayName *string `json:"displayName,omitempty"`
	// Whether the printer/printerShare is currently accepting new print jobs.
	IsAcceptingJobs NullableBool `json:"isAcceptingJobs,omitempty"`
	// The physical and/or organizational location of the printer/printerShare.
	Location AnyOfmicrosoftGraphPrinterLocation `json:"location,omitempty"`
	// The manufacturer of the printer/printerShare.
	Manufacturer NullableString `json:"manufacturer,omitempty"`
	// The model name of the printer/printerShare.
	Model NullableString `json:"model,omitempty"`
	Status *MicrosoftGraphPrinterStatus `json:"status,omitempty"`
	// The list of jobs that are queued for printing by the printer/printerShare.
	Jobs *[]MicrosoftGraphPrintJob `json:"jobs,omitempty"`
}

// NewPrinterBase instantiates a new PrinterBase object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrinterBase() *PrinterBase {
	this := PrinterBase{}
	return &this
}

// NewPrinterBaseWithDefaults instantiates a new PrinterBase object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrinterBaseWithDefaults() *PrinterBase {
	this := PrinterBase{}
	return &this
}

// GetCapabilities returns the Capabilities field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PrinterBase) GetCapabilities() AnyOfmicrosoftGraphPrinterCapabilities {
	if o == nil  {
		var ret AnyOfmicrosoftGraphPrinterCapabilities
		return ret
	}
	return o.Capabilities
}

// GetCapabilitiesOk returns a tuple with the Capabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrinterBase) GetCapabilitiesOk() (*AnyOfmicrosoftGraphPrinterCapabilities, bool) {
	if o == nil || o.Capabilities == nil {
		return nil, false
	}
	return &o.Capabilities, true
}

// HasCapabilities returns a boolean if a field has been set.
func (o *PrinterBase) HasCapabilities() bool {
	if o != nil && o.Capabilities != nil {
		return true
	}

	return false
}

// SetCapabilities gets a reference to the given AnyOfmicrosoftGraphPrinterCapabilities and assigns it to the Capabilities field.
func (o *PrinterBase) SetCapabilities(v AnyOfmicrosoftGraphPrinterCapabilities) {
	o.Capabilities = v
}

// GetDefaults returns the Defaults field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PrinterBase) GetDefaults() AnyOfmicrosoftGraphPrinterDefaults {
	if o == nil  {
		var ret AnyOfmicrosoftGraphPrinterDefaults
		return ret
	}
	return o.Defaults
}

// GetDefaultsOk returns a tuple with the Defaults field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrinterBase) GetDefaultsOk() (*AnyOfmicrosoftGraphPrinterDefaults, bool) {
	if o == nil || o.Defaults == nil {
		return nil, false
	}
	return &o.Defaults, true
}

// HasDefaults returns a boolean if a field has been set.
func (o *PrinterBase) HasDefaults() bool {
	if o != nil && o.Defaults != nil {
		return true
	}

	return false
}

// SetDefaults gets a reference to the given AnyOfmicrosoftGraphPrinterDefaults and assigns it to the Defaults field.
func (o *PrinterBase) SetDefaults(v AnyOfmicrosoftGraphPrinterDefaults) {
	o.Defaults = v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *PrinterBase) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrinterBase) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *PrinterBase) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *PrinterBase) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetIsAcceptingJobs returns the IsAcceptingJobs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PrinterBase) GetIsAcceptingJobs() bool {
	if o == nil || o.IsAcceptingJobs.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsAcceptingJobs.Get()
}

// GetIsAcceptingJobsOk returns a tuple with the IsAcceptingJobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrinterBase) GetIsAcceptingJobsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsAcceptingJobs.Get(), o.IsAcceptingJobs.IsSet()
}

// HasIsAcceptingJobs returns a boolean if a field has been set.
func (o *PrinterBase) HasIsAcceptingJobs() bool {
	if o != nil && o.IsAcceptingJobs.IsSet() {
		return true
	}

	return false
}

// SetIsAcceptingJobs gets a reference to the given NullableBool and assigns it to the IsAcceptingJobs field.
func (o *PrinterBase) SetIsAcceptingJobs(v bool) {
	o.IsAcceptingJobs.Set(&v)
}
// SetIsAcceptingJobsNil sets the value for IsAcceptingJobs to be an explicit nil
func (o *PrinterBase) SetIsAcceptingJobsNil() {
	o.IsAcceptingJobs.Set(nil)
}

// UnsetIsAcceptingJobs ensures that no value is present for IsAcceptingJobs, not even an explicit nil
func (o *PrinterBase) UnsetIsAcceptingJobs() {
	o.IsAcceptingJobs.Unset()
}

// GetLocation returns the Location field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PrinterBase) GetLocation() AnyOfmicrosoftGraphPrinterLocation {
	if o == nil  {
		var ret AnyOfmicrosoftGraphPrinterLocation
		return ret
	}
	return o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrinterBase) GetLocationOk() (*AnyOfmicrosoftGraphPrinterLocation, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return &o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *PrinterBase) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given AnyOfmicrosoftGraphPrinterLocation and assigns it to the Location field.
func (o *PrinterBase) SetLocation(v AnyOfmicrosoftGraphPrinterLocation) {
	o.Location = v
}

// GetManufacturer returns the Manufacturer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PrinterBase) GetManufacturer() string {
	if o == nil || o.Manufacturer.Get() == nil {
		var ret string
		return ret
	}
	return *o.Manufacturer.Get()
}

// GetManufacturerOk returns a tuple with the Manufacturer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrinterBase) GetManufacturerOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Manufacturer.Get(), o.Manufacturer.IsSet()
}

// HasManufacturer returns a boolean if a field has been set.
func (o *PrinterBase) HasManufacturer() bool {
	if o != nil && o.Manufacturer.IsSet() {
		return true
	}

	return false
}

// SetManufacturer gets a reference to the given NullableString and assigns it to the Manufacturer field.
func (o *PrinterBase) SetManufacturer(v string) {
	o.Manufacturer.Set(&v)
}
// SetManufacturerNil sets the value for Manufacturer to be an explicit nil
func (o *PrinterBase) SetManufacturerNil() {
	o.Manufacturer.Set(nil)
}

// UnsetManufacturer ensures that no value is present for Manufacturer, not even an explicit nil
func (o *PrinterBase) UnsetManufacturer() {
	o.Manufacturer.Unset()
}

// GetModel returns the Model field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PrinterBase) GetModel() string {
	if o == nil || o.Model.Get() == nil {
		var ret string
		return ret
	}
	return *o.Model.Get()
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrinterBase) GetModelOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Model.Get(), o.Model.IsSet()
}

// HasModel returns a boolean if a field has been set.
func (o *PrinterBase) HasModel() bool {
	if o != nil && o.Model.IsSet() {
		return true
	}

	return false
}

// SetModel gets a reference to the given NullableString and assigns it to the Model field.
func (o *PrinterBase) SetModel(v string) {
	o.Model.Set(&v)
}
// SetModelNil sets the value for Model to be an explicit nil
func (o *PrinterBase) SetModelNil() {
	o.Model.Set(nil)
}

// UnsetModel ensures that no value is present for Model, not even an explicit nil
func (o *PrinterBase) UnsetModel() {
	o.Model.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PrinterBase) GetStatus() MicrosoftGraphPrinterStatus {
	if o == nil || o.Status == nil {
		var ret MicrosoftGraphPrinterStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrinterBase) GetStatusOk() (*MicrosoftGraphPrinterStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PrinterBase) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given MicrosoftGraphPrinterStatus and assigns it to the Status field.
func (o *PrinterBase) SetStatus(v MicrosoftGraphPrinterStatus) {
	o.Status = &v
}

// GetJobs returns the Jobs field value if set, zero value otherwise.
func (o *PrinterBase) GetJobs() []MicrosoftGraphPrintJob {
	if o == nil || o.Jobs == nil {
		var ret []MicrosoftGraphPrintJob
		return ret
	}
	return *o.Jobs
}

// GetJobsOk returns a tuple with the Jobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrinterBase) GetJobsOk() (*[]MicrosoftGraphPrintJob, bool) {
	if o == nil || o.Jobs == nil {
		return nil, false
	}
	return o.Jobs, true
}

// HasJobs returns a boolean if a field has been set.
func (o *PrinterBase) HasJobs() bool {
	if o != nil && o.Jobs != nil {
		return true
	}

	return false
}

// SetJobs gets a reference to the given []MicrosoftGraphPrintJob and assigns it to the Jobs field.
func (o *PrinterBase) SetJobs(v []MicrosoftGraphPrintJob) {
	o.Jobs = &v
}

func (o PrinterBase) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Capabilities != nil {
		toSerialize["capabilities"] = o.Capabilities
	}
	if o.Defaults != nil {
		toSerialize["defaults"] = o.Defaults
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.IsAcceptingJobs.IsSet() {
		toSerialize["isAcceptingJobs"] = o.IsAcceptingJobs.Get()
	}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.Manufacturer.IsSet() {
		toSerialize["manufacturer"] = o.Manufacturer.Get()
	}
	if o.Model.IsSet() {
		toSerialize["model"] = o.Model.Get()
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Jobs != nil {
		toSerialize["jobs"] = o.Jobs
	}
	return json.Marshal(toSerialize)
}

type NullablePrinterBase struct {
	value *PrinterBase
	isSet bool
}

func (v NullablePrinterBase) Get() *PrinterBase {
	return v.value
}

func (v *NullablePrinterBase) Set(val *PrinterBase) {
	v.value = val
	v.isSet = true
}

func (v NullablePrinterBase) IsSet() bool {
	return v.isSet
}

func (v *NullablePrinterBase) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrinterBase(val *PrinterBase) *NullablePrinterBase {
	return &NullablePrinterBase{value: val, isSet: true}
}

func (v NullablePrinterBase) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrinterBase) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


