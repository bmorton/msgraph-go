/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphWindowsInformationProtectionIPRangeCollection Windows Information Protection IP Range Collection
type MicrosoftGraphWindowsInformationProtectionIPRangeCollection struct {
	// Display name
	DisplayName *string `json:"displayName,omitempty"`
	// Collection of ip ranges
	Ranges *[]map[string]interface{} `json:"ranges,omitempty"`
}

// NewMicrosoftGraphWindowsInformationProtectionIPRangeCollection instantiates a new MicrosoftGraphWindowsInformationProtectionIPRangeCollection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphWindowsInformationProtectionIPRangeCollection() *MicrosoftGraphWindowsInformationProtectionIPRangeCollection {
	this := MicrosoftGraphWindowsInformationProtectionIPRangeCollection{}
	return &this
}

// NewMicrosoftGraphWindowsInformationProtectionIPRangeCollectionWithDefaults instantiates a new MicrosoftGraphWindowsInformationProtectionIPRangeCollection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphWindowsInformationProtectionIPRangeCollectionWithDefaults() *MicrosoftGraphWindowsInformationProtectionIPRangeCollection {
	this := MicrosoftGraphWindowsInformationProtectionIPRangeCollection{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *MicrosoftGraphWindowsInformationProtectionIPRangeCollection) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsInformationProtectionIPRangeCollection) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsInformationProtectionIPRangeCollection) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *MicrosoftGraphWindowsInformationProtectionIPRangeCollection) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetRanges returns the Ranges field value if set, zero value otherwise.
func (o *MicrosoftGraphWindowsInformationProtectionIPRangeCollection) GetRanges() []map[string]interface{} {
	if o == nil || o.Ranges == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.Ranges
}

// GetRangesOk returns a tuple with the Ranges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsInformationProtectionIPRangeCollection) GetRangesOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Ranges == nil {
		return nil, false
	}
	return o.Ranges, true
}

// HasRanges returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsInformationProtectionIPRangeCollection) HasRanges() bool {
	if o != nil && o.Ranges != nil {
		return true
	}

	return false
}

// SetRanges gets a reference to the given []map[string]interface{} and assigns it to the Ranges field.
func (o *MicrosoftGraphWindowsInformationProtectionIPRangeCollection) SetRanges(v []map[string]interface{}) {
	o.Ranges = &v
}

func (o MicrosoftGraphWindowsInformationProtectionIPRangeCollection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.Ranges != nil {
		toSerialize["ranges"] = o.Ranges
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphWindowsInformationProtectionIPRangeCollection struct {
	value *MicrosoftGraphWindowsInformationProtectionIPRangeCollection
	isSet bool
}

func (v NullableMicrosoftGraphWindowsInformationProtectionIPRangeCollection) Get() *MicrosoftGraphWindowsInformationProtectionIPRangeCollection {
	return v.value
}

func (v *NullableMicrosoftGraphWindowsInformationProtectionIPRangeCollection) Set(val *MicrosoftGraphWindowsInformationProtectionIPRangeCollection) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphWindowsInformationProtectionIPRangeCollection) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphWindowsInformationProtectionIPRangeCollection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphWindowsInformationProtectionIPRangeCollection(val *MicrosoftGraphWindowsInformationProtectionIPRangeCollection) *NullableMicrosoftGraphWindowsInformationProtectionIPRangeCollection {
	return &NullableMicrosoftGraphWindowsInformationProtectionIPRangeCollection{value: val, isSet: true}
}

func (v NullableMicrosoftGraphWindowsInformationProtectionIPRangeCollection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphWindowsInformationProtectionIPRangeCollection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


