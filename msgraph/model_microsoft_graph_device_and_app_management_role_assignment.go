/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphDeviceAndAppManagementRoleAssignment struct for MicrosoftGraphDeviceAndAppManagementRoleAssignment
type MicrosoftGraphDeviceAndAppManagementRoleAssignment struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// Description of the Role Assignment.
	Description NullableString `json:"description,omitempty"`
	// The display or friendly name of the role Assignment.
	DisplayName NullableString `json:"displayName,omitempty"`
	// List of ids of role scope member security groups.  These are IDs from Azure Active Directory.
	ResourceScopes *[]*string `json:"resourceScopes,omitempty"`
	// Role definition this assignment is part of.
	RoleDefinition AnyOfmicrosoftGraphRoleDefinition `json:"roleDefinition,omitempty"`
	// The list of ids of role member security groups. These are IDs from Azure Active Directory.
	Members *[]*string `json:"members,omitempty"`
}

// NewMicrosoftGraphDeviceAndAppManagementRoleAssignment instantiates a new MicrosoftGraphDeviceAndAppManagementRoleAssignment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphDeviceAndAppManagementRoleAssignment() *MicrosoftGraphDeviceAndAppManagementRoleAssignment {
	this := MicrosoftGraphDeviceAndAppManagementRoleAssignment{}
	return &this
}

// NewMicrosoftGraphDeviceAndAppManagementRoleAssignmentWithDefaults instantiates a new MicrosoftGraphDeviceAndAppManagementRoleAssignment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphDeviceAndAppManagementRoleAssignmentWithDefaults() *MicrosoftGraphDeviceAndAppManagementRoleAssignment {
	this := MicrosoftGraphDeviceAndAppManagementRoleAssignment{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceAndAppManagementRoleAssignment) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceAndAppManagementRoleAssignment) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceAndAppManagementRoleAssignment) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphDeviceAndAppManagementRoleAssignment) SetId(v string) {
	o.Id = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDeviceAndAppManagementRoleAssignment) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDeviceAndAppManagementRoleAssignment) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceAndAppManagementRoleAssignment) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *MicrosoftGraphDeviceAndAppManagementRoleAssignment) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *MicrosoftGraphDeviceAndAppManagementRoleAssignment) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *MicrosoftGraphDeviceAndAppManagementRoleAssignment) UnsetDescription() {
	o.Description.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDeviceAndAppManagementRoleAssignment) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDeviceAndAppManagementRoleAssignment) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceAndAppManagementRoleAssignment) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *MicrosoftGraphDeviceAndAppManagementRoleAssignment) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *MicrosoftGraphDeviceAndAppManagementRoleAssignment) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *MicrosoftGraphDeviceAndAppManagementRoleAssignment) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetResourceScopes returns the ResourceScopes field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceAndAppManagementRoleAssignment) GetResourceScopes() []*string {
	if o == nil || o.ResourceScopes == nil {
		var ret []*string
		return ret
	}
	return *o.ResourceScopes
}

// GetResourceScopesOk returns a tuple with the ResourceScopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceAndAppManagementRoleAssignment) GetResourceScopesOk() (*[]*string, bool) {
	if o == nil || o.ResourceScopes == nil {
		return nil, false
	}
	return o.ResourceScopes, true
}

// HasResourceScopes returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceAndAppManagementRoleAssignment) HasResourceScopes() bool {
	if o != nil && o.ResourceScopes != nil {
		return true
	}

	return false
}

// SetResourceScopes gets a reference to the given []*string and assigns it to the ResourceScopes field.
func (o *MicrosoftGraphDeviceAndAppManagementRoleAssignment) SetResourceScopes(v []*string) {
	o.ResourceScopes = &v
}

// GetRoleDefinition returns the RoleDefinition field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDeviceAndAppManagementRoleAssignment) GetRoleDefinition() AnyOfmicrosoftGraphRoleDefinition {
	if o == nil  {
		var ret AnyOfmicrosoftGraphRoleDefinition
		return ret
	}
	return o.RoleDefinition
}

// GetRoleDefinitionOk returns a tuple with the RoleDefinition field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDeviceAndAppManagementRoleAssignment) GetRoleDefinitionOk() (*AnyOfmicrosoftGraphRoleDefinition, bool) {
	if o == nil || o.RoleDefinition == nil {
		return nil, false
	}
	return &o.RoleDefinition, true
}

// HasRoleDefinition returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceAndAppManagementRoleAssignment) HasRoleDefinition() bool {
	if o != nil && o.RoleDefinition != nil {
		return true
	}

	return false
}

// SetRoleDefinition gets a reference to the given AnyOfmicrosoftGraphRoleDefinition and assigns it to the RoleDefinition field.
func (o *MicrosoftGraphDeviceAndAppManagementRoleAssignment) SetRoleDefinition(v AnyOfmicrosoftGraphRoleDefinition) {
	o.RoleDefinition = v
}

// GetMembers returns the Members field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceAndAppManagementRoleAssignment) GetMembers() []*string {
	if o == nil || o.Members == nil {
		var ret []*string
		return ret
	}
	return *o.Members
}

// GetMembersOk returns a tuple with the Members field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceAndAppManagementRoleAssignment) GetMembersOk() (*[]*string, bool) {
	if o == nil || o.Members == nil {
		return nil, false
	}
	return o.Members, true
}

// HasMembers returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceAndAppManagementRoleAssignment) HasMembers() bool {
	if o != nil && o.Members != nil {
		return true
	}

	return false
}

// SetMembers gets a reference to the given []*string and assigns it to the Members field.
func (o *MicrosoftGraphDeviceAndAppManagementRoleAssignment) SetMembers(v []*string) {
	o.Members = &v
}

func (o MicrosoftGraphDeviceAndAppManagementRoleAssignment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.ResourceScopes != nil {
		toSerialize["resourceScopes"] = o.ResourceScopes
	}
	if o.RoleDefinition != nil {
		toSerialize["roleDefinition"] = o.RoleDefinition
	}
	if o.Members != nil {
		toSerialize["members"] = o.Members
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphDeviceAndAppManagementRoleAssignment struct {
	value *MicrosoftGraphDeviceAndAppManagementRoleAssignment
	isSet bool
}

func (v NullableMicrosoftGraphDeviceAndAppManagementRoleAssignment) Get() *MicrosoftGraphDeviceAndAppManagementRoleAssignment {
	return v.value
}

func (v *NullableMicrosoftGraphDeviceAndAppManagementRoleAssignment) Set(val *MicrosoftGraphDeviceAndAppManagementRoleAssignment) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphDeviceAndAppManagementRoleAssignment) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphDeviceAndAppManagementRoleAssignment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphDeviceAndAppManagementRoleAssignment(val *MicrosoftGraphDeviceAndAppManagementRoleAssignment) *NullableMicrosoftGraphDeviceAndAppManagementRoleAssignment {
	return &NullableMicrosoftGraphDeviceAndAppManagementRoleAssignment{value: val, isSet: true}
}

func (v NullableMicrosoftGraphDeviceAndAppManagementRoleAssignment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphDeviceAndAppManagementRoleAssignment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


