/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphTargetedManagedAppProtection struct for MicrosoftGraphTargetedManagedAppProtection
type MicrosoftGraphTargetedManagedAppProtection struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// The date and time the policy was created.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// The policy's description.
	Description NullableString `json:"description,omitempty"`
	// Policy display name.
	DisplayName *string `json:"displayName,omitempty"`
	// Last time the policy was modified.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// Version of the entity.
	Version NullableString `json:"version,omitempty"`
	// Data storage locations where a user may store managed data.
	AllowedDataStorageLocations *[]AnyOfmicrosoftGraphManagedAppDataStorageLocation `json:"allowedDataStorageLocations,omitempty"`
	// Sources from which data is allowed to be transferred. Possible values are: allApps, managedApps, none.
	AllowedInboundDataTransferSources AnyOfmicrosoftGraphManagedAppDataTransferLevel `json:"allowedInboundDataTransferSources,omitempty"`
	// The level to which the clipboard may be shared between apps on the managed device. Possible values are: allApps, managedAppsWithPasteIn, managedApps, blocked.
	AllowedOutboundClipboardSharingLevel AnyOfmicrosoftGraphManagedAppClipboardSharingLevel `json:"allowedOutboundClipboardSharingLevel,omitempty"`
	// Destinations to which data is allowed to be transferred. Possible values are: allApps, managedApps, none.
	AllowedOutboundDataTransferDestinations AnyOfmicrosoftGraphManagedAppDataTransferLevel `json:"allowedOutboundDataTransferDestinations,omitempty"`
	// Indicates whether contacts can be synced to the user's device.
	ContactSyncBlocked *bool `json:"contactSyncBlocked,omitempty"`
	// Indicates whether the backup of a managed app's data is blocked.
	DataBackupBlocked *bool `json:"dataBackupBlocked,omitempty"`
	// Indicates whether device compliance is required.
	DeviceComplianceRequired *bool `json:"deviceComplianceRequired,omitempty"`
	// Indicates whether use of the app pin is required if the device pin is set.
	DisableAppPinIfDevicePinIsSet *bool `json:"disableAppPinIfDevicePinIsSet,omitempty"`
	// Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
	FingerprintBlocked *bool `json:"fingerprintBlocked,omitempty"`
	// Indicates in which managed browser(s) that internet links should be opened. When this property is configured, ManagedBrowserToOpenLinksRequired should be true. Possible values are: notConfigured, microsoftEdge.
	ManagedBrowser AnyOfmicrosoftGraphManagedBrowserType `json:"managedBrowser,omitempty"`
	// Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
	ManagedBrowserToOpenLinksRequired *bool `json:"managedBrowserToOpenLinksRequired,omitempty"`
	// Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
	MaximumPinRetries *int32 `json:"maximumPinRetries,omitempty"`
	// Minimum pin length required for an app-level pin if PinRequired is set to True
	MinimumPinLength *int32 `json:"minimumPinLength,omitempty"`
	// Versions less than the specified version will block the managed app from accessing company data.
	MinimumRequiredAppVersion NullableString `json:"minimumRequiredAppVersion,omitempty"`
	// Versions less than the specified version will block the managed app from accessing company data.
	MinimumRequiredOsVersion NullableString `json:"minimumRequiredOsVersion,omitempty"`
	// Versions less than the specified version will result in warning message on the managed app.
	MinimumWarningAppVersion NullableString `json:"minimumWarningAppVersion,omitempty"`
	// Versions less than the specified version will result in warning message on the managed app from accessing company data.
	MinimumWarningOsVersion NullableString `json:"minimumWarningOsVersion,omitempty"`
	// Indicates whether organizational credentials are required for app use.
	OrganizationalCredentialsRequired *bool `json:"organizationalCredentialsRequired,omitempty"`
	// TimePeriod before the all-level pin must be reset if PinRequired is set to True.
	PeriodBeforePinReset *string `json:"periodBeforePinReset,omitempty"`
	// The period after which access is checked when the device is not connected to the internet.
	PeriodOfflineBeforeAccessCheck *string `json:"periodOfflineBeforeAccessCheck,omitempty"`
	// The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
	PeriodOfflineBeforeWipeIsEnforced *string `json:"periodOfflineBeforeWipeIsEnforced,omitempty"`
	// The period after which access is checked when the device is connected to the internet.
	PeriodOnlineBeforeAccessCheck *string `json:"periodOnlineBeforeAccessCheck,omitempty"`
	// Character set which may be used for an app-level pin if PinRequired is set to True. Possible values are: numeric, alphanumericAndSymbol.
	PinCharacterSet AnyOfmicrosoftGraphManagedAppPinCharacterSet `json:"pinCharacterSet,omitempty"`
	// Indicates whether an app-level pin is required.
	PinRequired *bool `json:"pinRequired,omitempty"`
	// Indicates whether printing is allowed from managed apps.
	PrintBlocked *bool `json:"printBlocked,omitempty"`
	// Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
	SaveAsBlocked *bool `json:"saveAsBlocked,omitempty"`
	// Indicates whether simplePin is blocked.
	SimplePinBlocked *bool `json:"simplePinBlocked,omitempty"`
	// Indicates if the policy is deployed to any inclusion groups or not.
	IsAssigned *bool `json:"isAssigned,omitempty"`
	// Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
	Assignments *[]MicrosoftGraphTargetedManagedAppPolicyAssignment `json:"assignments,omitempty"`
}

// NewMicrosoftGraphTargetedManagedAppProtection instantiates a new MicrosoftGraphTargetedManagedAppProtection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphTargetedManagedAppProtection() *MicrosoftGraphTargetedManagedAppProtection {
	this := MicrosoftGraphTargetedManagedAppProtection{}
	return &this
}

// NewMicrosoftGraphTargetedManagedAppProtectionWithDefaults instantiates a new MicrosoftGraphTargetedManagedAppProtection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphTargetedManagedAppProtectionWithDefaults() *MicrosoftGraphTargetedManagedAppProtection {
	this := MicrosoftGraphTargetedManagedAppProtection{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetId(v string) {
	o.Id = &v
}

// GetCreatedDateTime returns the CreatedDateTime field value if set, zero value otherwise.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetCreatedDateTimeOk() (*time.Time, bool) {
	if o == nil || o.CreatedDateTime == nil {
		return nil, false
	}
	return o.CreatedDateTime, true
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime != nil {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given time.Time and assigns it to the CreatedDateTime field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTargetedManagedAppProtection) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTargetedManagedAppProtection) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *MicrosoftGraphTargetedManagedAppProtection) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *MicrosoftGraphTargetedManagedAppProtection) UnsetDescription() {
	o.Description.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetLastModifiedDateTime returns the LastModifiedDateTime field value if set, zero value otherwise.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetLastModifiedDateTime() time.Time {
	if o == nil || o.LastModifiedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDateTime
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetLastModifiedDateTimeOk() (*time.Time, bool) {
	if o == nil || o.LastModifiedDateTime == nil {
		return nil, false
	}
	return o.LastModifiedDateTime, true
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasLastModifiedDateTime() bool {
	if o != nil && o.LastModifiedDateTime != nil {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given time.Time and assigns it to the LastModifiedDateTime field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetLastModifiedDateTime(v time.Time) {
	o.LastModifiedDateTime = &v
}

// GetVersion returns the Version field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTargetedManagedAppProtection) GetVersion() string {
	if o == nil || o.Version.Get() == nil {
		var ret string
		return ret
	}
	return *o.Version.Get()
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTargetedManagedAppProtection) GetVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Version.Get(), o.Version.IsSet()
}

// HasVersion returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasVersion() bool {
	if o != nil && o.Version.IsSet() {
		return true
	}

	return false
}

// SetVersion gets a reference to the given NullableString and assigns it to the Version field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetVersion(v string) {
	o.Version.Set(&v)
}
// SetVersionNil sets the value for Version to be an explicit nil
func (o *MicrosoftGraphTargetedManagedAppProtection) SetVersionNil() {
	o.Version.Set(nil)
}

// UnsetVersion ensures that no value is present for Version, not even an explicit nil
func (o *MicrosoftGraphTargetedManagedAppProtection) UnsetVersion() {
	o.Version.Unset()
}

// GetAllowedDataStorageLocations returns the AllowedDataStorageLocations field value if set, zero value otherwise.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetAllowedDataStorageLocations() []AnyOfmicrosoftGraphManagedAppDataStorageLocation {
	if o == nil || o.AllowedDataStorageLocations == nil {
		var ret []AnyOfmicrosoftGraphManagedAppDataStorageLocation
		return ret
	}
	return *o.AllowedDataStorageLocations
}

// GetAllowedDataStorageLocationsOk returns a tuple with the AllowedDataStorageLocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetAllowedDataStorageLocationsOk() (*[]AnyOfmicrosoftGraphManagedAppDataStorageLocation, bool) {
	if o == nil || o.AllowedDataStorageLocations == nil {
		return nil, false
	}
	return o.AllowedDataStorageLocations, true
}

// HasAllowedDataStorageLocations returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasAllowedDataStorageLocations() bool {
	if o != nil && o.AllowedDataStorageLocations != nil {
		return true
	}

	return false
}

// SetAllowedDataStorageLocations gets a reference to the given []AnyOfmicrosoftGraphManagedAppDataStorageLocation and assigns it to the AllowedDataStorageLocations field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetAllowedDataStorageLocations(v []AnyOfmicrosoftGraphManagedAppDataStorageLocation) {
	o.AllowedDataStorageLocations = &v
}

// GetAllowedInboundDataTransferSources returns the AllowedInboundDataTransferSources field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTargetedManagedAppProtection) GetAllowedInboundDataTransferSources() AnyOfmicrosoftGraphManagedAppDataTransferLevel {
	if o == nil  {
		var ret AnyOfmicrosoftGraphManagedAppDataTransferLevel
		return ret
	}
	return o.AllowedInboundDataTransferSources
}

// GetAllowedInboundDataTransferSourcesOk returns a tuple with the AllowedInboundDataTransferSources field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTargetedManagedAppProtection) GetAllowedInboundDataTransferSourcesOk() (*AnyOfmicrosoftGraphManagedAppDataTransferLevel, bool) {
	if o == nil || o.AllowedInboundDataTransferSources == nil {
		return nil, false
	}
	return &o.AllowedInboundDataTransferSources, true
}

// HasAllowedInboundDataTransferSources returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasAllowedInboundDataTransferSources() bool {
	if o != nil && o.AllowedInboundDataTransferSources != nil {
		return true
	}

	return false
}

// SetAllowedInboundDataTransferSources gets a reference to the given AnyOfmicrosoftGraphManagedAppDataTransferLevel and assigns it to the AllowedInboundDataTransferSources field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetAllowedInboundDataTransferSources(v AnyOfmicrosoftGraphManagedAppDataTransferLevel) {
	o.AllowedInboundDataTransferSources = v
}

// GetAllowedOutboundClipboardSharingLevel returns the AllowedOutboundClipboardSharingLevel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTargetedManagedAppProtection) GetAllowedOutboundClipboardSharingLevel() AnyOfmicrosoftGraphManagedAppClipboardSharingLevel {
	if o == nil  {
		var ret AnyOfmicrosoftGraphManagedAppClipboardSharingLevel
		return ret
	}
	return o.AllowedOutboundClipboardSharingLevel
}

// GetAllowedOutboundClipboardSharingLevelOk returns a tuple with the AllowedOutboundClipboardSharingLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTargetedManagedAppProtection) GetAllowedOutboundClipboardSharingLevelOk() (*AnyOfmicrosoftGraphManagedAppClipboardSharingLevel, bool) {
	if o == nil || o.AllowedOutboundClipboardSharingLevel == nil {
		return nil, false
	}
	return &o.AllowedOutboundClipboardSharingLevel, true
}

// HasAllowedOutboundClipboardSharingLevel returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasAllowedOutboundClipboardSharingLevel() bool {
	if o != nil && o.AllowedOutboundClipboardSharingLevel != nil {
		return true
	}

	return false
}

// SetAllowedOutboundClipboardSharingLevel gets a reference to the given AnyOfmicrosoftGraphManagedAppClipboardSharingLevel and assigns it to the AllowedOutboundClipboardSharingLevel field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetAllowedOutboundClipboardSharingLevel(v AnyOfmicrosoftGraphManagedAppClipboardSharingLevel) {
	o.AllowedOutboundClipboardSharingLevel = v
}

// GetAllowedOutboundDataTransferDestinations returns the AllowedOutboundDataTransferDestinations field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTargetedManagedAppProtection) GetAllowedOutboundDataTransferDestinations() AnyOfmicrosoftGraphManagedAppDataTransferLevel {
	if o == nil  {
		var ret AnyOfmicrosoftGraphManagedAppDataTransferLevel
		return ret
	}
	return o.AllowedOutboundDataTransferDestinations
}

// GetAllowedOutboundDataTransferDestinationsOk returns a tuple with the AllowedOutboundDataTransferDestinations field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTargetedManagedAppProtection) GetAllowedOutboundDataTransferDestinationsOk() (*AnyOfmicrosoftGraphManagedAppDataTransferLevel, bool) {
	if o == nil || o.AllowedOutboundDataTransferDestinations == nil {
		return nil, false
	}
	return &o.AllowedOutboundDataTransferDestinations, true
}

// HasAllowedOutboundDataTransferDestinations returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasAllowedOutboundDataTransferDestinations() bool {
	if o != nil && o.AllowedOutboundDataTransferDestinations != nil {
		return true
	}

	return false
}

// SetAllowedOutboundDataTransferDestinations gets a reference to the given AnyOfmicrosoftGraphManagedAppDataTransferLevel and assigns it to the AllowedOutboundDataTransferDestinations field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetAllowedOutboundDataTransferDestinations(v AnyOfmicrosoftGraphManagedAppDataTransferLevel) {
	o.AllowedOutboundDataTransferDestinations = v
}

// GetContactSyncBlocked returns the ContactSyncBlocked field value if set, zero value otherwise.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetContactSyncBlocked() bool {
	if o == nil || o.ContactSyncBlocked == nil {
		var ret bool
		return ret
	}
	return *o.ContactSyncBlocked
}

// GetContactSyncBlockedOk returns a tuple with the ContactSyncBlocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetContactSyncBlockedOk() (*bool, bool) {
	if o == nil || o.ContactSyncBlocked == nil {
		return nil, false
	}
	return o.ContactSyncBlocked, true
}

// HasContactSyncBlocked returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasContactSyncBlocked() bool {
	if o != nil && o.ContactSyncBlocked != nil {
		return true
	}

	return false
}

// SetContactSyncBlocked gets a reference to the given bool and assigns it to the ContactSyncBlocked field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetContactSyncBlocked(v bool) {
	o.ContactSyncBlocked = &v
}

// GetDataBackupBlocked returns the DataBackupBlocked field value if set, zero value otherwise.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetDataBackupBlocked() bool {
	if o == nil || o.DataBackupBlocked == nil {
		var ret bool
		return ret
	}
	return *o.DataBackupBlocked
}

// GetDataBackupBlockedOk returns a tuple with the DataBackupBlocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetDataBackupBlockedOk() (*bool, bool) {
	if o == nil || o.DataBackupBlocked == nil {
		return nil, false
	}
	return o.DataBackupBlocked, true
}

// HasDataBackupBlocked returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasDataBackupBlocked() bool {
	if o != nil && o.DataBackupBlocked != nil {
		return true
	}

	return false
}

// SetDataBackupBlocked gets a reference to the given bool and assigns it to the DataBackupBlocked field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetDataBackupBlocked(v bool) {
	o.DataBackupBlocked = &v
}

// GetDeviceComplianceRequired returns the DeviceComplianceRequired field value if set, zero value otherwise.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetDeviceComplianceRequired() bool {
	if o == nil || o.DeviceComplianceRequired == nil {
		var ret bool
		return ret
	}
	return *o.DeviceComplianceRequired
}

// GetDeviceComplianceRequiredOk returns a tuple with the DeviceComplianceRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetDeviceComplianceRequiredOk() (*bool, bool) {
	if o == nil || o.DeviceComplianceRequired == nil {
		return nil, false
	}
	return o.DeviceComplianceRequired, true
}

// HasDeviceComplianceRequired returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasDeviceComplianceRequired() bool {
	if o != nil && o.DeviceComplianceRequired != nil {
		return true
	}

	return false
}

// SetDeviceComplianceRequired gets a reference to the given bool and assigns it to the DeviceComplianceRequired field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetDeviceComplianceRequired(v bool) {
	o.DeviceComplianceRequired = &v
}

// GetDisableAppPinIfDevicePinIsSet returns the DisableAppPinIfDevicePinIsSet field value if set, zero value otherwise.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetDisableAppPinIfDevicePinIsSet() bool {
	if o == nil || o.DisableAppPinIfDevicePinIsSet == nil {
		var ret bool
		return ret
	}
	return *o.DisableAppPinIfDevicePinIsSet
}

// GetDisableAppPinIfDevicePinIsSetOk returns a tuple with the DisableAppPinIfDevicePinIsSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetDisableAppPinIfDevicePinIsSetOk() (*bool, bool) {
	if o == nil || o.DisableAppPinIfDevicePinIsSet == nil {
		return nil, false
	}
	return o.DisableAppPinIfDevicePinIsSet, true
}

// HasDisableAppPinIfDevicePinIsSet returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasDisableAppPinIfDevicePinIsSet() bool {
	if o != nil && o.DisableAppPinIfDevicePinIsSet != nil {
		return true
	}

	return false
}

// SetDisableAppPinIfDevicePinIsSet gets a reference to the given bool and assigns it to the DisableAppPinIfDevicePinIsSet field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetDisableAppPinIfDevicePinIsSet(v bool) {
	o.DisableAppPinIfDevicePinIsSet = &v
}

// GetFingerprintBlocked returns the FingerprintBlocked field value if set, zero value otherwise.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetFingerprintBlocked() bool {
	if o == nil || o.FingerprintBlocked == nil {
		var ret bool
		return ret
	}
	return *o.FingerprintBlocked
}

// GetFingerprintBlockedOk returns a tuple with the FingerprintBlocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetFingerprintBlockedOk() (*bool, bool) {
	if o == nil || o.FingerprintBlocked == nil {
		return nil, false
	}
	return o.FingerprintBlocked, true
}

// HasFingerprintBlocked returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasFingerprintBlocked() bool {
	if o != nil && o.FingerprintBlocked != nil {
		return true
	}

	return false
}

// SetFingerprintBlocked gets a reference to the given bool and assigns it to the FingerprintBlocked field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetFingerprintBlocked(v bool) {
	o.FingerprintBlocked = &v
}

// GetManagedBrowser returns the ManagedBrowser field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTargetedManagedAppProtection) GetManagedBrowser() AnyOfmicrosoftGraphManagedBrowserType {
	if o == nil  {
		var ret AnyOfmicrosoftGraphManagedBrowserType
		return ret
	}
	return o.ManagedBrowser
}

// GetManagedBrowserOk returns a tuple with the ManagedBrowser field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTargetedManagedAppProtection) GetManagedBrowserOk() (*AnyOfmicrosoftGraphManagedBrowserType, bool) {
	if o == nil || o.ManagedBrowser == nil {
		return nil, false
	}
	return &o.ManagedBrowser, true
}

// HasManagedBrowser returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasManagedBrowser() bool {
	if o != nil && o.ManagedBrowser != nil {
		return true
	}

	return false
}

// SetManagedBrowser gets a reference to the given AnyOfmicrosoftGraphManagedBrowserType and assigns it to the ManagedBrowser field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetManagedBrowser(v AnyOfmicrosoftGraphManagedBrowserType) {
	o.ManagedBrowser = v
}

// GetManagedBrowserToOpenLinksRequired returns the ManagedBrowserToOpenLinksRequired field value if set, zero value otherwise.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetManagedBrowserToOpenLinksRequired() bool {
	if o == nil || o.ManagedBrowserToOpenLinksRequired == nil {
		var ret bool
		return ret
	}
	return *o.ManagedBrowserToOpenLinksRequired
}

// GetManagedBrowserToOpenLinksRequiredOk returns a tuple with the ManagedBrowserToOpenLinksRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetManagedBrowserToOpenLinksRequiredOk() (*bool, bool) {
	if o == nil || o.ManagedBrowserToOpenLinksRequired == nil {
		return nil, false
	}
	return o.ManagedBrowserToOpenLinksRequired, true
}

// HasManagedBrowserToOpenLinksRequired returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasManagedBrowserToOpenLinksRequired() bool {
	if o != nil && o.ManagedBrowserToOpenLinksRequired != nil {
		return true
	}

	return false
}

// SetManagedBrowserToOpenLinksRequired gets a reference to the given bool and assigns it to the ManagedBrowserToOpenLinksRequired field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetManagedBrowserToOpenLinksRequired(v bool) {
	o.ManagedBrowserToOpenLinksRequired = &v
}

// GetMaximumPinRetries returns the MaximumPinRetries field value if set, zero value otherwise.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetMaximumPinRetries() int32 {
	if o == nil || o.MaximumPinRetries == nil {
		var ret int32
		return ret
	}
	return *o.MaximumPinRetries
}

// GetMaximumPinRetriesOk returns a tuple with the MaximumPinRetries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetMaximumPinRetriesOk() (*int32, bool) {
	if o == nil || o.MaximumPinRetries == nil {
		return nil, false
	}
	return o.MaximumPinRetries, true
}

// HasMaximumPinRetries returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasMaximumPinRetries() bool {
	if o != nil && o.MaximumPinRetries != nil {
		return true
	}

	return false
}

// SetMaximumPinRetries gets a reference to the given int32 and assigns it to the MaximumPinRetries field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetMaximumPinRetries(v int32) {
	o.MaximumPinRetries = &v
}

// GetMinimumPinLength returns the MinimumPinLength field value if set, zero value otherwise.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetMinimumPinLength() int32 {
	if o == nil || o.MinimumPinLength == nil {
		var ret int32
		return ret
	}
	return *o.MinimumPinLength
}

// GetMinimumPinLengthOk returns a tuple with the MinimumPinLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetMinimumPinLengthOk() (*int32, bool) {
	if o == nil || o.MinimumPinLength == nil {
		return nil, false
	}
	return o.MinimumPinLength, true
}

// HasMinimumPinLength returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasMinimumPinLength() bool {
	if o != nil && o.MinimumPinLength != nil {
		return true
	}

	return false
}

// SetMinimumPinLength gets a reference to the given int32 and assigns it to the MinimumPinLength field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetMinimumPinLength(v int32) {
	o.MinimumPinLength = &v
}

// GetMinimumRequiredAppVersion returns the MinimumRequiredAppVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTargetedManagedAppProtection) GetMinimumRequiredAppVersion() string {
	if o == nil || o.MinimumRequiredAppVersion.Get() == nil {
		var ret string
		return ret
	}
	return *o.MinimumRequiredAppVersion.Get()
}

// GetMinimumRequiredAppVersionOk returns a tuple with the MinimumRequiredAppVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTargetedManagedAppProtection) GetMinimumRequiredAppVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MinimumRequiredAppVersion.Get(), o.MinimumRequiredAppVersion.IsSet()
}

// HasMinimumRequiredAppVersion returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasMinimumRequiredAppVersion() bool {
	if o != nil && o.MinimumRequiredAppVersion.IsSet() {
		return true
	}

	return false
}

// SetMinimumRequiredAppVersion gets a reference to the given NullableString and assigns it to the MinimumRequiredAppVersion field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetMinimumRequiredAppVersion(v string) {
	o.MinimumRequiredAppVersion.Set(&v)
}
// SetMinimumRequiredAppVersionNil sets the value for MinimumRequiredAppVersion to be an explicit nil
func (o *MicrosoftGraphTargetedManagedAppProtection) SetMinimumRequiredAppVersionNil() {
	o.MinimumRequiredAppVersion.Set(nil)
}

// UnsetMinimumRequiredAppVersion ensures that no value is present for MinimumRequiredAppVersion, not even an explicit nil
func (o *MicrosoftGraphTargetedManagedAppProtection) UnsetMinimumRequiredAppVersion() {
	o.MinimumRequiredAppVersion.Unset()
}

// GetMinimumRequiredOsVersion returns the MinimumRequiredOsVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTargetedManagedAppProtection) GetMinimumRequiredOsVersion() string {
	if o == nil || o.MinimumRequiredOsVersion.Get() == nil {
		var ret string
		return ret
	}
	return *o.MinimumRequiredOsVersion.Get()
}

// GetMinimumRequiredOsVersionOk returns a tuple with the MinimumRequiredOsVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTargetedManagedAppProtection) GetMinimumRequiredOsVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MinimumRequiredOsVersion.Get(), o.MinimumRequiredOsVersion.IsSet()
}

// HasMinimumRequiredOsVersion returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasMinimumRequiredOsVersion() bool {
	if o != nil && o.MinimumRequiredOsVersion.IsSet() {
		return true
	}

	return false
}

// SetMinimumRequiredOsVersion gets a reference to the given NullableString and assigns it to the MinimumRequiredOsVersion field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetMinimumRequiredOsVersion(v string) {
	o.MinimumRequiredOsVersion.Set(&v)
}
// SetMinimumRequiredOsVersionNil sets the value for MinimumRequiredOsVersion to be an explicit nil
func (o *MicrosoftGraphTargetedManagedAppProtection) SetMinimumRequiredOsVersionNil() {
	o.MinimumRequiredOsVersion.Set(nil)
}

// UnsetMinimumRequiredOsVersion ensures that no value is present for MinimumRequiredOsVersion, not even an explicit nil
func (o *MicrosoftGraphTargetedManagedAppProtection) UnsetMinimumRequiredOsVersion() {
	o.MinimumRequiredOsVersion.Unset()
}

// GetMinimumWarningAppVersion returns the MinimumWarningAppVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTargetedManagedAppProtection) GetMinimumWarningAppVersion() string {
	if o == nil || o.MinimumWarningAppVersion.Get() == nil {
		var ret string
		return ret
	}
	return *o.MinimumWarningAppVersion.Get()
}

// GetMinimumWarningAppVersionOk returns a tuple with the MinimumWarningAppVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTargetedManagedAppProtection) GetMinimumWarningAppVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MinimumWarningAppVersion.Get(), o.MinimumWarningAppVersion.IsSet()
}

// HasMinimumWarningAppVersion returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasMinimumWarningAppVersion() bool {
	if o != nil && o.MinimumWarningAppVersion.IsSet() {
		return true
	}

	return false
}

// SetMinimumWarningAppVersion gets a reference to the given NullableString and assigns it to the MinimumWarningAppVersion field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetMinimumWarningAppVersion(v string) {
	o.MinimumWarningAppVersion.Set(&v)
}
// SetMinimumWarningAppVersionNil sets the value for MinimumWarningAppVersion to be an explicit nil
func (o *MicrosoftGraphTargetedManagedAppProtection) SetMinimumWarningAppVersionNil() {
	o.MinimumWarningAppVersion.Set(nil)
}

// UnsetMinimumWarningAppVersion ensures that no value is present for MinimumWarningAppVersion, not even an explicit nil
func (o *MicrosoftGraphTargetedManagedAppProtection) UnsetMinimumWarningAppVersion() {
	o.MinimumWarningAppVersion.Unset()
}

// GetMinimumWarningOsVersion returns the MinimumWarningOsVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTargetedManagedAppProtection) GetMinimumWarningOsVersion() string {
	if o == nil || o.MinimumWarningOsVersion.Get() == nil {
		var ret string
		return ret
	}
	return *o.MinimumWarningOsVersion.Get()
}

// GetMinimumWarningOsVersionOk returns a tuple with the MinimumWarningOsVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTargetedManagedAppProtection) GetMinimumWarningOsVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MinimumWarningOsVersion.Get(), o.MinimumWarningOsVersion.IsSet()
}

// HasMinimumWarningOsVersion returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasMinimumWarningOsVersion() bool {
	if o != nil && o.MinimumWarningOsVersion.IsSet() {
		return true
	}

	return false
}

// SetMinimumWarningOsVersion gets a reference to the given NullableString and assigns it to the MinimumWarningOsVersion field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetMinimumWarningOsVersion(v string) {
	o.MinimumWarningOsVersion.Set(&v)
}
// SetMinimumWarningOsVersionNil sets the value for MinimumWarningOsVersion to be an explicit nil
func (o *MicrosoftGraphTargetedManagedAppProtection) SetMinimumWarningOsVersionNil() {
	o.MinimumWarningOsVersion.Set(nil)
}

// UnsetMinimumWarningOsVersion ensures that no value is present for MinimumWarningOsVersion, not even an explicit nil
func (o *MicrosoftGraphTargetedManagedAppProtection) UnsetMinimumWarningOsVersion() {
	o.MinimumWarningOsVersion.Unset()
}

// GetOrganizationalCredentialsRequired returns the OrganizationalCredentialsRequired field value if set, zero value otherwise.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetOrganizationalCredentialsRequired() bool {
	if o == nil || o.OrganizationalCredentialsRequired == nil {
		var ret bool
		return ret
	}
	return *o.OrganizationalCredentialsRequired
}

// GetOrganizationalCredentialsRequiredOk returns a tuple with the OrganizationalCredentialsRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetOrganizationalCredentialsRequiredOk() (*bool, bool) {
	if o == nil || o.OrganizationalCredentialsRequired == nil {
		return nil, false
	}
	return o.OrganizationalCredentialsRequired, true
}

// HasOrganizationalCredentialsRequired returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasOrganizationalCredentialsRequired() bool {
	if o != nil && o.OrganizationalCredentialsRequired != nil {
		return true
	}

	return false
}

// SetOrganizationalCredentialsRequired gets a reference to the given bool and assigns it to the OrganizationalCredentialsRequired field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetOrganizationalCredentialsRequired(v bool) {
	o.OrganizationalCredentialsRequired = &v
}

// GetPeriodBeforePinReset returns the PeriodBeforePinReset field value if set, zero value otherwise.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetPeriodBeforePinReset() string {
	if o == nil || o.PeriodBeforePinReset == nil {
		var ret string
		return ret
	}
	return *o.PeriodBeforePinReset
}

// GetPeriodBeforePinResetOk returns a tuple with the PeriodBeforePinReset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetPeriodBeforePinResetOk() (*string, bool) {
	if o == nil || o.PeriodBeforePinReset == nil {
		return nil, false
	}
	return o.PeriodBeforePinReset, true
}

// HasPeriodBeforePinReset returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasPeriodBeforePinReset() bool {
	if o != nil && o.PeriodBeforePinReset != nil {
		return true
	}

	return false
}

// SetPeriodBeforePinReset gets a reference to the given string and assigns it to the PeriodBeforePinReset field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetPeriodBeforePinReset(v string) {
	o.PeriodBeforePinReset = &v
}

// GetPeriodOfflineBeforeAccessCheck returns the PeriodOfflineBeforeAccessCheck field value if set, zero value otherwise.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetPeriodOfflineBeforeAccessCheck() string {
	if o == nil || o.PeriodOfflineBeforeAccessCheck == nil {
		var ret string
		return ret
	}
	return *o.PeriodOfflineBeforeAccessCheck
}

// GetPeriodOfflineBeforeAccessCheckOk returns a tuple with the PeriodOfflineBeforeAccessCheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetPeriodOfflineBeforeAccessCheckOk() (*string, bool) {
	if o == nil || o.PeriodOfflineBeforeAccessCheck == nil {
		return nil, false
	}
	return o.PeriodOfflineBeforeAccessCheck, true
}

// HasPeriodOfflineBeforeAccessCheck returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasPeriodOfflineBeforeAccessCheck() bool {
	if o != nil && o.PeriodOfflineBeforeAccessCheck != nil {
		return true
	}

	return false
}

// SetPeriodOfflineBeforeAccessCheck gets a reference to the given string and assigns it to the PeriodOfflineBeforeAccessCheck field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetPeriodOfflineBeforeAccessCheck(v string) {
	o.PeriodOfflineBeforeAccessCheck = &v
}

// GetPeriodOfflineBeforeWipeIsEnforced returns the PeriodOfflineBeforeWipeIsEnforced field value if set, zero value otherwise.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetPeriodOfflineBeforeWipeIsEnforced() string {
	if o == nil || o.PeriodOfflineBeforeWipeIsEnforced == nil {
		var ret string
		return ret
	}
	return *o.PeriodOfflineBeforeWipeIsEnforced
}

// GetPeriodOfflineBeforeWipeIsEnforcedOk returns a tuple with the PeriodOfflineBeforeWipeIsEnforced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetPeriodOfflineBeforeWipeIsEnforcedOk() (*string, bool) {
	if o == nil || o.PeriodOfflineBeforeWipeIsEnforced == nil {
		return nil, false
	}
	return o.PeriodOfflineBeforeWipeIsEnforced, true
}

// HasPeriodOfflineBeforeWipeIsEnforced returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasPeriodOfflineBeforeWipeIsEnforced() bool {
	if o != nil && o.PeriodOfflineBeforeWipeIsEnforced != nil {
		return true
	}

	return false
}

// SetPeriodOfflineBeforeWipeIsEnforced gets a reference to the given string and assigns it to the PeriodOfflineBeforeWipeIsEnforced field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetPeriodOfflineBeforeWipeIsEnforced(v string) {
	o.PeriodOfflineBeforeWipeIsEnforced = &v
}

// GetPeriodOnlineBeforeAccessCheck returns the PeriodOnlineBeforeAccessCheck field value if set, zero value otherwise.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetPeriodOnlineBeforeAccessCheck() string {
	if o == nil || o.PeriodOnlineBeforeAccessCheck == nil {
		var ret string
		return ret
	}
	return *o.PeriodOnlineBeforeAccessCheck
}

// GetPeriodOnlineBeforeAccessCheckOk returns a tuple with the PeriodOnlineBeforeAccessCheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetPeriodOnlineBeforeAccessCheckOk() (*string, bool) {
	if o == nil || o.PeriodOnlineBeforeAccessCheck == nil {
		return nil, false
	}
	return o.PeriodOnlineBeforeAccessCheck, true
}

// HasPeriodOnlineBeforeAccessCheck returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasPeriodOnlineBeforeAccessCheck() bool {
	if o != nil && o.PeriodOnlineBeforeAccessCheck != nil {
		return true
	}

	return false
}

// SetPeriodOnlineBeforeAccessCheck gets a reference to the given string and assigns it to the PeriodOnlineBeforeAccessCheck field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetPeriodOnlineBeforeAccessCheck(v string) {
	o.PeriodOnlineBeforeAccessCheck = &v
}

// GetPinCharacterSet returns the PinCharacterSet field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTargetedManagedAppProtection) GetPinCharacterSet() AnyOfmicrosoftGraphManagedAppPinCharacterSet {
	if o == nil  {
		var ret AnyOfmicrosoftGraphManagedAppPinCharacterSet
		return ret
	}
	return o.PinCharacterSet
}

// GetPinCharacterSetOk returns a tuple with the PinCharacterSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTargetedManagedAppProtection) GetPinCharacterSetOk() (*AnyOfmicrosoftGraphManagedAppPinCharacterSet, bool) {
	if o == nil || o.PinCharacterSet == nil {
		return nil, false
	}
	return &o.PinCharacterSet, true
}

// HasPinCharacterSet returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasPinCharacterSet() bool {
	if o != nil && o.PinCharacterSet != nil {
		return true
	}

	return false
}

// SetPinCharacterSet gets a reference to the given AnyOfmicrosoftGraphManagedAppPinCharacterSet and assigns it to the PinCharacterSet field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetPinCharacterSet(v AnyOfmicrosoftGraphManagedAppPinCharacterSet) {
	o.PinCharacterSet = v
}

// GetPinRequired returns the PinRequired field value if set, zero value otherwise.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetPinRequired() bool {
	if o == nil || o.PinRequired == nil {
		var ret bool
		return ret
	}
	return *o.PinRequired
}

// GetPinRequiredOk returns a tuple with the PinRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetPinRequiredOk() (*bool, bool) {
	if o == nil || o.PinRequired == nil {
		return nil, false
	}
	return o.PinRequired, true
}

// HasPinRequired returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasPinRequired() bool {
	if o != nil && o.PinRequired != nil {
		return true
	}

	return false
}

// SetPinRequired gets a reference to the given bool and assigns it to the PinRequired field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetPinRequired(v bool) {
	o.PinRequired = &v
}

// GetPrintBlocked returns the PrintBlocked field value if set, zero value otherwise.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetPrintBlocked() bool {
	if o == nil || o.PrintBlocked == nil {
		var ret bool
		return ret
	}
	return *o.PrintBlocked
}

// GetPrintBlockedOk returns a tuple with the PrintBlocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetPrintBlockedOk() (*bool, bool) {
	if o == nil || o.PrintBlocked == nil {
		return nil, false
	}
	return o.PrintBlocked, true
}

// HasPrintBlocked returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasPrintBlocked() bool {
	if o != nil && o.PrintBlocked != nil {
		return true
	}

	return false
}

// SetPrintBlocked gets a reference to the given bool and assigns it to the PrintBlocked field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetPrintBlocked(v bool) {
	o.PrintBlocked = &v
}

// GetSaveAsBlocked returns the SaveAsBlocked field value if set, zero value otherwise.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetSaveAsBlocked() bool {
	if o == nil || o.SaveAsBlocked == nil {
		var ret bool
		return ret
	}
	return *o.SaveAsBlocked
}

// GetSaveAsBlockedOk returns a tuple with the SaveAsBlocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetSaveAsBlockedOk() (*bool, bool) {
	if o == nil || o.SaveAsBlocked == nil {
		return nil, false
	}
	return o.SaveAsBlocked, true
}

// HasSaveAsBlocked returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasSaveAsBlocked() bool {
	if o != nil && o.SaveAsBlocked != nil {
		return true
	}

	return false
}

// SetSaveAsBlocked gets a reference to the given bool and assigns it to the SaveAsBlocked field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetSaveAsBlocked(v bool) {
	o.SaveAsBlocked = &v
}

// GetSimplePinBlocked returns the SimplePinBlocked field value if set, zero value otherwise.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetSimplePinBlocked() bool {
	if o == nil || o.SimplePinBlocked == nil {
		var ret bool
		return ret
	}
	return *o.SimplePinBlocked
}

// GetSimplePinBlockedOk returns a tuple with the SimplePinBlocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetSimplePinBlockedOk() (*bool, bool) {
	if o == nil || o.SimplePinBlocked == nil {
		return nil, false
	}
	return o.SimplePinBlocked, true
}

// HasSimplePinBlocked returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasSimplePinBlocked() bool {
	if o != nil && o.SimplePinBlocked != nil {
		return true
	}

	return false
}

// SetSimplePinBlocked gets a reference to the given bool and assigns it to the SimplePinBlocked field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetSimplePinBlocked(v bool) {
	o.SimplePinBlocked = &v
}

// GetIsAssigned returns the IsAssigned field value if set, zero value otherwise.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetIsAssigned() bool {
	if o == nil || o.IsAssigned == nil {
		var ret bool
		return ret
	}
	return *o.IsAssigned
}

// GetIsAssignedOk returns a tuple with the IsAssigned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetIsAssignedOk() (*bool, bool) {
	if o == nil || o.IsAssigned == nil {
		return nil, false
	}
	return o.IsAssigned, true
}

// HasIsAssigned returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasIsAssigned() bool {
	if o != nil && o.IsAssigned != nil {
		return true
	}

	return false
}

// SetIsAssigned gets a reference to the given bool and assigns it to the IsAssigned field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetIsAssigned(v bool) {
	o.IsAssigned = &v
}

// GetAssignments returns the Assignments field value if set, zero value otherwise.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetAssignments() []MicrosoftGraphTargetedManagedAppPolicyAssignment {
	if o == nil || o.Assignments == nil {
		var ret []MicrosoftGraphTargetedManagedAppPolicyAssignment
		return ret
	}
	return *o.Assignments
}

// GetAssignmentsOk returns a tuple with the Assignments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) GetAssignmentsOk() (*[]MicrosoftGraphTargetedManagedAppPolicyAssignment, bool) {
	if o == nil || o.Assignments == nil {
		return nil, false
	}
	return o.Assignments, true
}

// HasAssignments returns a boolean if a field has been set.
func (o *MicrosoftGraphTargetedManagedAppProtection) HasAssignments() bool {
	if o != nil && o.Assignments != nil {
		return true
	}

	return false
}

// SetAssignments gets a reference to the given []MicrosoftGraphTargetedManagedAppPolicyAssignment and assigns it to the Assignments field.
func (o *MicrosoftGraphTargetedManagedAppProtection) SetAssignments(v []MicrosoftGraphTargetedManagedAppPolicyAssignment) {
	o.Assignments = &v
}

func (o MicrosoftGraphTargetedManagedAppProtection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.CreatedDateTime != nil {
		toSerialize["createdDateTime"] = o.CreatedDateTime
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.LastModifiedDateTime != nil {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime
	}
	if o.Version.IsSet() {
		toSerialize["version"] = o.Version.Get()
	}
	if o.AllowedDataStorageLocations != nil {
		toSerialize["allowedDataStorageLocations"] = o.AllowedDataStorageLocations
	}
	if o.AllowedInboundDataTransferSources != nil {
		toSerialize["allowedInboundDataTransferSources"] = o.AllowedInboundDataTransferSources
	}
	if o.AllowedOutboundClipboardSharingLevel != nil {
		toSerialize["allowedOutboundClipboardSharingLevel"] = o.AllowedOutboundClipboardSharingLevel
	}
	if o.AllowedOutboundDataTransferDestinations != nil {
		toSerialize["allowedOutboundDataTransferDestinations"] = o.AllowedOutboundDataTransferDestinations
	}
	if o.ContactSyncBlocked != nil {
		toSerialize["contactSyncBlocked"] = o.ContactSyncBlocked
	}
	if o.DataBackupBlocked != nil {
		toSerialize["dataBackupBlocked"] = o.DataBackupBlocked
	}
	if o.DeviceComplianceRequired != nil {
		toSerialize["deviceComplianceRequired"] = o.DeviceComplianceRequired
	}
	if o.DisableAppPinIfDevicePinIsSet != nil {
		toSerialize["disableAppPinIfDevicePinIsSet"] = o.DisableAppPinIfDevicePinIsSet
	}
	if o.FingerprintBlocked != nil {
		toSerialize["fingerprintBlocked"] = o.FingerprintBlocked
	}
	if o.ManagedBrowser != nil {
		toSerialize["managedBrowser"] = o.ManagedBrowser
	}
	if o.ManagedBrowserToOpenLinksRequired != nil {
		toSerialize["managedBrowserToOpenLinksRequired"] = o.ManagedBrowserToOpenLinksRequired
	}
	if o.MaximumPinRetries != nil {
		toSerialize["maximumPinRetries"] = o.MaximumPinRetries
	}
	if o.MinimumPinLength != nil {
		toSerialize["minimumPinLength"] = o.MinimumPinLength
	}
	if o.MinimumRequiredAppVersion.IsSet() {
		toSerialize["minimumRequiredAppVersion"] = o.MinimumRequiredAppVersion.Get()
	}
	if o.MinimumRequiredOsVersion.IsSet() {
		toSerialize["minimumRequiredOsVersion"] = o.MinimumRequiredOsVersion.Get()
	}
	if o.MinimumWarningAppVersion.IsSet() {
		toSerialize["minimumWarningAppVersion"] = o.MinimumWarningAppVersion.Get()
	}
	if o.MinimumWarningOsVersion.IsSet() {
		toSerialize["minimumWarningOsVersion"] = o.MinimumWarningOsVersion.Get()
	}
	if o.OrganizationalCredentialsRequired != nil {
		toSerialize["organizationalCredentialsRequired"] = o.OrganizationalCredentialsRequired
	}
	if o.PeriodBeforePinReset != nil {
		toSerialize["periodBeforePinReset"] = o.PeriodBeforePinReset
	}
	if o.PeriodOfflineBeforeAccessCheck != nil {
		toSerialize["periodOfflineBeforeAccessCheck"] = o.PeriodOfflineBeforeAccessCheck
	}
	if o.PeriodOfflineBeforeWipeIsEnforced != nil {
		toSerialize["periodOfflineBeforeWipeIsEnforced"] = o.PeriodOfflineBeforeWipeIsEnforced
	}
	if o.PeriodOnlineBeforeAccessCheck != nil {
		toSerialize["periodOnlineBeforeAccessCheck"] = o.PeriodOnlineBeforeAccessCheck
	}
	if o.PinCharacterSet != nil {
		toSerialize["pinCharacterSet"] = o.PinCharacterSet
	}
	if o.PinRequired != nil {
		toSerialize["pinRequired"] = o.PinRequired
	}
	if o.PrintBlocked != nil {
		toSerialize["printBlocked"] = o.PrintBlocked
	}
	if o.SaveAsBlocked != nil {
		toSerialize["saveAsBlocked"] = o.SaveAsBlocked
	}
	if o.SimplePinBlocked != nil {
		toSerialize["simplePinBlocked"] = o.SimplePinBlocked
	}
	if o.IsAssigned != nil {
		toSerialize["isAssigned"] = o.IsAssigned
	}
	if o.Assignments != nil {
		toSerialize["assignments"] = o.Assignments
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphTargetedManagedAppProtection struct {
	value *MicrosoftGraphTargetedManagedAppProtection
	isSet bool
}

func (v NullableMicrosoftGraphTargetedManagedAppProtection) Get() *MicrosoftGraphTargetedManagedAppProtection {
	return v.value
}

func (v *NullableMicrosoftGraphTargetedManagedAppProtection) Set(val *MicrosoftGraphTargetedManagedAppProtection) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphTargetedManagedAppProtection) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphTargetedManagedAppProtection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphTargetedManagedAppProtection(val *MicrosoftGraphTargetedManagedAppProtection) *NullableMicrosoftGraphTargetedManagedAppProtection {
	return &NullableMicrosoftGraphTargetedManagedAppProtection{value: val, isSet: true}
}

func (v NullableMicrosoftGraphTargetedManagedAppProtection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphTargetedManagedAppProtection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


