/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// InlineObject1332 struct for InlineObject1332
type InlineObject1332 struct {
	Probability AnyOfobject `json:"probability,omitempty"`
	DegFreedom1 AnyOfobject `json:"degFreedom1,omitempty"`
	DegFreedom2 AnyOfobject `json:"degFreedom2,omitempty"`
}

// NewInlineObject1332 instantiates a new InlineObject1332 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject1332() *InlineObject1332 {
	this := InlineObject1332{}
	return &this
}

// NewInlineObject1332WithDefaults instantiates a new InlineObject1332 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject1332WithDefaults() *InlineObject1332 {
	this := InlineObject1332{}
	return &this
}

// GetProbability returns the Probability field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1332) GetProbability() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Probability
}

// GetProbabilityOk returns a tuple with the Probability field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1332) GetProbabilityOk() (*AnyOfobject, bool) {
	if o == nil || o.Probability == nil {
		return nil, false
	}
	return &o.Probability, true
}

// HasProbability returns a boolean if a field has been set.
func (o *InlineObject1332) HasProbability() bool {
	if o != nil && o.Probability != nil {
		return true
	}

	return false
}

// SetProbability gets a reference to the given AnyOfobject and assigns it to the Probability field.
func (o *InlineObject1332) SetProbability(v AnyOfobject) {
	o.Probability = v
}

// GetDegFreedom1 returns the DegFreedom1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1332) GetDegFreedom1() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.DegFreedom1
}

// GetDegFreedom1Ok returns a tuple with the DegFreedom1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1332) GetDegFreedom1Ok() (*AnyOfobject, bool) {
	if o == nil || o.DegFreedom1 == nil {
		return nil, false
	}
	return &o.DegFreedom1, true
}

// HasDegFreedom1 returns a boolean if a field has been set.
func (o *InlineObject1332) HasDegFreedom1() bool {
	if o != nil && o.DegFreedom1 != nil {
		return true
	}

	return false
}

// SetDegFreedom1 gets a reference to the given AnyOfobject and assigns it to the DegFreedom1 field.
func (o *InlineObject1332) SetDegFreedom1(v AnyOfobject) {
	o.DegFreedom1 = v
}

// GetDegFreedom2 returns the DegFreedom2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1332) GetDegFreedom2() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.DegFreedom2
}

// GetDegFreedom2Ok returns a tuple with the DegFreedom2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1332) GetDegFreedom2Ok() (*AnyOfobject, bool) {
	if o == nil || o.DegFreedom2 == nil {
		return nil, false
	}
	return &o.DegFreedom2, true
}

// HasDegFreedom2 returns a boolean if a field has been set.
func (o *InlineObject1332) HasDegFreedom2() bool {
	if o != nil && o.DegFreedom2 != nil {
		return true
	}

	return false
}

// SetDegFreedom2 gets a reference to the given AnyOfobject and assigns it to the DegFreedom2 field.
func (o *InlineObject1332) SetDegFreedom2(v AnyOfobject) {
	o.DegFreedom2 = v
}

func (o InlineObject1332) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Probability != nil {
		toSerialize["probability"] = o.Probability
	}
	if o.DegFreedom1 != nil {
		toSerialize["degFreedom1"] = o.DegFreedom1
	}
	if o.DegFreedom2 != nil {
		toSerialize["degFreedom2"] = o.DegFreedom2
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject1332 struct {
	value *InlineObject1332
	isSet bool
}

func (v NullableInlineObject1332) Get() *InlineObject1332 {
	return v.value
}

func (v *NullableInlineObject1332) Set(val *InlineObject1332) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject1332) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject1332) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject1332(val *InlineObject1332) *NullableInlineObject1332 {
	return &NullableInlineObject1332{value: val, isSet: true}
}

func (v NullableInlineObject1332) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject1332) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


