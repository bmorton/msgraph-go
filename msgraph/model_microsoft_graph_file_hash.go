/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphFileHash struct for MicrosoftGraphFileHash
type MicrosoftGraphFileHash struct {
	// File hash type. Possible values are: unknown, sha1, sha256, md5, authenticodeHash256, lsHash, ctph, peSha1, peSha256.
	HashType AnyOfmicrosoftGraphFileHashType `json:"hashType,omitempty"`
	// Value of the file hash.
	HashValue NullableString `json:"hashValue,omitempty"`
}

// NewMicrosoftGraphFileHash instantiates a new MicrosoftGraphFileHash object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphFileHash() *MicrosoftGraphFileHash {
	this := MicrosoftGraphFileHash{}
	return &this
}

// NewMicrosoftGraphFileHashWithDefaults instantiates a new MicrosoftGraphFileHash object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphFileHashWithDefaults() *MicrosoftGraphFileHash {
	this := MicrosoftGraphFileHash{}
	return &this
}

// GetHashType returns the HashType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphFileHash) GetHashType() AnyOfmicrosoftGraphFileHashType {
	if o == nil  {
		var ret AnyOfmicrosoftGraphFileHashType
		return ret
	}
	return o.HashType
}

// GetHashTypeOk returns a tuple with the HashType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphFileHash) GetHashTypeOk() (*AnyOfmicrosoftGraphFileHashType, bool) {
	if o == nil || o.HashType == nil {
		return nil, false
	}
	return &o.HashType, true
}

// HasHashType returns a boolean if a field has been set.
func (o *MicrosoftGraphFileHash) HasHashType() bool {
	if o != nil && o.HashType != nil {
		return true
	}

	return false
}

// SetHashType gets a reference to the given AnyOfmicrosoftGraphFileHashType and assigns it to the HashType field.
func (o *MicrosoftGraphFileHash) SetHashType(v AnyOfmicrosoftGraphFileHashType) {
	o.HashType = v
}

// GetHashValue returns the HashValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphFileHash) GetHashValue() string {
	if o == nil || o.HashValue.Get() == nil {
		var ret string
		return ret
	}
	return *o.HashValue.Get()
}

// GetHashValueOk returns a tuple with the HashValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphFileHash) GetHashValueOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HashValue.Get(), o.HashValue.IsSet()
}

// HasHashValue returns a boolean if a field has been set.
func (o *MicrosoftGraphFileHash) HasHashValue() bool {
	if o != nil && o.HashValue.IsSet() {
		return true
	}

	return false
}

// SetHashValue gets a reference to the given NullableString and assigns it to the HashValue field.
func (o *MicrosoftGraphFileHash) SetHashValue(v string) {
	o.HashValue.Set(&v)
}
// SetHashValueNil sets the value for HashValue to be an explicit nil
func (o *MicrosoftGraphFileHash) SetHashValueNil() {
	o.HashValue.Set(nil)
}

// UnsetHashValue ensures that no value is present for HashValue, not even an explicit nil
func (o *MicrosoftGraphFileHash) UnsetHashValue() {
	o.HashValue.Unset()
}

func (o MicrosoftGraphFileHash) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.HashType != nil {
		toSerialize["hashType"] = o.HashType
	}
	if o.HashValue.IsSet() {
		toSerialize["hashValue"] = o.HashValue.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphFileHash struct {
	value *MicrosoftGraphFileHash
	isSet bool
}

func (v NullableMicrosoftGraphFileHash) Get() *MicrosoftGraphFileHash {
	return v.value
}

func (v *NullableMicrosoftGraphFileHash) Set(val *MicrosoftGraphFileHash) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphFileHash) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphFileHash) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphFileHash(val *MicrosoftGraphFileHash) *NullableMicrosoftGraphFileHash {
	return &NullableMicrosoftGraphFileHash{value: val, isSet: true}
}

func (v NullableMicrosoftGraphFileHash) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphFileHash) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


