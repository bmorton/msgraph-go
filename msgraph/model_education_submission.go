/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// EducationSubmission struct for EducationSubmission
type EducationSubmission struct {
	// Who this submission is assigned to.
	Recipient AnyOfobject `json:"recipient,omitempty"`
	// Folder where all file resources for this submission need to be stored.
	ResourcesFolderUrl NullableString `json:"resourcesFolderUrl,omitempty"`
	// User who moved the status of this submission to returned.
	ReturnedBy AnyOfmicrosoftGraphIdentitySet `json:"returnedBy,omitempty"`
	// Moment in time when the submission was returned. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
	ReturnedDateTime NullableTime `json:"returnedDateTime,omitempty"`
	// Read-Only. Possible values are: working, submitted, released, returned.
	Status AnyOfmicrosoftGraphEducationSubmissionStatus `json:"status,omitempty"`
	// User who moved the resource into the submitted state.
	SubmittedBy AnyOfmicrosoftGraphIdentitySet `json:"submittedBy,omitempty"`
	// Moment in time when the submission was moved into the submitted state. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
	SubmittedDateTime NullableTime `json:"submittedDateTime,omitempty"`
	// User who moved the resource from submitted into the working state.
	UnsubmittedBy AnyOfmicrosoftGraphIdentitySet `json:"unsubmittedBy,omitempty"`
	// Moment in time when the submission was moved from submitted into the working state. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
	UnsubmittedDateTime NullableTime `json:"unsubmittedDateTime,omitempty"`
	// Read-Write. Nullable.
	Outcomes *[]MicrosoftGraphEducationOutcome `json:"outcomes,omitempty"`
	// Nullable.
	Resources *[]MicrosoftGraphEducationSubmissionResource `json:"resources,omitempty"`
	// Read-only. Nullable.
	SubmittedResources *[]MicrosoftGraphEducationSubmissionResource `json:"submittedResources,omitempty"`
}

// NewEducationSubmission instantiates a new EducationSubmission object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEducationSubmission() *EducationSubmission {
	this := EducationSubmission{}
	return &this
}

// NewEducationSubmissionWithDefaults instantiates a new EducationSubmission object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEducationSubmissionWithDefaults() *EducationSubmission {
	this := EducationSubmission{}
	return &this
}

// GetRecipient returns the Recipient field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationSubmission) GetRecipient() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Recipient
}

// GetRecipientOk returns a tuple with the Recipient field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationSubmission) GetRecipientOk() (*AnyOfobject, bool) {
	if o == nil || o.Recipient == nil {
		return nil, false
	}
	return &o.Recipient, true
}

// HasRecipient returns a boolean if a field has been set.
func (o *EducationSubmission) HasRecipient() bool {
	if o != nil && o.Recipient != nil {
		return true
	}

	return false
}

// SetRecipient gets a reference to the given AnyOfobject and assigns it to the Recipient field.
func (o *EducationSubmission) SetRecipient(v AnyOfobject) {
	o.Recipient = v
}

// GetResourcesFolderUrl returns the ResourcesFolderUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationSubmission) GetResourcesFolderUrl() string {
	if o == nil || o.ResourcesFolderUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.ResourcesFolderUrl.Get()
}

// GetResourcesFolderUrlOk returns a tuple with the ResourcesFolderUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationSubmission) GetResourcesFolderUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ResourcesFolderUrl.Get(), o.ResourcesFolderUrl.IsSet()
}

// HasResourcesFolderUrl returns a boolean if a field has been set.
func (o *EducationSubmission) HasResourcesFolderUrl() bool {
	if o != nil && o.ResourcesFolderUrl.IsSet() {
		return true
	}

	return false
}

// SetResourcesFolderUrl gets a reference to the given NullableString and assigns it to the ResourcesFolderUrl field.
func (o *EducationSubmission) SetResourcesFolderUrl(v string) {
	o.ResourcesFolderUrl.Set(&v)
}
// SetResourcesFolderUrlNil sets the value for ResourcesFolderUrl to be an explicit nil
func (o *EducationSubmission) SetResourcesFolderUrlNil() {
	o.ResourcesFolderUrl.Set(nil)
}

// UnsetResourcesFolderUrl ensures that no value is present for ResourcesFolderUrl, not even an explicit nil
func (o *EducationSubmission) UnsetResourcesFolderUrl() {
	o.ResourcesFolderUrl.Unset()
}

// GetReturnedBy returns the ReturnedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationSubmission) GetReturnedBy() AnyOfmicrosoftGraphIdentitySet {
	if o == nil  {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret
	}
	return o.ReturnedBy
}

// GetReturnedByOk returns a tuple with the ReturnedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationSubmission) GetReturnedByOk() (*AnyOfmicrosoftGraphIdentitySet, bool) {
	if o == nil || o.ReturnedBy == nil {
		return nil, false
	}
	return &o.ReturnedBy, true
}

// HasReturnedBy returns a boolean if a field has been set.
func (o *EducationSubmission) HasReturnedBy() bool {
	if o != nil && o.ReturnedBy != nil {
		return true
	}

	return false
}

// SetReturnedBy gets a reference to the given AnyOfmicrosoftGraphIdentitySet and assigns it to the ReturnedBy field.
func (o *EducationSubmission) SetReturnedBy(v AnyOfmicrosoftGraphIdentitySet) {
	o.ReturnedBy = v
}

// GetReturnedDateTime returns the ReturnedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationSubmission) GetReturnedDateTime() time.Time {
	if o == nil || o.ReturnedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.ReturnedDateTime.Get()
}

// GetReturnedDateTimeOk returns a tuple with the ReturnedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationSubmission) GetReturnedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ReturnedDateTime.Get(), o.ReturnedDateTime.IsSet()
}

// HasReturnedDateTime returns a boolean if a field has been set.
func (o *EducationSubmission) HasReturnedDateTime() bool {
	if o != nil && o.ReturnedDateTime.IsSet() {
		return true
	}

	return false
}

// SetReturnedDateTime gets a reference to the given NullableTime and assigns it to the ReturnedDateTime field.
func (o *EducationSubmission) SetReturnedDateTime(v time.Time) {
	o.ReturnedDateTime.Set(&v)
}
// SetReturnedDateTimeNil sets the value for ReturnedDateTime to be an explicit nil
func (o *EducationSubmission) SetReturnedDateTimeNil() {
	o.ReturnedDateTime.Set(nil)
}

// UnsetReturnedDateTime ensures that no value is present for ReturnedDateTime, not even an explicit nil
func (o *EducationSubmission) UnsetReturnedDateTime() {
	o.ReturnedDateTime.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationSubmission) GetStatus() AnyOfmicrosoftGraphEducationSubmissionStatus {
	if o == nil  {
		var ret AnyOfmicrosoftGraphEducationSubmissionStatus
		return ret
	}
	return o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationSubmission) GetStatusOk() (*AnyOfmicrosoftGraphEducationSubmissionStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return &o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *EducationSubmission) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given AnyOfmicrosoftGraphEducationSubmissionStatus and assigns it to the Status field.
func (o *EducationSubmission) SetStatus(v AnyOfmicrosoftGraphEducationSubmissionStatus) {
	o.Status = v
}

// GetSubmittedBy returns the SubmittedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationSubmission) GetSubmittedBy() AnyOfmicrosoftGraphIdentitySet {
	if o == nil  {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret
	}
	return o.SubmittedBy
}

// GetSubmittedByOk returns a tuple with the SubmittedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationSubmission) GetSubmittedByOk() (*AnyOfmicrosoftGraphIdentitySet, bool) {
	if o == nil || o.SubmittedBy == nil {
		return nil, false
	}
	return &o.SubmittedBy, true
}

// HasSubmittedBy returns a boolean if a field has been set.
func (o *EducationSubmission) HasSubmittedBy() bool {
	if o != nil && o.SubmittedBy != nil {
		return true
	}

	return false
}

// SetSubmittedBy gets a reference to the given AnyOfmicrosoftGraphIdentitySet and assigns it to the SubmittedBy field.
func (o *EducationSubmission) SetSubmittedBy(v AnyOfmicrosoftGraphIdentitySet) {
	o.SubmittedBy = v
}

// GetSubmittedDateTime returns the SubmittedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationSubmission) GetSubmittedDateTime() time.Time {
	if o == nil || o.SubmittedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.SubmittedDateTime.Get()
}

// GetSubmittedDateTimeOk returns a tuple with the SubmittedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationSubmission) GetSubmittedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SubmittedDateTime.Get(), o.SubmittedDateTime.IsSet()
}

// HasSubmittedDateTime returns a boolean if a field has been set.
func (o *EducationSubmission) HasSubmittedDateTime() bool {
	if o != nil && o.SubmittedDateTime.IsSet() {
		return true
	}

	return false
}

// SetSubmittedDateTime gets a reference to the given NullableTime and assigns it to the SubmittedDateTime field.
func (o *EducationSubmission) SetSubmittedDateTime(v time.Time) {
	o.SubmittedDateTime.Set(&v)
}
// SetSubmittedDateTimeNil sets the value for SubmittedDateTime to be an explicit nil
func (o *EducationSubmission) SetSubmittedDateTimeNil() {
	o.SubmittedDateTime.Set(nil)
}

// UnsetSubmittedDateTime ensures that no value is present for SubmittedDateTime, not even an explicit nil
func (o *EducationSubmission) UnsetSubmittedDateTime() {
	o.SubmittedDateTime.Unset()
}

// GetUnsubmittedBy returns the UnsubmittedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationSubmission) GetUnsubmittedBy() AnyOfmicrosoftGraphIdentitySet {
	if o == nil  {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret
	}
	return o.UnsubmittedBy
}

// GetUnsubmittedByOk returns a tuple with the UnsubmittedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationSubmission) GetUnsubmittedByOk() (*AnyOfmicrosoftGraphIdentitySet, bool) {
	if o == nil || o.UnsubmittedBy == nil {
		return nil, false
	}
	return &o.UnsubmittedBy, true
}

// HasUnsubmittedBy returns a boolean if a field has been set.
func (o *EducationSubmission) HasUnsubmittedBy() bool {
	if o != nil && o.UnsubmittedBy != nil {
		return true
	}

	return false
}

// SetUnsubmittedBy gets a reference to the given AnyOfmicrosoftGraphIdentitySet and assigns it to the UnsubmittedBy field.
func (o *EducationSubmission) SetUnsubmittedBy(v AnyOfmicrosoftGraphIdentitySet) {
	o.UnsubmittedBy = v
}

// GetUnsubmittedDateTime returns the UnsubmittedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationSubmission) GetUnsubmittedDateTime() time.Time {
	if o == nil || o.UnsubmittedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.UnsubmittedDateTime.Get()
}

// GetUnsubmittedDateTimeOk returns a tuple with the UnsubmittedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationSubmission) GetUnsubmittedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UnsubmittedDateTime.Get(), o.UnsubmittedDateTime.IsSet()
}

// HasUnsubmittedDateTime returns a boolean if a field has been set.
func (o *EducationSubmission) HasUnsubmittedDateTime() bool {
	if o != nil && o.UnsubmittedDateTime.IsSet() {
		return true
	}

	return false
}

// SetUnsubmittedDateTime gets a reference to the given NullableTime and assigns it to the UnsubmittedDateTime field.
func (o *EducationSubmission) SetUnsubmittedDateTime(v time.Time) {
	o.UnsubmittedDateTime.Set(&v)
}
// SetUnsubmittedDateTimeNil sets the value for UnsubmittedDateTime to be an explicit nil
func (o *EducationSubmission) SetUnsubmittedDateTimeNil() {
	o.UnsubmittedDateTime.Set(nil)
}

// UnsetUnsubmittedDateTime ensures that no value is present for UnsubmittedDateTime, not even an explicit nil
func (o *EducationSubmission) UnsetUnsubmittedDateTime() {
	o.UnsubmittedDateTime.Unset()
}

// GetOutcomes returns the Outcomes field value if set, zero value otherwise.
func (o *EducationSubmission) GetOutcomes() []MicrosoftGraphEducationOutcome {
	if o == nil || o.Outcomes == nil {
		var ret []MicrosoftGraphEducationOutcome
		return ret
	}
	return *o.Outcomes
}

// GetOutcomesOk returns a tuple with the Outcomes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EducationSubmission) GetOutcomesOk() (*[]MicrosoftGraphEducationOutcome, bool) {
	if o == nil || o.Outcomes == nil {
		return nil, false
	}
	return o.Outcomes, true
}

// HasOutcomes returns a boolean if a field has been set.
func (o *EducationSubmission) HasOutcomes() bool {
	if o != nil && o.Outcomes != nil {
		return true
	}

	return false
}

// SetOutcomes gets a reference to the given []MicrosoftGraphEducationOutcome and assigns it to the Outcomes field.
func (o *EducationSubmission) SetOutcomes(v []MicrosoftGraphEducationOutcome) {
	o.Outcomes = &v
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *EducationSubmission) GetResources() []MicrosoftGraphEducationSubmissionResource {
	if o == nil || o.Resources == nil {
		var ret []MicrosoftGraphEducationSubmissionResource
		return ret
	}
	return *o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EducationSubmission) GetResourcesOk() (*[]MicrosoftGraphEducationSubmissionResource, bool) {
	if o == nil || o.Resources == nil {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *EducationSubmission) HasResources() bool {
	if o != nil && o.Resources != nil {
		return true
	}

	return false
}

// SetResources gets a reference to the given []MicrosoftGraphEducationSubmissionResource and assigns it to the Resources field.
func (o *EducationSubmission) SetResources(v []MicrosoftGraphEducationSubmissionResource) {
	o.Resources = &v
}

// GetSubmittedResources returns the SubmittedResources field value if set, zero value otherwise.
func (o *EducationSubmission) GetSubmittedResources() []MicrosoftGraphEducationSubmissionResource {
	if o == nil || o.SubmittedResources == nil {
		var ret []MicrosoftGraphEducationSubmissionResource
		return ret
	}
	return *o.SubmittedResources
}

// GetSubmittedResourcesOk returns a tuple with the SubmittedResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EducationSubmission) GetSubmittedResourcesOk() (*[]MicrosoftGraphEducationSubmissionResource, bool) {
	if o == nil || o.SubmittedResources == nil {
		return nil, false
	}
	return o.SubmittedResources, true
}

// HasSubmittedResources returns a boolean if a field has been set.
func (o *EducationSubmission) HasSubmittedResources() bool {
	if o != nil && o.SubmittedResources != nil {
		return true
	}

	return false
}

// SetSubmittedResources gets a reference to the given []MicrosoftGraphEducationSubmissionResource and assigns it to the SubmittedResources field.
func (o *EducationSubmission) SetSubmittedResources(v []MicrosoftGraphEducationSubmissionResource) {
	o.SubmittedResources = &v
}

func (o EducationSubmission) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Recipient != nil {
		toSerialize["recipient"] = o.Recipient
	}
	if o.ResourcesFolderUrl.IsSet() {
		toSerialize["resourcesFolderUrl"] = o.ResourcesFolderUrl.Get()
	}
	if o.ReturnedBy != nil {
		toSerialize["returnedBy"] = o.ReturnedBy
	}
	if o.ReturnedDateTime.IsSet() {
		toSerialize["returnedDateTime"] = o.ReturnedDateTime.Get()
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.SubmittedBy != nil {
		toSerialize["submittedBy"] = o.SubmittedBy
	}
	if o.SubmittedDateTime.IsSet() {
		toSerialize["submittedDateTime"] = o.SubmittedDateTime.Get()
	}
	if o.UnsubmittedBy != nil {
		toSerialize["unsubmittedBy"] = o.UnsubmittedBy
	}
	if o.UnsubmittedDateTime.IsSet() {
		toSerialize["unsubmittedDateTime"] = o.UnsubmittedDateTime.Get()
	}
	if o.Outcomes != nil {
		toSerialize["outcomes"] = o.Outcomes
	}
	if o.Resources != nil {
		toSerialize["resources"] = o.Resources
	}
	if o.SubmittedResources != nil {
		toSerialize["submittedResources"] = o.SubmittedResources
	}
	return json.Marshal(toSerialize)
}

type NullableEducationSubmission struct {
	value *EducationSubmission
	isSet bool
}

func (v NullableEducationSubmission) Get() *EducationSubmission {
	return v.value
}

func (v *NullableEducationSubmission) Set(val *EducationSubmission) {
	v.value = val
	v.isSet = true
}

func (v NullableEducationSubmission) IsSet() bool {
	return v.isSet
}

func (v *NullableEducationSubmission) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEducationSubmission(val *EducationSubmission) *NullableEducationSubmission {
	return &NullableEducationSubmission{value: val, isSet: true}
}

func (v NullableEducationSubmission) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEducationSubmission) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


