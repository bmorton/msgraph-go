/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PrintUsageByPrinter struct for PrintUsageByPrinter
type PrintUsageByPrinter struct {
	PrinterId *string `json:"printerId,omitempty"`
}

// NewPrintUsageByPrinter instantiates a new PrintUsageByPrinter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrintUsageByPrinter() *PrintUsageByPrinter {
	this := PrintUsageByPrinter{}
	return &this
}

// NewPrintUsageByPrinterWithDefaults instantiates a new PrintUsageByPrinter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrintUsageByPrinterWithDefaults() *PrintUsageByPrinter {
	this := PrintUsageByPrinter{}
	return &this
}

// GetPrinterId returns the PrinterId field value if set, zero value otherwise.
func (o *PrintUsageByPrinter) GetPrinterId() string {
	if o == nil || o.PrinterId == nil {
		var ret string
		return ret
	}
	return *o.PrinterId
}

// GetPrinterIdOk returns a tuple with the PrinterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrintUsageByPrinter) GetPrinterIdOk() (*string, bool) {
	if o == nil || o.PrinterId == nil {
		return nil, false
	}
	return o.PrinterId, true
}

// HasPrinterId returns a boolean if a field has been set.
func (o *PrintUsageByPrinter) HasPrinterId() bool {
	if o != nil && o.PrinterId != nil {
		return true
	}

	return false
}

// SetPrinterId gets a reference to the given string and assigns it to the PrinterId field.
func (o *PrintUsageByPrinter) SetPrinterId(v string) {
	o.PrinterId = &v
}

func (o PrintUsageByPrinter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PrinterId != nil {
		toSerialize["printerId"] = o.PrinterId
	}
	return json.Marshal(toSerialize)
}

type NullablePrintUsageByPrinter struct {
	value *PrintUsageByPrinter
	isSet bool
}

func (v NullablePrintUsageByPrinter) Get() *PrintUsageByPrinter {
	return v.value
}

func (v *NullablePrintUsageByPrinter) Set(val *PrintUsageByPrinter) {
	v.value = val
	v.isSet = true
}

func (v NullablePrintUsageByPrinter) IsSet() bool {
	return v.isSet
}

func (v *NullablePrintUsageByPrinter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrintUsageByPrinter(val *PrintUsageByPrinter) *NullablePrintUsageByPrinter {
	return &NullablePrintUsageByPrinter{value: val, isSet: true}
}

func (v NullablePrintUsageByPrinter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrintUsageByPrinter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


