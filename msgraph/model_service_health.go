/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// ServiceHealth struct for ServiceHealth
type ServiceHealth struct {
	// The service name. Use the list healthOverviews operation to get exact string names for services subscribed by the tenant.
	Service *string `json:"service,omitempty"`
	// Show the overral service health status. Possible values are: serviceOperational, investigating, restoringService, verifyingService, serviceRestored, postIncidentReviewPublished, serviceDegradation, serviceInterruption, extendedRecovery, falsePositive, investigationSuspended, resolved, mitigatedExternal, mitigated, resolvedExternal, confirmed, reported, unknownFutureValue.
	Status AnyOfmicrosoftGraphServiceHealthStatus `json:"status,omitempty"`
	// A collection of issues happened on the service, with detailed information for each issue.
	Issues *[]MicrosoftGraphServiceHealthIssue `json:"issues,omitempty"`
}

// NewServiceHealth instantiates a new ServiceHealth object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceHealth() *ServiceHealth {
	this := ServiceHealth{}
	return &this
}

// NewServiceHealthWithDefaults instantiates a new ServiceHealth object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceHealthWithDefaults() *ServiceHealth {
	this := ServiceHealth{}
	return &this
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *ServiceHealth) GetService() string {
	if o == nil || o.Service == nil {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceHealth) GetServiceOk() (*string, bool) {
	if o == nil || o.Service == nil {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *ServiceHealth) HasService() bool {
	if o != nil && o.Service != nil {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the Service field.
func (o *ServiceHealth) SetService(v string) {
	o.Service = &v
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceHealth) GetStatus() AnyOfmicrosoftGraphServiceHealthStatus {
	if o == nil  {
		var ret AnyOfmicrosoftGraphServiceHealthStatus
		return ret
	}
	return o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceHealth) GetStatusOk() (*AnyOfmicrosoftGraphServiceHealthStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return &o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ServiceHealth) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given AnyOfmicrosoftGraphServiceHealthStatus and assigns it to the Status field.
func (o *ServiceHealth) SetStatus(v AnyOfmicrosoftGraphServiceHealthStatus) {
	o.Status = v
}

// GetIssues returns the Issues field value if set, zero value otherwise.
func (o *ServiceHealth) GetIssues() []MicrosoftGraphServiceHealthIssue {
	if o == nil || o.Issues == nil {
		var ret []MicrosoftGraphServiceHealthIssue
		return ret
	}
	return *o.Issues
}

// GetIssuesOk returns a tuple with the Issues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceHealth) GetIssuesOk() (*[]MicrosoftGraphServiceHealthIssue, bool) {
	if o == nil || o.Issues == nil {
		return nil, false
	}
	return o.Issues, true
}

// HasIssues returns a boolean if a field has been set.
func (o *ServiceHealth) HasIssues() bool {
	if o != nil && o.Issues != nil {
		return true
	}

	return false
}

// SetIssues gets a reference to the given []MicrosoftGraphServiceHealthIssue and assigns it to the Issues field.
func (o *ServiceHealth) SetIssues(v []MicrosoftGraphServiceHealthIssue) {
	o.Issues = &v
}

func (o ServiceHealth) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Service != nil {
		toSerialize["service"] = o.Service
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Issues != nil {
		toSerialize["issues"] = o.Issues
	}
	return json.Marshal(toSerialize)
}

type NullableServiceHealth struct {
	value *ServiceHealth
	isSet bool
}

func (v NullableServiceHealth) Get() *ServiceHealth {
	return v.value
}

func (v *NullableServiceHealth) Set(val *ServiceHealth) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceHealth) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceHealth) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceHealth(val *ServiceHealth) *NullableServiceHealth {
	return &NullableServiceHealth{value: val, isSet: true}
}

func (v NullableServiceHealth) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceHealth) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


