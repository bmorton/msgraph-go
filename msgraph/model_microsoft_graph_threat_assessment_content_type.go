/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphThreatAssessmentContentType the model 'MicrosoftGraphThreatAssessmentContentType'
type MicrosoftGraphThreatAssessmentContentType string

// List of microsoft.graph.threatAssessmentContentType
const (
	MAIL MicrosoftGraphThreatAssessmentContentType = "mail"
	URL MicrosoftGraphThreatAssessmentContentType = "url"
	FILE MicrosoftGraphThreatAssessmentContentType = "file"
)

// All allowed values of MicrosoftGraphThreatAssessmentContentType enum
var AllowedMicrosoftGraphThreatAssessmentContentTypeEnumValues = []MicrosoftGraphThreatAssessmentContentType{
	"mail",
	"url",
	"file",
}

func (v *MicrosoftGraphThreatAssessmentContentType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphThreatAssessmentContentType(value)
	for _, existing := range AllowedMicrosoftGraphThreatAssessmentContentTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphThreatAssessmentContentType", value)
}

// NewMicrosoftGraphThreatAssessmentContentTypeFromValue returns a pointer to a valid MicrosoftGraphThreatAssessmentContentType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphThreatAssessmentContentTypeFromValue(v string) (*MicrosoftGraphThreatAssessmentContentType, error) {
	ev := MicrosoftGraphThreatAssessmentContentType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphThreatAssessmentContentType: valid values are %v", v, AllowedMicrosoftGraphThreatAssessmentContentTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphThreatAssessmentContentType) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphThreatAssessmentContentTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.threatAssessmentContentType value
func (v MicrosoftGraphThreatAssessmentContentType) Ptr() *MicrosoftGraphThreatAssessmentContentType {
	return &v
}

type NullableMicrosoftGraphThreatAssessmentContentType struct {
	value *MicrosoftGraphThreatAssessmentContentType
	isSet bool
}

func (v NullableMicrosoftGraphThreatAssessmentContentType) Get() *MicrosoftGraphThreatAssessmentContentType {
	return v.value
}

func (v *NullableMicrosoftGraphThreatAssessmentContentType) Set(val *MicrosoftGraphThreatAssessmentContentType) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphThreatAssessmentContentType) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphThreatAssessmentContentType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphThreatAssessmentContentType(val *MicrosoftGraphThreatAssessmentContentType) *NullableMicrosoftGraphThreatAssessmentContentType {
	return &NullableMicrosoftGraphThreatAssessmentContentType{value: val, isSet: true}
}

func (v NullableMicrosoftGraphThreatAssessmentContentType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphThreatAssessmentContentType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

