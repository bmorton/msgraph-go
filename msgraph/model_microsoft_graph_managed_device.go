/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphManagedDevice struct for MicrosoftGraphManagedDevice
type MicrosoftGraphManagedDevice struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// Code that allows the Activation Lock on a device to be bypassed. This property is read-only.
	ActivationLockBypassCode NullableString `json:"activationLockBypassCode,omitempty"`
	// Android security patch level. This property is read-only.
	AndroidSecurityPatchLevel NullableString `json:"androidSecurityPatchLevel,omitempty"`
	// The unique identifier for the Azure Active Directory device. Read only. This property is read-only.
	AzureADDeviceId NullableString `json:"azureADDeviceId,omitempty"`
	// Whether the device is Azure Active Directory registered. This property is read-only.
	AzureADRegistered NullableBool `json:"azureADRegistered,omitempty"`
	// The DateTime when device compliance grace period expires. This property is read-only.
	ComplianceGracePeriodExpirationDateTime *time.Time `json:"complianceGracePeriodExpirationDateTime,omitempty"`
	// Compliance state of the device. This property is read-only. Possible values are: unknown, compliant, noncompliant, conflict, error, inGracePeriod, configManager.
	ComplianceState AnyOfmicrosoftGraphComplianceState `json:"complianceState,omitempty"`
	// ConfigrMgr client enabled features. This property is read-only.
	ConfigurationManagerClientEnabledFeatures AnyOfmicrosoftGraphConfigurationManagerClientEnabledFeatures `json:"configurationManagerClientEnabledFeatures,omitempty"`
	// List of ComplexType deviceActionResult objects. This property is read-only.
	DeviceActionResults *[]*AnyOfmicrosoftGraphDeviceActionResult `json:"deviceActionResults,omitempty"`
	// Device category display name. This property is read-only.
	DeviceCategoryDisplayName NullableString `json:"deviceCategoryDisplayName,omitempty"`
	// Enrollment type of the device. This property is read-only. Possible values are: unknown, userEnrollment, deviceEnrollmentManager, appleBulkWithUser, appleBulkWithoutUser, windowsAzureADJoin, windowsBulkUserless, windowsAutoEnrollment, windowsBulkAzureDomainJoin, windowsCoManagement, windowsAzureADJoinUsingDeviceAuth, appleUserEnrollment, appleUserEnrollmentWithServiceAccount.
	DeviceEnrollmentType AnyOfmicrosoftGraphDeviceEnrollmentType `json:"deviceEnrollmentType,omitempty"`
	// The device health attestation state. This property is read-only.
	DeviceHealthAttestationState AnyOfmicrosoftGraphDeviceHealthAttestationState `json:"deviceHealthAttestationState,omitempty"`
	// Name of the device. This property is read-only.
	DeviceName NullableString `json:"deviceName,omitempty"`
	// Device registration state. This property is read-only. Possible values are: notRegistered, registered, revoked, keyConflict, approvalPending, certificateReset, notRegisteredPendingEnrollment, unknown.
	DeviceRegistrationState AnyOfmicrosoftGraphDeviceRegistrationState `json:"deviceRegistrationState,omitempty"`
	// Whether the device is Exchange ActiveSync activated. This property is read-only.
	EasActivated *bool `json:"easActivated,omitempty"`
	// Exchange ActivationSync activation time of the device. This property is read-only.
	EasActivationDateTime *time.Time `json:"easActivationDateTime,omitempty"`
	// Exchange ActiveSync Id of the device. This property is read-only.
	EasDeviceId NullableString `json:"easDeviceId,omitempty"`
	// Email(s) for the user associated with the device. This property is read-only.
	EmailAddress NullableString `json:"emailAddress,omitempty"`
	// Enrollment time of the device. This property is read-only.
	EnrolledDateTime *time.Time `json:"enrolledDateTime,omitempty"`
	// Ethernet MAC. This property is read-only.
	EthernetMacAddress NullableString `json:"ethernetMacAddress,omitempty"`
	// The Access State of the device in Exchange. This property is read-only. Possible values are: none, unknown, allowed, blocked, quarantined.
	ExchangeAccessState AnyOfmicrosoftGraphDeviceManagementExchangeAccessState `json:"exchangeAccessState,omitempty"`
	// The reason for the device's access state in Exchange. This property is read-only. Possible values are: none, unknown, exchangeGlobalRule, exchangeIndividualRule, exchangeDeviceRule, exchangeUpgrade, exchangeMailboxPolicy, other, compliant, notCompliant, notEnrolled, unknownLocation, mfaRequired, azureADBlockDueToAccessPolicy, compromisedPassword, deviceNotKnownWithManagedApp.
	ExchangeAccessStateReason AnyOfmicrosoftGraphDeviceManagementExchangeAccessStateReason `json:"exchangeAccessStateReason,omitempty"`
	// Last time the device contacted Exchange. This property is read-only.
	ExchangeLastSuccessfulSyncDateTime *time.Time `json:"exchangeLastSuccessfulSyncDateTime,omitempty"`
	// Free Storage in Bytes. This property is read-only.
	FreeStorageSpaceInBytes *int64 `json:"freeStorageSpaceInBytes,omitempty"`
	// Integrated Circuit Card Identifier, it is A SIM card's unique identification number. This property is read-only.
	Iccid NullableString `json:"iccid,omitempty"`
	// IMEI. This property is read-only.
	Imei NullableString `json:"imei,omitempty"`
	// Device encryption status. This property is read-only.
	IsEncrypted *bool `json:"isEncrypted,omitempty"`
	// Device supervised status. This property is read-only.
	IsSupervised *bool `json:"isSupervised,omitempty"`
	// whether the device is jail broken or rooted. This property is read-only.
	JailBroken NullableString `json:"jailBroken,omitempty"`
	// The date and time that the device last completed a successful sync with Intune. This property is read-only.
	LastSyncDateTime *time.Time `json:"lastSyncDateTime,omitempty"`
	// Automatically generated name to identify a device. Can be overwritten to a user friendly name.
	ManagedDeviceName NullableString `json:"managedDeviceName,omitempty"`
	// Ownership of the device. Can be 'company' or 'personal'. Possible values are: unknown, company, personal.
	ManagedDeviceOwnerType AnyOfmicrosoftGraphManagedDeviceOwnerType `json:"managedDeviceOwnerType,omitempty"`
	// Management channel of the device. Intune, EAS, etc. This property is read-only. Possible values are: eas, mdm, easMdm, intuneClient, easIntuneClient, configurationManagerClient, configurationManagerClientMdm, configurationManagerClientMdmEas, unknown, jamf, googleCloudDevicePolicyController.
	ManagementAgent AnyOfmicrosoftGraphManagementAgentType `json:"managementAgent,omitempty"`
	// Manufacturer of the device. This property is read-only.
	Manufacturer NullableString `json:"manufacturer,omitempty"`
	// MEID. This property is read-only.
	Meid NullableString `json:"meid,omitempty"`
	// Model of the device. This property is read-only.
	Model NullableString `json:"model,omitempty"`
	// Notes on the device created by IT Admin
	Notes NullableString `json:"notes,omitempty"`
	// Operating system of the device. Windows, iOS, etc. This property is read-only.
	OperatingSystem NullableString `json:"operatingSystem,omitempty"`
	// Operating system version of the device. This property is read-only.
	OsVersion NullableString `json:"osVersion,omitempty"`
	// Indicates the threat state of a device when a Mobile Threat Defense partner is in use by the account and device. Read Only. This property is read-only. Possible values are: unknown, activated, deactivated, secured, lowSeverity, mediumSeverity, highSeverity, unresponsive, compromised, misconfigured.
	PartnerReportedThreatState AnyOfmicrosoftGraphManagedDevicePartnerReportedHealthState `json:"partnerReportedThreatState,omitempty"`
	// Phone number of the device. This property is read-only.
	PhoneNumber NullableString `json:"phoneNumber,omitempty"`
	// Total Memory in Bytes. This property is read-only.
	PhysicalMemoryInBytes *int64 `json:"physicalMemoryInBytes,omitempty"`
	// An error string that identifies issues when creating Remote Assistance session objects. This property is read-only.
	RemoteAssistanceSessionErrorDetails NullableString `json:"remoteAssistanceSessionErrorDetails,omitempty"`
	// Url that allows a Remote Assistance session to be established with the device. This property is read-only.
	RemoteAssistanceSessionUrl NullableString `json:"remoteAssistanceSessionUrl,omitempty"`
	// SerialNumber. This property is read-only.
	SerialNumber NullableString `json:"serialNumber,omitempty"`
	// Subscriber Carrier. This property is read-only.
	SubscriberCarrier NullableString `json:"subscriberCarrier,omitempty"`
	// Total Storage in Bytes. This property is read-only.
	TotalStorageSpaceInBytes *int64 `json:"totalStorageSpaceInBytes,omitempty"`
	// Unique Device Identifier for iOS and macOS devices. This property is read-only.
	Udid NullableString `json:"udid,omitempty"`
	// User display name. This property is read-only.
	UserDisplayName NullableString `json:"userDisplayName,omitempty"`
	// Unique Identifier for the user associated with the device. This property is read-only.
	UserId NullableString `json:"userId,omitempty"`
	// Device user principal name. This property is read-only.
	UserPrincipalName NullableString `json:"userPrincipalName,omitempty"`
	// Wi-Fi MAC. This property is read-only.
	WiFiMacAddress NullableString `json:"wiFiMacAddress,omitempty"`
	// Device compliance policy states for this device.
	DeviceCompliancePolicyStates *[]MicrosoftGraphDeviceCompliancePolicyState `json:"deviceCompliancePolicyStates,omitempty"`
	// Device configuration states for this device.
	DeviceConfigurationStates *[]MicrosoftGraphDeviceConfigurationState `json:"deviceConfigurationStates,omitempty"`
	// Device category
	DeviceCategory AnyOfmicrosoftGraphDeviceCategory `json:"deviceCategory,omitempty"`
}

// NewMicrosoftGraphManagedDevice instantiates a new MicrosoftGraphManagedDevice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphManagedDevice() *MicrosoftGraphManagedDevice {
	this := MicrosoftGraphManagedDevice{}
	return &this
}

// NewMicrosoftGraphManagedDeviceWithDefaults instantiates a new MicrosoftGraphManagedDevice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphManagedDeviceWithDefaults() *MicrosoftGraphManagedDevice {
	this := MicrosoftGraphManagedDevice{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphManagedDevice) SetId(v string) {
	o.Id = &v
}

// GetActivationLockBypassCode returns the ActivationLockBypassCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetActivationLockBypassCode() string {
	if o == nil || o.ActivationLockBypassCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.ActivationLockBypassCode.Get()
}

// GetActivationLockBypassCodeOk returns a tuple with the ActivationLockBypassCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetActivationLockBypassCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ActivationLockBypassCode.Get(), o.ActivationLockBypassCode.IsSet()
}

// HasActivationLockBypassCode returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasActivationLockBypassCode() bool {
	if o != nil && o.ActivationLockBypassCode.IsSet() {
		return true
	}

	return false
}

// SetActivationLockBypassCode gets a reference to the given NullableString and assigns it to the ActivationLockBypassCode field.
func (o *MicrosoftGraphManagedDevice) SetActivationLockBypassCode(v string) {
	o.ActivationLockBypassCode.Set(&v)
}
// SetActivationLockBypassCodeNil sets the value for ActivationLockBypassCode to be an explicit nil
func (o *MicrosoftGraphManagedDevice) SetActivationLockBypassCodeNil() {
	o.ActivationLockBypassCode.Set(nil)
}

// UnsetActivationLockBypassCode ensures that no value is present for ActivationLockBypassCode, not even an explicit nil
func (o *MicrosoftGraphManagedDevice) UnsetActivationLockBypassCode() {
	o.ActivationLockBypassCode.Unset()
}

// GetAndroidSecurityPatchLevel returns the AndroidSecurityPatchLevel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetAndroidSecurityPatchLevel() string {
	if o == nil || o.AndroidSecurityPatchLevel.Get() == nil {
		var ret string
		return ret
	}
	return *o.AndroidSecurityPatchLevel.Get()
}

// GetAndroidSecurityPatchLevelOk returns a tuple with the AndroidSecurityPatchLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetAndroidSecurityPatchLevelOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AndroidSecurityPatchLevel.Get(), o.AndroidSecurityPatchLevel.IsSet()
}

// HasAndroidSecurityPatchLevel returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasAndroidSecurityPatchLevel() bool {
	if o != nil && o.AndroidSecurityPatchLevel.IsSet() {
		return true
	}

	return false
}

// SetAndroidSecurityPatchLevel gets a reference to the given NullableString and assigns it to the AndroidSecurityPatchLevel field.
func (o *MicrosoftGraphManagedDevice) SetAndroidSecurityPatchLevel(v string) {
	o.AndroidSecurityPatchLevel.Set(&v)
}
// SetAndroidSecurityPatchLevelNil sets the value for AndroidSecurityPatchLevel to be an explicit nil
func (o *MicrosoftGraphManagedDevice) SetAndroidSecurityPatchLevelNil() {
	o.AndroidSecurityPatchLevel.Set(nil)
}

// UnsetAndroidSecurityPatchLevel ensures that no value is present for AndroidSecurityPatchLevel, not even an explicit nil
func (o *MicrosoftGraphManagedDevice) UnsetAndroidSecurityPatchLevel() {
	o.AndroidSecurityPatchLevel.Unset()
}

// GetAzureADDeviceId returns the AzureADDeviceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetAzureADDeviceId() string {
	if o == nil || o.AzureADDeviceId.Get() == nil {
		var ret string
		return ret
	}
	return *o.AzureADDeviceId.Get()
}

// GetAzureADDeviceIdOk returns a tuple with the AzureADDeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetAzureADDeviceIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AzureADDeviceId.Get(), o.AzureADDeviceId.IsSet()
}

// HasAzureADDeviceId returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasAzureADDeviceId() bool {
	if o != nil && o.AzureADDeviceId.IsSet() {
		return true
	}

	return false
}

// SetAzureADDeviceId gets a reference to the given NullableString and assigns it to the AzureADDeviceId field.
func (o *MicrosoftGraphManagedDevice) SetAzureADDeviceId(v string) {
	o.AzureADDeviceId.Set(&v)
}
// SetAzureADDeviceIdNil sets the value for AzureADDeviceId to be an explicit nil
func (o *MicrosoftGraphManagedDevice) SetAzureADDeviceIdNil() {
	o.AzureADDeviceId.Set(nil)
}

// UnsetAzureADDeviceId ensures that no value is present for AzureADDeviceId, not even an explicit nil
func (o *MicrosoftGraphManagedDevice) UnsetAzureADDeviceId() {
	o.AzureADDeviceId.Unset()
}

// GetAzureADRegistered returns the AzureADRegistered field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetAzureADRegistered() bool {
	if o == nil || o.AzureADRegistered.Get() == nil {
		var ret bool
		return ret
	}
	return *o.AzureADRegistered.Get()
}

// GetAzureADRegisteredOk returns a tuple with the AzureADRegistered field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetAzureADRegisteredOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AzureADRegistered.Get(), o.AzureADRegistered.IsSet()
}

// HasAzureADRegistered returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasAzureADRegistered() bool {
	if o != nil && o.AzureADRegistered.IsSet() {
		return true
	}

	return false
}

// SetAzureADRegistered gets a reference to the given NullableBool and assigns it to the AzureADRegistered field.
func (o *MicrosoftGraphManagedDevice) SetAzureADRegistered(v bool) {
	o.AzureADRegistered.Set(&v)
}
// SetAzureADRegisteredNil sets the value for AzureADRegistered to be an explicit nil
func (o *MicrosoftGraphManagedDevice) SetAzureADRegisteredNil() {
	o.AzureADRegistered.Set(nil)
}

// UnsetAzureADRegistered ensures that no value is present for AzureADRegistered, not even an explicit nil
func (o *MicrosoftGraphManagedDevice) UnsetAzureADRegistered() {
	o.AzureADRegistered.Unset()
}

// GetComplianceGracePeriodExpirationDateTime returns the ComplianceGracePeriodExpirationDateTime field value if set, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetComplianceGracePeriodExpirationDateTime() time.Time {
	if o == nil || o.ComplianceGracePeriodExpirationDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.ComplianceGracePeriodExpirationDateTime
}

// GetComplianceGracePeriodExpirationDateTimeOk returns a tuple with the ComplianceGracePeriodExpirationDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetComplianceGracePeriodExpirationDateTimeOk() (*time.Time, bool) {
	if o == nil || o.ComplianceGracePeriodExpirationDateTime == nil {
		return nil, false
	}
	return o.ComplianceGracePeriodExpirationDateTime, true
}

// HasComplianceGracePeriodExpirationDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasComplianceGracePeriodExpirationDateTime() bool {
	if o != nil && o.ComplianceGracePeriodExpirationDateTime != nil {
		return true
	}

	return false
}

// SetComplianceGracePeriodExpirationDateTime gets a reference to the given time.Time and assigns it to the ComplianceGracePeriodExpirationDateTime field.
func (o *MicrosoftGraphManagedDevice) SetComplianceGracePeriodExpirationDateTime(v time.Time) {
	o.ComplianceGracePeriodExpirationDateTime = &v
}

// GetComplianceState returns the ComplianceState field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetComplianceState() AnyOfmicrosoftGraphComplianceState {
	if o == nil  {
		var ret AnyOfmicrosoftGraphComplianceState
		return ret
	}
	return o.ComplianceState
}

// GetComplianceStateOk returns a tuple with the ComplianceState field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetComplianceStateOk() (*AnyOfmicrosoftGraphComplianceState, bool) {
	if o == nil || o.ComplianceState == nil {
		return nil, false
	}
	return &o.ComplianceState, true
}

// HasComplianceState returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasComplianceState() bool {
	if o != nil && o.ComplianceState != nil {
		return true
	}

	return false
}

// SetComplianceState gets a reference to the given AnyOfmicrosoftGraphComplianceState and assigns it to the ComplianceState field.
func (o *MicrosoftGraphManagedDevice) SetComplianceState(v AnyOfmicrosoftGraphComplianceState) {
	o.ComplianceState = v
}

// GetConfigurationManagerClientEnabledFeatures returns the ConfigurationManagerClientEnabledFeatures field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetConfigurationManagerClientEnabledFeatures() AnyOfmicrosoftGraphConfigurationManagerClientEnabledFeatures {
	if o == nil  {
		var ret AnyOfmicrosoftGraphConfigurationManagerClientEnabledFeatures
		return ret
	}
	return o.ConfigurationManagerClientEnabledFeatures
}

// GetConfigurationManagerClientEnabledFeaturesOk returns a tuple with the ConfigurationManagerClientEnabledFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetConfigurationManagerClientEnabledFeaturesOk() (*AnyOfmicrosoftGraphConfigurationManagerClientEnabledFeatures, bool) {
	if o == nil || o.ConfigurationManagerClientEnabledFeatures == nil {
		return nil, false
	}
	return &o.ConfigurationManagerClientEnabledFeatures, true
}

// HasConfigurationManagerClientEnabledFeatures returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasConfigurationManagerClientEnabledFeatures() bool {
	if o != nil && o.ConfigurationManagerClientEnabledFeatures != nil {
		return true
	}

	return false
}

// SetConfigurationManagerClientEnabledFeatures gets a reference to the given AnyOfmicrosoftGraphConfigurationManagerClientEnabledFeatures and assigns it to the ConfigurationManagerClientEnabledFeatures field.
func (o *MicrosoftGraphManagedDevice) SetConfigurationManagerClientEnabledFeatures(v AnyOfmicrosoftGraphConfigurationManagerClientEnabledFeatures) {
	o.ConfigurationManagerClientEnabledFeatures = v
}

// GetDeviceActionResults returns the DeviceActionResults field value if set, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetDeviceActionResults() []*AnyOfmicrosoftGraphDeviceActionResult {
	if o == nil || o.DeviceActionResults == nil {
		var ret []*AnyOfmicrosoftGraphDeviceActionResult
		return ret
	}
	return *o.DeviceActionResults
}

// GetDeviceActionResultsOk returns a tuple with the DeviceActionResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetDeviceActionResultsOk() (*[]*AnyOfmicrosoftGraphDeviceActionResult, bool) {
	if o == nil || o.DeviceActionResults == nil {
		return nil, false
	}
	return o.DeviceActionResults, true
}

// HasDeviceActionResults returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasDeviceActionResults() bool {
	if o != nil && o.DeviceActionResults != nil {
		return true
	}

	return false
}

// SetDeviceActionResults gets a reference to the given []*AnyOfmicrosoftGraphDeviceActionResult and assigns it to the DeviceActionResults field.
func (o *MicrosoftGraphManagedDevice) SetDeviceActionResults(v []*AnyOfmicrosoftGraphDeviceActionResult) {
	o.DeviceActionResults = &v
}

// GetDeviceCategoryDisplayName returns the DeviceCategoryDisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetDeviceCategoryDisplayName() string {
	if o == nil || o.DeviceCategoryDisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DeviceCategoryDisplayName.Get()
}

// GetDeviceCategoryDisplayNameOk returns a tuple with the DeviceCategoryDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetDeviceCategoryDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DeviceCategoryDisplayName.Get(), o.DeviceCategoryDisplayName.IsSet()
}

// HasDeviceCategoryDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasDeviceCategoryDisplayName() bool {
	if o != nil && o.DeviceCategoryDisplayName.IsSet() {
		return true
	}

	return false
}

// SetDeviceCategoryDisplayName gets a reference to the given NullableString and assigns it to the DeviceCategoryDisplayName field.
func (o *MicrosoftGraphManagedDevice) SetDeviceCategoryDisplayName(v string) {
	o.DeviceCategoryDisplayName.Set(&v)
}
// SetDeviceCategoryDisplayNameNil sets the value for DeviceCategoryDisplayName to be an explicit nil
func (o *MicrosoftGraphManagedDevice) SetDeviceCategoryDisplayNameNil() {
	o.DeviceCategoryDisplayName.Set(nil)
}

// UnsetDeviceCategoryDisplayName ensures that no value is present for DeviceCategoryDisplayName, not even an explicit nil
func (o *MicrosoftGraphManagedDevice) UnsetDeviceCategoryDisplayName() {
	o.DeviceCategoryDisplayName.Unset()
}

// GetDeviceEnrollmentType returns the DeviceEnrollmentType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetDeviceEnrollmentType() AnyOfmicrosoftGraphDeviceEnrollmentType {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDeviceEnrollmentType
		return ret
	}
	return o.DeviceEnrollmentType
}

// GetDeviceEnrollmentTypeOk returns a tuple with the DeviceEnrollmentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetDeviceEnrollmentTypeOk() (*AnyOfmicrosoftGraphDeviceEnrollmentType, bool) {
	if o == nil || o.DeviceEnrollmentType == nil {
		return nil, false
	}
	return &o.DeviceEnrollmentType, true
}

// HasDeviceEnrollmentType returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasDeviceEnrollmentType() bool {
	if o != nil && o.DeviceEnrollmentType != nil {
		return true
	}

	return false
}

// SetDeviceEnrollmentType gets a reference to the given AnyOfmicrosoftGraphDeviceEnrollmentType and assigns it to the DeviceEnrollmentType field.
func (o *MicrosoftGraphManagedDevice) SetDeviceEnrollmentType(v AnyOfmicrosoftGraphDeviceEnrollmentType) {
	o.DeviceEnrollmentType = v
}

// GetDeviceHealthAttestationState returns the DeviceHealthAttestationState field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetDeviceHealthAttestationState() AnyOfmicrosoftGraphDeviceHealthAttestationState {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDeviceHealthAttestationState
		return ret
	}
	return o.DeviceHealthAttestationState
}

// GetDeviceHealthAttestationStateOk returns a tuple with the DeviceHealthAttestationState field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetDeviceHealthAttestationStateOk() (*AnyOfmicrosoftGraphDeviceHealthAttestationState, bool) {
	if o == nil || o.DeviceHealthAttestationState == nil {
		return nil, false
	}
	return &o.DeviceHealthAttestationState, true
}

// HasDeviceHealthAttestationState returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasDeviceHealthAttestationState() bool {
	if o != nil && o.DeviceHealthAttestationState != nil {
		return true
	}

	return false
}

// SetDeviceHealthAttestationState gets a reference to the given AnyOfmicrosoftGraphDeviceHealthAttestationState and assigns it to the DeviceHealthAttestationState field.
func (o *MicrosoftGraphManagedDevice) SetDeviceHealthAttestationState(v AnyOfmicrosoftGraphDeviceHealthAttestationState) {
	o.DeviceHealthAttestationState = v
}

// GetDeviceName returns the DeviceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetDeviceName() string {
	if o == nil || o.DeviceName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DeviceName.Get()
}

// GetDeviceNameOk returns a tuple with the DeviceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetDeviceNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DeviceName.Get(), o.DeviceName.IsSet()
}

// HasDeviceName returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasDeviceName() bool {
	if o != nil && o.DeviceName.IsSet() {
		return true
	}

	return false
}

// SetDeviceName gets a reference to the given NullableString and assigns it to the DeviceName field.
func (o *MicrosoftGraphManagedDevice) SetDeviceName(v string) {
	o.DeviceName.Set(&v)
}
// SetDeviceNameNil sets the value for DeviceName to be an explicit nil
func (o *MicrosoftGraphManagedDevice) SetDeviceNameNil() {
	o.DeviceName.Set(nil)
}

// UnsetDeviceName ensures that no value is present for DeviceName, not even an explicit nil
func (o *MicrosoftGraphManagedDevice) UnsetDeviceName() {
	o.DeviceName.Unset()
}

// GetDeviceRegistrationState returns the DeviceRegistrationState field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetDeviceRegistrationState() AnyOfmicrosoftGraphDeviceRegistrationState {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDeviceRegistrationState
		return ret
	}
	return o.DeviceRegistrationState
}

// GetDeviceRegistrationStateOk returns a tuple with the DeviceRegistrationState field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetDeviceRegistrationStateOk() (*AnyOfmicrosoftGraphDeviceRegistrationState, bool) {
	if o == nil || o.DeviceRegistrationState == nil {
		return nil, false
	}
	return &o.DeviceRegistrationState, true
}

// HasDeviceRegistrationState returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasDeviceRegistrationState() bool {
	if o != nil && o.DeviceRegistrationState != nil {
		return true
	}

	return false
}

// SetDeviceRegistrationState gets a reference to the given AnyOfmicrosoftGraphDeviceRegistrationState and assigns it to the DeviceRegistrationState field.
func (o *MicrosoftGraphManagedDevice) SetDeviceRegistrationState(v AnyOfmicrosoftGraphDeviceRegistrationState) {
	o.DeviceRegistrationState = v
}

// GetEasActivated returns the EasActivated field value if set, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetEasActivated() bool {
	if o == nil || o.EasActivated == nil {
		var ret bool
		return ret
	}
	return *o.EasActivated
}

// GetEasActivatedOk returns a tuple with the EasActivated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetEasActivatedOk() (*bool, bool) {
	if o == nil || o.EasActivated == nil {
		return nil, false
	}
	return o.EasActivated, true
}

// HasEasActivated returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasEasActivated() bool {
	if o != nil && o.EasActivated != nil {
		return true
	}

	return false
}

// SetEasActivated gets a reference to the given bool and assigns it to the EasActivated field.
func (o *MicrosoftGraphManagedDevice) SetEasActivated(v bool) {
	o.EasActivated = &v
}

// GetEasActivationDateTime returns the EasActivationDateTime field value if set, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetEasActivationDateTime() time.Time {
	if o == nil || o.EasActivationDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.EasActivationDateTime
}

// GetEasActivationDateTimeOk returns a tuple with the EasActivationDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetEasActivationDateTimeOk() (*time.Time, bool) {
	if o == nil || o.EasActivationDateTime == nil {
		return nil, false
	}
	return o.EasActivationDateTime, true
}

// HasEasActivationDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasEasActivationDateTime() bool {
	if o != nil && o.EasActivationDateTime != nil {
		return true
	}

	return false
}

// SetEasActivationDateTime gets a reference to the given time.Time and assigns it to the EasActivationDateTime field.
func (o *MicrosoftGraphManagedDevice) SetEasActivationDateTime(v time.Time) {
	o.EasActivationDateTime = &v
}

// GetEasDeviceId returns the EasDeviceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetEasDeviceId() string {
	if o == nil || o.EasDeviceId.Get() == nil {
		var ret string
		return ret
	}
	return *o.EasDeviceId.Get()
}

// GetEasDeviceIdOk returns a tuple with the EasDeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetEasDeviceIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EasDeviceId.Get(), o.EasDeviceId.IsSet()
}

// HasEasDeviceId returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasEasDeviceId() bool {
	if o != nil && o.EasDeviceId.IsSet() {
		return true
	}

	return false
}

// SetEasDeviceId gets a reference to the given NullableString and assigns it to the EasDeviceId field.
func (o *MicrosoftGraphManagedDevice) SetEasDeviceId(v string) {
	o.EasDeviceId.Set(&v)
}
// SetEasDeviceIdNil sets the value for EasDeviceId to be an explicit nil
func (o *MicrosoftGraphManagedDevice) SetEasDeviceIdNil() {
	o.EasDeviceId.Set(nil)
}

// UnsetEasDeviceId ensures that no value is present for EasDeviceId, not even an explicit nil
func (o *MicrosoftGraphManagedDevice) UnsetEasDeviceId() {
	o.EasDeviceId.Unset()
}

// GetEmailAddress returns the EmailAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetEmailAddress() string {
	if o == nil || o.EmailAddress.Get() == nil {
		var ret string
		return ret
	}
	return *o.EmailAddress.Get()
}

// GetEmailAddressOk returns a tuple with the EmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetEmailAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EmailAddress.Get(), o.EmailAddress.IsSet()
}

// HasEmailAddress returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasEmailAddress() bool {
	if o != nil && o.EmailAddress.IsSet() {
		return true
	}

	return false
}

// SetEmailAddress gets a reference to the given NullableString and assigns it to the EmailAddress field.
func (o *MicrosoftGraphManagedDevice) SetEmailAddress(v string) {
	o.EmailAddress.Set(&v)
}
// SetEmailAddressNil sets the value for EmailAddress to be an explicit nil
func (o *MicrosoftGraphManagedDevice) SetEmailAddressNil() {
	o.EmailAddress.Set(nil)
}

// UnsetEmailAddress ensures that no value is present for EmailAddress, not even an explicit nil
func (o *MicrosoftGraphManagedDevice) UnsetEmailAddress() {
	o.EmailAddress.Unset()
}

// GetEnrolledDateTime returns the EnrolledDateTime field value if set, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetEnrolledDateTime() time.Time {
	if o == nil || o.EnrolledDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.EnrolledDateTime
}

// GetEnrolledDateTimeOk returns a tuple with the EnrolledDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetEnrolledDateTimeOk() (*time.Time, bool) {
	if o == nil || o.EnrolledDateTime == nil {
		return nil, false
	}
	return o.EnrolledDateTime, true
}

// HasEnrolledDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasEnrolledDateTime() bool {
	if o != nil && o.EnrolledDateTime != nil {
		return true
	}

	return false
}

// SetEnrolledDateTime gets a reference to the given time.Time and assigns it to the EnrolledDateTime field.
func (o *MicrosoftGraphManagedDevice) SetEnrolledDateTime(v time.Time) {
	o.EnrolledDateTime = &v
}

// GetEthernetMacAddress returns the EthernetMacAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetEthernetMacAddress() string {
	if o == nil || o.EthernetMacAddress.Get() == nil {
		var ret string
		return ret
	}
	return *o.EthernetMacAddress.Get()
}

// GetEthernetMacAddressOk returns a tuple with the EthernetMacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetEthernetMacAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EthernetMacAddress.Get(), o.EthernetMacAddress.IsSet()
}

// HasEthernetMacAddress returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasEthernetMacAddress() bool {
	if o != nil && o.EthernetMacAddress.IsSet() {
		return true
	}

	return false
}

// SetEthernetMacAddress gets a reference to the given NullableString and assigns it to the EthernetMacAddress field.
func (o *MicrosoftGraphManagedDevice) SetEthernetMacAddress(v string) {
	o.EthernetMacAddress.Set(&v)
}
// SetEthernetMacAddressNil sets the value for EthernetMacAddress to be an explicit nil
func (o *MicrosoftGraphManagedDevice) SetEthernetMacAddressNil() {
	o.EthernetMacAddress.Set(nil)
}

// UnsetEthernetMacAddress ensures that no value is present for EthernetMacAddress, not even an explicit nil
func (o *MicrosoftGraphManagedDevice) UnsetEthernetMacAddress() {
	o.EthernetMacAddress.Unset()
}

// GetExchangeAccessState returns the ExchangeAccessState field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetExchangeAccessState() AnyOfmicrosoftGraphDeviceManagementExchangeAccessState {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDeviceManagementExchangeAccessState
		return ret
	}
	return o.ExchangeAccessState
}

// GetExchangeAccessStateOk returns a tuple with the ExchangeAccessState field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetExchangeAccessStateOk() (*AnyOfmicrosoftGraphDeviceManagementExchangeAccessState, bool) {
	if o == nil || o.ExchangeAccessState == nil {
		return nil, false
	}
	return &o.ExchangeAccessState, true
}

// HasExchangeAccessState returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasExchangeAccessState() bool {
	if o != nil && o.ExchangeAccessState != nil {
		return true
	}

	return false
}

// SetExchangeAccessState gets a reference to the given AnyOfmicrosoftGraphDeviceManagementExchangeAccessState and assigns it to the ExchangeAccessState field.
func (o *MicrosoftGraphManagedDevice) SetExchangeAccessState(v AnyOfmicrosoftGraphDeviceManagementExchangeAccessState) {
	o.ExchangeAccessState = v
}

// GetExchangeAccessStateReason returns the ExchangeAccessStateReason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetExchangeAccessStateReason() AnyOfmicrosoftGraphDeviceManagementExchangeAccessStateReason {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDeviceManagementExchangeAccessStateReason
		return ret
	}
	return o.ExchangeAccessStateReason
}

// GetExchangeAccessStateReasonOk returns a tuple with the ExchangeAccessStateReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetExchangeAccessStateReasonOk() (*AnyOfmicrosoftGraphDeviceManagementExchangeAccessStateReason, bool) {
	if o == nil || o.ExchangeAccessStateReason == nil {
		return nil, false
	}
	return &o.ExchangeAccessStateReason, true
}

// HasExchangeAccessStateReason returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasExchangeAccessStateReason() bool {
	if o != nil && o.ExchangeAccessStateReason != nil {
		return true
	}

	return false
}

// SetExchangeAccessStateReason gets a reference to the given AnyOfmicrosoftGraphDeviceManagementExchangeAccessStateReason and assigns it to the ExchangeAccessStateReason field.
func (o *MicrosoftGraphManagedDevice) SetExchangeAccessStateReason(v AnyOfmicrosoftGraphDeviceManagementExchangeAccessStateReason) {
	o.ExchangeAccessStateReason = v
}

// GetExchangeLastSuccessfulSyncDateTime returns the ExchangeLastSuccessfulSyncDateTime field value if set, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetExchangeLastSuccessfulSyncDateTime() time.Time {
	if o == nil || o.ExchangeLastSuccessfulSyncDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.ExchangeLastSuccessfulSyncDateTime
}

// GetExchangeLastSuccessfulSyncDateTimeOk returns a tuple with the ExchangeLastSuccessfulSyncDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetExchangeLastSuccessfulSyncDateTimeOk() (*time.Time, bool) {
	if o == nil || o.ExchangeLastSuccessfulSyncDateTime == nil {
		return nil, false
	}
	return o.ExchangeLastSuccessfulSyncDateTime, true
}

// HasExchangeLastSuccessfulSyncDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasExchangeLastSuccessfulSyncDateTime() bool {
	if o != nil && o.ExchangeLastSuccessfulSyncDateTime != nil {
		return true
	}

	return false
}

// SetExchangeLastSuccessfulSyncDateTime gets a reference to the given time.Time and assigns it to the ExchangeLastSuccessfulSyncDateTime field.
func (o *MicrosoftGraphManagedDevice) SetExchangeLastSuccessfulSyncDateTime(v time.Time) {
	o.ExchangeLastSuccessfulSyncDateTime = &v
}

// GetFreeStorageSpaceInBytes returns the FreeStorageSpaceInBytes field value if set, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetFreeStorageSpaceInBytes() int64 {
	if o == nil || o.FreeStorageSpaceInBytes == nil {
		var ret int64
		return ret
	}
	return *o.FreeStorageSpaceInBytes
}

// GetFreeStorageSpaceInBytesOk returns a tuple with the FreeStorageSpaceInBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetFreeStorageSpaceInBytesOk() (*int64, bool) {
	if o == nil || o.FreeStorageSpaceInBytes == nil {
		return nil, false
	}
	return o.FreeStorageSpaceInBytes, true
}

// HasFreeStorageSpaceInBytes returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasFreeStorageSpaceInBytes() bool {
	if o != nil && o.FreeStorageSpaceInBytes != nil {
		return true
	}

	return false
}

// SetFreeStorageSpaceInBytes gets a reference to the given int64 and assigns it to the FreeStorageSpaceInBytes field.
func (o *MicrosoftGraphManagedDevice) SetFreeStorageSpaceInBytes(v int64) {
	o.FreeStorageSpaceInBytes = &v
}

// GetIccid returns the Iccid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetIccid() string {
	if o == nil || o.Iccid.Get() == nil {
		var ret string
		return ret
	}
	return *o.Iccid.Get()
}

// GetIccidOk returns a tuple with the Iccid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetIccidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Iccid.Get(), o.Iccid.IsSet()
}

// HasIccid returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasIccid() bool {
	if o != nil && o.Iccid.IsSet() {
		return true
	}

	return false
}

// SetIccid gets a reference to the given NullableString and assigns it to the Iccid field.
func (o *MicrosoftGraphManagedDevice) SetIccid(v string) {
	o.Iccid.Set(&v)
}
// SetIccidNil sets the value for Iccid to be an explicit nil
func (o *MicrosoftGraphManagedDevice) SetIccidNil() {
	o.Iccid.Set(nil)
}

// UnsetIccid ensures that no value is present for Iccid, not even an explicit nil
func (o *MicrosoftGraphManagedDevice) UnsetIccid() {
	o.Iccid.Unset()
}

// GetImei returns the Imei field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetImei() string {
	if o == nil || o.Imei.Get() == nil {
		var ret string
		return ret
	}
	return *o.Imei.Get()
}

// GetImeiOk returns a tuple with the Imei field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetImeiOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Imei.Get(), o.Imei.IsSet()
}

// HasImei returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasImei() bool {
	if o != nil && o.Imei.IsSet() {
		return true
	}

	return false
}

// SetImei gets a reference to the given NullableString and assigns it to the Imei field.
func (o *MicrosoftGraphManagedDevice) SetImei(v string) {
	o.Imei.Set(&v)
}
// SetImeiNil sets the value for Imei to be an explicit nil
func (o *MicrosoftGraphManagedDevice) SetImeiNil() {
	o.Imei.Set(nil)
}

// UnsetImei ensures that no value is present for Imei, not even an explicit nil
func (o *MicrosoftGraphManagedDevice) UnsetImei() {
	o.Imei.Unset()
}

// GetIsEncrypted returns the IsEncrypted field value if set, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetIsEncrypted() bool {
	if o == nil || o.IsEncrypted == nil {
		var ret bool
		return ret
	}
	return *o.IsEncrypted
}

// GetIsEncryptedOk returns a tuple with the IsEncrypted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetIsEncryptedOk() (*bool, bool) {
	if o == nil || o.IsEncrypted == nil {
		return nil, false
	}
	return o.IsEncrypted, true
}

// HasIsEncrypted returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasIsEncrypted() bool {
	if o != nil && o.IsEncrypted != nil {
		return true
	}

	return false
}

// SetIsEncrypted gets a reference to the given bool and assigns it to the IsEncrypted field.
func (o *MicrosoftGraphManagedDevice) SetIsEncrypted(v bool) {
	o.IsEncrypted = &v
}

// GetIsSupervised returns the IsSupervised field value if set, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetIsSupervised() bool {
	if o == nil || o.IsSupervised == nil {
		var ret bool
		return ret
	}
	return *o.IsSupervised
}

// GetIsSupervisedOk returns a tuple with the IsSupervised field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetIsSupervisedOk() (*bool, bool) {
	if o == nil || o.IsSupervised == nil {
		return nil, false
	}
	return o.IsSupervised, true
}

// HasIsSupervised returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasIsSupervised() bool {
	if o != nil && o.IsSupervised != nil {
		return true
	}

	return false
}

// SetIsSupervised gets a reference to the given bool and assigns it to the IsSupervised field.
func (o *MicrosoftGraphManagedDevice) SetIsSupervised(v bool) {
	o.IsSupervised = &v
}

// GetJailBroken returns the JailBroken field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetJailBroken() string {
	if o == nil || o.JailBroken.Get() == nil {
		var ret string
		return ret
	}
	return *o.JailBroken.Get()
}

// GetJailBrokenOk returns a tuple with the JailBroken field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetJailBrokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.JailBroken.Get(), o.JailBroken.IsSet()
}

// HasJailBroken returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasJailBroken() bool {
	if o != nil && o.JailBroken.IsSet() {
		return true
	}

	return false
}

// SetJailBroken gets a reference to the given NullableString and assigns it to the JailBroken field.
func (o *MicrosoftGraphManagedDevice) SetJailBroken(v string) {
	o.JailBroken.Set(&v)
}
// SetJailBrokenNil sets the value for JailBroken to be an explicit nil
func (o *MicrosoftGraphManagedDevice) SetJailBrokenNil() {
	o.JailBroken.Set(nil)
}

// UnsetJailBroken ensures that no value is present for JailBroken, not even an explicit nil
func (o *MicrosoftGraphManagedDevice) UnsetJailBroken() {
	o.JailBroken.Unset()
}

// GetLastSyncDateTime returns the LastSyncDateTime field value if set, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetLastSyncDateTime() time.Time {
	if o == nil || o.LastSyncDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastSyncDateTime
}

// GetLastSyncDateTimeOk returns a tuple with the LastSyncDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetLastSyncDateTimeOk() (*time.Time, bool) {
	if o == nil || o.LastSyncDateTime == nil {
		return nil, false
	}
	return o.LastSyncDateTime, true
}

// HasLastSyncDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasLastSyncDateTime() bool {
	if o != nil && o.LastSyncDateTime != nil {
		return true
	}

	return false
}

// SetLastSyncDateTime gets a reference to the given time.Time and assigns it to the LastSyncDateTime field.
func (o *MicrosoftGraphManagedDevice) SetLastSyncDateTime(v time.Time) {
	o.LastSyncDateTime = &v
}

// GetManagedDeviceName returns the ManagedDeviceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetManagedDeviceName() string {
	if o == nil || o.ManagedDeviceName.Get() == nil {
		var ret string
		return ret
	}
	return *o.ManagedDeviceName.Get()
}

// GetManagedDeviceNameOk returns a tuple with the ManagedDeviceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetManagedDeviceNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ManagedDeviceName.Get(), o.ManagedDeviceName.IsSet()
}

// HasManagedDeviceName returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasManagedDeviceName() bool {
	if o != nil && o.ManagedDeviceName.IsSet() {
		return true
	}

	return false
}

// SetManagedDeviceName gets a reference to the given NullableString and assigns it to the ManagedDeviceName field.
func (o *MicrosoftGraphManagedDevice) SetManagedDeviceName(v string) {
	o.ManagedDeviceName.Set(&v)
}
// SetManagedDeviceNameNil sets the value for ManagedDeviceName to be an explicit nil
func (o *MicrosoftGraphManagedDevice) SetManagedDeviceNameNil() {
	o.ManagedDeviceName.Set(nil)
}

// UnsetManagedDeviceName ensures that no value is present for ManagedDeviceName, not even an explicit nil
func (o *MicrosoftGraphManagedDevice) UnsetManagedDeviceName() {
	o.ManagedDeviceName.Unset()
}

// GetManagedDeviceOwnerType returns the ManagedDeviceOwnerType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetManagedDeviceOwnerType() AnyOfmicrosoftGraphManagedDeviceOwnerType {
	if o == nil  {
		var ret AnyOfmicrosoftGraphManagedDeviceOwnerType
		return ret
	}
	return o.ManagedDeviceOwnerType
}

// GetManagedDeviceOwnerTypeOk returns a tuple with the ManagedDeviceOwnerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetManagedDeviceOwnerTypeOk() (*AnyOfmicrosoftGraphManagedDeviceOwnerType, bool) {
	if o == nil || o.ManagedDeviceOwnerType == nil {
		return nil, false
	}
	return &o.ManagedDeviceOwnerType, true
}

// HasManagedDeviceOwnerType returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasManagedDeviceOwnerType() bool {
	if o != nil && o.ManagedDeviceOwnerType != nil {
		return true
	}

	return false
}

// SetManagedDeviceOwnerType gets a reference to the given AnyOfmicrosoftGraphManagedDeviceOwnerType and assigns it to the ManagedDeviceOwnerType field.
func (o *MicrosoftGraphManagedDevice) SetManagedDeviceOwnerType(v AnyOfmicrosoftGraphManagedDeviceOwnerType) {
	o.ManagedDeviceOwnerType = v
}

// GetManagementAgent returns the ManagementAgent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetManagementAgent() AnyOfmicrosoftGraphManagementAgentType {
	if o == nil  {
		var ret AnyOfmicrosoftGraphManagementAgentType
		return ret
	}
	return o.ManagementAgent
}

// GetManagementAgentOk returns a tuple with the ManagementAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetManagementAgentOk() (*AnyOfmicrosoftGraphManagementAgentType, bool) {
	if o == nil || o.ManagementAgent == nil {
		return nil, false
	}
	return &o.ManagementAgent, true
}

// HasManagementAgent returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasManagementAgent() bool {
	if o != nil && o.ManagementAgent != nil {
		return true
	}

	return false
}

// SetManagementAgent gets a reference to the given AnyOfmicrosoftGraphManagementAgentType and assigns it to the ManagementAgent field.
func (o *MicrosoftGraphManagedDevice) SetManagementAgent(v AnyOfmicrosoftGraphManagementAgentType) {
	o.ManagementAgent = v
}

// GetManufacturer returns the Manufacturer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetManufacturer() string {
	if o == nil || o.Manufacturer.Get() == nil {
		var ret string
		return ret
	}
	return *o.Manufacturer.Get()
}

// GetManufacturerOk returns a tuple with the Manufacturer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetManufacturerOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Manufacturer.Get(), o.Manufacturer.IsSet()
}

// HasManufacturer returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasManufacturer() bool {
	if o != nil && o.Manufacturer.IsSet() {
		return true
	}

	return false
}

// SetManufacturer gets a reference to the given NullableString and assigns it to the Manufacturer field.
func (o *MicrosoftGraphManagedDevice) SetManufacturer(v string) {
	o.Manufacturer.Set(&v)
}
// SetManufacturerNil sets the value for Manufacturer to be an explicit nil
func (o *MicrosoftGraphManagedDevice) SetManufacturerNil() {
	o.Manufacturer.Set(nil)
}

// UnsetManufacturer ensures that no value is present for Manufacturer, not even an explicit nil
func (o *MicrosoftGraphManagedDevice) UnsetManufacturer() {
	o.Manufacturer.Unset()
}

// GetMeid returns the Meid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetMeid() string {
	if o == nil || o.Meid.Get() == nil {
		var ret string
		return ret
	}
	return *o.Meid.Get()
}

// GetMeidOk returns a tuple with the Meid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetMeidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Meid.Get(), o.Meid.IsSet()
}

// HasMeid returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasMeid() bool {
	if o != nil && o.Meid.IsSet() {
		return true
	}

	return false
}

// SetMeid gets a reference to the given NullableString and assigns it to the Meid field.
func (o *MicrosoftGraphManagedDevice) SetMeid(v string) {
	o.Meid.Set(&v)
}
// SetMeidNil sets the value for Meid to be an explicit nil
func (o *MicrosoftGraphManagedDevice) SetMeidNil() {
	o.Meid.Set(nil)
}

// UnsetMeid ensures that no value is present for Meid, not even an explicit nil
func (o *MicrosoftGraphManagedDevice) UnsetMeid() {
	o.Meid.Unset()
}

// GetModel returns the Model field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetModel() string {
	if o == nil || o.Model.Get() == nil {
		var ret string
		return ret
	}
	return *o.Model.Get()
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetModelOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Model.Get(), o.Model.IsSet()
}

// HasModel returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasModel() bool {
	if o != nil && o.Model.IsSet() {
		return true
	}

	return false
}

// SetModel gets a reference to the given NullableString and assigns it to the Model field.
func (o *MicrosoftGraphManagedDevice) SetModel(v string) {
	o.Model.Set(&v)
}
// SetModelNil sets the value for Model to be an explicit nil
func (o *MicrosoftGraphManagedDevice) SetModelNil() {
	o.Model.Set(nil)
}

// UnsetModel ensures that no value is present for Model, not even an explicit nil
func (o *MicrosoftGraphManagedDevice) UnsetModel() {
	o.Model.Unset()
}

// GetNotes returns the Notes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetNotes() string {
	if o == nil || o.Notes.Get() == nil {
		var ret string
		return ret
	}
	return *o.Notes.Get()
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetNotesOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Notes.Get(), o.Notes.IsSet()
}

// HasNotes returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasNotes() bool {
	if o != nil && o.Notes.IsSet() {
		return true
	}

	return false
}

// SetNotes gets a reference to the given NullableString and assigns it to the Notes field.
func (o *MicrosoftGraphManagedDevice) SetNotes(v string) {
	o.Notes.Set(&v)
}
// SetNotesNil sets the value for Notes to be an explicit nil
func (o *MicrosoftGraphManagedDevice) SetNotesNil() {
	o.Notes.Set(nil)
}

// UnsetNotes ensures that no value is present for Notes, not even an explicit nil
func (o *MicrosoftGraphManagedDevice) UnsetNotes() {
	o.Notes.Unset()
}

// GetOperatingSystem returns the OperatingSystem field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetOperatingSystem() string {
	if o == nil || o.OperatingSystem.Get() == nil {
		var ret string
		return ret
	}
	return *o.OperatingSystem.Get()
}

// GetOperatingSystemOk returns a tuple with the OperatingSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetOperatingSystemOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OperatingSystem.Get(), o.OperatingSystem.IsSet()
}

// HasOperatingSystem returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasOperatingSystem() bool {
	if o != nil && o.OperatingSystem.IsSet() {
		return true
	}

	return false
}

// SetOperatingSystem gets a reference to the given NullableString and assigns it to the OperatingSystem field.
func (o *MicrosoftGraphManagedDevice) SetOperatingSystem(v string) {
	o.OperatingSystem.Set(&v)
}
// SetOperatingSystemNil sets the value for OperatingSystem to be an explicit nil
func (o *MicrosoftGraphManagedDevice) SetOperatingSystemNil() {
	o.OperatingSystem.Set(nil)
}

// UnsetOperatingSystem ensures that no value is present for OperatingSystem, not even an explicit nil
func (o *MicrosoftGraphManagedDevice) UnsetOperatingSystem() {
	o.OperatingSystem.Unset()
}

// GetOsVersion returns the OsVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetOsVersion() string {
	if o == nil || o.OsVersion.Get() == nil {
		var ret string
		return ret
	}
	return *o.OsVersion.Get()
}

// GetOsVersionOk returns a tuple with the OsVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetOsVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OsVersion.Get(), o.OsVersion.IsSet()
}

// HasOsVersion returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasOsVersion() bool {
	if o != nil && o.OsVersion.IsSet() {
		return true
	}

	return false
}

// SetOsVersion gets a reference to the given NullableString and assigns it to the OsVersion field.
func (o *MicrosoftGraphManagedDevice) SetOsVersion(v string) {
	o.OsVersion.Set(&v)
}
// SetOsVersionNil sets the value for OsVersion to be an explicit nil
func (o *MicrosoftGraphManagedDevice) SetOsVersionNil() {
	o.OsVersion.Set(nil)
}

// UnsetOsVersion ensures that no value is present for OsVersion, not even an explicit nil
func (o *MicrosoftGraphManagedDevice) UnsetOsVersion() {
	o.OsVersion.Unset()
}

// GetPartnerReportedThreatState returns the PartnerReportedThreatState field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetPartnerReportedThreatState() AnyOfmicrosoftGraphManagedDevicePartnerReportedHealthState {
	if o == nil  {
		var ret AnyOfmicrosoftGraphManagedDevicePartnerReportedHealthState
		return ret
	}
	return o.PartnerReportedThreatState
}

// GetPartnerReportedThreatStateOk returns a tuple with the PartnerReportedThreatState field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetPartnerReportedThreatStateOk() (*AnyOfmicrosoftGraphManagedDevicePartnerReportedHealthState, bool) {
	if o == nil || o.PartnerReportedThreatState == nil {
		return nil, false
	}
	return &o.PartnerReportedThreatState, true
}

// HasPartnerReportedThreatState returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasPartnerReportedThreatState() bool {
	if o != nil && o.PartnerReportedThreatState != nil {
		return true
	}

	return false
}

// SetPartnerReportedThreatState gets a reference to the given AnyOfmicrosoftGraphManagedDevicePartnerReportedHealthState and assigns it to the PartnerReportedThreatState field.
func (o *MicrosoftGraphManagedDevice) SetPartnerReportedThreatState(v AnyOfmicrosoftGraphManagedDevicePartnerReportedHealthState) {
	o.PartnerReportedThreatState = v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetPhoneNumber() string {
	if o == nil || o.PhoneNumber.Get() == nil {
		var ret string
		return ret
	}
	return *o.PhoneNumber.Get()
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetPhoneNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PhoneNumber.Get(), o.PhoneNumber.IsSet()
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasPhoneNumber() bool {
	if o != nil && o.PhoneNumber.IsSet() {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given NullableString and assigns it to the PhoneNumber field.
func (o *MicrosoftGraphManagedDevice) SetPhoneNumber(v string) {
	o.PhoneNumber.Set(&v)
}
// SetPhoneNumberNil sets the value for PhoneNumber to be an explicit nil
func (o *MicrosoftGraphManagedDevice) SetPhoneNumberNil() {
	o.PhoneNumber.Set(nil)
}

// UnsetPhoneNumber ensures that no value is present for PhoneNumber, not even an explicit nil
func (o *MicrosoftGraphManagedDevice) UnsetPhoneNumber() {
	o.PhoneNumber.Unset()
}

// GetPhysicalMemoryInBytes returns the PhysicalMemoryInBytes field value if set, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetPhysicalMemoryInBytes() int64 {
	if o == nil || o.PhysicalMemoryInBytes == nil {
		var ret int64
		return ret
	}
	return *o.PhysicalMemoryInBytes
}

// GetPhysicalMemoryInBytesOk returns a tuple with the PhysicalMemoryInBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetPhysicalMemoryInBytesOk() (*int64, bool) {
	if o == nil || o.PhysicalMemoryInBytes == nil {
		return nil, false
	}
	return o.PhysicalMemoryInBytes, true
}

// HasPhysicalMemoryInBytes returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasPhysicalMemoryInBytes() bool {
	if o != nil && o.PhysicalMemoryInBytes != nil {
		return true
	}

	return false
}

// SetPhysicalMemoryInBytes gets a reference to the given int64 and assigns it to the PhysicalMemoryInBytes field.
func (o *MicrosoftGraphManagedDevice) SetPhysicalMemoryInBytes(v int64) {
	o.PhysicalMemoryInBytes = &v
}

// GetRemoteAssistanceSessionErrorDetails returns the RemoteAssistanceSessionErrorDetails field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetRemoteAssistanceSessionErrorDetails() string {
	if o == nil || o.RemoteAssistanceSessionErrorDetails.Get() == nil {
		var ret string
		return ret
	}
	return *o.RemoteAssistanceSessionErrorDetails.Get()
}

// GetRemoteAssistanceSessionErrorDetailsOk returns a tuple with the RemoteAssistanceSessionErrorDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetRemoteAssistanceSessionErrorDetailsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RemoteAssistanceSessionErrorDetails.Get(), o.RemoteAssistanceSessionErrorDetails.IsSet()
}

// HasRemoteAssistanceSessionErrorDetails returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasRemoteAssistanceSessionErrorDetails() bool {
	if o != nil && o.RemoteAssistanceSessionErrorDetails.IsSet() {
		return true
	}

	return false
}

// SetRemoteAssistanceSessionErrorDetails gets a reference to the given NullableString and assigns it to the RemoteAssistanceSessionErrorDetails field.
func (o *MicrosoftGraphManagedDevice) SetRemoteAssistanceSessionErrorDetails(v string) {
	o.RemoteAssistanceSessionErrorDetails.Set(&v)
}
// SetRemoteAssistanceSessionErrorDetailsNil sets the value for RemoteAssistanceSessionErrorDetails to be an explicit nil
func (o *MicrosoftGraphManagedDevice) SetRemoteAssistanceSessionErrorDetailsNil() {
	o.RemoteAssistanceSessionErrorDetails.Set(nil)
}

// UnsetRemoteAssistanceSessionErrorDetails ensures that no value is present for RemoteAssistanceSessionErrorDetails, not even an explicit nil
func (o *MicrosoftGraphManagedDevice) UnsetRemoteAssistanceSessionErrorDetails() {
	o.RemoteAssistanceSessionErrorDetails.Unset()
}

// GetRemoteAssistanceSessionUrl returns the RemoteAssistanceSessionUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetRemoteAssistanceSessionUrl() string {
	if o == nil || o.RemoteAssistanceSessionUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.RemoteAssistanceSessionUrl.Get()
}

// GetRemoteAssistanceSessionUrlOk returns a tuple with the RemoteAssistanceSessionUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetRemoteAssistanceSessionUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RemoteAssistanceSessionUrl.Get(), o.RemoteAssistanceSessionUrl.IsSet()
}

// HasRemoteAssistanceSessionUrl returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasRemoteAssistanceSessionUrl() bool {
	if o != nil && o.RemoteAssistanceSessionUrl.IsSet() {
		return true
	}

	return false
}

// SetRemoteAssistanceSessionUrl gets a reference to the given NullableString and assigns it to the RemoteAssistanceSessionUrl field.
func (o *MicrosoftGraphManagedDevice) SetRemoteAssistanceSessionUrl(v string) {
	o.RemoteAssistanceSessionUrl.Set(&v)
}
// SetRemoteAssistanceSessionUrlNil sets the value for RemoteAssistanceSessionUrl to be an explicit nil
func (o *MicrosoftGraphManagedDevice) SetRemoteAssistanceSessionUrlNil() {
	o.RemoteAssistanceSessionUrl.Set(nil)
}

// UnsetRemoteAssistanceSessionUrl ensures that no value is present for RemoteAssistanceSessionUrl, not even an explicit nil
func (o *MicrosoftGraphManagedDevice) UnsetRemoteAssistanceSessionUrl() {
	o.RemoteAssistanceSessionUrl.Unset()
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetSerialNumber() string {
	if o == nil || o.SerialNumber.Get() == nil {
		var ret string
		return ret
	}
	return *o.SerialNumber.Get()
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetSerialNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SerialNumber.Get(), o.SerialNumber.IsSet()
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasSerialNumber() bool {
	if o != nil && o.SerialNumber.IsSet() {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given NullableString and assigns it to the SerialNumber field.
func (o *MicrosoftGraphManagedDevice) SetSerialNumber(v string) {
	o.SerialNumber.Set(&v)
}
// SetSerialNumberNil sets the value for SerialNumber to be an explicit nil
func (o *MicrosoftGraphManagedDevice) SetSerialNumberNil() {
	o.SerialNumber.Set(nil)
}

// UnsetSerialNumber ensures that no value is present for SerialNumber, not even an explicit nil
func (o *MicrosoftGraphManagedDevice) UnsetSerialNumber() {
	o.SerialNumber.Unset()
}

// GetSubscriberCarrier returns the SubscriberCarrier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetSubscriberCarrier() string {
	if o == nil || o.SubscriberCarrier.Get() == nil {
		var ret string
		return ret
	}
	return *o.SubscriberCarrier.Get()
}

// GetSubscriberCarrierOk returns a tuple with the SubscriberCarrier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetSubscriberCarrierOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SubscriberCarrier.Get(), o.SubscriberCarrier.IsSet()
}

// HasSubscriberCarrier returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasSubscriberCarrier() bool {
	if o != nil && o.SubscriberCarrier.IsSet() {
		return true
	}

	return false
}

// SetSubscriberCarrier gets a reference to the given NullableString and assigns it to the SubscriberCarrier field.
func (o *MicrosoftGraphManagedDevice) SetSubscriberCarrier(v string) {
	o.SubscriberCarrier.Set(&v)
}
// SetSubscriberCarrierNil sets the value for SubscriberCarrier to be an explicit nil
func (o *MicrosoftGraphManagedDevice) SetSubscriberCarrierNil() {
	o.SubscriberCarrier.Set(nil)
}

// UnsetSubscriberCarrier ensures that no value is present for SubscriberCarrier, not even an explicit nil
func (o *MicrosoftGraphManagedDevice) UnsetSubscriberCarrier() {
	o.SubscriberCarrier.Unset()
}

// GetTotalStorageSpaceInBytes returns the TotalStorageSpaceInBytes field value if set, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetTotalStorageSpaceInBytes() int64 {
	if o == nil || o.TotalStorageSpaceInBytes == nil {
		var ret int64
		return ret
	}
	return *o.TotalStorageSpaceInBytes
}

// GetTotalStorageSpaceInBytesOk returns a tuple with the TotalStorageSpaceInBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetTotalStorageSpaceInBytesOk() (*int64, bool) {
	if o == nil || o.TotalStorageSpaceInBytes == nil {
		return nil, false
	}
	return o.TotalStorageSpaceInBytes, true
}

// HasTotalStorageSpaceInBytes returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasTotalStorageSpaceInBytes() bool {
	if o != nil && o.TotalStorageSpaceInBytes != nil {
		return true
	}

	return false
}

// SetTotalStorageSpaceInBytes gets a reference to the given int64 and assigns it to the TotalStorageSpaceInBytes field.
func (o *MicrosoftGraphManagedDevice) SetTotalStorageSpaceInBytes(v int64) {
	o.TotalStorageSpaceInBytes = &v
}

// GetUdid returns the Udid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetUdid() string {
	if o == nil || o.Udid.Get() == nil {
		var ret string
		return ret
	}
	return *o.Udid.Get()
}

// GetUdidOk returns a tuple with the Udid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetUdidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Udid.Get(), o.Udid.IsSet()
}

// HasUdid returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasUdid() bool {
	if o != nil && o.Udid.IsSet() {
		return true
	}

	return false
}

// SetUdid gets a reference to the given NullableString and assigns it to the Udid field.
func (o *MicrosoftGraphManagedDevice) SetUdid(v string) {
	o.Udid.Set(&v)
}
// SetUdidNil sets the value for Udid to be an explicit nil
func (o *MicrosoftGraphManagedDevice) SetUdidNil() {
	o.Udid.Set(nil)
}

// UnsetUdid ensures that no value is present for Udid, not even an explicit nil
func (o *MicrosoftGraphManagedDevice) UnsetUdid() {
	o.Udid.Unset()
}

// GetUserDisplayName returns the UserDisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetUserDisplayName() string {
	if o == nil || o.UserDisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.UserDisplayName.Get()
}

// GetUserDisplayNameOk returns a tuple with the UserDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetUserDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UserDisplayName.Get(), o.UserDisplayName.IsSet()
}

// HasUserDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasUserDisplayName() bool {
	if o != nil && o.UserDisplayName.IsSet() {
		return true
	}

	return false
}

// SetUserDisplayName gets a reference to the given NullableString and assigns it to the UserDisplayName field.
func (o *MicrosoftGraphManagedDevice) SetUserDisplayName(v string) {
	o.UserDisplayName.Set(&v)
}
// SetUserDisplayNameNil sets the value for UserDisplayName to be an explicit nil
func (o *MicrosoftGraphManagedDevice) SetUserDisplayNameNil() {
	o.UserDisplayName.Set(nil)
}

// UnsetUserDisplayName ensures that no value is present for UserDisplayName, not even an explicit nil
func (o *MicrosoftGraphManagedDevice) UnsetUserDisplayName() {
	o.UserDisplayName.Unset()
}

// GetUserId returns the UserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetUserId() string {
	if o == nil || o.UserId.Get() == nil {
		var ret string
		return ret
	}
	return *o.UserId.Get()
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetUserIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UserId.Get(), o.UserId.IsSet()
}

// HasUserId returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasUserId() bool {
	if o != nil && o.UserId.IsSet() {
		return true
	}

	return false
}

// SetUserId gets a reference to the given NullableString and assigns it to the UserId field.
func (o *MicrosoftGraphManagedDevice) SetUserId(v string) {
	o.UserId.Set(&v)
}
// SetUserIdNil sets the value for UserId to be an explicit nil
func (o *MicrosoftGraphManagedDevice) SetUserIdNil() {
	o.UserId.Set(nil)
}

// UnsetUserId ensures that no value is present for UserId, not even an explicit nil
func (o *MicrosoftGraphManagedDevice) UnsetUserId() {
	o.UserId.Unset()
}

// GetUserPrincipalName returns the UserPrincipalName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetUserPrincipalName() string {
	if o == nil || o.UserPrincipalName.Get() == nil {
		var ret string
		return ret
	}
	return *o.UserPrincipalName.Get()
}

// GetUserPrincipalNameOk returns a tuple with the UserPrincipalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetUserPrincipalNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UserPrincipalName.Get(), o.UserPrincipalName.IsSet()
}

// HasUserPrincipalName returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasUserPrincipalName() bool {
	if o != nil && o.UserPrincipalName.IsSet() {
		return true
	}

	return false
}

// SetUserPrincipalName gets a reference to the given NullableString and assigns it to the UserPrincipalName field.
func (o *MicrosoftGraphManagedDevice) SetUserPrincipalName(v string) {
	o.UserPrincipalName.Set(&v)
}
// SetUserPrincipalNameNil sets the value for UserPrincipalName to be an explicit nil
func (o *MicrosoftGraphManagedDevice) SetUserPrincipalNameNil() {
	o.UserPrincipalName.Set(nil)
}

// UnsetUserPrincipalName ensures that no value is present for UserPrincipalName, not even an explicit nil
func (o *MicrosoftGraphManagedDevice) UnsetUserPrincipalName() {
	o.UserPrincipalName.Unset()
}

// GetWiFiMacAddress returns the WiFiMacAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetWiFiMacAddress() string {
	if o == nil || o.WiFiMacAddress.Get() == nil {
		var ret string
		return ret
	}
	return *o.WiFiMacAddress.Get()
}

// GetWiFiMacAddressOk returns a tuple with the WiFiMacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetWiFiMacAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.WiFiMacAddress.Get(), o.WiFiMacAddress.IsSet()
}

// HasWiFiMacAddress returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasWiFiMacAddress() bool {
	if o != nil && o.WiFiMacAddress.IsSet() {
		return true
	}

	return false
}

// SetWiFiMacAddress gets a reference to the given NullableString and assigns it to the WiFiMacAddress field.
func (o *MicrosoftGraphManagedDevice) SetWiFiMacAddress(v string) {
	o.WiFiMacAddress.Set(&v)
}
// SetWiFiMacAddressNil sets the value for WiFiMacAddress to be an explicit nil
func (o *MicrosoftGraphManagedDevice) SetWiFiMacAddressNil() {
	o.WiFiMacAddress.Set(nil)
}

// UnsetWiFiMacAddress ensures that no value is present for WiFiMacAddress, not even an explicit nil
func (o *MicrosoftGraphManagedDevice) UnsetWiFiMacAddress() {
	o.WiFiMacAddress.Unset()
}

// GetDeviceCompliancePolicyStates returns the DeviceCompliancePolicyStates field value if set, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetDeviceCompliancePolicyStates() []MicrosoftGraphDeviceCompliancePolicyState {
	if o == nil || o.DeviceCompliancePolicyStates == nil {
		var ret []MicrosoftGraphDeviceCompliancePolicyState
		return ret
	}
	return *o.DeviceCompliancePolicyStates
}

// GetDeviceCompliancePolicyStatesOk returns a tuple with the DeviceCompliancePolicyStates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetDeviceCompliancePolicyStatesOk() (*[]MicrosoftGraphDeviceCompliancePolicyState, bool) {
	if o == nil || o.DeviceCompliancePolicyStates == nil {
		return nil, false
	}
	return o.DeviceCompliancePolicyStates, true
}

// HasDeviceCompliancePolicyStates returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasDeviceCompliancePolicyStates() bool {
	if o != nil && o.DeviceCompliancePolicyStates != nil {
		return true
	}

	return false
}

// SetDeviceCompliancePolicyStates gets a reference to the given []MicrosoftGraphDeviceCompliancePolicyState and assigns it to the DeviceCompliancePolicyStates field.
func (o *MicrosoftGraphManagedDevice) SetDeviceCompliancePolicyStates(v []MicrosoftGraphDeviceCompliancePolicyState) {
	o.DeviceCompliancePolicyStates = &v
}

// GetDeviceConfigurationStates returns the DeviceConfigurationStates field value if set, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetDeviceConfigurationStates() []MicrosoftGraphDeviceConfigurationState {
	if o == nil || o.DeviceConfigurationStates == nil {
		var ret []MicrosoftGraphDeviceConfigurationState
		return ret
	}
	return *o.DeviceConfigurationStates
}

// GetDeviceConfigurationStatesOk returns a tuple with the DeviceConfigurationStates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetDeviceConfigurationStatesOk() (*[]MicrosoftGraphDeviceConfigurationState, bool) {
	if o == nil || o.DeviceConfigurationStates == nil {
		return nil, false
	}
	return o.DeviceConfigurationStates, true
}

// HasDeviceConfigurationStates returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasDeviceConfigurationStates() bool {
	if o != nil && o.DeviceConfigurationStates != nil {
		return true
	}

	return false
}

// SetDeviceConfigurationStates gets a reference to the given []MicrosoftGraphDeviceConfigurationState and assigns it to the DeviceConfigurationStates field.
func (o *MicrosoftGraphManagedDevice) SetDeviceConfigurationStates(v []MicrosoftGraphDeviceConfigurationState) {
	o.DeviceConfigurationStates = &v
}

// GetDeviceCategory returns the DeviceCategory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphManagedDevice) GetDeviceCategory() AnyOfmicrosoftGraphDeviceCategory {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDeviceCategory
		return ret
	}
	return o.DeviceCategory
}

// GetDeviceCategoryOk returns a tuple with the DeviceCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphManagedDevice) GetDeviceCategoryOk() (*AnyOfmicrosoftGraphDeviceCategory, bool) {
	if o == nil || o.DeviceCategory == nil {
		return nil, false
	}
	return &o.DeviceCategory, true
}

// HasDeviceCategory returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasDeviceCategory() bool {
	if o != nil && o.DeviceCategory != nil {
		return true
	}

	return false
}

// SetDeviceCategory gets a reference to the given AnyOfmicrosoftGraphDeviceCategory and assigns it to the DeviceCategory field.
func (o *MicrosoftGraphManagedDevice) SetDeviceCategory(v AnyOfmicrosoftGraphDeviceCategory) {
	o.DeviceCategory = v
}

func (o MicrosoftGraphManagedDevice) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ActivationLockBypassCode.IsSet() {
		toSerialize["activationLockBypassCode"] = o.ActivationLockBypassCode.Get()
	}
	if o.AndroidSecurityPatchLevel.IsSet() {
		toSerialize["androidSecurityPatchLevel"] = o.AndroidSecurityPatchLevel.Get()
	}
	if o.AzureADDeviceId.IsSet() {
		toSerialize["azureADDeviceId"] = o.AzureADDeviceId.Get()
	}
	if o.AzureADRegistered.IsSet() {
		toSerialize["azureADRegistered"] = o.AzureADRegistered.Get()
	}
	if o.ComplianceGracePeriodExpirationDateTime != nil {
		toSerialize["complianceGracePeriodExpirationDateTime"] = o.ComplianceGracePeriodExpirationDateTime
	}
	if o.ComplianceState != nil {
		toSerialize["complianceState"] = o.ComplianceState
	}
	if o.ConfigurationManagerClientEnabledFeatures != nil {
		toSerialize["configurationManagerClientEnabledFeatures"] = o.ConfigurationManagerClientEnabledFeatures
	}
	if o.DeviceActionResults != nil {
		toSerialize["deviceActionResults"] = o.DeviceActionResults
	}
	if o.DeviceCategoryDisplayName.IsSet() {
		toSerialize["deviceCategoryDisplayName"] = o.DeviceCategoryDisplayName.Get()
	}
	if o.DeviceEnrollmentType != nil {
		toSerialize["deviceEnrollmentType"] = o.DeviceEnrollmentType
	}
	if o.DeviceHealthAttestationState != nil {
		toSerialize["deviceHealthAttestationState"] = o.DeviceHealthAttestationState
	}
	if o.DeviceName.IsSet() {
		toSerialize["deviceName"] = o.DeviceName.Get()
	}
	if o.DeviceRegistrationState != nil {
		toSerialize["deviceRegistrationState"] = o.DeviceRegistrationState
	}
	if o.EasActivated != nil {
		toSerialize["easActivated"] = o.EasActivated
	}
	if o.EasActivationDateTime != nil {
		toSerialize["easActivationDateTime"] = o.EasActivationDateTime
	}
	if o.EasDeviceId.IsSet() {
		toSerialize["easDeviceId"] = o.EasDeviceId.Get()
	}
	if o.EmailAddress.IsSet() {
		toSerialize["emailAddress"] = o.EmailAddress.Get()
	}
	if o.EnrolledDateTime != nil {
		toSerialize["enrolledDateTime"] = o.EnrolledDateTime
	}
	if o.EthernetMacAddress.IsSet() {
		toSerialize["ethernetMacAddress"] = o.EthernetMacAddress.Get()
	}
	if o.ExchangeAccessState != nil {
		toSerialize["exchangeAccessState"] = o.ExchangeAccessState
	}
	if o.ExchangeAccessStateReason != nil {
		toSerialize["exchangeAccessStateReason"] = o.ExchangeAccessStateReason
	}
	if o.ExchangeLastSuccessfulSyncDateTime != nil {
		toSerialize["exchangeLastSuccessfulSyncDateTime"] = o.ExchangeLastSuccessfulSyncDateTime
	}
	if o.FreeStorageSpaceInBytes != nil {
		toSerialize["freeStorageSpaceInBytes"] = o.FreeStorageSpaceInBytes
	}
	if o.Iccid.IsSet() {
		toSerialize["iccid"] = o.Iccid.Get()
	}
	if o.Imei.IsSet() {
		toSerialize["imei"] = o.Imei.Get()
	}
	if o.IsEncrypted != nil {
		toSerialize["isEncrypted"] = o.IsEncrypted
	}
	if o.IsSupervised != nil {
		toSerialize["isSupervised"] = o.IsSupervised
	}
	if o.JailBroken.IsSet() {
		toSerialize["jailBroken"] = o.JailBroken.Get()
	}
	if o.LastSyncDateTime != nil {
		toSerialize["lastSyncDateTime"] = o.LastSyncDateTime
	}
	if o.ManagedDeviceName.IsSet() {
		toSerialize["managedDeviceName"] = o.ManagedDeviceName.Get()
	}
	if o.ManagedDeviceOwnerType != nil {
		toSerialize["managedDeviceOwnerType"] = o.ManagedDeviceOwnerType
	}
	if o.ManagementAgent != nil {
		toSerialize["managementAgent"] = o.ManagementAgent
	}
	if o.Manufacturer.IsSet() {
		toSerialize["manufacturer"] = o.Manufacturer.Get()
	}
	if o.Meid.IsSet() {
		toSerialize["meid"] = o.Meid.Get()
	}
	if o.Model.IsSet() {
		toSerialize["model"] = o.Model.Get()
	}
	if o.Notes.IsSet() {
		toSerialize["notes"] = o.Notes.Get()
	}
	if o.OperatingSystem.IsSet() {
		toSerialize["operatingSystem"] = o.OperatingSystem.Get()
	}
	if o.OsVersion.IsSet() {
		toSerialize["osVersion"] = o.OsVersion.Get()
	}
	if o.PartnerReportedThreatState != nil {
		toSerialize["partnerReportedThreatState"] = o.PartnerReportedThreatState
	}
	if o.PhoneNumber.IsSet() {
		toSerialize["phoneNumber"] = o.PhoneNumber.Get()
	}
	if o.PhysicalMemoryInBytes != nil {
		toSerialize["physicalMemoryInBytes"] = o.PhysicalMemoryInBytes
	}
	if o.RemoteAssistanceSessionErrorDetails.IsSet() {
		toSerialize["remoteAssistanceSessionErrorDetails"] = o.RemoteAssistanceSessionErrorDetails.Get()
	}
	if o.RemoteAssistanceSessionUrl.IsSet() {
		toSerialize["remoteAssistanceSessionUrl"] = o.RemoteAssistanceSessionUrl.Get()
	}
	if o.SerialNumber.IsSet() {
		toSerialize["serialNumber"] = o.SerialNumber.Get()
	}
	if o.SubscriberCarrier.IsSet() {
		toSerialize["subscriberCarrier"] = o.SubscriberCarrier.Get()
	}
	if o.TotalStorageSpaceInBytes != nil {
		toSerialize["totalStorageSpaceInBytes"] = o.TotalStorageSpaceInBytes
	}
	if o.Udid.IsSet() {
		toSerialize["udid"] = o.Udid.Get()
	}
	if o.UserDisplayName.IsSet() {
		toSerialize["userDisplayName"] = o.UserDisplayName.Get()
	}
	if o.UserId.IsSet() {
		toSerialize["userId"] = o.UserId.Get()
	}
	if o.UserPrincipalName.IsSet() {
		toSerialize["userPrincipalName"] = o.UserPrincipalName.Get()
	}
	if o.WiFiMacAddress.IsSet() {
		toSerialize["wiFiMacAddress"] = o.WiFiMacAddress.Get()
	}
	if o.DeviceCompliancePolicyStates != nil {
		toSerialize["deviceCompliancePolicyStates"] = o.DeviceCompliancePolicyStates
	}
	if o.DeviceConfigurationStates != nil {
		toSerialize["deviceConfigurationStates"] = o.DeviceConfigurationStates
	}
	if o.DeviceCategory != nil {
		toSerialize["deviceCategory"] = o.DeviceCategory
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphManagedDevice struct {
	value *MicrosoftGraphManagedDevice
	isSet bool
}

func (v NullableMicrosoftGraphManagedDevice) Get() *MicrosoftGraphManagedDevice {
	return v.value
}

func (v *NullableMicrosoftGraphManagedDevice) Set(val *MicrosoftGraphManagedDevice) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphManagedDevice) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphManagedDevice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphManagedDevice(val *MicrosoftGraphManagedDevice) *NullableMicrosoftGraphManagedDevice {
	return &NullableMicrosoftGraphManagedDevice{value: val, isSet: true}
}

func (v NullableMicrosoftGraphManagedDevice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphManagedDevice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


