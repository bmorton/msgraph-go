/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject1437 struct for InlineObject1437
type InlineObject1437 struct {
	StartDate AnyOfobject `json:"startDate,omitempty"`
	EndDate AnyOfobject `json:"endDate,omitempty"`
	Holidays AnyOfobject `json:"holidays,omitempty"`
}

// NewInlineObject1437 instantiates a new InlineObject1437 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject1437() *InlineObject1437 {
	this := InlineObject1437{}
	return &this
}

// NewInlineObject1437WithDefaults instantiates a new InlineObject1437 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject1437WithDefaults() *InlineObject1437 {
	this := InlineObject1437{}
	return &this
}

// GetStartDate returns the StartDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1437) GetStartDate() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1437) GetStartDateOk() (*AnyOfobject, bool) {
	if o == nil || o.StartDate == nil {
		return nil, false
	}
	return &o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *InlineObject1437) HasStartDate() bool {
	if o != nil && o.StartDate != nil {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given AnyOfobject and assigns it to the StartDate field.
func (o *InlineObject1437) SetStartDate(v AnyOfobject) {
	o.StartDate = v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1437) GetEndDate() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1437) GetEndDateOk() (*AnyOfobject, bool) {
	if o == nil || o.EndDate == nil {
		return nil, false
	}
	return &o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *InlineObject1437) HasEndDate() bool {
	if o != nil && o.EndDate != nil {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given AnyOfobject and assigns it to the EndDate field.
func (o *InlineObject1437) SetEndDate(v AnyOfobject) {
	o.EndDate = v
}

// GetHolidays returns the Holidays field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1437) GetHolidays() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Holidays
}

// GetHolidaysOk returns a tuple with the Holidays field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1437) GetHolidaysOk() (*AnyOfobject, bool) {
	if o == nil || o.Holidays == nil {
		return nil, false
	}
	return &o.Holidays, true
}

// HasHolidays returns a boolean if a field has been set.
func (o *InlineObject1437) HasHolidays() bool {
	if o != nil && o.Holidays != nil {
		return true
	}

	return false
}

// SetHolidays gets a reference to the given AnyOfobject and assigns it to the Holidays field.
func (o *InlineObject1437) SetHolidays(v AnyOfobject) {
	o.Holidays = v
}

func (o InlineObject1437) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StartDate != nil {
		toSerialize["startDate"] = o.StartDate
	}
	if o.EndDate != nil {
		toSerialize["endDate"] = o.EndDate
	}
	if o.Holidays != nil {
		toSerialize["holidays"] = o.Holidays
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject1437 struct {
	value *InlineObject1437
	isSet bool
}

func (v NullableInlineObject1437) Get() *InlineObject1437 {
	return v.value
}

func (v *NullableInlineObject1437) Set(val *InlineObject1437) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject1437) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject1437) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject1437(val *InlineObject1437) *NullableInlineObject1437 {
	return &NullableInlineObject1437{value: val, isSet: true}
}

func (v NullableInlineObject1437) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject1437) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


