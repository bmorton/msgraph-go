/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphConditionalAccessUsers struct for MicrosoftGraphConditionalAccessUsers
type MicrosoftGraphConditionalAccessUsers struct {
	// Group IDs excluded from scope of policy.
	ExcludeGroups *[]string `json:"excludeGroups,omitempty"`
	// Role IDs excluded from scope of policy.
	ExcludeRoles *[]string `json:"excludeRoles,omitempty"`
	// User IDs excluded from scope of policy and/or GuestsOrExternalUsers.
	ExcludeUsers *[]string `json:"excludeUsers,omitempty"`
	// Group IDs in scope of policy unless explicitly excluded, or All.
	IncludeGroups *[]string `json:"includeGroups,omitempty"`
	// Role IDs in scope of policy unless explicitly excluded, or All.
	IncludeRoles *[]string `json:"includeRoles,omitempty"`
	// User IDs in scope of policy unless explicitly excluded, or None or All or GuestsOrExternalUsers.
	IncludeUsers *[]string `json:"includeUsers,omitempty"`
}

// NewMicrosoftGraphConditionalAccessUsers instantiates a new MicrosoftGraphConditionalAccessUsers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphConditionalAccessUsers() *MicrosoftGraphConditionalAccessUsers {
	this := MicrosoftGraphConditionalAccessUsers{}
	return &this
}

// NewMicrosoftGraphConditionalAccessUsersWithDefaults instantiates a new MicrosoftGraphConditionalAccessUsers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphConditionalAccessUsersWithDefaults() *MicrosoftGraphConditionalAccessUsers {
	this := MicrosoftGraphConditionalAccessUsers{}
	return &this
}

// GetExcludeGroups returns the ExcludeGroups field value if set, zero value otherwise.
func (o *MicrosoftGraphConditionalAccessUsers) GetExcludeGroups() []string {
	if o == nil || o.ExcludeGroups == nil {
		var ret []string
		return ret
	}
	return *o.ExcludeGroups
}

// GetExcludeGroupsOk returns a tuple with the ExcludeGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphConditionalAccessUsers) GetExcludeGroupsOk() (*[]string, bool) {
	if o == nil || o.ExcludeGroups == nil {
		return nil, false
	}
	return o.ExcludeGroups, true
}

// HasExcludeGroups returns a boolean if a field has been set.
func (o *MicrosoftGraphConditionalAccessUsers) HasExcludeGroups() bool {
	if o != nil && o.ExcludeGroups != nil {
		return true
	}

	return false
}

// SetExcludeGroups gets a reference to the given []string and assigns it to the ExcludeGroups field.
func (o *MicrosoftGraphConditionalAccessUsers) SetExcludeGroups(v []string) {
	o.ExcludeGroups = &v
}

// GetExcludeRoles returns the ExcludeRoles field value if set, zero value otherwise.
func (o *MicrosoftGraphConditionalAccessUsers) GetExcludeRoles() []string {
	if o == nil || o.ExcludeRoles == nil {
		var ret []string
		return ret
	}
	return *o.ExcludeRoles
}

// GetExcludeRolesOk returns a tuple with the ExcludeRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphConditionalAccessUsers) GetExcludeRolesOk() (*[]string, bool) {
	if o == nil || o.ExcludeRoles == nil {
		return nil, false
	}
	return o.ExcludeRoles, true
}

// HasExcludeRoles returns a boolean if a field has been set.
func (o *MicrosoftGraphConditionalAccessUsers) HasExcludeRoles() bool {
	if o != nil && o.ExcludeRoles != nil {
		return true
	}

	return false
}

// SetExcludeRoles gets a reference to the given []string and assigns it to the ExcludeRoles field.
func (o *MicrosoftGraphConditionalAccessUsers) SetExcludeRoles(v []string) {
	o.ExcludeRoles = &v
}

// GetExcludeUsers returns the ExcludeUsers field value if set, zero value otherwise.
func (o *MicrosoftGraphConditionalAccessUsers) GetExcludeUsers() []string {
	if o == nil || o.ExcludeUsers == nil {
		var ret []string
		return ret
	}
	return *o.ExcludeUsers
}

// GetExcludeUsersOk returns a tuple with the ExcludeUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphConditionalAccessUsers) GetExcludeUsersOk() (*[]string, bool) {
	if o == nil || o.ExcludeUsers == nil {
		return nil, false
	}
	return o.ExcludeUsers, true
}

// HasExcludeUsers returns a boolean if a field has been set.
func (o *MicrosoftGraphConditionalAccessUsers) HasExcludeUsers() bool {
	if o != nil && o.ExcludeUsers != nil {
		return true
	}

	return false
}

// SetExcludeUsers gets a reference to the given []string and assigns it to the ExcludeUsers field.
func (o *MicrosoftGraphConditionalAccessUsers) SetExcludeUsers(v []string) {
	o.ExcludeUsers = &v
}

// GetIncludeGroups returns the IncludeGroups field value if set, zero value otherwise.
func (o *MicrosoftGraphConditionalAccessUsers) GetIncludeGroups() []string {
	if o == nil || o.IncludeGroups == nil {
		var ret []string
		return ret
	}
	return *o.IncludeGroups
}

// GetIncludeGroupsOk returns a tuple with the IncludeGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphConditionalAccessUsers) GetIncludeGroupsOk() (*[]string, bool) {
	if o == nil || o.IncludeGroups == nil {
		return nil, false
	}
	return o.IncludeGroups, true
}

// HasIncludeGroups returns a boolean if a field has been set.
func (o *MicrosoftGraphConditionalAccessUsers) HasIncludeGroups() bool {
	if o != nil && o.IncludeGroups != nil {
		return true
	}

	return false
}

// SetIncludeGroups gets a reference to the given []string and assigns it to the IncludeGroups field.
func (o *MicrosoftGraphConditionalAccessUsers) SetIncludeGroups(v []string) {
	o.IncludeGroups = &v
}

// GetIncludeRoles returns the IncludeRoles field value if set, zero value otherwise.
func (o *MicrosoftGraphConditionalAccessUsers) GetIncludeRoles() []string {
	if o == nil || o.IncludeRoles == nil {
		var ret []string
		return ret
	}
	return *o.IncludeRoles
}

// GetIncludeRolesOk returns a tuple with the IncludeRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphConditionalAccessUsers) GetIncludeRolesOk() (*[]string, bool) {
	if o == nil || o.IncludeRoles == nil {
		return nil, false
	}
	return o.IncludeRoles, true
}

// HasIncludeRoles returns a boolean if a field has been set.
func (o *MicrosoftGraphConditionalAccessUsers) HasIncludeRoles() bool {
	if o != nil && o.IncludeRoles != nil {
		return true
	}

	return false
}

// SetIncludeRoles gets a reference to the given []string and assigns it to the IncludeRoles field.
func (o *MicrosoftGraphConditionalAccessUsers) SetIncludeRoles(v []string) {
	o.IncludeRoles = &v
}

// GetIncludeUsers returns the IncludeUsers field value if set, zero value otherwise.
func (o *MicrosoftGraphConditionalAccessUsers) GetIncludeUsers() []string {
	if o == nil || o.IncludeUsers == nil {
		var ret []string
		return ret
	}
	return *o.IncludeUsers
}

// GetIncludeUsersOk returns a tuple with the IncludeUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphConditionalAccessUsers) GetIncludeUsersOk() (*[]string, bool) {
	if o == nil || o.IncludeUsers == nil {
		return nil, false
	}
	return o.IncludeUsers, true
}

// HasIncludeUsers returns a boolean if a field has been set.
func (o *MicrosoftGraphConditionalAccessUsers) HasIncludeUsers() bool {
	if o != nil && o.IncludeUsers != nil {
		return true
	}

	return false
}

// SetIncludeUsers gets a reference to the given []string and assigns it to the IncludeUsers field.
func (o *MicrosoftGraphConditionalAccessUsers) SetIncludeUsers(v []string) {
	o.IncludeUsers = &v
}

func (o MicrosoftGraphConditionalAccessUsers) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ExcludeGroups != nil {
		toSerialize["excludeGroups"] = o.ExcludeGroups
	}
	if o.ExcludeRoles != nil {
		toSerialize["excludeRoles"] = o.ExcludeRoles
	}
	if o.ExcludeUsers != nil {
		toSerialize["excludeUsers"] = o.ExcludeUsers
	}
	if o.IncludeGroups != nil {
		toSerialize["includeGroups"] = o.IncludeGroups
	}
	if o.IncludeRoles != nil {
		toSerialize["includeRoles"] = o.IncludeRoles
	}
	if o.IncludeUsers != nil {
		toSerialize["includeUsers"] = o.IncludeUsers
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphConditionalAccessUsers struct {
	value *MicrosoftGraphConditionalAccessUsers
	isSet bool
}

func (v NullableMicrosoftGraphConditionalAccessUsers) Get() *MicrosoftGraphConditionalAccessUsers {
	return v.value
}

func (v *NullableMicrosoftGraphConditionalAccessUsers) Set(val *MicrosoftGraphConditionalAccessUsers) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphConditionalAccessUsers) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphConditionalAccessUsers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphConditionalAccessUsers(val *MicrosoftGraphConditionalAccessUsers) *NullableMicrosoftGraphConditionalAccessUsers {
	return &NullableMicrosoftGraphConditionalAccessUsers{value: val, isSet: true}
}

func (v NullableMicrosoftGraphConditionalAccessUsers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphConditionalAccessUsers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


