/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphContactRelationship the model 'MicrosoftGraphContactRelationship'
type MicrosoftGraphContactRelationship string

// List of microsoft.graph.contactRelationship
const (
	PARENT MicrosoftGraphContactRelationship = "parent"
	RELATIVE MicrosoftGraphContactRelationship = "relative"
	AIDE MicrosoftGraphContactRelationship = "aide"
	DOCTOR MicrosoftGraphContactRelationship = "doctor"
	GUARDIAN MicrosoftGraphContactRelationship = "guardian"
	CHILD MicrosoftGraphContactRelationship = "child"
	OTHER MicrosoftGraphContactRelationship = "other"
	UNKNOWN_FUTURE_VALUE MicrosoftGraphContactRelationship = "unknownFutureValue"
)

// All allowed values of MicrosoftGraphContactRelationship enum
var AllowedMicrosoftGraphContactRelationshipEnumValues = []MicrosoftGraphContactRelationship{
	"parent",
	"relative",
	"aide",
	"doctor",
	"guardian",
	"child",
	"other",
	"unknownFutureValue",
}

func (v *MicrosoftGraphContactRelationship) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphContactRelationship(value)
	for _, existing := range AllowedMicrosoftGraphContactRelationshipEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphContactRelationship", value)
}

// NewMicrosoftGraphContactRelationshipFromValue returns a pointer to a valid MicrosoftGraphContactRelationship
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphContactRelationshipFromValue(v string) (*MicrosoftGraphContactRelationship, error) {
	ev := MicrosoftGraphContactRelationship(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphContactRelationship: valid values are %v", v, AllowedMicrosoftGraphContactRelationshipEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphContactRelationship) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphContactRelationshipEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.contactRelationship value
func (v MicrosoftGraphContactRelationship) Ptr() *MicrosoftGraphContactRelationship {
	return &v
}

type NullableMicrosoftGraphContactRelationship struct {
	value *MicrosoftGraphContactRelationship
	isSet bool
}

func (v NullableMicrosoftGraphContactRelationship) Get() *MicrosoftGraphContactRelationship {
	return v.value
}

func (v *NullableMicrosoftGraphContactRelationship) Set(val *MicrosoftGraphContactRelationship) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphContactRelationship) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphContactRelationship) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphContactRelationship(val *MicrosoftGraphContactRelationship) *NullableMicrosoftGraphContactRelationship {
	return &NullableMicrosoftGraphContactRelationship{value: val, isSet: true}
}

func (v NullableMicrosoftGraphContactRelationship) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphContactRelationship) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

