/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphNetworkConnection struct for MicrosoftGraphNetworkConnection
type MicrosoftGraphNetworkConnection struct {
	// Name of the application managing the network connection (for example, Facebook or SMTP).
	ApplicationName NullableString `json:"applicationName,omitempty"`
	// Destination IP address (of the network connection).
	DestinationAddress NullableString `json:"destinationAddress,omitempty"`
	// Destination domain portion of the destination URL. (for example 'www.contoso.com').
	DestinationDomain NullableString `json:"destinationDomain,omitempty"`
	// Location (by IP address mapping) associated with the destination of a network connection.
	DestinationLocation NullableString `json:"destinationLocation,omitempty"`
	// Destination port (of the network connection).
	DestinationPort NullableString `json:"destinationPort,omitempty"`
	// Network connection URL/URI string - excluding parameters. (for example 'www.contoso.com/products/default.html')
	DestinationUrl NullableString `json:"destinationUrl,omitempty"`
	// Network connection direction. Possible values are: unknown, inbound, outbound.
	Direction AnyOfmicrosoftGraphConnectionDirection `json:"direction,omitempty"`
	// Date when the destination domain was registered. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
	DomainRegisteredDateTime NullableTime `json:"domainRegisteredDateTime,omitempty"`
	// The local DNS name resolution as it appears in the host's local DNS cache (for example, in case the 'hosts' file was tampered with).
	LocalDnsName NullableString `json:"localDnsName,omitempty"`
	// Network Address Translation destination IP address.
	NatDestinationAddress NullableString `json:"natDestinationAddress,omitempty"`
	// Network Address Translation destination port.
	NatDestinationPort NullableString `json:"natDestinationPort,omitempty"`
	// Network Address Translation source IP address.
	NatSourceAddress NullableString `json:"natSourceAddress,omitempty"`
	// Network Address Translation source port.
	NatSourcePort NullableString `json:"natSourcePort,omitempty"`
	// Network protocol. Possible values are: unknown, ip, icmp, igmp, ggp, ipv4, tcp, pup, udp, idp, ipv6, ipv6RoutingHeader, ipv6FragmentHeader, ipSecEncapsulatingSecurityPayload, ipSecAuthenticationHeader, icmpV6, ipv6NoNextHeader, ipv6DestinationOptions, nd, raw, ipx, spx, spxII.
	Protocol AnyOfmicrosoftGraphSecurityNetworkProtocol `json:"protocol,omitempty"`
	// Provider generated/calculated risk score of the network connection. Recommended value range of 0-1, which equates to a percentage.
	RiskScore NullableString `json:"riskScore,omitempty"`
	// Source (i.e. origin) IP address (of the network connection).
	SourceAddress NullableString `json:"sourceAddress,omitempty"`
	// Location (by IP address mapping) associated with the source of a network connection.
	SourceLocation NullableString `json:"sourceLocation,omitempty"`
	// Source (i.e. origin) IP port (of the network connection).
	SourcePort NullableString `json:"sourcePort,omitempty"`
	// Network connection status. Possible values are: unknown, attempted, succeeded, blocked, failed.
	Status AnyOfmicrosoftGraphConnectionStatus `json:"status,omitempty"`
	// Parameters (suffix) of the destination URL.
	UrlParameters NullableString `json:"urlParameters,omitempty"`
}

// NewMicrosoftGraphNetworkConnection instantiates a new MicrosoftGraphNetworkConnection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphNetworkConnection() *MicrosoftGraphNetworkConnection {
	this := MicrosoftGraphNetworkConnection{}
	return &this
}

// NewMicrosoftGraphNetworkConnectionWithDefaults instantiates a new MicrosoftGraphNetworkConnection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphNetworkConnectionWithDefaults() *MicrosoftGraphNetworkConnection {
	this := MicrosoftGraphNetworkConnection{}
	return &this
}

// GetApplicationName returns the ApplicationName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphNetworkConnection) GetApplicationName() string {
	if o == nil || o.ApplicationName.Get() == nil {
		var ret string
		return ret
	}
	return *o.ApplicationName.Get()
}

// GetApplicationNameOk returns a tuple with the ApplicationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphNetworkConnection) GetApplicationNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ApplicationName.Get(), o.ApplicationName.IsSet()
}

// HasApplicationName returns a boolean if a field has been set.
func (o *MicrosoftGraphNetworkConnection) HasApplicationName() bool {
	if o != nil && o.ApplicationName.IsSet() {
		return true
	}

	return false
}

// SetApplicationName gets a reference to the given NullableString and assigns it to the ApplicationName field.
func (o *MicrosoftGraphNetworkConnection) SetApplicationName(v string) {
	o.ApplicationName.Set(&v)
}
// SetApplicationNameNil sets the value for ApplicationName to be an explicit nil
func (o *MicrosoftGraphNetworkConnection) SetApplicationNameNil() {
	o.ApplicationName.Set(nil)
}

// UnsetApplicationName ensures that no value is present for ApplicationName, not even an explicit nil
func (o *MicrosoftGraphNetworkConnection) UnsetApplicationName() {
	o.ApplicationName.Unset()
}

// GetDestinationAddress returns the DestinationAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphNetworkConnection) GetDestinationAddress() string {
	if o == nil || o.DestinationAddress.Get() == nil {
		var ret string
		return ret
	}
	return *o.DestinationAddress.Get()
}

// GetDestinationAddressOk returns a tuple with the DestinationAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphNetworkConnection) GetDestinationAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DestinationAddress.Get(), o.DestinationAddress.IsSet()
}

// HasDestinationAddress returns a boolean if a field has been set.
func (o *MicrosoftGraphNetworkConnection) HasDestinationAddress() bool {
	if o != nil && o.DestinationAddress.IsSet() {
		return true
	}

	return false
}

// SetDestinationAddress gets a reference to the given NullableString and assigns it to the DestinationAddress field.
func (o *MicrosoftGraphNetworkConnection) SetDestinationAddress(v string) {
	o.DestinationAddress.Set(&v)
}
// SetDestinationAddressNil sets the value for DestinationAddress to be an explicit nil
func (o *MicrosoftGraphNetworkConnection) SetDestinationAddressNil() {
	o.DestinationAddress.Set(nil)
}

// UnsetDestinationAddress ensures that no value is present for DestinationAddress, not even an explicit nil
func (o *MicrosoftGraphNetworkConnection) UnsetDestinationAddress() {
	o.DestinationAddress.Unset()
}

// GetDestinationDomain returns the DestinationDomain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphNetworkConnection) GetDestinationDomain() string {
	if o == nil || o.DestinationDomain.Get() == nil {
		var ret string
		return ret
	}
	return *o.DestinationDomain.Get()
}

// GetDestinationDomainOk returns a tuple with the DestinationDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphNetworkConnection) GetDestinationDomainOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DestinationDomain.Get(), o.DestinationDomain.IsSet()
}

// HasDestinationDomain returns a boolean if a field has been set.
func (o *MicrosoftGraphNetworkConnection) HasDestinationDomain() bool {
	if o != nil && o.DestinationDomain.IsSet() {
		return true
	}

	return false
}

// SetDestinationDomain gets a reference to the given NullableString and assigns it to the DestinationDomain field.
func (o *MicrosoftGraphNetworkConnection) SetDestinationDomain(v string) {
	o.DestinationDomain.Set(&v)
}
// SetDestinationDomainNil sets the value for DestinationDomain to be an explicit nil
func (o *MicrosoftGraphNetworkConnection) SetDestinationDomainNil() {
	o.DestinationDomain.Set(nil)
}

// UnsetDestinationDomain ensures that no value is present for DestinationDomain, not even an explicit nil
func (o *MicrosoftGraphNetworkConnection) UnsetDestinationDomain() {
	o.DestinationDomain.Unset()
}

// GetDestinationLocation returns the DestinationLocation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphNetworkConnection) GetDestinationLocation() string {
	if o == nil || o.DestinationLocation.Get() == nil {
		var ret string
		return ret
	}
	return *o.DestinationLocation.Get()
}

// GetDestinationLocationOk returns a tuple with the DestinationLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphNetworkConnection) GetDestinationLocationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DestinationLocation.Get(), o.DestinationLocation.IsSet()
}

// HasDestinationLocation returns a boolean if a field has been set.
func (o *MicrosoftGraphNetworkConnection) HasDestinationLocation() bool {
	if o != nil && o.DestinationLocation.IsSet() {
		return true
	}

	return false
}

// SetDestinationLocation gets a reference to the given NullableString and assigns it to the DestinationLocation field.
func (o *MicrosoftGraphNetworkConnection) SetDestinationLocation(v string) {
	o.DestinationLocation.Set(&v)
}
// SetDestinationLocationNil sets the value for DestinationLocation to be an explicit nil
func (o *MicrosoftGraphNetworkConnection) SetDestinationLocationNil() {
	o.DestinationLocation.Set(nil)
}

// UnsetDestinationLocation ensures that no value is present for DestinationLocation, not even an explicit nil
func (o *MicrosoftGraphNetworkConnection) UnsetDestinationLocation() {
	o.DestinationLocation.Unset()
}

// GetDestinationPort returns the DestinationPort field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphNetworkConnection) GetDestinationPort() string {
	if o == nil || o.DestinationPort.Get() == nil {
		var ret string
		return ret
	}
	return *o.DestinationPort.Get()
}

// GetDestinationPortOk returns a tuple with the DestinationPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphNetworkConnection) GetDestinationPortOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DestinationPort.Get(), o.DestinationPort.IsSet()
}

// HasDestinationPort returns a boolean if a field has been set.
func (o *MicrosoftGraphNetworkConnection) HasDestinationPort() bool {
	if o != nil && o.DestinationPort.IsSet() {
		return true
	}

	return false
}

// SetDestinationPort gets a reference to the given NullableString and assigns it to the DestinationPort field.
func (o *MicrosoftGraphNetworkConnection) SetDestinationPort(v string) {
	o.DestinationPort.Set(&v)
}
// SetDestinationPortNil sets the value for DestinationPort to be an explicit nil
func (o *MicrosoftGraphNetworkConnection) SetDestinationPortNil() {
	o.DestinationPort.Set(nil)
}

// UnsetDestinationPort ensures that no value is present for DestinationPort, not even an explicit nil
func (o *MicrosoftGraphNetworkConnection) UnsetDestinationPort() {
	o.DestinationPort.Unset()
}

// GetDestinationUrl returns the DestinationUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphNetworkConnection) GetDestinationUrl() string {
	if o == nil || o.DestinationUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.DestinationUrl.Get()
}

// GetDestinationUrlOk returns a tuple with the DestinationUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphNetworkConnection) GetDestinationUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DestinationUrl.Get(), o.DestinationUrl.IsSet()
}

// HasDestinationUrl returns a boolean if a field has been set.
func (o *MicrosoftGraphNetworkConnection) HasDestinationUrl() bool {
	if o != nil && o.DestinationUrl.IsSet() {
		return true
	}

	return false
}

// SetDestinationUrl gets a reference to the given NullableString and assigns it to the DestinationUrl field.
func (o *MicrosoftGraphNetworkConnection) SetDestinationUrl(v string) {
	o.DestinationUrl.Set(&v)
}
// SetDestinationUrlNil sets the value for DestinationUrl to be an explicit nil
func (o *MicrosoftGraphNetworkConnection) SetDestinationUrlNil() {
	o.DestinationUrl.Set(nil)
}

// UnsetDestinationUrl ensures that no value is present for DestinationUrl, not even an explicit nil
func (o *MicrosoftGraphNetworkConnection) UnsetDestinationUrl() {
	o.DestinationUrl.Unset()
}

// GetDirection returns the Direction field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphNetworkConnection) GetDirection() AnyOfmicrosoftGraphConnectionDirection {
	if o == nil  {
		var ret AnyOfmicrosoftGraphConnectionDirection
		return ret
	}
	return o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphNetworkConnection) GetDirectionOk() (*AnyOfmicrosoftGraphConnectionDirection, bool) {
	if o == nil || o.Direction == nil {
		return nil, false
	}
	return &o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *MicrosoftGraphNetworkConnection) HasDirection() bool {
	if o != nil && o.Direction != nil {
		return true
	}

	return false
}

// SetDirection gets a reference to the given AnyOfmicrosoftGraphConnectionDirection and assigns it to the Direction field.
func (o *MicrosoftGraphNetworkConnection) SetDirection(v AnyOfmicrosoftGraphConnectionDirection) {
	o.Direction = v
}

// GetDomainRegisteredDateTime returns the DomainRegisteredDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphNetworkConnection) GetDomainRegisteredDateTime() time.Time {
	if o == nil || o.DomainRegisteredDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.DomainRegisteredDateTime.Get()
}

// GetDomainRegisteredDateTimeOk returns a tuple with the DomainRegisteredDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphNetworkConnection) GetDomainRegisteredDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DomainRegisteredDateTime.Get(), o.DomainRegisteredDateTime.IsSet()
}

// HasDomainRegisteredDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphNetworkConnection) HasDomainRegisteredDateTime() bool {
	if o != nil && o.DomainRegisteredDateTime.IsSet() {
		return true
	}

	return false
}

// SetDomainRegisteredDateTime gets a reference to the given NullableTime and assigns it to the DomainRegisteredDateTime field.
func (o *MicrosoftGraphNetworkConnection) SetDomainRegisteredDateTime(v time.Time) {
	o.DomainRegisteredDateTime.Set(&v)
}
// SetDomainRegisteredDateTimeNil sets the value for DomainRegisteredDateTime to be an explicit nil
func (o *MicrosoftGraphNetworkConnection) SetDomainRegisteredDateTimeNil() {
	o.DomainRegisteredDateTime.Set(nil)
}

// UnsetDomainRegisteredDateTime ensures that no value is present for DomainRegisteredDateTime, not even an explicit nil
func (o *MicrosoftGraphNetworkConnection) UnsetDomainRegisteredDateTime() {
	o.DomainRegisteredDateTime.Unset()
}

// GetLocalDnsName returns the LocalDnsName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphNetworkConnection) GetLocalDnsName() string {
	if o == nil || o.LocalDnsName.Get() == nil {
		var ret string
		return ret
	}
	return *o.LocalDnsName.Get()
}

// GetLocalDnsNameOk returns a tuple with the LocalDnsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphNetworkConnection) GetLocalDnsNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LocalDnsName.Get(), o.LocalDnsName.IsSet()
}

// HasLocalDnsName returns a boolean if a field has been set.
func (o *MicrosoftGraphNetworkConnection) HasLocalDnsName() bool {
	if o != nil && o.LocalDnsName.IsSet() {
		return true
	}

	return false
}

// SetLocalDnsName gets a reference to the given NullableString and assigns it to the LocalDnsName field.
func (o *MicrosoftGraphNetworkConnection) SetLocalDnsName(v string) {
	o.LocalDnsName.Set(&v)
}
// SetLocalDnsNameNil sets the value for LocalDnsName to be an explicit nil
func (o *MicrosoftGraphNetworkConnection) SetLocalDnsNameNil() {
	o.LocalDnsName.Set(nil)
}

// UnsetLocalDnsName ensures that no value is present for LocalDnsName, not even an explicit nil
func (o *MicrosoftGraphNetworkConnection) UnsetLocalDnsName() {
	o.LocalDnsName.Unset()
}

// GetNatDestinationAddress returns the NatDestinationAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphNetworkConnection) GetNatDestinationAddress() string {
	if o == nil || o.NatDestinationAddress.Get() == nil {
		var ret string
		return ret
	}
	return *o.NatDestinationAddress.Get()
}

// GetNatDestinationAddressOk returns a tuple with the NatDestinationAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphNetworkConnection) GetNatDestinationAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NatDestinationAddress.Get(), o.NatDestinationAddress.IsSet()
}

// HasNatDestinationAddress returns a boolean if a field has been set.
func (o *MicrosoftGraphNetworkConnection) HasNatDestinationAddress() bool {
	if o != nil && o.NatDestinationAddress.IsSet() {
		return true
	}

	return false
}

// SetNatDestinationAddress gets a reference to the given NullableString and assigns it to the NatDestinationAddress field.
func (o *MicrosoftGraphNetworkConnection) SetNatDestinationAddress(v string) {
	o.NatDestinationAddress.Set(&v)
}
// SetNatDestinationAddressNil sets the value for NatDestinationAddress to be an explicit nil
func (o *MicrosoftGraphNetworkConnection) SetNatDestinationAddressNil() {
	o.NatDestinationAddress.Set(nil)
}

// UnsetNatDestinationAddress ensures that no value is present for NatDestinationAddress, not even an explicit nil
func (o *MicrosoftGraphNetworkConnection) UnsetNatDestinationAddress() {
	o.NatDestinationAddress.Unset()
}

// GetNatDestinationPort returns the NatDestinationPort field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphNetworkConnection) GetNatDestinationPort() string {
	if o == nil || o.NatDestinationPort.Get() == nil {
		var ret string
		return ret
	}
	return *o.NatDestinationPort.Get()
}

// GetNatDestinationPortOk returns a tuple with the NatDestinationPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphNetworkConnection) GetNatDestinationPortOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NatDestinationPort.Get(), o.NatDestinationPort.IsSet()
}

// HasNatDestinationPort returns a boolean if a field has been set.
func (o *MicrosoftGraphNetworkConnection) HasNatDestinationPort() bool {
	if o != nil && o.NatDestinationPort.IsSet() {
		return true
	}

	return false
}

// SetNatDestinationPort gets a reference to the given NullableString and assigns it to the NatDestinationPort field.
func (o *MicrosoftGraphNetworkConnection) SetNatDestinationPort(v string) {
	o.NatDestinationPort.Set(&v)
}
// SetNatDestinationPortNil sets the value for NatDestinationPort to be an explicit nil
func (o *MicrosoftGraphNetworkConnection) SetNatDestinationPortNil() {
	o.NatDestinationPort.Set(nil)
}

// UnsetNatDestinationPort ensures that no value is present for NatDestinationPort, not even an explicit nil
func (o *MicrosoftGraphNetworkConnection) UnsetNatDestinationPort() {
	o.NatDestinationPort.Unset()
}

// GetNatSourceAddress returns the NatSourceAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphNetworkConnection) GetNatSourceAddress() string {
	if o == nil || o.NatSourceAddress.Get() == nil {
		var ret string
		return ret
	}
	return *o.NatSourceAddress.Get()
}

// GetNatSourceAddressOk returns a tuple with the NatSourceAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphNetworkConnection) GetNatSourceAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NatSourceAddress.Get(), o.NatSourceAddress.IsSet()
}

// HasNatSourceAddress returns a boolean if a field has been set.
func (o *MicrosoftGraphNetworkConnection) HasNatSourceAddress() bool {
	if o != nil && o.NatSourceAddress.IsSet() {
		return true
	}

	return false
}

// SetNatSourceAddress gets a reference to the given NullableString and assigns it to the NatSourceAddress field.
func (o *MicrosoftGraphNetworkConnection) SetNatSourceAddress(v string) {
	o.NatSourceAddress.Set(&v)
}
// SetNatSourceAddressNil sets the value for NatSourceAddress to be an explicit nil
func (o *MicrosoftGraphNetworkConnection) SetNatSourceAddressNil() {
	o.NatSourceAddress.Set(nil)
}

// UnsetNatSourceAddress ensures that no value is present for NatSourceAddress, not even an explicit nil
func (o *MicrosoftGraphNetworkConnection) UnsetNatSourceAddress() {
	o.NatSourceAddress.Unset()
}

// GetNatSourcePort returns the NatSourcePort field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphNetworkConnection) GetNatSourcePort() string {
	if o == nil || o.NatSourcePort.Get() == nil {
		var ret string
		return ret
	}
	return *o.NatSourcePort.Get()
}

// GetNatSourcePortOk returns a tuple with the NatSourcePort field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphNetworkConnection) GetNatSourcePortOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NatSourcePort.Get(), o.NatSourcePort.IsSet()
}

// HasNatSourcePort returns a boolean if a field has been set.
func (o *MicrosoftGraphNetworkConnection) HasNatSourcePort() bool {
	if o != nil && o.NatSourcePort.IsSet() {
		return true
	}

	return false
}

// SetNatSourcePort gets a reference to the given NullableString and assigns it to the NatSourcePort field.
func (o *MicrosoftGraphNetworkConnection) SetNatSourcePort(v string) {
	o.NatSourcePort.Set(&v)
}
// SetNatSourcePortNil sets the value for NatSourcePort to be an explicit nil
func (o *MicrosoftGraphNetworkConnection) SetNatSourcePortNil() {
	o.NatSourcePort.Set(nil)
}

// UnsetNatSourcePort ensures that no value is present for NatSourcePort, not even an explicit nil
func (o *MicrosoftGraphNetworkConnection) UnsetNatSourcePort() {
	o.NatSourcePort.Unset()
}

// GetProtocol returns the Protocol field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphNetworkConnection) GetProtocol() AnyOfmicrosoftGraphSecurityNetworkProtocol {
	if o == nil  {
		var ret AnyOfmicrosoftGraphSecurityNetworkProtocol
		return ret
	}
	return o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphNetworkConnection) GetProtocolOk() (*AnyOfmicrosoftGraphSecurityNetworkProtocol, bool) {
	if o == nil || o.Protocol == nil {
		return nil, false
	}
	return &o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *MicrosoftGraphNetworkConnection) HasProtocol() bool {
	if o != nil && o.Protocol != nil {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given AnyOfmicrosoftGraphSecurityNetworkProtocol and assigns it to the Protocol field.
func (o *MicrosoftGraphNetworkConnection) SetProtocol(v AnyOfmicrosoftGraphSecurityNetworkProtocol) {
	o.Protocol = v
}

// GetRiskScore returns the RiskScore field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphNetworkConnection) GetRiskScore() string {
	if o == nil || o.RiskScore.Get() == nil {
		var ret string
		return ret
	}
	return *o.RiskScore.Get()
}

// GetRiskScoreOk returns a tuple with the RiskScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphNetworkConnection) GetRiskScoreOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RiskScore.Get(), o.RiskScore.IsSet()
}

// HasRiskScore returns a boolean if a field has been set.
func (o *MicrosoftGraphNetworkConnection) HasRiskScore() bool {
	if o != nil && o.RiskScore.IsSet() {
		return true
	}

	return false
}

// SetRiskScore gets a reference to the given NullableString and assigns it to the RiskScore field.
func (o *MicrosoftGraphNetworkConnection) SetRiskScore(v string) {
	o.RiskScore.Set(&v)
}
// SetRiskScoreNil sets the value for RiskScore to be an explicit nil
func (o *MicrosoftGraphNetworkConnection) SetRiskScoreNil() {
	o.RiskScore.Set(nil)
}

// UnsetRiskScore ensures that no value is present for RiskScore, not even an explicit nil
func (o *MicrosoftGraphNetworkConnection) UnsetRiskScore() {
	o.RiskScore.Unset()
}

// GetSourceAddress returns the SourceAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphNetworkConnection) GetSourceAddress() string {
	if o == nil || o.SourceAddress.Get() == nil {
		var ret string
		return ret
	}
	return *o.SourceAddress.Get()
}

// GetSourceAddressOk returns a tuple with the SourceAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphNetworkConnection) GetSourceAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceAddress.Get(), o.SourceAddress.IsSet()
}

// HasSourceAddress returns a boolean if a field has been set.
func (o *MicrosoftGraphNetworkConnection) HasSourceAddress() bool {
	if o != nil && o.SourceAddress.IsSet() {
		return true
	}

	return false
}

// SetSourceAddress gets a reference to the given NullableString and assigns it to the SourceAddress field.
func (o *MicrosoftGraphNetworkConnection) SetSourceAddress(v string) {
	o.SourceAddress.Set(&v)
}
// SetSourceAddressNil sets the value for SourceAddress to be an explicit nil
func (o *MicrosoftGraphNetworkConnection) SetSourceAddressNil() {
	o.SourceAddress.Set(nil)
}

// UnsetSourceAddress ensures that no value is present for SourceAddress, not even an explicit nil
func (o *MicrosoftGraphNetworkConnection) UnsetSourceAddress() {
	o.SourceAddress.Unset()
}

// GetSourceLocation returns the SourceLocation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphNetworkConnection) GetSourceLocation() string {
	if o == nil || o.SourceLocation.Get() == nil {
		var ret string
		return ret
	}
	return *o.SourceLocation.Get()
}

// GetSourceLocationOk returns a tuple with the SourceLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphNetworkConnection) GetSourceLocationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceLocation.Get(), o.SourceLocation.IsSet()
}

// HasSourceLocation returns a boolean if a field has been set.
func (o *MicrosoftGraphNetworkConnection) HasSourceLocation() bool {
	if o != nil && o.SourceLocation.IsSet() {
		return true
	}

	return false
}

// SetSourceLocation gets a reference to the given NullableString and assigns it to the SourceLocation field.
func (o *MicrosoftGraphNetworkConnection) SetSourceLocation(v string) {
	o.SourceLocation.Set(&v)
}
// SetSourceLocationNil sets the value for SourceLocation to be an explicit nil
func (o *MicrosoftGraphNetworkConnection) SetSourceLocationNil() {
	o.SourceLocation.Set(nil)
}

// UnsetSourceLocation ensures that no value is present for SourceLocation, not even an explicit nil
func (o *MicrosoftGraphNetworkConnection) UnsetSourceLocation() {
	o.SourceLocation.Unset()
}

// GetSourcePort returns the SourcePort field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphNetworkConnection) GetSourcePort() string {
	if o == nil || o.SourcePort.Get() == nil {
		var ret string
		return ret
	}
	return *o.SourcePort.Get()
}

// GetSourcePortOk returns a tuple with the SourcePort field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphNetworkConnection) GetSourcePortOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourcePort.Get(), o.SourcePort.IsSet()
}

// HasSourcePort returns a boolean if a field has been set.
func (o *MicrosoftGraphNetworkConnection) HasSourcePort() bool {
	if o != nil && o.SourcePort.IsSet() {
		return true
	}

	return false
}

// SetSourcePort gets a reference to the given NullableString and assigns it to the SourcePort field.
func (o *MicrosoftGraphNetworkConnection) SetSourcePort(v string) {
	o.SourcePort.Set(&v)
}
// SetSourcePortNil sets the value for SourcePort to be an explicit nil
func (o *MicrosoftGraphNetworkConnection) SetSourcePortNil() {
	o.SourcePort.Set(nil)
}

// UnsetSourcePort ensures that no value is present for SourcePort, not even an explicit nil
func (o *MicrosoftGraphNetworkConnection) UnsetSourcePort() {
	o.SourcePort.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphNetworkConnection) GetStatus() AnyOfmicrosoftGraphConnectionStatus {
	if o == nil  {
		var ret AnyOfmicrosoftGraphConnectionStatus
		return ret
	}
	return o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphNetworkConnection) GetStatusOk() (*AnyOfmicrosoftGraphConnectionStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return &o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MicrosoftGraphNetworkConnection) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given AnyOfmicrosoftGraphConnectionStatus and assigns it to the Status field.
func (o *MicrosoftGraphNetworkConnection) SetStatus(v AnyOfmicrosoftGraphConnectionStatus) {
	o.Status = v
}

// GetUrlParameters returns the UrlParameters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphNetworkConnection) GetUrlParameters() string {
	if o == nil || o.UrlParameters.Get() == nil {
		var ret string
		return ret
	}
	return *o.UrlParameters.Get()
}

// GetUrlParametersOk returns a tuple with the UrlParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphNetworkConnection) GetUrlParametersOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UrlParameters.Get(), o.UrlParameters.IsSet()
}

// HasUrlParameters returns a boolean if a field has been set.
func (o *MicrosoftGraphNetworkConnection) HasUrlParameters() bool {
	if o != nil && o.UrlParameters.IsSet() {
		return true
	}

	return false
}

// SetUrlParameters gets a reference to the given NullableString and assigns it to the UrlParameters field.
func (o *MicrosoftGraphNetworkConnection) SetUrlParameters(v string) {
	o.UrlParameters.Set(&v)
}
// SetUrlParametersNil sets the value for UrlParameters to be an explicit nil
func (o *MicrosoftGraphNetworkConnection) SetUrlParametersNil() {
	o.UrlParameters.Set(nil)
}

// UnsetUrlParameters ensures that no value is present for UrlParameters, not even an explicit nil
func (o *MicrosoftGraphNetworkConnection) UnsetUrlParameters() {
	o.UrlParameters.Unset()
}

func (o MicrosoftGraphNetworkConnection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApplicationName.IsSet() {
		toSerialize["applicationName"] = o.ApplicationName.Get()
	}
	if o.DestinationAddress.IsSet() {
		toSerialize["destinationAddress"] = o.DestinationAddress.Get()
	}
	if o.DestinationDomain.IsSet() {
		toSerialize["destinationDomain"] = o.DestinationDomain.Get()
	}
	if o.DestinationLocation.IsSet() {
		toSerialize["destinationLocation"] = o.DestinationLocation.Get()
	}
	if o.DestinationPort.IsSet() {
		toSerialize["destinationPort"] = o.DestinationPort.Get()
	}
	if o.DestinationUrl.IsSet() {
		toSerialize["destinationUrl"] = o.DestinationUrl.Get()
	}
	if o.Direction != nil {
		toSerialize["direction"] = o.Direction
	}
	if o.DomainRegisteredDateTime.IsSet() {
		toSerialize["domainRegisteredDateTime"] = o.DomainRegisteredDateTime.Get()
	}
	if o.LocalDnsName.IsSet() {
		toSerialize["localDnsName"] = o.LocalDnsName.Get()
	}
	if o.NatDestinationAddress.IsSet() {
		toSerialize["natDestinationAddress"] = o.NatDestinationAddress.Get()
	}
	if o.NatDestinationPort.IsSet() {
		toSerialize["natDestinationPort"] = o.NatDestinationPort.Get()
	}
	if o.NatSourceAddress.IsSet() {
		toSerialize["natSourceAddress"] = o.NatSourceAddress.Get()
	}
	if o.NatSourcePort.IsSet() {
		toSerialize["natSourcePort"] = o.NatSourcePort.Get()
	}
	if o.Protocol != nil {
		toSerialize["protocol"] = o.Protocol
	}
	if o.RiskScore.IsSet() {
		toSerialize["riskScore"] = o.RiskScore.Get()
	}
	if o.SourceAddress.IsSet() {
		toSerialize["sourceAddress"] = o.SourceAddress.Get()
	}
	if o.SourceLocation.IsSet() {
		toSerialize["sourceLocation"] = o.SourceLocation.Get()
	}
	if o.SourcePort.IsSet() {
		toSerialize["sourcePort"] = o.SourcePort.Get()
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.UrlParameters.IsSet() {
		toSerialize["urlParameters"] = o.UrlParameters.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphNetworkConnection struct {
	value *MicrosoftGraphNetworkConnection
	isSet bool
}

func (v NullableMicrosoftGraphNetworkConnection) Get() *MicrosoftGraphNetworkConnection {
	return v.value
}

func (v *NullableMicrosoftGraphNetworkConnection) Set(val *MicrosoftGraphNetworkConnection) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphNetworkConnection) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphNetworkConnection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphNetworkConnection(val *MicrosoftGraphNetworkConnection) *NullableMicrosoftGraphNetworkConnection {
	return &NullableMicrosoftGraphNetworkConnection{value: val, isSet: true}
}

func (v NullableMicrosoftGraphNetworkConnection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphNetworkConnection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


