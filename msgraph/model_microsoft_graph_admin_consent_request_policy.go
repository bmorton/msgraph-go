/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphAdminConsentRequestPolicy struct for MicrosoftGraphAdminConsentRequestPolicy
type MicrosoftGraphAdminConsentRequestPolicy struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// Specifies whether the admin consent request feature is enabled or disabled. Required.
	IsEnabled *bool `json:"isEnabled,omitempty"`
	// Specifies whether reviewers will receive notifications. Required.
	NotifyReviewers *bool `json:"notifyReviewers,omitempty"`
	// Specifies whether reviewers will receive reminder emails. Required.
	RemindersEnabled *bool `json:"remindersEnabled,omitempty"`
	// Specifies the duration the request is active before it automatically expires if no decision is applied.
	RequestDurationInDays *int32 `json:"requestDurationInDays,omitempty"`
	// The list of reviewers for the admin consent. Required.
	Reviewers *[]*AnyOfmicrosoftGraphAccessReviewReviewerScope `json:"reviewers,omitempty"`
	// Specifies the version of this policy. When the policy is updated, this version is updated. Read-only.
	Version *int32 `json:"version,omitempty"`
}

// NewMicrosoftGraphAdminConsentRequestPolicy instantiates a new MicrosoftGraphAdminConsentRequestPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphAdminConsentRequestPolicy() *MicrosoftGraphAdminConsentRequestPolicy {
	this := MicrosoftGraphAdminConsentRequestPolicy{}
	return &this
}

// NewMicrosoftGraphAdminConsentRequestPolicyWithDefaults instantiates a new MicrosoftGraphAdminConsentRequestPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphAdminConsentRequestPolicyWithDefaults() *MicrosoftGraphAdminConsentRequestPolicy {
	this := MicrosoftGraphAdminConsentRequestPolicy{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphAdminConsentRequestPolicy) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAdminConsentRequestPolicy) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphAdminConsentRequestPolicy) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphAdminConsentRequestPolicy) SetId(v string) {
	o.Id = &v
}

// GetIsEnabled returns the IsEnabled field value if set, zero value otherwise.
func (o *MicrosoftGraphAdminConsentRequestPolicy) GetIsEnabled() bool {
	if o == nil || o.IsEnabled == nil {
		var ret bool
		return ret
	}
	return *o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAdminConsentRequestPolicy) GetIsEnabledOk() (*bool, bool) {
	if o == nil || o.IsEnabled == nil {
		return nil, false
	}
	return o.IsEnabled, true
}

// HasIsEnabled returns a boolean if a field has been set.
func (o *MicrosoftGraphAdminConsentRequestPolicy) HasIsEnabled() bool {
	if o != nil && o.IsEnabled != nil {
		return true
	}

	return false
}

// SetIsEnabled gets a reference to the given bool and assigns it to the IsEnabled field.
func (o *MicrosoftGraphAdminConsentRequestPolicy) SetIsEnabled(v bool) {
	o.IsEnabled = &v
}

// GetNotifyReviewers returns the NotifyReviewers field value if set, zero value otherwise.
func (o *MicrosoftGraphAdminConsentRequestPolicy) GetNotifyReviewers() bool {
	if o == nil || o.NotifyReviewers == nil {
		var ret bool
		return ret
	}
	return *o.NotifyReviewers
}

// GetNotifyReviewersOk returns a tuple with the NotifyReviewers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAdminConsentRequestPolicy) GetNotifyReviewersOk() (*bool, bool) {
	if o == nil || o.NotifyReviewers == nil {
		return nil, false
	}
	return o.NotifyReviewers, true
}

// HasNotifyReviewers returns a boolean if a field has been set.
func (o *MicrosoftGraphAdminConsentRequestPolicy) HasNotifyReviewers() bool {
	if o != nil && o.NotifyReviewers != nil {
		return true
	}

	return false
}

// SetNotifyReviewers gets a reference to the given bool and assigns it to the NotifyReviewers field.
func (o *MicrosoftGraphAdminConsentRequestPolicy) SetNotifyReviewers(v bool) {
	o.NotifyReviewers = &v
}

// GetRemindersEnabled returns the RemindersEnabled field value if set, zero value otherwise.
func (o *MicrosoftGraphAdminConsentRequestPolicy) GetRemindersEnabled() bool {
	if o == nil || o.RemindersEnabled == nil {
		var ret bool
		return ret
	}
	return *o.RemindersEnabled
}

// GetRemindersEnabledOk returns a tuple with the RemindersEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAdminConsentRequestPolicy) GetRemindersEnabledOk() (*bool, bool) {
	if o == nil || o.RemindersEnabled == nil {
		return nil, false
	}
	return o.RemindersEnabled, true
}

// HasRemindersEnabled returns a boolean if a field has been set.
func (o *MicrosoftGraphAdminConsentRequestPolicy) HasRemindersEnabled() bool {
	if o != nil && o.RemindersEnabled != nil {
		return true
	}

	return false
}

// SetRemindersEnabled gets a reference to the given bool and assigns it to the RemindersEnabled field.
func (o *MicrosoftGraphAdminConsentRequestPolicy) SetRemindersEnabled(v bool) {
	o.RemindersEnabled = &v
}

// GetRequestDurationInDays returns the RequestDurationInDays field value if set, zero value otherwise.
func (o *MicrosoftGraphAdminConsentRequestPolicy) GetRequestDurationInDays() int32 {
	if o == nil || o.RequestDurationInDays == nil {
		var ret int32
		return ret
	}
	return *o.RequestDurationInDays
}

// GetRequestDurationInDaysOk returns a tuple with the RequestDurationInDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAdminConsentRequestPolicy) GetRequestDurationInDaysOk() (*int32, bool) {
	if o == nil || o.RequestDurationInDays == nil {
		return nil, false
	}
	return o.RequestDurationInDays, true
}

// HasRequestDurationInDays returns a boolean if a field has been set.
func (o *MicrosoftGraphAdminConsentRequestPolicy) HasRequestDurationInDays() bool {
	if o != nil && o.RequestDurationInDays != nil {
		return true
	}

	return false
}

// SetRequestDurationInDays gets a reference to the given int32 and assigns it to the RequestDurationInDays field.
func (o *MicrosoftGraphAdminConsentRequestPolicy) SetRequestDurationInDays(v int32) {
	o.RequestDurationInDays = &v
}

// GetReviewers returns the Reviewers field value if set, zero value otherwise.
func (o *MicrosoftGraphAdminConsentRequestPolicy) GetReviewers() []*AnyOfmicrosoftGraphAccessReviewReviewerScope {
	if o == nil || o.Reviewers == nil {
		var ret []*AnyOfmicrosoftGraphAccessReviewReviewerScope
		return ret
	}
	return *o.Reviewers
}

// GetReviewersOk returns a tuple with the Reviewers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAdminConsentRequestPolicy) GetReviewersOk() (*[]*AnyOfmicrosoftGraphAccessReviewReviewerScope, bool) {
	if o == nil || o.Reviewers == nil {
		return nil, false
	}
	return o.Reviewers, true
}

// HasReviewers returns a boolean if a field has been set.
func (o *MicrosoftGraphAdminConsentRequestPolicy) HasReviewers() bool {
	if o != nil && o.Reviewers != nil {
		return true
	}

	return false
}

// SetReviewers gets a reference to the given []*AnyOfmicrosoftGraphAccessReviewReviewerScope and assigns it to the Reviewers field.
func (o *MicrosoftGraphAdminConsentRequestPolicy) SetReviewers(v []*AnyOfmicrosoftGraphAccessReviewReviewerScope) {
	o.Reviewers = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *MicrosoftGraphAdminConsentRequestPolicy) GetVersion() int32 {
	if o == nil || o.Version == nil {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAdminConsentRequestPolicy) GetVersionOk() (*int32, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *MicrosoftGraphAdminConsentRequestPolicy) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *MicrosoftGraphAdminConsentRequestPolicy) SetVersion(v int32) {
	o.Version = &v
}

func (o MicrosoftGraphAdminConsentRequestPolicy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IsEnabled != nil {
		toSerialize["isEnabled"] = o.IsEnabled
	}
	if o.NotifyReviewers != nil {
		toSerialize["notifyReviewers"] = o.NotifyReviewers
	}
	if o.RemindersEnabled != nil {
		toSerialize["remindersEnabled"] = o.RemindersEnabled
	}
	if o.RequestDurationInDays != nil {
		toSerialize["requestDurationInDays"] = o.RequestDurationInDays
	}
	if o.Reviewers != nil {
		toSerialize["reviewers"] = o.Reviewers
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphAdminConsentRequestPolicy struct {
	value *MicrosoftGraphAdminConsentRequestPolicy
	isSet bool
}

func (v NullableMicrosoftGraphAdminConsentRequestPolicy) Get() *MicrosoftGraphAdminConsentRequestPolicy {
	return v.value
}

func (v *NullableMicrosoftGraphAdminConsentRequestPolicy) Set(val *MicrosoftGraphAdminConsentRequestPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphAdminConsentRequestPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphAdminConsentRequestPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphAdminConsentRequestPolicy(val *MicrosoftGraphAdminConsentRequestPolicy) *NullableMicrosoftGraphAdminConsentRequestPolicy {
	return &NullableMicrosoftGraphAdminConsentRequestPolicy{value: val, isSet: true}
}

func (v NullableMicrosoftGraphAdminConsentRequestPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphAdminConsentRequestPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


