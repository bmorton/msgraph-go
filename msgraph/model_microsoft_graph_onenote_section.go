/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphOnenoteSection struct for MicrosoftGraphOnenoteSection
type MicrosoftGraphOnenoteSection struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// The endpoint where you can get details about the page. Read-only.
	Self NullableString `json:"self,omitempty"`
	// The date and time when the page was created. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
	CreatedDateTime NullableTime `json:"createdDateTime,omitempty"`
	// Identity of the user, device, and application which created the item. Read-only.
	CreatedBy AnyOfmicrosoftGraphIdentitySet `json:"createdBy,omitempty"`
	// The name of the notebook.
	DisplayName NullableString `json:"displayName,omitempty"`
	// Identity of the user, device, and application which created the item. Read-only.
	LastModifiedBy AnyOfmicrosoftGraphIdentitySet `json:"lastModifiedBy,omitempty"`
	// The date and time when the notebook was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
	LastModifiedDateTime NullableTime `json:"lastModifiedDateTime,omitempty"`
	// Indicates whether this is the user's default section. Read-only.
	IsDefault NullableBool `json:"isDefault,omitempty"`
	// Links for opening the section. The oneNoteClientURL link opens the section in the OneNote native client if it's installed. The oneNoteWebURL link opens the section in OneNote on the web.
	Links AnyOfmicrosoftGraphSectionLinks `json:"links,omitempty"`
	// The pages endpoint where you can get details for all the pages in the section. Read-only.
	PagesUrl NullableString `json:"pagesUrl,omitempty"`
	// The collection of pages in the section.  Read-only. Nullable.
	Pages *[]MicrosoftGraphOnenotePage `json:"pages,omitempty"`
	// The notebook that contains the section.  Read-only.
	ParentNotebook AnyOfmicrosoftGraphNotebook `json:"parentNotebook,omitempty"`
	// The section group that contains the section.  Read-only.
	ParentSectionGroup AnyOfmicrosoftGraphSectionGroup `json:"parentSectionGroup,omitempty"`
}

// NewMicrosoftGraphOnenoteSection instantiates a new MicrosoftGraphOnenoteSection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphOnenoteSection() *MicrosoftGraphOnenoteSection {
	this := MicrosoftGraphOnenoteSection{}
	return &this
}

// NewMicrosoftGraphOnenoteSectionWithDefaults instantiates a new MicrosoftGraphOnenoteSection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphOnenoteSectionWithDefaults() *MicrosoftGraphOnenoteSection {
	this := MicrosoftGraphOnenoteSection{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphOnenoteSection) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphOnenoteSection) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphOnenoteSection) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphOnenoteSection) SetId(v string) {
	o.Id = &v
}

// GetSelf returns the Self field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOnenoteSection) GetSelf() string {
	if o == nil || o.Self.Get() == nil {
		var ret string
		return ret
	}
	return *o.Self.Get()
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOnenoteSection) GetSelfOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Self.Get(), o.Self.IsSet()
}

// HasSelf returns a boolean if a field has been set.
func (o *MicrosoftGraphOnenoteSection) HasSelf() bool {
	if o != nil && o.Self.IsSet() {
		return true
	}

	return false
}

// SetSelf gets a reference to the given NullableString and assigns it to the Self field.
func (o *MicrosoftGraphOnenoteSection) SetSelf(v string) {
	o.Self.Set(&v)
}
// SetSelfNil sets the value for Self to be an explicit nil
func (o *MicrosoftGraphOnenoteSection) SetSelfNil() {
	o.Self.Set(nil)
}

// UnsetSelf ensures that no value is present for Self, not even an explicit nil
func (o *MicrosoftGraphOnenoteSection) UnsetSelf() {
	o.Self.Unset()
}

// GetCreatedDateTime returns the CreatedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOnenoteSection) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime.Get()
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOnenoteSection) GetCreatedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatedDateTime.Get(), o.CreatedDateTime.IsSet()
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphOnenoteSection) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime.IsSet() {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given NullableTime and assigns it to the CreatedDateTime field.
func (o *MicrosoftGraphOnenoteSection) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime.Set(&v)
}
// SetCreatedDateTimeNil sets the value for CreatedDateTime to be an explicit nil
func (o *MicrosoftGraphOnenoteSection) SetCreatedDateTimeNil() {
	o.CreatedDateTime.Set(nil)
}

// UnsetCreatedDateTime ensures that no value is present for CreatedDateTime, not even an explicit nil
func (o *MicrosoftGraphOnenoteSection) UnsetCreatedDateTime() {
	o.CreatedDateTime.Unset()
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOnenoteSection) GetCreatedBy() AnyOfmicrosoftGraphIdentitySet {
	if o == nil  {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret
	}
	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOnenoteSection) GetCreatedByOk() (*AnyOfmicrosoftGraphIdentitySet, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *MicrosoftGraphOnenoteSection) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given AnyOfmicrosoftGraphIdentitySet and assigns it to the CreatedBy field.
func (o *MicrosoftGraphOnenoteSection) SetCreatedBy(v AnyOfmicrosoftGraphIdentitySet) {
	o.CreatedBy = v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOnenoteSection) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOnenoteSection) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphOnenoteSection) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *MicrosoftGraphOnenoteSection) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *MicrosoftGraphOnenoteSection) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *MicrosoftGraphOnenoteSection) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetLastModifiedBy returns the LastModifiedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOnenoteSection) GetLastModifiedBy() AnyOfmicrosoftGraphIdentitySet {
	if o == nil  {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret
	}
	return o.LastModifiedBy
}

// GetLastModifiedByOk returns a tuple with the LastModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOnenoteSection) GetLastModifiedByOk() (*AnyOfmicrosoftGraphIdentitySet, bool) {
	if o == nil || o.LastModifiedBy == nil {
		return nil, false
	}
	return &o.LastModifiedBy, true
}

// HasLastModifiedBy returns a boolean if a field has been set.
func (o *MicrosoftGraphOnenoteSection) HasLastModifiedBy() bool {
	if o != nil && o.LastModifiedBy != nil {
		return true
	}

	return false
}

// SetLastModifiedBy gets a reference to the given AnyOfmicrosoftGraphIdentitySet and assigns it to the LastModifiedBy field.
func (o *MicrosoftGraphOnenoteSection) SetLastModifiedBy(v AnyOfmicrosoftGraphIdentitySet) {
	o.LastModifiedBy = v
}

// GetLastModifiedDateTime returns the LastModifiedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOnenoteSection) GetLastModifiedDateTime() time.Time {
	if o == nil || o.LastModifiedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDateTime.Get()
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOnenoteSection) GetLastModifiedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastModifiedDateTime.Get(), o.LastModifiedDateTime.IsSet()
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphOnenoteSection) HasLastModifiedDateTime() bool {
	if o != nil && o.LastModifiedDateTime.IsSet() {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given NullableTime and assigns it to the LastModifiedDateTime field.
func (o *MicrosoftGraphOnenoteSection) SetLastModifiedDateTime(v time.Time) {
	o.LastModifiedDateTime.Set(&v)
}
// SetLastModifiedDateTimeNil sets the value for LastModifiedDateTime to be an explicit nil
func (o *MicrosoftGraphOnenoteSection) SetLastModifiedDateTimeNil() {
	o.LastModifiedDateTime.Set(nil)
}

// UnsetLastModifiedDateTime ensures that no value is present for LastModifiedDateTime, not even an explicit nil
func (o *MicrosoftGraphOnenoteSection) UnsetLastModifiedDateTime() {
	o.LastModifiedDateTime.Unset()
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOnenoteSection) GetIsDefault() bool {
	if o == nil || o.IsDefault.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsDefault.Get()
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOnenoteSection) GetIsDefaultOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsDefault.Get(), o.IsDefault.IsSet()
}

// HasIsDefault returns a boolean if a field has been set.
func (o *MicrosoftGraphOnenoteSection) HasIsDefault() bool {
	if o != nil && o.IsDefault.IsSet() {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given NullableBool and assigns it to the IsDefault field.
func (o *MicrosoftGraphOnenoteSection) SetIsDefault(v bool) {
	o.IsDefault.Set(&v)
}
// SetIsDefaultNil sets the value for IsDefault to be an explicit nil
func (o *MicrosoftGraphOnenoteSection) SetIsDefaultNil() {
	o.IsDefault.Set(nil)
}

// UnsetIsDefault ensures that no value is present for IsDefault, not even an explicit nil
func (o *MicrosoftGraphOnenoteSection) UnsetIsDefault() {
	o.IsDefault.Unset()
}

// GetLinks returns the Links field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOnenoteSection) GetLinks() AnyOfmicrosoftGraphSectionLinks {
	if o == nil  {
		var ret AnyOfmicrosoftGraphSectionLinks
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOnenoteSection) GetLinksOk() (*AnyOfmicrosoftGraphSectionLinks, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return &o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *MicrosoftGraphOnenoteSection) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given AnyOfmicrosoftGraphSectionLinks and assigns it to the Links field.
func (o *MicrosoftGraphOnenoteSection) SetLinks(v AnyOfmicrosoftGraphSectionLinks) {
	o.Links = v
}

// GetPagesUrl returns the PagesUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOnenoteSection) GetPagesUrl() string {
	if o == nil || o.PagesUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.PagesUrl.Get()
}

// GetPagesUrlOk returns a tuple with the PagesUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOnenoteSection) GetPagesUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PagesUrl.Get(), o.PagesUrl.IsSet()
}

// HasPagesUrl returns a boolean if a field has been set.
func (o *MicrosoftGraphOnenoteSection) HasPagesUrl() bool {
	if o != nil && o.PagesUrl.IsSet() {
		return true
	}

	return false
}

// SetPagesUrl gets a reference to the given NullableString and assigns it to the PagesUrl field.
func (o *MicrosoftGraphOnenoteSection) SetPagesUrl(v string) {
	o.PagesUrl.Set(&v)
}
// SetPagesUrlNil sets the value for PagesUrl to be an explicit nil
func (o *MicrosoftGraphOnenoteSection) SetPagesUrlNil() {
	o.PagesUrl.Set(nil)
}

// UnsetPagesUrl ensures that no value is present for PagesUrl, not even an explicit nil
func (o *MicrosoftGraphOnenoteSection) UnsetPagesUrl() {
	o.PagesUrl.Unset()
}

// GetPages returns the Pages field value if set, zero value otherwise.
func (o *MicrosoftGraphOnenoteSection) GetPages() []MicrosoftGraphOnenotePage {
	if o == nil || o.Pages == nil {
		var ret []MicrosoftGraphOnenotePage
		return ret
	}
	return *o.Pages
}

// GetPagesOk returns a tuple with the Pages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphOnenoteSection) GetPagesOk() (*[]MicrosoftGraphOnenotePage, bool) {
	if o == nil || o.Pages == nil {
		return nil, false
	}
	return o.Pages, true
}

// HasPages returns a boolean if a field has been set.
func (o *MicrosoftGraphOnenoteSection) HasPages() bool {
	if o != nil && o.Pages != nil {
		return true
	}

	return false
}

// SetPages gets a reference to the given []MicrosoftGraphOnenotePage and assigns it to the Pages field.
func (o *MicrosoftGraphOnenoteSection) SetPages(v []MicrosoftGraphOnenotePage) {
	o.Pages = &v
}

// GetParentNotebook returns the ParentNotebook field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOnenoteSection) GetParentNotebook() AnyOfmicrosoftGraphNotebook {
	if o == nil  {
		var ret AnyOfmicrosoftGraphNotebook
		return ret
	}
	return o.ParentNotebook
}

// GetParentNotebookOk returns a tuple with the ParentNotebook field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOnenoteSection) GetParentNotebookOk() (*AnyOfmicrosoftGraphNotebook, bool) {
	if o == nil || o.ParentNotebook == nil {
		return nil, false
	}
	return &o.ParentNotebook, true
}

// HasParentNotebook returns a boolean if a field has been set.
func (o *MicrosoftGraphOnenoteSection) HasParentNotebook() bool {
	if o != nil && o.ParentNotebook != nil {
		return true
	}

	return false
}

// SetParentNotebook gets a reference to the given AnyOfmicrosoftGraphNotebook and assigns it to the ParentNotebook field.
func (o *MicrosoftGraphOnenoteSection) SetParentNotebook(v AnyOfmicrosoftGraphNotebook) {
	o.ParentNotebook = v
}

// GetParentSectionGroup returns the ParentSectionGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOnenoteSection) GetParentSectionGroup() AnyOfmicrosoftGraphSectionGroup {
	if o == nil  {
		var ret AnyOfmicrosoftGraphSectionGroup
		return ret
	}
	return o.ParentSectionGroup
}

// GetParentSectionGroupOk returns a tuple with the ParentSectionGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOnenoteSection) GetParentSectionGroupOk() (*AnyOfmicrosoftGraphSectionGroup, bool) {
	if o == nil || o.ParentSectionGroup == nil {
		return nil, false
	}
	return &o.ParentSectionGroup, true
}

// HasParentSectionGroup returns a boolean if a field has been set.
func (o *MicrosoftGraphOnenoteSection) HasParentSectionGroup() bool {
	if o != nil && o.ParentSectionGroup != nil {
		return true
	}

	return false
}

// SetParentSectionGroup gets a reference to the given AnyOfmicrosoftGraphSectionGroup and assigns it to the ParentSectionGroup field.
func (o *MicrosoftGraphOnenoteSection) SetParentSectionGroup(v AnyOfmicrosoftGraphSectionGroup) {
	o.ParentSectionGroup = v
}

func (o MicrosoftGraphOnenoteSection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Self.IsSet() {
		toSerialize["self"] = o.Self.Get()
	}
	if o.CreatedDateTime.IsSet() {
		toSerialize["createdDateTime"] = o.CreatedDateTime.Get()
	}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.LastModifiedBy != nil {
		toSerialize["lastModifiedBy"] = o.LastModifiedBy
	}
	if o.LastModifiedDateTime.IsSet() {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime.Get()
	}
	if o.IsDefault.IsSet() {
		toSerialize["isDefault"] = o.IsDefault.Get()
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.PagesUrl.IsSet() {
		toSerialize["pagesUrl"] = o.PagesUrl.Get()
	}
	if o.Pages != nil {
		toSerialize["pages"] = o.Pages
	}
	if o.ParentNotebook != nil {
		toSerialize["parentNotebook"] = o.ParentNotebook
	}
	if o.ParentSectionGroup != nil {
		toSerialize["parentSectionGroup"] = o.ParentSectionGroup
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphOnenoteSection struct {
	value *MicrosoftGraphOnenoteSection
	isSet bool
}

func (v NullableMicrosoftGraphOnenoteSection) Get() *MicrosoftGraphOnenoteSection {
	return v.value
}

func (v *NullableMicrosoftGraphOnenoteSection) Set(val *MicrosoftGraphOnenoteSection) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphOnenoteSection) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphOnenoteSection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphOnenoteSection(val *MicrosoftGraphOnenoteSection) *NullableMicrosoftGraphOnenoteSection {
	return &NullableMicrosoftGraphOnenoteSection{value: val, isSet: true}
}

func (v NullableMicrosoftGraphOnenoteSection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphOnenoteSection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


