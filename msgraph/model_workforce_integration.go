/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// WorkforceIntegration struct for WorkforceIntegration
type WorkforceIntegration struct {
	// API version for the call back URL. Start with 1.
	ApiVersion NullableInt32 `json:"apiVersion,omitempty"`
	// Name of the workforce integration.
	DisplayName NullableString `json:"displayName,omitempty"`
	// The workforce integration encryption resource.
	Encryption AnyOfmicrosoftGraphWorkforceIntegrationEncryption `json:"encryption,omitempty"`
	// Indicates whether this workforce integration is currently active and available.
	IsActive NullableBool `json:"isActive,omitempty"`
	// The Shifts entities supported for synchronous change notifications. Shifts will make a call back to the url provided on client changes on those entities added here. By default, no entities are supported for change notifications. Possible values are: none, shift, swapRequest, userShiftPreferences, openshift, openShiftRequest, offerShiftRequest, unknownFutureValue.
	SupportedEntities AnyOfmicrosoftGraphWorkforceIntegrationSupportedEntities `json:"supportedEntities,omitempty"`
	// Workforce Integration URL for callbacks from the Shifts service.
	Url NullableString `json:"url,omitempty"`
}

// NewWorkforceIntegration instantiates a new WorkforceIntegration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkforceIntegration() *WorkforceIntegration {
	this := WorkforceIntegration{}
	return &this
}

// NewWorkforceIntegrationWithDefaults instantiates a new WorkforceIntegration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkforceIntegrationWithDefaults() *WorkforceIntegration {
	this := WorkforceIntegration{}
	return &this
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkforceIntegration) GetApiVersion() int32 {
	if o == nil || o.ApiVersion.Get() == nil {
		var ret int32
		return ret
	}
	return *o.ApiVersion.Get()
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkforceIntegration) GetApiVersionOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ApiVersion.Get(), o.ApiVersion.IsSet()
}

// HasApiVersion returns a boolean if a field has been set.
func (o *WorkforceIntegration) HasApiVersion() bool {
	if o != nil && o.ApiVersion.IsSet() {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given NullableInt32 and assigns it to the ApiVersion field.
func (o *WorkforceIntegration) SetApiVersion(v int32) {
	o.ApiVersion.Set(&v)
}
// SetApiVersionNil sets the value for ApiVersion to be an explicit nil
func (o *WorkforceIntegration) SetApiVersionNil() {
	o.ApiVersion.Set(nil)
}

// UnsetApiVersion ensures that no value is present for ApiVersion, not even an explicit nil
func (o *WorkforceIntegration) UnsetApiVersion() {
	o.ApiVersion.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkforceIntegration) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkforceIntegration) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *WorkforceIntegration) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *WorkforceIntegration) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *WorkforceIntegration) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *WorkforceIntegration) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetEncryption returns the Encryption field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkforceIntegration) GetEncryption() AnyOfmicrosoftGraphWorkforceIntegrationEncryption {
	if o == nil  {
		var ret AnyOfmicrosoftGraphWorkforceIntegrationEncryption
		return ret
	}
	return o.Encryption
}

// GetEncryptionOk returns a tuple with the Encryption field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkforceIntegration) GetEncryptionOk() (*AnyOfmicrosoftGraphWorkforceIntegrationEncryption, bool) {
	if o == nil || o.Encryption == nil {
		return nil, false
	}
	return &o.Encryption, true
}

// HasEncryption returns a boolean if a field has been set.
func (o *WorkforceIntegration) HasEncryption() bool {
	if o != nil && o.Encryption != nil {
		return true
	}

	return false
}

// SetEncryption gets a reference to the given AnyOfmicrosoftGraphWorkforceIntegrationEncryption and assigns it to the Encryption field.
func (o *WorkforceIntegration) SetEncryption(v AnyOfmicrosoftGraphWorkforceIntegrationEncryption) {
	o.Encryption = v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkforceIntegration) GetIsActive() bool {
	if o == nil || o.IsActive.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsActive.Get()
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkforceIntegration) GetIsActiveOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsActive.Get(), o.IsActive.IsSet()
}

// HasIsActive returns a boolean if a field has been set.
func (o *WorkforceIntegration) HasIsActive() bool {
	if o != nil && o.IsActive.IsSet() {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given NullableBool and assigns it to the IsActive field.
func (o *WorkforceIntegration) SetIsActive(v bool) {
	o.IsActive.Set(&v)
}
// SetIsActiveNil sets the value for IsActive to be an explicit nil
func (o *WorkforceIntegration) SetIsActiveNil() {
	o.IsActive.Set(nil)
}

// UnsetIsActive ensures that no value is present for IsActive, not even an explicit nil
func (o *WorkforceIntegration) UnsetIsActive() {
	o.IsActive.Unset()
}

// GetSupportedEntities returns the SupportedEntities field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkforceIntegration) GetSupportedEntities() AnyOfmicrosoftGraphWorkforceIntegrationSupportedEntities {
	if o == nil  {
		var ret AnyOfmicrosoftGraphWorkforceIntegrationSupportedEntities
		return ret
	}
	return o.SupportedEntities
}

// GetSupportedEntitiesOk returns a tuple with the SupportedEntities field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkforceIntegration) GetSupportedEntitiesOk() (*AnyOfmicrosoftGraphWorkforceIntegrationSupportedEntities, bool) {
	if o == nil || o.SupportedEntities == nil {
		return nil, false
	}
	return &o.SupportedEntities, true
}

// HasSupportedEntities returns a boolean if a field has been set.
func (o *WorkforceIntegration) HasSupportedEntities() bool {
	if o != nil && o.SupportedEntities != nil {
		return true
	}

	return false
}

// SetSupportedEntities gets a reference to the given AnyOfmicrosoftGraphWorkforceIntegrationSupportedEntities and assigns it to the SupportedEntities field.
func (o *WorkforceIntegration) SetSupportedEntities(v AnyOfmicrosoftGraphWorkforceIntegrationSupportedEntities) {
	o.SupportedEntities = v
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkforceIntegration) GetUrl() string {
	if o == nil || o.Url.Get() == nil {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkforceIntegration) GetUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *WorkforceIntegration) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *WorkforceIntegration) SetUrl(v string) {
	o.Url.Set(&v)
}
// SetUrlNil sets the value for Url to be an explicit nil
func (o *WorkforceIntegration) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *WorkforceIntegration) UnsetUrl() {
	o.Url.Unset()
}

func (o WorkforceIntegration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApiVersion.IsSet() {
		toSerialize["apiVersion"] = o.ApiVersion.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.Encryption != nil {
		toSerialize["encryption"] = o.Encryption
	}
	if o.IsActive.IsSet() {
		toSerialize["isActive"] = o.IsActive.Get()
	}
	if o.SupportedEntities != nil {
		toSerialize["supportedEntities"] = o.SupportedEntities
	}
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableWorkforceIntegration struct {
	value *WorkforceIntegration
	isSet bool
}

func (v NullableWorkforceIntegration) Get() *WorkforceIntegration {
	return v.value
}

func (v *NullableWorkforceIntegration) Set(val *WorkforceIntegration) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkforceIntegration) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkforceIntegration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkforceIntegration(val *WorkforceIntegration) *NullableWorkforceIntegration {
	return &NullableWorkforceIntegration{value: val, isSet: true}
}

func (v NullableWorkforceIntegration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkforceIntegration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


