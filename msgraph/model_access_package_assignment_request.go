/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// AccessPackageAssignmentRequest struct for AccessPackageAssignmentRequest
type AccessPackageAssignmentRequest struct {
	CompletedDateTime NullableTime `json:"completedDateTime,omitempty"`
	// The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
	CreatedDateTime NullableTime `json:"createdDateTime,omitempty"`
	// The type of the request. The possible values are: notSpecified, userAdd, userUpdate, userRemove, adminAdd, adminUpdate, adminRemove, systemAdd, systemUpdate, systemRemove, onBehalfAdd, unknownFutureValue. A request from the user themselves would have requestType of UserAdd or UserRemove. This property cannot be changed once set.
	RequestType AnyOfmicrosoftGraphAccessPackageRequestType `json:"requestType,omitempty"`
	// The range of dates that access is to be assigned to the requestor. This property cannot be changed once set.
	Schedule AnyOfmicrosoftGraphEntitlementManagementSchedule `json:"schedule,omitempty"`
	// The state of the request. The possible values are: submitted, pendingApproval, delivering, delivered, deliveryFailed, denied, scheduled, canceled, partiallyDelivered, unknownFutureValue. Read-only.
	State AnyOfmicrosoftGraphAccessPackageRequestState `json:"state,omitempty"`
	// More information on the request processing status. Read-only.
	Status NullableString `json:"status,omitempty"`
	// The access package associated with the accessPackageAssignmentRequest. An access package defines the collections of resource roles and the policies for how one or more users can get access to those resources. Read-only. Nullable.  Supports $expand.
	AccessPackage AnyOfmicrosoftGraphAccessPackage `json:"accessPackage,omitempty"`
	// For a requestType of UserAdd or AdminAdd, this is an access package assignment requested to be created.  For a requestType of UserRemove, AdminRemove or SystemRemove, this has the id property of an existing assignment to be removed.   Supports $expand.
	Assignment AnyOfmicrosoftGraphAccessPackageAssignment `json:"assignment,omitempty"`
	// The subject who requested or, if a direct assignment, was assigned. Read-only. Nullable. Supports $expand.
	Requestor AnyOfmicrosoftGraphAccessPackageSubject `json:"requestor,omitempty"`
}

// NewAccessPackageAssignmentRequest instantiates a new AccessPackageAssignmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessPackageAssignmentRequest() *AccessPackageAssignmentRequest {
	this := AccessPackageAssignmentRequest{}
	return &this
}

// NewAccessPackageAssignmentRequestWithDefaults instantiates a new AccessPackageAssignmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessPackageAssignmentRequestWithDefaults() *AccessPackageAssignmentRequest {
	this := AccessPackageAssignmentRequest{}
	return &this
}

// GetCompletedDateTime returns the CompletedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessPackageAssignmentRequest) GetCompletedDateTime() time.Time {
	if o == nil || o.CompletedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.CompletedDateTime.Get()
}

// GetCompletedDateTimeOk returns a tuple with the CompletedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessPackageAssignmentRequest) GetCompletedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CompletedDateTime.Get(), o.CompletedDateTime.IsSet()
}

// HasCompletedDateTime returns a boolean if a field has been set.
func (o *AccessPackageAssignmentRequest) HasCompletedDateTime() bool {
	if o != nil && o.CompletedDateTime.IsSet() {
		return true
	}

	return false
}

// SetCompletedDateTime gets a reference to the given NullableTime and assigns it to the CompletedDateTime field.
func (o *AccessPackageAssignmentRequest) SetCompletedDateTime(v time.Time) {
	o.CompletedDateTime.Set(&v)
}
// SetCompletedDateTimeNil sets the value for CompletedDateTime to be an explicit nil
func (o *AccessPackageAssignmentRequest) SetCompletedDateTimeNil() {
	o.CompletedDateTime.Set(nil)
}

// UnsetCompletedDateTime ensures that no value is present for CompletedDateTime, not even an explicit nil
func (o *AccessPackageAssignmentRequest) UnsetCompletedDateTime() {
	o.CompletedDateTime.Unset()
}

// GetCreatedDateTime returns the CreatedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessPackageAssignmentRequest) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime.Get()
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessPackageAssignmentRequest) GetCreatedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatedDateTime.Get(), o.CreatedDateTime.IsSet()
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *AccessPackageAssignmentRequest) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime.IsSet() {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given NullableTime and assigns it to the CreatedDateTime field.
func (o *AccessPackageAssignmentRequest) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime.Set(&v)
}
// SetCreatedDateTimeNil sets the value for CreatedDateTime to be an explicit nil
func (o *AccessPackageAssignmentRequest) SetCreatedDateTimeNil() {
	o.CreatedDateTime.Set(nil)
}

// UnsetCreatedDateTime ensures that no value is present for CreatedDateTime, not even an explicit nil
func (o *AccessPackageAssignmentRequest) UnsetCreatedDateTime() {
	o.CreatedDateTime.Unset()
}

// GetRequestType returns the RequestType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessPackageAssignmentRequest) GetRequestType() AnyOfmicrosoftGraphAccessPackageRequestType {
	if o == nil  {
		var ret AnyOfmicrosoftGraphAccessPackageRequestType
		return ret
	}
	return o.RequestType
}

// GetRequestTypeOk returns a tuple with the RequestType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessPackageAssignmentRequest) GetRequestTypeOk() (*AnyOfmicrosoftGraphAccessPackageRequestType, bool) {
	if o == nil || o.RequestType == nil {
		return nil, false
	}
	return &o.RequestType, true
}

// HasRequestType returns a boolean if a field has been set.
func (o *AccessPackageAssignmentRequest) HasRequestType() bool {
	if o != nil && o.RequestType != nil {
		return true
	}

	return false
}

// SetRequestType gets a reference to the given AnyOfmicrosoftGraphAccessPackageRequestType and assigns it to the RequestType field.
func (o *AccessPackageAssignmentRequest) SetRequestType(v AnyOfmicrosoftGraphAccessPackageRequestType) {
	o.RequestType = v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessPackageAssignmentRequest) GetSchedule() AnyOfmicrosoftGraphEntitlementManagementSchedule {
	if o == nil  {
		var ret AnyOfmicrosoftGraphEntitlementManagementSchedule
		return ret
	}
	return o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessPackageAssignmentRequest) GetScheduleOk() (*AnyOfmicrosoftGraphEntitlementManagementSchedule, bool) {
	if o == nil || o.Schedule == nil {
		return nil, false
	}
	return &o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *AccessPackageAssignmentRequest) HasSchedule() bool {
	if o != nil && o.Schedule != nil {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given AnyOfmicrosoftGraphEntitlementManagementSchedule and assigns it to the Schedule field.
func (o *AccessPackageAssignmentRequest) SetSchedule(v AnyOfmicrosoftGraphEntitlementManagementSchedule) {
	o.Schedule = v
}

// GetState returns the State field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessPackageAssignmentRequest) GetState() AnyOfmicrosoftGraphAccessPackageRequestState {
	if o == nil  {
		var ret AnyOfmicrosoftGraphAccessPackageRequestState
		return ret
	}
	return o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessPackageAssignmentRequest) GetStateOk() (*AnyOfmicrosoftGraphAccessPackageRequestState, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return &o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *AccessPackageAssignmentRequest) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given AnyOfmicrosoftGraphAccessPackageRequestState and assigns it to the State field.
func (o *AccessPackageAssignmentRequest) SetState(v AnyOfmicrosoftGraphAccessPackageRequestState) {
	o.State = v
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessPackageAssignmentRequest) GetStatus() string {
	if o == nil || o.Status.Get() == nil {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessPackageAssignmentRequest) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *AccessPackageAssignmentRequest) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *AccessPackageAssignmentRequest) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *AccessPackageAssignmentRequest) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *AccessPackageAssignmentRequest) UnsetStatus() {
	o.Status.Unset()
}

// GetAccessPackage returns the AccessPackage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessPackageAssignmentRequest) GetAccessPackage() AnyOfmicrosoftGraphAccessPackage {
	if o == nil  {
		var ret AnyOfmicrosoftGraphAccessPackage
		return ret
	}
	return o.AccessPackage
}

// GetAccessPackageOk returns a tuple with the AccessPackage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessPackageAssignmentRequest) GetAccessPackageOk() (*AnyOfmicrosoftGraphAccessPackage, bool) {
	if o == nil || o.AccessPackage == nil {
		return nil, false
	}
	return &o.AccessPackage, true
}

// HasAccessPackage returns a boolean if a field has been set.
func (o *AccessPackageAssignmentRequest) HasAccessPackage() bool {
	if o != nil && o.AccessPackage != nil {
		return true
	}

	return false
}

// SetAccessPackage gets a reference to the given AnyOfmicrosoftGraphAccessPackage and assigns it to the AccessPackage field.
func (o *AccessPackageAssignmentRequest) SetAccessPackage(v AnyOfmicrosoftGraphAccessPackage) {
	o.AccessPackage = v
}

// GetAssignment returns the Assignment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessPackageAssignmentRequest) GetAssignment() AnyOfmicrosoftGraphAccessPackageAssignment {
	if o == nil  {
		var ret AnyOfmicrosoftGraphAccessPackageAssignment
		return ret
	}
	return o.Assignment
}

// GetAssignmentOk returns a tuple with the Assignment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessPackageAssignmentRequest) GetAssignmentOk() (*AnyOfmicrosoftGraphAccessPackageAssignment, bool) {
	if o == nil || o.Assignment == nil {
		return nil, false
	}
	return &o.Assignment, true
}

// HasAssignment returns a boolean if a field has been set.
func (o *AccessPackageAssignmentRequest) HasAssignment() bool {
	if o != nil && o.Assignment != nil {
		return true
	}

	return false
}

// SetAssignment gets a reference to the given AnyOfmicrosoftGraphAccessPackageAssignment and assigns it to the Assignment field.
func (o *AccessPackageAssignmentRequest) SetAssignment(v AnyOfmicrosoftGraphAccessPackageAssignment) {
	o.Assignment = v
}

// GetRequestor returns the Requestor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessPackageAssignmentRequest) GetRequestor() AnyOfmicrosoftGraphAccessPackageSubject {
	if o == nil  {
		var ret AnyOfmicrosoftGraphAccessPackageSubject
		return ret
	}
	return o.Requestor
}

// GetRequestorOk returns a tuple with the Requestor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessPackageAssignmentRequest) GetRequestorOk() (*AnyOfmicrosoftGraphAccessPackageSubject, bool) {
	if o == nil || o.Requestor == nil {
		return nil, false
	}
	return &o.Requestor, true
}

// HasRequestor returns a boolean if a field has been set.
func (o *AccessPackageAssignmentRequest) HasRequestor() bool {
	if o != nil && o.Requestor != nil {
		return true
	}

	return false
}

// SetRequestor gets a reference to the given AnyOfmicrosoftGraphAccessPackageSubject and assigns it to the Requestor field.
func (o *AccessPackageAssignmentRequest) SetRequestor(v AnyOfmicrosoftGraphAccessPackageSubject) {
	o.Requestor = v
}

func (o AccessPackageAssignmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CompletedDateTime.IsSet() {
		toSerialize["completedDateTime"] = o.CompletedDateTime.Get()
	}
	if o.CreatedDateTime.IsSet() {
		toSerialize["createdDateTime"] = o.CreatedDateTime.Get()
	}
	if o.RequestType != nil {
		toSerialize["requestType"] = o.RequestType
	}
	if o.Schedule != nil {
		toSerialize["schedule"] = o.Schedule
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.AccessPackage != nil {
		toSerialize["accessPackage"] = o.AccessPackage
	}
	if o.Assignment != nil {
		toSerialize["assignment"] = o.Assignment
	}
	if o.Requestor != nil {
		toSerialize["requestor"] = o.Requestor
	}
	return json.Marshal(toSerialize)
}

type NullableAccessPackageAssignmentRequest struct {
	value *AccessPackageAssignmentRequest
	isSet bool
}

func (v NullableAccessPackageAssignmentRequest) Get() *AccessPackageAssignmentRequest {
	return v.value
}

func (v *NullableAccessPackageAssignmentRequest) Set(val *AccessPackageAssignmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessPackageAssignmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessPackageAssignmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessPackageAssignmentRequest(val *AccessPackageAssignmentRequest) *NullableAccessPackageAssignmentRequest {
	return &NullableAccessPackageAssignmentRequest{value: val, isSet: true}
}

func (v NullableAccessPackageAssignmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessPackageAssignmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


