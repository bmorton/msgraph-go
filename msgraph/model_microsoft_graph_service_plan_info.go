/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphServicePlanInfo struct for MicrosoftGraphServicePlanInfo
type MicrosoftGraphServicePlanInfo struct {
	// The object the service plan can be assigned to. Possible values:'User' - service plan can be assigned to individual users.'Company' - service plan can be assigned to the entire tenant.
	AppliesTo NullableString `json:"appliesTo,omitempty"`
	// The provisioning status of the service plan. Possible values:'Success' - Service is fully provisioned.'Disabled' - Service has been disabled.'PendingInput' - Service is not yet provisioned; awaiting service confirmation.'PendingActivation' - Service is provisioned but requires explicit activation by administrator (for example, Intune_O365 service plan)'PendingProvisioning' - Microsoft has added a new service to the product SKU and it has not been activated in the tenant, yet.
	ProvisioningStatus NullableString `json:"provisioningStatus,omitempty"`
	// The unique identifier of the service plan.
	ServicePlanId NullableString `json:"servicePlanId,omitempty"`
	// The name of the service plan.
	ServicePlanName NullableString `json:"servicePlanName,omitempty"`
}

// NewMicrosoftGraphServicePlanInfo instantiates a new MicrosoftGraphServicePlanInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphServicePlanInfo() *MicrosoftGraphServicePlanInfo {
	this := MicrosoftGraphServicePlanInfo{}
	return &this
}

// NewMicrosoftGraphServicePlanInfoWithDefaults instantiates a new MicrosoftGraphServicePlanInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphServicePlanInfoWithDefaults() *MicrosoftGraphServicePlanInfo {
	this := MicrosoftGraphServicePlanInfo{}
	return &this
}

// GetAppliesTo returns the AppliesTo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphServicePlanInfo) GetAppliesTo() string {
	if o == nil || o.AppliesTo.Get() == nil {
		var ret string
		return ret
	}
	return *o.AppliesTo.Get()
}

// GetAppliesToOk returns a tuple with the AppliesTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphServicePlanInfo) GetAppliesToOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AppliesTo.Get(), o.AppliesTo.IsSet()
}

// HasAppliesTo returns a boolean if a field has been set.
func (o *MicrosoftGraphServicePlanInfo) HasAppliesTo() bool {
	if o != nil && o.AppliesTo.IsSet() {
		return true
	}

	return false
}

// SetAppliesTo gets a reference to the given NullableString and assigns it to the AppliesTo field.
func (o *MicrosoftGraphServicePlanInfo) SetAppliesTo(v string) {
	o.AppliesTo.Set(&v)
}
// SetAppliesToNil sets the value for AppliesTo to be an explicit nil
func (o *MicrosoftGraphServicePlanInfo) SetAppliesToNil() {
	o.AppliesTo.Set(nil)
}

// UnsetAppliesTo ensures that no value is present for AppliesTo, not even an explicit nil
func (o *MicrosoftGraphServicePlanInfo) UnsetAppliesTo() {
	o.AppliesTo.Unset()
}

// GetProvisioningStatus returns the ProvisioningStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphServicePlanInfo) GetProvisioningStatus() string {
	if o == nil || o.ProvisioningStatus.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProvisioningStatus.Get()
}

// GetProvisioningStatusOk returns a tuple with the ProvisioningStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphServicePlanInfo) GetProvisioningStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProvisioningStatus.Get(), o.ProvisioningStatus.IsSet()
}

// HasProvisioningStatus returns a boolean if a field has been set.
func (o *MicrosoftGraphServicePlanInfo) HasProvisioningStatus() bool {
	if o != nil && o.ProvisioningStatus.IsSet() {
		return true
	}

	return false
}

// SetProvisioningStatus gets a reference to the given NullableString and assigns it to the ProvisioningStatus field.
func (o *MicrosoftGraphServicePlanInfo) SetProvisioningStatus(v string) {
	o.ProvisioningStatus.Set(&v)
}
// SetProvisioningStatusNil sets the value for ProvisioningStatus to be an explicit nil
func (o *MicrosoftGraphServicePlanInfo) SetProvisioningStatusNil() {
	o.ProvisioningStatus.Set(nil)
}

// UnsetProvisioningStatus ensures that no value is present for ProvisioningStatus, not even an explicit nil
func (o *MicrosoftGraphServicePlanInfo) UnsetProvisioningStatus() {
	o.ProvisioningStatus.Unset()
}

// GetServicePlanId returns the ServicePlanId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphServicePlanInfo) GetServicePlanId() string {
	if o == nil || o.ServicePlanId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ServicePlanId.Get()
}

// GetServicePlanIdOk returns a tuple with the ServicePlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphServicePlanInfo) GetServicePlanIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ServicePlanId.Get(), o.ServicePlanId.IsSet()
}

// HasServicePlanId returns a boolean if a field has been set.
func (o *MicrosoftGraphServicePlanInfo) HasServicePlanId() bool {
	if o != nil && o.ServicePlanId.IsSet() {
		return true
	}

	return false
}

// SetServicePlanId gets a reference to the given NullableString and assigns it to the ServicePlanId field.
func (o *MicrosoftGraphServicePlanInfo) SetServicePlanId(v string) {
	o.ServicePlanId.Set(&v)
}
// SetServicePlanIdNil sets the value for ServicePlanId to be an explicit nil
func (o *MicrosoftGraphServicePlanInfo) SetServicePlanIdNil() {
	o.ServicePlanId.Set(nil)
}

// UnsetServicePlanId ensures that no value is present for ServicePlanId, not even an explicit nil
func (o *MicrosoftGraphServicePlanInfo) UnsetServicePlanId() {
	o.ServicePlanId.Unset()
}

// GetServicePlanName returns the ServicePlanName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphServicePlanInfo) GetServicePlanName() string {
	if o == nil || o.ServicePlanName.Get() == nil {
		var ret string
		return ret
	}
	return *o.ServicePlanName.Get()
}

// GetServicePlanNameOk returns a tuple with the ServicePlanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphServicePlanInfo) GetServicePlanNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ServicePlanName.Get(), o.ServicePlanName.IsSet()
}

// HasServicePlanName returns a boolean if a field has been set.
func (o *MicrosoftGraphServicePlanInfo) HasServicePlanName() bool {
	if o != nil && o.ServicePlanName.IsSet() {
		return true
	}

	return false
}

// SetServicePlanName gets a reference to the given NullableString and assigns it to the ServicePlanName field.
func (o *MicrosoftGraphServicePlanInfo) SetServicePlanName(v string) {
	o.ServicePlanName.Set(&v)
}
// SetServicePlanNameNil sets the value for ServicePlanName to be an explicit nil
func (o *MicrosoftGraphServicePlanInfo) SetServicePlanNameNil() {
	o.ServicePlanName.Set(nil)
}

// UnsetServicePlanName ensures that no value is present for ServicePlanName, not even an explicit nil
func (o *MicrosoftGraphServicePlanInfo) UnsetServicePlanName() {
	o.ServicePlanName.Unset()
}

func (o MicrosoftGraphServicePlanInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AppliesTo.IsSet() {
		toSerialize["appliesTo"] = o.AppliesTo.Get()
	}
	if o.ProvisioningStatus.IsSet() {
		toSerialize["provisioningStatus"] = o.ProvisioningStatus.Get()
	}
	if o.ServicePlanId.IsSet() {
		toSerialize["servicePlanId"] = o.ServicePlanId.Get()
	}
	if o.ServicePlanName.IsSet() {
		toSerialize["servicePlanName"] = o.ServicePlanName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphServicePlanInfo struct {
	value *MicrosoftGraphServicePlanInfo
	isSet bool
}

func (v NullableMicrosoftGraphServicePlanInfo) Get() *MicrosoftGraphServicePlanInfo {
	return v.value
}

func (v *NullableMicrosoftGraphServicePlanInfo) Set(val *MicrosoftGraphServicePlanInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphServicePlanInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphServicePlanInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphServicePlanInfo(val *MicrosoftGraphServicePlanInfo) *NullableMicrosoftGraphServicePlanInfo {
	return &NullableMicrosoftGraphServicePlanInfo{value: val, isSet: true}
}

func (v NullableMicrosoftGraphServicePlanInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphServicePlanInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


