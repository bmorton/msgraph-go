/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphAccessPackageRequestType the model 'MicrosoftGraphAccessPackageRequestType'
type MicrosoftGraphAccessPackageRequestType string

// List of microsoft.graph.accessPackageRequestType
const (
	NOT_SPECIFIED MicrosoftGraphAccessPackageRequestType = "notSpecified"
	USER_ADD MicrosoftGraphAccessPackageRequestType = "userAdd"
	USER_UPDATE MicrosoftGraphAccessPackageRequestType = "userUpdate"
	USER_REMOVE MicrosoftGraphAccessPackageRequestType = "userRemove"
	ADMIN_ADD MicrosoftGraphAccessPackageRequestType = "adminAdd"
	ADMIN_UPDATE MicrosoftGraphAccessPackageRequestType = "adminUpdate"
	ADMIN_REMOVE MicrosoftGraphAccessPackageRequestType = "adminRemove"
	SYSTEM_ADD MicrosoftGraphAccessPackageRequestType = "systemAdd"
	SYSTEM_UPDATE MicrosoftGraphAccessPackageRequestType = "systemUpdate"
	SYSTEM_REMOVE MicrosoftGraphAccessPackageRequestType = "systemRemove"
	ON_BEHALF_ADD MicrosoftGraphAccessPackageRequestType = "onBehalfAdd"
	UNKNOWN_FUTURE_VALUE MicrosoftGraphAccessPackageRequestType = "unknownFutureValue"
)

// All allowed values of MicrosoftGraphAccessPackageRequestType enum
var AllowedMicrosoftGraphAccessPackageRequestTypeEnumValues = []MicrosoftGraphAccessPackageRequestType{
	"notSpecified",
	"userAdd",
	"userUpdate",
	"userRemove",
	"adminAdd",
	"adminUpdate",
	"adminRemove",
	"systemAdd",
	"systemUpdate",
	"systemRemove",
	"onBehalfAdd",
	"unknownFutureValue",
}

func (v *MicrosoftGraphAccessPackageRequestType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphAccessPackageRequestType(value)
	for _, existing := range AllowedMicrosoftGraphAccessPackageRequestTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphAccessPackageRequestType", value)
}

// NewMicrosoftGraphAccessPackageRequestTypeFromValue returns a pointer to a valid MicrosoftGraphAccessPackageRequestType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphAccessPackageRequestTypeFromValue(v string) (*MicrosoftGraphAccessPackageRequestType, error) {
	ev := MicrosoftGraphAccessPackageRequestType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphAccessPackageRequestType: valid values are %v", v, AllowedMicrosoftGraphAccessPackageRequestTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphAccessPackageRequestType) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphAccessPackageRequestTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.accessPackageRequestType value
func (v MicrosoftGraphAccessPackageRequestType) Ptr() *MicrosoftGraphAccessPackageRequestType {
	return &v
}

type NullableMicrosoftGraphAccessPackageRequestType struct {
	value *MicrosoftGraphAccessPackageRequestType
	isSet bool
}

func (v NullableMicrosoftGraphAccessPackageRequestType) Get() *MicrosoftGraphAccessPackageRequestType {
	return v.value
}

func (v *NullableMicrosoftGraphAccessPackageRequestType) Set(val *MicrosoftGraphAccessPackageRequestType) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphAccessPackageRequestType) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphAccessPackageRequestType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphAccessPackageRequestType(val *MicrosoftGraphAccessPackageRequestType) *NullableMicrosoftGraphAccessPackageRequestType {
	return &NullableMicrosoftGraphAccessPackageRequestType{value: val, isSet: true}
}

func (v NullableMicrosoftGraphAccessPackageRequestType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphAccessPackageRequestType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

