/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// InlineObject1236 struct for InlineObject1236
type InlineObject1236 struct {
	Probability AnyOfobject `json:"probability,omitempty"`
	Alpha AnyOfobject `json:"alpha,omitempty"`
	Beta AnyOfobject `json:"beta,omitempty"`
	A AnyOfobject `json:"A,omitempty"`
	B AnyOfobject `json:"B,omitempty"`
}

// NewInlineObject1236 instantiates a new InlineObject1236 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject1236() *InlineObject1236 {
	this := InlineObject1236{}
	return &this
}

// NewInlineObject1236WithDefaults instantiates a new InlineObject1236 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject1236WithDefaults() *InlineObject1236 {
	this := InlineObject1236{}
	return &this
}

// GetProbability returns the Probability field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1236) GetProbability() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Probability
}

// GetProbabilityOk returns a tuple with the Probability field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1236) GetProbabilityOk() (*AnyOfobject, bool) {
	if o == nil || o.Probability == nil {
		return nil, false
	}
	return &o.Probability, true
}

// HasProbability returns a boolean if a field has been set.
func (o *InlineObject1236) HasProbability() bool {
	if o != nil && o.Probability != nil {
		return true
	}

	return false
}

// SetProbability gets a reference to the given AnyOfobject and assigns it to the Probability field.
func (o *InlineObject1236) SetProbability(v AnyOfobject) {
	o.Probability = v
}

// GetAlpha returns the Alpha field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1236) GetAlpha() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Alpha
}

// GetAlphaOk returns a tuple with the Alpha field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1236) GetAlphaOk() (*AnyOfobject, bool) {
	if o == nil || o.Alpha == nil {
		return nil, false
	}
	return &o.Alpha, true
}

// HasAlpha returns a boolean if a field has been set.
func (o *InlineObject1236) HasAlpha() bool {
	if o != nil && o.Alpha != nil {
		return true
	}

	return false
}

// SetAlpha gets a reference to the given AnyOfobject and assigns it to the Alpha field.
func (o *InlineObject1236) SetAlpha(v AnyOfobject) {
	o.Alpha = v
}

// GetBeta returns the Beta field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1236) GetBeta() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Beta
}

// GetBetaOk returns a tuple with the Beta field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1236) GetBetaOk() (*AnyOfobject, bool) {
	if o == nil || o.Beta == nil {
		return nil, false
	}
	return &o.Beta, true
}

// HasBeta returns a boolean if a field has been set.
func (o *InlineObject1236) HasBeta() bool {
	if o != nil && o.Beta != nil {
		return true
	}

	return false
}

// SetBeta gets a reference to the given AnyOfobject and assigns it to the Beta field.
func (o *InlineObject1236) SetBeta(v AnyOfobject) {
	o.Beta = v
}

// GetA returns the A field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1236) GetA() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.A
}

// GetAOk returns a tuple with the A field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1236) GetAOk() (*AnyOfobject, bool) {
	if o == nil || o.A == nil {
		return nil, false
	}
	return &o.A, true
}

// HasA returns a boolean if a field has been set.
func (o *InlineObject1236) HasA() bool {
	if o != nil && o.A != nil {
		return true
	}

	return false
}

// SetA gets a reference to the given AnyOfobject and assigns it to the A field.
func (o *InlineObject1236) SetA(v AnyOfobject) {
	o.A = v
}

// GetB returns the B field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1236) GetB() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.B
}

// GetBOk returns a tuple with the B field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1236) GetBOk() (*AnyOfobject, bool) {
	if o == nil || o.B == nil {
		return nil, false
	}
	return &o.B, true
}

// HasB returns a boolean if a field has been set.
func (o *InlineObject1236) HasB() bool {
	if o != nil && o.B != nil {
		return true
	}

	return false
}

// SetB gets a reference to the given AnyOfobject and assigns it to the B field.
func (o *InlineObject1236) SetB(v AnyOfobject) {
	o.B = v
}

func (o InlineObject1236) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Probability != nil {
		toSerialize["probability"] = o.Probability
	}
	if o.Alpha != nil {
		toSerialize["alpha"] = o.Alpha
	}
	if o.Beta != nil {
		toSerialize["beta"] = o.Beta
	}
	if o.A != nil {
		toSerialize["A"] = o.A
	}
	if o.B != nil {
		toSerialize["B"] = o.B
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject1236 struct {
	value *InlineObject1236
	isSet bool
}

func (v NullableInlineObject1236) Get() *InlineObject1236 {
	return v.value
}

func (v *NullableInlineObject1236) Set(val *InlineObject1236) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject1236) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject1236) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject1236(val *InlineObject1236) *NullableInlineObject1236 {
	return &NullableInlineObject1236{value: val, isSet: true}
}

func (v NullableInlineObject1236) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject1236) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


