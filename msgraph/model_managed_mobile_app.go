/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ManagedMobileApp The identifier for the deployment an app.
type ManagedMobileApp struct {
	// The identifier for an app with it's operating system type.
	MobileAppIdentifier AnyOfobject `json:"mobileAppIdentifier,omitempty"`
	// Version of the entity.
	Version NullableString `json:"version,omitempty"`
}

// NewManagedMobileApp instantiates a new ManagedMobileApp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagedMobileApp() *ManagedMobileApp {
	this := ManagedMobileApp{}
	return &this
}

// NewManagedMobileAppWithDefaults instantiates a new ManagedMobileApp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagedMobileAppWithDefaults() *ManagedMobileApp {
	this := ManagedMobileApp{}
	return &this
}

// GetMobileAppIdentifier returns the MobileAppIdentifier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ManagedMobileApp) GetMobileAppIdentifier() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.MobileAppIdentifier
}

// GetMobileAppIdentifierOk returns a tuple with the MobileAppIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedMobileApp) GetMobileAppIdentifierOk() (*AnyOfobject, bool) {
	if o == nil || o.MobileAppIdentifier == nil {
		return nil, false
	}
	return &o.MobileAppIdentifier, true
}

// HasMobileAppIdentifier returns a boolean if a field has been set.
func (o *ManagedMobileApp) HasMobileAppIdentifier() bool {
	if o != nil && o.MobileAppIdentifier != nil {
		return true
	}

	return false
}

// SetMobileAppIdentifier gets a reference to the given AnyOfobject and assigns it to the MobileAppIdentifier field.
func (o *ManagedMobileApp) SetMobileAppIdentifier(v AnyOfobject) {
	o.MobileAppIdentifier = v
}

// GetVersion returns the Version field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ManagedMobileApp) GetVersion() string {
	if o == nil || o.Version.Get() == nil {
		var ret string
		return ret
	}
	return *o.Version.Get()
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedMobileApp) GetVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Version.Get(), o.Version.IsSet()
}

// HasVersion returns a boolean if a field has been set.
func (o *ManagedMobileApp) HasVersion() bool {
	if o != nil && o.Version.IsSet() {
		return true
	}

	return false
}

// SetVersion gets a reference to the given NullableString and assigns it to the Version field.
func (o *ManagedMobileApp) SetVersion(v string) {
	o.Version.Set(&v)
}
// SetVersionNil sets the value for Version to be an explicit nil
func (o *ManagedMobileApp) SetVersionNil() {
	o.Version.Set(nil)
}

// UnsetVersion ensures that no value is present for Version, not even an explicit nil
func (o *ManagedMobileApp) UnsetVersion() {
	o.Version.Unset()
}

func (o ManagedMobileApp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MobileAppIdentifier != nil {
		toSerialize["mobileAppIdentifier"] = o.MobileAppIdentifier
	}
	if o.Version.IsSet() {
		toSerialize["version"] = o.Version.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableManagedMobileApp struct {
	value *ManagedMobileApp
	isSet bool
}

func (v NullableManagedMobileApp) Get() *ManagedMobileApp {
	return v.value
}

func (v *NullableManagedMobileApp) Set(val *ManagedMobileApp) {
	v.value = val
	v.isSet = true
}

func (v NullableManagedMobileApp) IsSet() bool {
	return v.isSet
}

func (v *NullableManagedMobileApp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagedMobileApp(val *ManagedMobileApp) *NullableManagedMobileApp {
	return &NullableManagedMobileApp{value: val, isSet: true}
}

func (v NullableManagedMobileApp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagedMobileApp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


