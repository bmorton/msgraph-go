/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject1430 struct for InlineObject1430
type InlineObject1430 struct {
	Values AnyOfobject `json:"values,omitempty"`
	FinanceRate AnyOfobject `json:"financeRate,omitempty"`
	ReinvestRate AnyOfobject `json:"reinvestRate,omitempty"`
}

// NewInlineObject1430 instantiates a new InlineObject1430 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject1430() *InlineObject1430 {
	this := InlineObject1430{}
	return &this
}

// NewInlineObject1430WithDefaults instantiates a new InlineObject1430 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject1430WithDefaults() *InlineObject1430 {
	this := InlineObject1430{}
	return &this
}

// GetValues returns the Values field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1430) GetValues() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1430) GetValuesOk() (*AnyOfobject, bool) {
	if o == nil || o.Values == nil {
		return nil, false
	}
	return &o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *InlineObject1430) HasValues() bool {
	if o != nil && o.Values != nil {
		return true
	}

	return false
}

// SetValues gets a reference to the given AnyOfobject and assigns it to the Values field.
func (o *InlineObject1430) SetValues(v AnyOfobject) {
	o.Values = v
}

// GetFinanceRate returns the FinanceRate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1430) GetFinanceRate() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.FinanceRate
}

// GetFinanceRateOk returns a tuple with the FinanceRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1430) GetFinanceRateOk() (*AnyOfobject, bool) {
	if o == nil || o.FinanceRate == nil {
		return nil, false
	}
	return &o.FinanceRate, true
}

// HasFinanceRate returns a boolean if a field has been set.
func (o *InlineObject1430) HasFinanceRate() bool {
	if o != nil && o.FinanceRate != nil {
		return true
	}

	return false
}

// SetFinanceRate gets a reference to the given AnyOfobject and assigns it to the FinanceRate field.
func (o *InlineObject1430) SetFinanceRate(v AnyOfobject) {
	o.FinanceRate = v
}

// GetReinvestRate returns the ReinvestRate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1430) GetReinvestRate() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.ReinvestRate
}

// GetReinvestRateOk returns a tuple with the ReinvestRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1430) GetReinvestRateOk() (*AnyOfobject, bool) {
	if o == nil || o.ReinvestRate == nil {
		return nil, false
	}
	return &o.ReinvestRate, true
}

// HasReinvestRate returns a boolean if a field has been set.
func (o *InlineObject1430) HasReinvestRate() bool {
	if o != nil && o.ReinvestRate != nil {
		return true
	}

	return false
}

// SetReinvestRate gets a reference to the given AnyOfobject and assigns it to the ReinvestRate field.
func (o *InlineObject1430) SetReinvestRate(v AnyOfobject) {
	o.ReinvestRate = v
}

func (o InlineObject1430) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Values != nil {
		toSerialize["values"] = o.Values
	}
	if o.FinanceRate != nil {
		toSerialize["financeRate"] = o.FinanceRate
	}
	if o.ReinvestRate != nil {
		toSerialize["reinvestRate"] = o.ReinvestRate
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject1430 struct {
	value *InlineObject1430
	isSet bool
}

func (v NullableInlineObject1430) Get() *InlineObject1430 {
	return v.value
}

func (v *NullableInlineObject1430) Set(val *InlineObject1430) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject1430) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject1430) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject1430(val *InlineObject1430) *NullableInlineObject1430 {
	return &NullableInlineObject1430{value: val, isSet: true}
}

func (v NullableInlineObject1430) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject1430) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


