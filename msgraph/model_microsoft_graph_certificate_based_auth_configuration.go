/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphCertificateBasedAuthConfiguration struct for MicrosoftGraphCertificateBasedAuthConfiguration
type MicrosoftGraphCertificateBasedAuthConfiguration struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// Collection of certificate authorities which creates a trusted certificate chain.
	CertificateAuthorities *[]MicrosoftGraphCertificateAuthority `json:"certificateAuthorities,omitempty"`
}

// NewMicrosoftGraphCertificateBasedAuthConfiguration instantiates a new MicrosoftGraphCertificateBasedAuthConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphCertificateBasedAuthConfiguration() *MicrosoftGraphCertificateBasedAuthConfiguration {
	this := MicrosoftGraphCertificateBasedAuthConfiguration{}
	return &this
}

// NewMicrosoftGraphCertificateBasedAuthConfigurationWithDefaults instantiates a new MicrosoftGraphCertificateBasedAuthConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphCertificateBasedAuthConfigurationWithDefaults() *MicrosoftGraphCertificateBasedAuthConfiguration {
	this := MicrosoftGraphCertificateBasedAuthConfiguration{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphCertificateBasedAuthConfiguration) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphCertificateBasedAuthConfiguration) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphCertificateBasedAuthConfiguration) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphCertificateBasedAuthConfiguration) SetId(v string) {
	o.Id = &v
}

// GetCertificateAuthorities returns the CertificateAuthorities field value if set, zero value otherwise.
func (o *MicrosoftGraphCertificateBasedAuthConfiguration) GetCertificateAuthorities() []MicrosoftGraphCertificateAuthority {
	if o == nil || o.CertificateAuthorities == nil {
		var ret []MicrosoftGraphCertificateAuthority
		return ret
	}
	return *o.CertificateAuthorities
}

// GetCertificateAuthoritiesOk returns a tuple with the CertificateAuthorities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphCertificateBasedAuthConfiguration) GetCertificateAuthoritiesOk() (*[]MicrosoftGraphCertificateAuthority, bool) {
	if o == nil || o.CertificateAuthorities == nil {
		return nil, false
	}
	return o.CertificateAuthorities, true
}

// HasCertificateAuthorities returns a boolean if a field has been set.
func (o *MicrosoftGraphCertificateBasedAuthConfiguration) HasCertificateAuthorities() bool {
	if o != nil && o.CertificateAuthorities != nil {
		return true
	}

	return false
}

// SetCertificateAuthorities gets a reference to the given []MicrosoftGraphCertificateAuthority and assigns it to the CertificateAuthorities field.
func (o *MicrosoftGraphCertificateBasedAuthConfiguration) SetCertificateAuthorities(v []MicrosoftGraphCertificateAuthority) {
	o.CertificateAuthorities = &v
}

func (o MicrosoftGraphCertificateBasedAuthConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.CertificateAuthorities != nil {
		toSerialize["certificateAuthorities"] = o.CertificateAuthorities
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphCertificateBasedAuthConfiguration struct {
	value *MicrosoftGraphCertificateBasedAuthConfiguration
	isSet bool
}

func (v NullableMicrosoftGraphCertificateBasedAuthConfiguration) Get() *MicrosoftGraphCertificateBasedAuthConfiguration {
	return v.value
}

func (v *NullableMicrosoftGraphCertificateBasedAuthConfiguration) Set(val *MicrosoftGraphCertificateBasedAuthConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphCertificateBasedAuthConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphCertificateBasedAuthConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphCertificateBasedAuthConfiguration(val *MicrosoftGraphCertificateBasedAuthConfiguration) *NullableMicrosoftGraphCertificateBasedAuthConfiguration {
	return &NullableMicrosoftGraphCertificateBasedAuthConfiguration{value: val, isSet: true}
}

func (v NullableMicrosoftGraphCertificateBasedAuthConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphCertificateBasedAuthConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


