/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphServiceHealthStatus the model 'MicrosoftGraphServiceHealthStatus'
type MicrosoftGraphServiceHealthStatus string

// List of microsoft.graph.serviceHealthStatus
const (
	SERVICE_OPERATIONAL MicrosoftGraphServiceHealthStatus = "serviceOperational"
	INVESTIGATING MicrosoftGraphServiceHealthStatus = "investigating"
	RESTORING_SERVICE MicrosoftGraphServiceHealthStatus = "restoringService"
	VERIFYING_SERVICE MicrosoftGraphServiceHealthStatus = "verifyingService"
	SERVICE_RESTORED MicrosoftGraphServiceHealthStatus = "serviceRestored"
	POST_INCIDENT_REVIEW_PUBLISHED MicrosoftGraphServiceHealthStatus = "postIncidentReviewPublished"
	SERVICE_DEGRADATION MicrosoftGraphServiceHealthStatus = "serviceDegradation"
	SERVICE_INTERRUPTION MicrosoftGraphServiceHealthStatus = "serviceInterruption"
	EXTENDED_RECOVERY MicrosoftGraphServiceHealthStatus = "extendedRecovery"
	FALSE_POSITIVE MicrosoftGraphServiceHealthStatus = "falsePositive"
	INVESTIGATION_SUSPENDED MicrosoftGraphServiceHealthStatus = "investigationSuspended"
	RESOLVED MicrosoftGraphServiceHealthStatus = "resolved"
	MITIGATED_EXTERNAL MicrosoftGraphServiceHealthStatus = "mitigatedExternal"
	MITIGATED MicrosoftGraphServiceHealthStatus = "mitigated"
	RESOLVED_EXTERNAL MicrosoftGraphServiceHealthStatus = "resolvedExternal"
	CONFIRMED MicrosoftGraphServiceHealthStatus = "confirmed"
	REPORTED MicrosoftGraphServiceHealthStatus = "reported"
	UNKNOWN_FUTURE_VALUE MicrosoftGraphServiceHealthStatus = "unknownFutureValue"
)

// All allowed values of MicrosoftGraphServiceHealthStatus enum
var AllowedMicrosoftGraphServiceHealthStatusEnumValues = []MicrosoftGraphServiceHealthStatus{
	"serviceOperational",
	"investigating",
	"restoringService",
	"verifyingService",
	"serviceRestored",
	"postIncidentReviewPublished",
	"serviceDegradation",
	"serviceInterruption",
	"extendedRecovery",
	"falsePositive",
	"investigationSuspended",
	"resolved",
	"mitigatedExternal",
	"mitigated",
	"resolvedExternal",
	"confirmed",
	"reported",
	"unknownFutureValue",
}

func (v *MicrosoftGraphServiceHealthStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphServiceHealthStatus(value)
	for _, existing := range AllowedMicrosoftGraphServiceHealthStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphServiceHealthStatus", value)
}

// NewMicrosoftGraphServiceHealthStatusFromValue returns a pointer to a valid MicrosoftGraphServiceHealthStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphServiceHealthStatusFromValue(v string) (*MicrosoftGraphServiceHealthStatus, error) {
	ev := MicrosoftGraphServiceHealthStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphServiceHealthStatus: valid values are %v", v, AllowedMicrosoftGraphServiceHealthStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphServiceHealthStatus) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphServiceHealthStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.serviceHealthStatus value
func (v MicrosoftGraphServiceHealthStatus) Ptr() *MicrosoftGraphServiceHealthStatus {
	return &v
}

type NullableMicrosoftGraphServiceHealthStatus struct {
	value *MicrosoftGraphServiceHealthStatus
	isSet bool
}

func (v NullableMicrosoftGraphServiceHealthStatus) Get() *MicrosoftGraphServiceHealthStatus {
	return v.value
}

func (v *NullableMicrosoftGraphServiceHealthStatus) Set(val *MicrosoftGraphServiceHealthStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphServiceHealthStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphServiceHealthStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphServiceHealthStatus(val *MicrosoftGraphServiceHealthStatus) *NullableMicrosoftGraphServiceHealthStatus {
	return &NullableMicrosoftGraphServiceHealthStatus{value: val, isSet: true}
}

func (v NullableMicrosoftGraphServiceHealthStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphServiceHealthStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

