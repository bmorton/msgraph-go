/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphOnPremisesProvisioningError struct for MicrosoftGraphOnPremisesProvisioningError
type MicrosoftGraphOnPremisesProvisioningError struct {
	// Category of the provisioning error. Note: Currently, there is only one possible value. Possible value: PropertyConflict - indicates a property value is not unique. Other objects contain the same value for the property.
	Category NullableString `json:"category,omitempty"`
	// The date and time at which the error occurred.
	OccurredDateTime NullableTime `json:"occurredDateTime,omitempty"`
	// Name of the directory property causing the error. Current possible values: UserPrincipalName or ProxyAddress
	PropertyCausingError NullableString `json:"propertyCausingError,omitempty"`
	// Value of the property causing the error.
	Value NullableString `json:"value,omitempty"`
}

// NewMicrosoftGraphOnPremisesProvisioningError instantiates a new MicrosoftGraphOnPremisesProvisioningError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphOnPremisesProvisioningError() *MicrosoftGraphOnPremisesProvisioningError {
	this := MicrosoftGraphOnPremisesProvisioningError{}
	return &this
}

// NewMicrosoftGraphOnPremisesProvisioningErrorWithDefaults instantiates a new MicrosoftGraphOnPremisesProvisioningError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphOnPremisesProvisioningErrorWithDefaults() *MicrosoftGraphOnPremisesProvisioningError {
	this := MicrosoftGraphOnPremisesProvisioningError{}
	return &this
}

// GetCategory returns the Category field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOnPremisesProvisioningError) GetCategory() string {
	if o == nil || o.Category.Get() == nil {
		var ret string
		return ret
	}
	return *o.Category.Get()
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOnPremisesProvisioningError) GetCategoryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Category.Get(), o.Category.IsSet()
}

// HasCategory returns a boolean if a field has been set.
func (o *MicrosoftGraphOnPremisesProvisioningError) HasCategory() bool {
	if o != nil && o.Category.IsSet() {
		return true
	}

	return false
}

// SetCategory gets a reference to the given NullableString and assigns it to the Category field.
func (o *MicrosoftGraphOnPremisesProvisioningError) SetCategory(v string) {
	o.Category.Set(&v)
}
// SetCategoryNil sets the value for Category to be an explicit nil
func (o *MicrosoftGraphOnPremisesProvisioningError) SetCategoryNil() {
	o.Category.Set(nil)
}

// UnsetCategory ensures that no value is present for Category, not even an explicit nil
func (o *MicrosoftGraphOnPremisesProvisioningError) UnsetCategory() {
	o.Category.Unset()
}

// GetOccurredDateTime returns the OccurredDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOnPremisesProvisioningError) GetOccurredDateTime() time.Time {
	if o == nil || o.OccurredDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.OccurredDateTime.Get()
}

// GetOccurredDateTimeOk returns a tuple with the OccurredDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOnPremisesProvisioningError) GetOccurredDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OccurredDateTime.Get(), o.OccurredDateTime.IsSet()
}

// HasOccurredDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphOnPremisesProvisioningError) HasOccurredDateTime() bool {
	if o != nil && o.OccurredDateTime.IsSet() {
		return true
	}

	return false
}

// SetOccurredDateTime gets a reference to the given NullableTime and assigns it to the OccurredDateTime field.
func (o *MicrosoftGraphOnPremisesProvisioningError) SetOccurredDateTime(v time.Time) {
	o.OccurredDateTime.Set(&v)
}
// SetOccurredDateTimeNil sets the value for OccurredDateTime to be an explicit nil
func (o *MicrosoftGraphOnPremisesProvisioningError) SetOccurredDateTimeNil() {
	o.OccurredDateTime.Set(nil)
}

// UnsetOccurredDateTime ensures that no value is present for OccurredDateTime, not even an explicit nil
func (o *MicrosoftGraphOnPremisesProvisioningError) UnsetOccurredDateTime() {
	o.OccurredDateTime.Unset()
}

// GetPropertyCausingError returns the PropertyCausingError field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOnPremisesProvisioningError) GetPropertyCausingError() string {
	if o == nil || o.PropertyCausingError.Get() == nil {
		var ret string
		return ret
	}
	return *o.PropertyCausingError.Get()
}

// GetPropertyCausingErrorOk returns a tuple with the PropertyCausingError field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOnPremisesProvisioningError) GetPropertyCausingErrorOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PropertyCausingError.Get(), o.PropertyCausingError.IsSet()
}

// HasPropertyCausingError returns a boolean if a field has been set.
func (o *MicrosoftGraphOnPremisesProvisioningError) HasPropertyCausingError() bool {
	if o != nil && o.PropertyCausingError.IsSet() {
		return true
	}

	return false
}

// SetPropertyCausingError gets a reference to the given NullableString and assigns it to the PropertyCausingError field.
func (o *MicrosoftGraphOnPremisesProvisioningError) SetPropertyCausingError(v string) {
	o.PropertyCausingError.Set(&v)
}
// SetPropertyCausingErrorNil sets the value for PropertyCausingError to be an explicit nil
func (o *MicrosoftGraphOnPremisesProvisioningError) SetPropertyCausingErrorNil() {
	o.PropertyCausingError.Set(nil)
}

// UnsetPropertyCausingError ensures that no value is present for PropertyCausingError, not even an explicit nil
func (o *MicrosoftGraphOnPremisesProvisioningError) UnsetPropertyCausingError() {
	o.PropertyCausingError.Unset()
}

// GetValue returns the Value field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOnPremisesProvisioningError) GetValue() string {
	if o == nil || o.Value.Get() == nil {
		var ret string
		return ret
	}
	return *o.Value.Get()
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOnPremisesProvisioningError) GetValueOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Value.Get(), o.Value.IsSet()
}

// HasValue returns a boolean if a field has been set.
func (o *MicrosoftGraphOnPremisesProvisioningError) HasValue() bool {
	if o != nil && o.Value.IsSet() {
		return true
	}

	return false
}

// SetValue gets a reference to the given NullableString and assigns it to the Value field.
func (o *MicrosoftGraphOnPremisesProvisioningError) SetValue(v string) {
	o.Value.Set(&v)
}
// SetValueNil sets the value for Value to be an explicit nil
func (o *MicrosoftGraphOnPremisesProvisioningError) SetValueNil() {
	o.Value.Set(nil)
}

// UnsetValue ensures that no value is present for Value, not even an explicit nil
func (o *MicrosoftGraphOnPremisesProvisioningError) UnsetValue() {
	o.Value.Unset()
}

func (o MicrosoftGraphOnPremisesProvisioningError) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Category.IsSet() {
		toSerialize["category"] = o.Category.Get()
	}
	if o.OccurredDateTime.IsSet() {
		toSerialize["occurredDateTime"] = o.OccurredDateTime.Get()
	}
	if o.PropertyCausingError.IsSet() {
		toSerialize["propertyCausingError"] = o.PropertyCausingError.Get()
	}
	if o.Value.IsSet() {
		toSerialize["value"] = o.Value.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphOnPremisesProvisioningError struct {
	value *MicrosoftGraphOnPremisesProvisioningError
	isSet bool
}

func (v NullableMicrosoftGraphOnPremisesProvisioningError) Get() *MicrosoftGraphOnPremisesProvisioningError {
	return v.value
}

func (v *NullableMicrosoftGraphOnPremisesProvisioningError) Set(val *MicrosoftGraphOnPremisesProvisioningError) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphOnPremisesProvisioningError) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphOnPremisesProvisioningError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphOnPremisesProvisioningError(val *MicrosoftGraphOnPremisesProvisioningError) *NullableMicrosoftGraphOnPremisesProvisioningError {
	return &NullableMicrosoftGraphOnPremisesProvisioningError{value: val, isSet: true}
}

func (v NullableMicrosoftGraphOnPremisesProvisioningError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphOnPremisesProvisioningError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


