/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"time"
)

// AuthenticationMethodsPolicy struct for AuthenticationMethodsPolicy
type AuthenticationMethodsPolicy struct {
	// A description of the policy. Read-only.
	Description NullableString `json:"description,omitempty"`
	// The name of the policy. Read-only.
	DisplayName NullableString `json:"displayName,omitempty"`
	// The date and time of the last update to the policy. Read-only.
	LastModifiedDateTime NullableTime `json:"lastModifiedDateTime,omitempty"`
	// The version of the policy in use. Read-only.
	PolicyVersion NullableString `json:"policyVersion,omitempty"`
	ReconfirmationInDays NullableInt32 `json:"reconfirmationInDays,omitempty"`
	// Enforce registration at sign-in time. This property can be used to remind users to set up targeted authentication methods.
	RegistrationEnforcement AnyOfmicrosoftGraphRegistrationEnforcement `json:"registrationEnforcement,omitempty"`
	// Represents the settings for each authentication method.
	AuthenticationMethodConfigurations *[]MicrosoftGraphAuthenticationMethodConfiguration `json:"authenticationMethodConfigurations,omitempty"`
}

// NewAuthenticationMethodsPolicy instantiates a new AuthenticationMethodsPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthenticationMethodsPolicy() *AuthenticationMethodsPolicy {
	this := AuthenticationMethodsPolicy{}
	return &this
}

// NewAuthenticationMethodsPolicyWithDefaults instantiates a new AuthenticationMethodsPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthenticationMethodsPolicyWithDefaults() *AuthenticationMethodsPolicy {
	this := AuthenticationMethodsPolicy{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthenticationMethodsPolicy) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthenticationMethodsPolicy) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *AuthenticationMethodsPolicy) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *AuthenticationMethodsPolicy) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *AuthenticationMethodsPolicy) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *AuthenticationMethodsPolicy) UnsetDescription() {
	o.Description.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthenticationMethodsPolicy) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthenticationMethodsPolicy) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *AuthenticationMethodsPolicy) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *AuthenticationMethodsPolicy) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *AuthenticationMethodsPolicy) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *AuthenticationMethodsPolicy) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetLastModifiedDateTime returns the LastModifiedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthenticationMethodsPolicy) GetLastModifiedDateTime() time.Time {
	if o == nil || o.LastModifiedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDateTime.Get()
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthenticationMethodsPolicy) GetLastModifiedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastModifiedDateTime.Get(), o.LastModifiedDateTime.IsSet()
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *AuthenticationMethodsPolicy) HasLastModifiedDateTime() bool {
	if o != nil && o.LastModifiedDateTime.IsSet() {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given NullableTime and assigns it to the LastModifiedDateTime field.
func (o *AuthenticationMethodsPolicy) SetLastModifiedDateTime(v time.Time) {
	o.LastModifiedDateTime.Set(&v)
}
// SetLastModifiedDateTimeNil sets the value for LastModifiedDateTime to be an explicit nil
func (o *AuthenticationMethodsPolicy) SetLastModifiedDateTimeNil() {
	o.LastModifiedDateTime.Set(nil)
}

// UnsetLastModifiedDateTime ensures that no value is present for LastModifiedDateTime, not even an explicit nil
func (o *AuthenticationMethodsPolicy) UnsetLastModifiedDateTime() {
	o.LastModifiedDateTime.Unset()
}

// GetPolicyVersion returns the PolicyVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthenticationMethodsPolicy) GetPolicyVersion() string {
	if o == nil || o.PolicyVersion.Get() == nil {
		var ret string
		return ret
	}
	return *o.PolicyVersion.Get()
}

// GetPolicyVersionOk returns a tuple with the PolicyVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthenticationMethodsPolicy) GetPolicyVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PolicyVersion.Get(), o.PolicyVersion.IsSet()
}

// HasPolicyVersion returns a boolean if a field has been set.
func (o *AuthenticationMethodsPolicy) HasPolicyVersion() bool {
	if o != nil && o.PolicyVersion.IsSet() {
		return true
	}

	return false
}

// SetPolicyVersion gets a reference to the given NullableString and assigns it to the PolicyVersion field.
func (o *AuthenticationMethodsPolicy) SetPolicyVersion(v string) {
	o.PolicyVersion.Set(&v)
}
// SetPolicyVersionNil sets the value for PolicyVersion to be an explicit nil
func (o *AuthenticationMethodsPolicy) SetPolicyVersionNil() {
	o.PolicyVersion.Set(nil)
}

// UnsetPolicyVersion ensures that no value is present for PolicyVersion, not even an explicit nil
func (o *AuthenticationMethodsPolicy) UnsetPolicyVersion() {
	o.PolicyVersion.Unset()
}

// GetReconfirmationInDays returns the ReconfirmationInDays field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthenticationMethodsPolicy) GetReconfirmationInDays() int32 {
	if o == nil || o.ReconfirmationInDays.Get() == nil {
		var ret int32
		return ret
	}
	return *o.ReconfirmationInDays.Get()
}

// GetReconfirmationInDaysOk returns a tuple with the ReconfirmationInDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthenticationMethodsPolicy) GetReconfirmationInDaysOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ReconfirmationInDays.Get(), o.ReconfirmationInDays.IsSet()
}

// HasReconfirmationInDays returns a boolean if a field has been set.
func (o *AuthenticationMethodsPolicy) HasReconfirmationInDays() bool {
	if o != nil && o.ReconfirmationInDays.IsSet() {
		return true
	}

	return false
}

// SetReconfirmationInDays gets a reference to the given NullableInt32 and assigns it to the ReconfirmationInDays field.
func (o *AuthenticationMethodsPolicy) SetReconfirmationInDays(v int32) {
	o.ReconfirmationInDays.Set(&v)
}
// SetReconfirmationInDaysNil sets the value for ReconfirmationInDays to be an explicit nil
func (o *AuthenticationMethodsPolicy) SetReconfirmationInDaysNil() {
	o.ReconfirmationInDays.Set(nil)
}

// UnsetReconfirmationInDays ensures that no value is present for ReconfirmationInDays, not even an explicit nil
func (o *AuthenticationMethodsPolicy) UnsetReconfirmationInDays() {
	o.ReconfirmationInDays.Unset()
}

// GetRegistrationEnforcement returns the RegistrationEnforcement field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthenticationMethodsPolicy) GetRegistrationEnforcement() AnyOfmicrosoftGraphRegistrationEnforcement {
	if o == nil  {
		var ret AnyOfmicrosoftGraphRegistrationEnforcement
		return ret
	}
	return o.RegistrationEnforcement
}

// GetRegistrationEnforcementOk returns a tuple with the RegistrationEnforcement field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthenticationMethodsPolicy) GetRegistrationEnforcementOk() (*AnyOfmicrosoftGraphRegistrationEnforcement, bool) {
	if o == nil || o.RegistrationEnforcement == nil {
		return nil, false
	}
	return &o.RegistrationEnforcement, true
}

// HasRegistrationEnforcement returns a boolean if a field has been set.
func (o *AuthenticationMethodsPolicy) HasRegistrationEnforcement() bool {
	if o != nil && o.RegistrationEnforcement != nil {
		return true
	}

	return false
}

// SetRegistrationEnforcement gets a reference to the given AnyOfmicrosoftGraphRegistrationEnforcement and assigns it to the RegistrationEnforcement field.
func (o *AuthenticationMethodsPolicy) SetRegistrationEnforcement(v AnyOfmicrosoftGraphRegistrationEnforcement) {
	o.RegistrationEnforcement = v
}

// GetAuthenticationMethodConfigurations returns the AuthenticationMethodConfigurations field value if set, zero value otherwise.
func (o *AuthenticationMethodsPolicy) GetAuthenticationMethodConfigurations() []MicrosoftGraphAuthenticationMethodConfiguration {
	if o == nil || o.AuthenticationMethodConfigurations == nil {
		var ret []MicrosoftGraphAuthenticationMethodConfiguration
		return ret
	}
	return *o.AuthenticationMethodConfigurations
}

// GetAuthenticationMethodConfigurationsOk returns a tuple with the AuthenticationMethodConfigurations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationMethodsPolicy) GetAuthenticationMethodConfigurationsOk() (*[]MicrosoftGraphAuthenticationMethodConfiguration, bool) {
	if o == nil || o.AuthenticationMethodConfigurations == nil {
		return nil, false
	}
	return o.AuthenticationMethodConfigurations, true
}

// HasAuthenticationMethodConfigurations returns a boolean if a field has been set.
func (o *AuthenticationMethodsPolicy) HasAuthenticationMethodConfigurations() bool {
	if o != nil && o.AuthenticationMethodConfigurations != nil {
		return true
	}

	return false
}

// SetAuthenticationMethodConfigurations gets a reference to the given []MicrosoftGraphAuthenticationMethodConfiguration and assigns it to the AuthenticationMethodConfigurations field.
func (o *AuthenticationMethodsPolicy) SetAuthenticationMethodConfigurations(v []MicrosoftGraphAuthenticationMethodConfiguration) {
	o.AuthenticationMethodConfigurations = &v
}

func (o AuthenticationMethodsPolicy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.LastModifiedDateTime.IsSet() {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime.Get()
	}
	if o.PolicyVersion.IsSet() {
		toSerialize["policyVersion"] = o.PolicyVersion.Get()
	}
	if o.ReconfirmationInDays.IsSet() {
		toSerialize["reconfirmationInDays"] = o.ReconfirmationInDays.Get()
	}
	if o.RegistrationEnforcement != nil {
		toSerialize["registrationEnforcement"] = o.RegistrationEnforcement
	}
	if o.AuthenticationMethodConfigurations != nil {
		toSerialize["authenticationMethodConfigurations"] = o.AuthenticationMethodConfigurations
	}
	return json.Marshal(toSerialize)
}

type NullableAuthenticationMethodsPolicy struct {
	value *AuthenticationMethodsPolicy
	isSet bool
}

func (v NullableAuthenticationMethodsPolicy) Get() *AuthenticationMethodsPolicy {
	return v.value
}

func (v *NullableAuthenticationMethodsPolicy) Set(val *AuthenticationMethodsPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthenticationMethodsPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthenticationMethodsPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthenticationMethodsPolicy(val *AuthenticationMethodsPolicy) *NullableAuthenticationMethodsPolicy {
	return &NullableAuthenticationMethodsPolicy{value: val, isSet: true}
}

func (v NullableAuthenticationMethodsPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthenticationMethodsPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


