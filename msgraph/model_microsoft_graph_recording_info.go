/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphRecordingInfo struct for MicrosoftGraphRecordingInfo
type MicrosoftGraphRecordingInfo struct {
	// The identities of the recording initiator.
	Initiator AnyOfmicrosoftGraphIdentitySet `json:"initiator,omitempty"`
	// Possible values are: unknown, notRecording, recording, or failed.
	RecordingStatus AnyOfmicrosoftGraphRecordingStatus `json:"recordingStatus,omitempty"`
}

// NewMicrosoftGraphRecordingInfo instantiates a new MicrosoftGraphRecordingInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphRecordingInfo() *MicrosoftGraphRecordingInfo {
	this := MicrosoftGraphRecordingInfo{}
	return &this
}

// NewMicrosoftGraphRecordingInfoWithDefaults instantiates a new MicrosoftGraphRecordingInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphRecordingInfoWithDefaults() *MicrosoftGraphRecordingInfo {
	this := MicrosoftGraphRecordingInfo{}
	return &this
}

// GetInitiator returns the Initiator field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRecordingInfo) GetInitiator() AnyOfmicrosoftGraphIdentitySet {
	if o == nil  {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret
	}
	return o.Initiator
}

// GetInitiatorOk returns a tuple with the Initiator field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRecordingInfo) GetInitiatorOk() (*AnyOfmicrosoftGraphIdentitySet, bool) {
	if o == nil || o.Initiator == nil {
		return nil, false
	}
	return &o.Initiator, true
}

// HasInitiator returns a boolean if a field has been set.
func (o *MicrosoftGraphRecordingInfo) HasInitiator() bool {
	if o != nil && o.Initiator != nil {
		return true
	}

	return false
}

// SetInitiator gets a reference to the given AnyOfmicrosoftGraphIdentitySet and assigns it to the Initiator field.
func (o *MicrosoftGraphRecordingInfo) SetInitiator(v AnyOfmicrosoftGraphIdentitySet) {
	o.Initiator = v
}

// GetRecordingStatus returns the RecordingStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRecordingInfo) GetRecordingStatus() AnyOfmicrosoftGraphRecordingStatus {
	if o == nil  {
		var ret AnyOfmicrosoftGraphRecordingStatus
		return ret
	}
	return o.RecordingStatus
}

// GetRecordingStatusOk returns a tuple with the RecordingStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRecordingInfo) GetRecordingStatusOk() (*AnyOfmicrosoftGraphRecordingStatus, bool) {
	if o == nil || o.RecordingStatus == nil {
		return nil, false
	}
	return &o.RecordingStatus, true
}

// HasRecordingStatus returns a boolean if a field has been set.
func (o *MicrosoftGraphRecordingInfo) HasRecordingStatus() bool {
	if o != nil && o.RecordingStatus != nil {
		return true
	}

	return false
}

// SetRecordingStatus gets a reference to the given AnyOfmicrosoftGraphRecordingStatus and assigns it to the RecordingStatus field.
func (o *MicrosoftGraphRecordingInfo) SetRecordingStatus(v AnyOfmicrosoftGraphRecordingStatus) {
	o.RecordingStatus = v
}

func (o MicrosoftGraphRecordingInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Initiator != nil {
		toSerialize["initiator"] = o.Initiator
	}
	if o.RecordingStatus != nil {
		toSerialize["recordingStatus"] = o.RecordingStatus
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphRecordingInfo struct {
	value *MicrosoftGraphRecordingInfo
	isSet bool
}

func (v NullableMicrosoftGraphRecordingInfo) Get() *MicrosoftGraphRecordingInfo {
	return v.value
}

func (v *NullableMicrosoftGraphRecordingInfo) Set(val *MicrosoftGraphRecordingInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphRecordingInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphRecordingInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphRecordingInfo(val *MicrosoftGraphRecordingInfo) *NullableMicrosoftGraphRecordingInfo {
	return &NullableMicrosoftGraphRecordingInfo{value: val, isSet: true}
}

func (v NullableMicrosoftGraphRecordingInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphRecordingInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


