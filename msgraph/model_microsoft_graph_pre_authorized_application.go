/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphPreAuthorizedApplication struct for MicrosoftGraphPreAuthorizedApplication
type MicrosoftGraphPreAuthorizedApplication struct {
	// The unique identifier for the application.
	AppId NullableString `json:"appId,omitempty"`
	DelegatedPermissionIds *[]string `json:"delegatedPermissionIds,omitempty"`
}

// NewMicrosoftGraphPreAuthorizedApplication instantiates a new MicrosoftGraphPreAuthorizedApplication object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphPreAuthorizedApplication() *MicrosoftGraphPreAuthorizedApplication {
	this := MicrosoftGraphPreAuthorizedApplication{}
	return &this
}

// NewMicrosoftGraphPreAuthorizedApplicationWithDefaults instantiates a new MicrosoftGraphPreAuthorizedApplication object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphPreAuthorizedApplicationWithDefaults() *MicrosoftGraphPreAuthorizedApplication {
	this := MicrosoftGraphPreAuthorizedApplication{}
	return &this
}

// GetAppId returns the AppId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphPreAuthorizedApplication) GetAppId() string {
	if o == nil || o.AppId.Get() == nil {
		var ret string
		return ret
	}
	return *o.AppId.Get()
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphPreAuthorizedApplication) GetAppIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AppId.Get(), o.AppId.IsSet()
}

// HasAppId returns a boolean if a field has been set.
func (o *MicrosoftGraphPreAuthorizedApplication) HasAppId() bool {
	if o != nil && o.AppId.IsSet() {
		return true
	}

	return false
}

// SetAppId gets a reference to the given NullableString and assigns it to the AppId field.
func (o *MicrosoftGraphPreAuthorizedApplication) SetAppId(v string) {
	o.AppId.Set(&v)
}
// SetAppIdNil sets the value for AppId to be an explicit nil
func (o *MicrosoftGraphPreAuthorizedApplication) SetAppIdNil() {
	o.AppId.Set(nil)
}

// UnsetAppId ensures that no value is present for AppId, not even an explicit nil
func (o *MicrosoftGraphPreAuthorizedApplication) UnsetAppId() {
	o.AppId.Unset()
}

// GetDelegatedPermissionIds returns the DelegatedPermissionIds field value if set, zero value otherwise.
func (o *MicrosoftGraphPreAuthorizedApplication) GetDelegatedPermissionIds() []string {
	if o == nil || o.DelegatedPermissionIds == nil {
		var ret []string
		return ret
	}
	return *o.DelegatedPermissionIds
}

// GetDelegatedPermissionIdsOk returns a tuple with the DelegatedPermissionIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPreAuthorizedApplication) GetDelegatedPermissionIdsOk() (*[]string, bool) {
	if o == nil || o.DelegatedPermissionIds == nil {
		return nil, false
	}
	return o.DelegatedPermissionIds, true
}

// HasDelegatedPermissionIds returns a boolean if a field has been set.
func (o *MicrosoftGraphPreAuthorizedApplication) HasDelegatedPermissionIds() bool {
	if o != nil && o.DelegatedPermissionIds != nil {
		return true
	}

	return false
}

// SetDelegatedPermissionIds gets a reference to the given []string and assigns it to the DelegatedPermissionIds field.
func (o *MicrosoftGraphPreAuthorizedApplication) SetDelegatedPermissionIds(v []string) {
	o.DelegatedPermissionIds = &v
}

func (o MicrosoftGraphPreAuthorizedApplication) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AppId.IsSet() {
		toSerialize["appId"] = o.AppId.Get()
	}
	if o.DelegatedPermissionIds != nil {
		toSerialize["delegatedPermissionIds"] = o.DelegatedPermissionIds
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphPreAuthorizedApplication struct {
	value *MicrosoftGraphPreAuthorizedApplication
	isSet bool
}

func (v NullableMicrosoftGraphPreAuthorizedApplication) Get() *MicrosoftGraphPreAuthorizedApplication {
	return v.value
}

func (v *NullableMicrosoftGraphPreAuthorizedApplication) Set(val *MicrosoftGraphPreAuthorizedApplication) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphPreAuthorizedApplication) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphPreAuthorizedApplication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphPreAuthorizedApplication(val *MicrosoftGraphPreAuthorizedApplication) *NullableMicrosoftGraphPreAuthorizedApplication {
	return &NullableMicrosoftGraphPreAuthorizedApplication{value: val, isSet: true}
}

func (v NullableMicrosoftGraphPreAuthorizedApplication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphPreAuthorizedApplication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


