/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MailFolder struct for MailFolder
type MailFolder struct {
	// The number of immediate child mailFolders in the current mailFolder.
	ChildFolderCount NullableInt32 `json:"childFolderCount,omitempty"`
	// The mailFolder's display name.
	DisplayName NullableString `json:"displayName,omitempty"`
	// Indicates whether the mailFolder is hidden. This property can be set only when creating the folder. Find more information in Hidden mail folders.
	IsHidden NullableBool `json:"isHidden,omitempty"`
	// The unique identifier for the mailFolder's parent mailFolder.
	ParentFolderId NullableString `json:"parentFolderId,omitempty"`
	// The number of items in the mailFolder.
	TotalItemCount NullableInt32 `json:"totalItemCount,omitempty"`
	// The number of items in the mailFolder marked as unread.
	UnreadItemCount NullableInt32 `json:"unreadItemCount,omitempty"`
	// The collection of child folders in the mailFolder.
	ChildFolders *[]MicrosoftGraphMailFolder `json:"childFolders,omitempty"`
	// The collection of rules that apply to the user's Inbox folder.
	MessageRules *[]MicrosoftGraphMessageRule `json:"messageRules,omitempty"`
	// The collection of messages in the mailFolder.
	Messages *[]MicrosoftGraphMessage `json:"messages,omitempty"`
	// The collection of multi-value extended properties defined for the mailFolder. Read-only. Nullable.
	MultiValueExtendedProperties *[]MicrosoftGraphMultiValueLegacyExtendedProperty `json:"multiValueExtendedProperties,omitempty"`
	// The collection of single-value extended properties defined for the mailFolder. Read-only. Nullable.
	SingleValueExtendedProperties *[]MicrosoftGraphSingleValueLegacyExtendedProperty `json:"singleValueExtendedProperties,omitempty"`
}

// NewMailFolder instantiates a new MailFolder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMailFolder() *MailFolder {
	this := MailFolder{}
	return &this
}

// NewMailFolderWithDefaults instantiates a new MailFolder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMailFolderWithDefaults() *MailFolder {
	this := MailFolder{}
	return &this
}

// GetChildFolderCount returns the ChildFolderCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MailFolder) GetChildFolderCount() int32 {
	if o == nil || o.ChildFolderCount.Get() == nil {
		var ret int32
		return ret
	}
	return *o.ChildFolderCount.Get()
}

// GetChildFolderCountOk returns a tuple with the ChildFolderCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MailFolder) GetChildFolderCountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ChildFolderCount.Get(), o.ChildFolderCount.IsSet()
}

// HasChildFolderCount returns a boolean if a field has been set.
func (o *MailFolder) HasChildFolderCount() bool {
	if o != nil && o.ChildFolderCount.IsSet() {
		return true
	}

	return false
}

// SetChildFolderCount gets a reference to the given NullableInt32 and assigns it to the ChildFolderCount field.
func (o *MailFolder) SetChildFolderCount(v int32) {
	o.ChildFolderCount.Set(&v)
}
// SetChildFolderCountNil sets the value for ChildFolderCount to be an explicit nil
func (o *MailFolder) SetChildFolderCountNil() {
	o.ChildFolderCount.Set(nil)
}

// UnsetChildFolderCount ensures that no value is present for ChildFolderCount, not even an explicit nil
func (o *MailFolder) UnsetChildFolderCount() {
	o.ChildFolderCount.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MailFolder) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MailFolder) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MailFolder) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *MailFolder) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *MailFolder) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *MailFolder) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetIsHidden returns the IsHidden field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MailFolder) GetIsHidden() bool {
	if o == nil || o.IsHidden.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsHidden.Get()
}

// GetIsHiddenOk returns a tuple with the IsHidden field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MailFolder) GetIsHiddenOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsHidden.Get(), o.IsHidden.IsSet()
}

// HasIsHidden returns a boolean if a field has been set.
func (o *MailFolder) HasIsHidden() bool {
	if o != nil && o.IsHidden.IsSet() {
		return true
	}

	return false
}

// SetIsHidden gets a reference to the given NullableBool and assigns it to the IsHidden field.
func (o *MailFolder) SetIsHidden(v bool) {
	o.IsHidden.Set(&v)
}
// SetIsHiddenNil sets the value for IsHidden to be an explicit nil
func (o *MailFolder) SetIsHiddenNil() {
	o.IsHidden.Set(nil)
}

// UnsetIsHidden ensures that no value is present for IsHidden, not even an explicit nil
func (o *MailFolder) UnsetIsHidden() {
	o.IsHidden.Unset()
}

// GetParentFolderId returns the ParentFolderId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MailFolder) GetParentFolderId() string {
	if o == nil || o.ParentFolderId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ParentFolderId.Get()
}

// GetParentFolderIdOk returns a tuple with the ParentFolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MailFolder) GetParentFolderIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ParentFolderId.Get(), o.ParentFolderId.IsSet()
}

// HasParentFolderId returns a boolean if a field has been set.
func (o *MailFolder) HasParentFolderId() bool {
	if o != nil && o.ParentFolderId.IsSet() {
		return true
	}

	return false
}

// SetParentFolderId gets a reference to the given NullableString and assigns it to the ParentFolderId field.
func (o *MailFolder) SetParentFolderId(v string) {
	o.ParentFolderId.Set(&v)
}
// SetParentFolderIdNil sets the value for ParentFolderId to be an explicit nil
func (o *MailFolder) SetParentFolderIdNil() {
	o.ParentFolderId.Set(nil)
}

// UnsetParentFolderId ensures that no value is present for ParentFolderId, not even an explicit nil
func (o *MailFolder) UnsetParentFolderId() {
	o.ParentFolderId.Unset()
}

// GetTotalItemCount returns the TotalItemCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MailFolder) GetTotalItemCount() int32 {
	if o == nil || o.TotalItemCount.Get() == nil {
		var ret int32
		return ret
	}
	return *o.TotalItemCount.Get()
}

// GetTotalItemCountOk returns a tuple with the TotalItemCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MailFolder) GetTotalItemCountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TotalItemCount.Get(), o.TotalItemCount.IsSet()
}

// HasTotalItemCount returns a boolean if a field has been set.
func (o *MailFolder) HasTotalItemCount() bool {
	if o != nil && o.TotalItemCount.IsSet() {
		return true
	}

	return false
}

// SetTotalItemCount gets a reference to the given NullableInt32 and assigns it to the TotalItemCount field.
func (o *MailFolder) SetTotalItemCount(v int32) {
	o.TotalItemCount.Set(&v)
}
// SetTotalItemCountNil sets the value for TotalItemCount to be an explicit nil
func (o *MailFolder) SetTotalItemCountNil() {
	o.TotalItemCount.Set(nil)
}

// UnsetTotalItemCount ensures that no value is present for TotalItemCount, not even an explicit nil
func (o *MailFolder) UnsetTotalItemCount() {
	o.TotalItemCount.Unset()
}

// GetUnreadItemCount returns the UnreadItemCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MailFolder) GetUnreadItemCount() int32 {
	if o == nil || o.UnreadItemCount.Get() == nil {
		var ret int32
		return ret
	}
	return *o.UnreadItemCount.Get()
}

// GetUnreadItemCountOk returns a tuple with the UnreadItemCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MailFolder) GetUnreadItemCountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UnreadItemCount.Get(), o.UnreadItemCount.IsSet()
}

// HasUnreadItemCount returns a boolean if a field has been set.
func (o *MailFolder) HasUnreadItemCount() bool {
	if o != nil && o.UnreadItemCount.IsSet() {
		return true
	}

	return false
}

// SetUnreadItemCount gets a reference to the given NullableInt32 and assigns it to the UnreadItemCount field.
func (o *MailFolder) SetUnreadItemCount(v int32) {
	o.UnreadItemCount.Set(&v)
}
// SetUnreadItemCountNil sets the value for UnreadItemCount to be an explicit nil
func (o *MailFolder) SetUnreadItemCountNil() {
	o.UnreadItemCount.Set(nil)
}

// UnsetUnreadItemCount ensures that no value is present for UnreadItemCount, not even an explicit nil
func (o *MailFolder) UnsetUnreadItemCount() {
	o.UnreadItemCount.Unset()
}

// GetChildFolders returns the ChildFolders field value if set, zero value otherwise.
func (o *MailFolder) GetChildFolders() []MicrosoftGraphMailFolder {
	if o == nil || o.ChildFolders == nil {
		var ret []MicrosoftGraphMailFolder
		return ret
	}
	return *o.ChildFolders
}

// GetChildFoldersOk returns a tuple with the ChildFolders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailFolder) GetChildFoldersOk() (*[]MicrosoftGraphMailFolder, bool) {
	if o == nil || o.ChildFolders == nil {
		return nil, false
	}
	return o.ChildFolders, true
}

// HasChildFolders returns a boolean if a field has been set.
func (o *MailFolder) HasChildFolders() bool {
	if o != nil && o.ChildFolders != nil {
		return true
	}

	return false
}

// SetChildFolders gets a reference to the given []MicrosoftGraphMailFolder and assigns it to the ChildFolders field.
func (o *MailFolder) SetChildFolders(v []MicrosoftGraphMailFolder) {
	o.ChildFolders = &v
}

// GetMessageRules returns the MessageRules field value if set, zero value otherwise.
func (o *MailFolder) GetMessageRules() []MicrosoftGraphMessageRule {
	if o == nil || o.MessageRules == nil {
		var ret []MicrosoftGraphMessageRule
		return ret
	}
	return *o.MessageRules
}

// GetMessageRulesOk returns a tuple with the MessageRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailFolder) GetMessageRulesOk() (*[]MicrosoftGraphMessageRule, bool) {
	if o == nil || o.MessageRules == nil {
		return nil, false
	}
	return o.MessageRules, true
}

// HasMessageRules returns a boolean if a field has been set.
func (o *MailFolder) HasMessageRules() bool {
	if o != nil && o.MessageRules != nil {
		return true
	}

	return false
}

// SetMessageRules gets a reference to the given []MicrosoftGraphMessageRule and assigns it to the MessageRules field.
func (o *MailFolder) SetMessageRules(v []MicrosoftGraphMessageRule) {
	o.MessageRules = &v
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *MailFolder) GetMessages() []MicrosoftGraphMessage {
	if o == nil || o.Messages == nil {
		var ret []MicrosoftGraphMessage
		return ret
	}
	return *o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailFolder) GetMessagesOk() (*[]MicrosoftGraphMessage, bool) {
	if o == nil || o.Messages == nil {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *MailFolder) HasMessages() bool {
	if o != nil && o.Messages != nil {
		return true
	}

	return false
}

// SetMessages gets a reference to the given []MicrosoftGraphMessage and assigns it to the Messages field.
func (o *MailFolder) SetMessages(v []MicrosoftGraphMessage) {
	o.Messages = &v
}

// GetMultiValueExtendedProperties returns the MultiValueExtendedProperties field value if set, zero value otherwise.
func (o *MailFolder) GetMultiValueExtendedProperties() []MicrosoftGraphMultiValueLegacyExtendedProperty {
	if o == nil || o.MultiValueExtendedProperties == nil {
		var ret []MicrosoftGraphMultiValueLegacyExtendedProperty
		return ret
	}
	return *o.MultiValueExtendedProperties
}

// GetMultiValueExtendedPropertiesOk returns a tuple with the MultiValueExtendedProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailFolder) GetMultiValueExtendedPropertiesOk() (*[]MicrosoftGraphMultiValueLegacyExtendedProperty, bool) {
	if o == nil || o.MultiValueExtendedProperties == nil {
		return nil, false
	}
	return o.MultiValueExtendedProperties, true
}

// HasMultiValueExtendedProperties returns a boolean if a field has been set.
func (o *MailFolder) HasMultiValueExtendedProperties() bool {
	if o != nil && o.MultiValueExtendedProperties != nil {
		return true
	}

	return false
}

// SetMultiValueExtendedProperties gets a reference to the given []MicrosoftGraphMultiValueLegacyExtendedProperty and assigns it to the MultiValueExtendedProperties field.
func (o *MailFolder) SetMultiValueExtendedProperties(v []MicrosoftGraphMultiValueLegacyExtendedProperty) {
	o.MultiValueExtendedProperties = &v
}

// GetSingleValueExtendedProperties returns the SingleValueExtendedProperties field value if set, zero value otherwise.
func (o *MailFolder) GetSingleValueExtendedProperties() []MicrosoftGraphSingleValueLegacyExtendedProperty {
	if o == nil || o.SingleValueExtendedProperties == nil {
		var ret []MicrosoftGraphSingleValueLegacyExtendedProperty
		return ret
	}
	return *o.SingleValueExtendedProperties
}

// GetSingleValueExtendedPropertiesOk returns a tuple with the SingleValueExtendedProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailFolder) GetSingleValueExtendedPropertiesOk() (*[]MicrosoftGraphSingleValueLegacyExtendedProperty, bool) {
	if o == nil || o.SingleValueExtendedProperties == nil {
		return nil, false
	}
	return o.SingleValueExtendedProperties, true
}

// HasSingleValueExtendedProperties returns a boolean if a field has been set.
func (o *MailFolder) HasSingleValueExtendedProperties() bool {
	if o != nil && o.SingleValueExtendedProperties != nil {
		return true
	}

	return false
}

// SetSingleValueExtendedProperties gets a reference to the given []MicrosoftGraphSingleValueLegacyExtendedProperty and assigns it to the SingleValueExtendedProperties field.
func (o *MailFolder) SetSingleValueExtendedProperties(v []MicrosoftGraphSingleValueLegacyExtendedProperty) {
	o.SingleValueExtendedProperties = &v
}

func (o MailFolder) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ChildFolderCount.IsSet() {
		toSerialize["childFolderCount"] = o.ChildFolderCount.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.IsHidden.IsSet() {
		toSerialize["isHidden"] = o.IsHidden.Get()
	}
	if o.ParentFolderId.IsSet() {
		toSerialize["parentFolderId"] = o.ParentFolderId.Get()
	}
	if o.TotalItemCount.IsSet() {
		toSerialize["totalItemCount"] = o.TotalItemCount.Get()
	}
	if o.UnreadItemCount.IsSet() {
		toSerialize["unreadItemCount"] = o.UnreadItemCount.Get()
	}
	if o.ChildFolders != nil {
		toSerialize["childFolders"] = o.ChildFolders
	}
	if o.MessageRules != nil {
		toSerialize["messageRules"] = o.MessageRules
	}
	if o.Messages != nil {
		toSerialize["messages"] = o.Messages
	}
	if o.MultiValueExtendedProperties != nil {
		toSerialize["multiValueExtendedProperties"] = o.MultiValueExtendedProperties
	}
	if o.SingleValueExtendedProperties != nil {
		toSerialize["singleValueExtendedProperties"] = o.SingleValueExtendedProperties
	}
	return json.Marshal(toSerialize)
}

type NullableMailFolder struct {
	value *MailFolder
	isSet bool
}

func (v NullableMailFolder) Get() *MailFolder {
	return v.value
}

func (v *NullableMailFolder) Set(val *MailFolder) {
	v.value = val
	v.isSet = true
}

func (v NullableMailFolder) IsSet() bool {
	return v.isSet
}

func (v *NullableMailFolder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMailFolder(val *MailFolder) *NullableMailFolder {
	return &NullableMailFolder{value: val, isSet: true}
}

func (v NullableMailFolder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMailFolder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


