/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphSubjectRightsRequestHistory struct for MicrosoftGraphSubjectRightsRequestHistory
type MicrosoftGraphSubjectRightsRequestHistory struct {
	// Identity of the user who changed the  subject rights request.
	ChangedBy AnyOfmicrosoftGraphIdentitySet `json:"changedBy,omitempty"`
	// Data and time when the entity was changed.
	EventDateTime NullableTime `json:"eventDateTime,omitempty"`
	// The stage when the entity was changed. Possible values are: contentRetrieval, contentReview, generateReport, contentDeletion, caseResolved, unknownFutureValue.
	Stage AnyOfmicrosoftGraphSubjectRightsRequestStage `json:"stage,omitempty"`
	// The status of the stage when the entity was changed. Possible values are: notStarted, current, completed, failed, unknownFutureValue.
	StageStatus AnyOfmicrosoftGraphSubjectRightsRequestStageStatus `json:"stageStatus,omitempty"`
	// Type of history.
	Type NullableString `json:"type,omitempty"`
}

// NewMicrosoftGraphSubjectRightsRequestHistory instantiates a new MicrosoftGraphSubjectRightsRequestHistory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphSubjectRightsRequestHistory() *MicrosoftGraphSubjectRightsRequestHistory {
	this := MicrosoftGraphSubjectRightsRequestHistory{}
	return &this
}

// NewMicrosoftGraphSubjectRightsRequestHistoryWithDefaults instantiates a new MicrosoftGraphSubjectRightsRequestHistory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphSubjectRightsRequestHistoryWithDefaults() *MicrosoftGraphSubjectRightsRequestHistory {
	this := MicrosoftGraphSubjectRightsRequestHistory{}
	return &this
}

// GetChangedBy returns the ChangedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSubjectRightsRequestHistory) GetChangedBy() AnyOfmicrosoftGraphIdentitySet {
	if o == nil  {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret
	}
	return o.ChangedBy
}

// GetChangedByOk returns a tuple with the ChangedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSubjectRightsRequestHistory) GetChangedByOk() (*AnyOfmicrosoftGraphIdentitySet, bool) {
	if o == nil || o.ChangedBy == nil {
		return nil, false
	}
	return &o.ChangedBy, true
}

// HasChangedBy returns a boolean if a field has been set.
func (o *MicrosoftGraphSubjectRightsRequestHistory) HasChangedBy() bool {
	if o != nil && o.ChangedBy != nil {
		return true
	}

	return false
}

// SetChangedBy gets a reference to the given AnyOfmicrosoftGraphIdentitySet and assigns it to the ChangedBy field.
func (o *MicrosoftGraphSubjectRightsRequestHistory) SetChangedBy(v AnyOfmicrosoftGraphIdentitySet) {
	o.ChangedBy = v
}

// GetEventDateTime returns the EventDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSubjectRightsRequestHistory) GetEventDateTime() time.Time {
	if o == nil || o.EventDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.EventDateTime.Get()
}

// GetEventDateTimeOk returns a tuple with the EventDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSubjectRightsRequestHistory) GetEventDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EventDateTime.Get(), o.EventDateTime.IsSet()
}

// HasEventDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphSubjectRightsRequestHistory) HasEventDateTime() bool {
	if o != nil && o.EventDateTime.IsSet() {
		return true
	}

	return false
}

// SetEventDateTime gets a reference to the given NullableTime and assigns it to the EventDateTime field.
func (o *MicrosoftGraphSubjectRightsRequestHistory) SetEventDateTime(v time.Time) {
	o.EventDateTime.Set(&v)
}
// SetEventDateTimeNil sets the value for EventDateTime to be an explicit nil
func (o *MicrosoftGraphSubjectRightsRequestHistory) SetEventDateTimeNil() {
	o.EventDateTime.Set(nil)
}

// UnsetEventDateTime ensures that no value is present for EventDateTime, not even an explicit nil
func (o *MicrosoftGraphSubjectRightsRequestHistory) UnsetEventDateTime() {
	o.EventDateTime.Unset()
}

// GetStage returns the Stage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSubjectRightsRequestHistory) GetStage() AnyOfmicrosoftGraphSubjectRightsRequestStage {
	if o == nil  {
		var ret AnyOfmicrosoftGraphSubjectRightsRequestStage
		return ret
	}
	return o.Stage
}

// GetStageOk returns a tuple with the Stage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSubjectRightsRequestHistory) GetStageOk() (*AnyOfmicrosoftGraphSubjectRightsRequestStage, bool) {
	if o == nil || o.Stage == nil {
		return nil, false
	}
	return &o.Stage, true
}

// HasStage returns a boolean if a field has been set.
func (o *MicrosoftGraphSubjectRightsRequestHistory) HasStage() bool {
	if o != nil && o.Stage != nil {
		return true
	}

	return false
}

// SetStage gets a reference to the given AnyOfmicrosoftGraphSubjectRightsRequestStage and assigns it to the Stage field.
func (o *MicrosoftGraphSubjectRightsRequestHistory) SetStage(v AnyOfmicrosoftGraphSubjectRightsRequestStage) {
	o.Stage = v
}

// GetStageStatus returns the StageStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSubjectRightsRequestHistory) GetStageStatus() AnyOfmicrosoftGraphSubjectRightsRequestStageStatus {
	if o == nil  {
		var ret AnyOfmicrosoftGraphSubjectRightsRequestStageStatus
		return ret
	}
	return o.StageStatus
}

// GetStageStatusOk returns a tuple with the StageStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSubjectRightsRequestHistory) GetStageStatusOk() (*AnyOfmicrosoftGraphSubjectRightsRequestStageStatus, bool) {
	if o == nil || o.StageStatus == nil {
		return nil, false
	}
	return &o.StageStatus, true
}

// HasStageStatus returns a boolean if a field has been set.
func (o *MicrosoftGraphSubjectRightsRequestHistory) HasStageStatus() bool {
	if o != nil && o.StageStatus != nil {
		return true
	}

	return false
}

// SetStageStatus gets a reference to the given AnyOfmicrosoftGraphSubjectRightsRequestStageStatus and assigns it to the StageStatus field.
func (o *MicrosoftGraphSubjectRightsRequestHistory) SetStageStatus(v AnyOfmicrosoftGraphSubjectRightsRequestStageStatus) {
	o.StageStatus = v
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSubjectRightsRequestHistory) GetType() string {
	if o == nil || o.Type.Get() == nil {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSubjectRightsRequestHistory) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *MicrosoftGraphSubjectRightsRequestHistory) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *MicrosoftGraphSubjectRightsRequestHistory) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *MicrosoftGraphSubjectRightsRequestHistory) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *MicrosoftGraphSubjectRightsRequestHistory) UnsetType() {
	o.Type.Unset()
}

func (o MicrosoftGraphSubjectRightsRequestHistory) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ChangedBy != nil {
		toSerialize["changedBy"] = o.ChangedBy
	}
	if o.EventDateTime.IsSet() {
		toSerialize["eventDateTime"] = o.EventDateTime.Get()
	}
	if o.Stage != nil {
		toSerialize["stage"] = o.Stage
	}
	if o.StageStatus != nil {
		toSerialize["stageStatus"] = o.StageStatus
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphSubjectRightsRequestHistory struct {
	value *MicrosoftGraphSubjectRightsRequestHistory
	isSet bool
}

func (v NullableMicrosoftGraphSubjectRightsRequestHistory) Get() *MicrosoftGraphSubjectRightsRequestHistory {
	return v.value
}

func (v *NullableMicrosoftGraphSubjectRightsRequestHistory) Set(val *MicrosoftGraphSubjectRightsRequestHistory) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphSubjectRightsRequestHistory) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphSubjectRightsRequestHistory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphSubjectRightsRequestHistory(val *MicrosoftGraphSubjectRightsRequestHistory) *NullableMicrosoftGraphSubjectRightsRequestHistory {
	return &NullableMicrosoftGraphSubjectRightsRequestHistory{value: val, isSet: true}
}

func (v NullableMicrosoftGraphSubjectRightsRequestHistory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphSubjectRightsRequestHistory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


