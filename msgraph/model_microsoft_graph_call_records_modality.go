/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphCallRecordsModality the model 'MicrosoftGraphCallRecordsModality'
type MicrosoftGraphCallRecordsModality string

// List of microsoft.graph.callRecords.modality
const (
	AUDIO MicrosoftGraphCallRecordsModality = "audio"
	VIDEO MicrosoftGraphCallRecordsModality = "video"
	VIDEO_BASED_SCREEN_SHARING MicrosoftGraphCallRecordsModality = "videoBasedScreenSharing"
	DATA MicrosoftGraphCallRecordsModality = "data"
	SCREEN_SHARING MicrosoftGraphCallRecordsModality = "screenSharing"
	UNKNOWN_FUTURE_VALUE MicrosoftGraphCallRecordsModality = "unknownFutureValue"
)

// All allowed values of MicrosoftGraphCallRecordsModality enum
var AllowedMicrosoftGraphCallRecordsModalityEnumValues = []MicrosoftGraphCallRecordsModality{
	"audio",
	"video",
	"videoBasedScreenSharing",
	"data",
	"screenSharing",
	"unknownFutureValue",
}

func (v *MicrosoftGraphCallRecordsModality) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphCallRecordsModality(value)
	for _, existing := range AllowedMicrosoftGraphCallRecordsModalityEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphCallRecordsModality", value)
}

// NewMicrosoftGraphCallRecordsModalityFromValue returns a pointer to a valid MicrosoftGraphCallRecordsModality
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphCallRecordsModalityFromValue(v string) (*MicrosoftGraphCallRecordsModality, error) {
	ev := MicrosoftGraphCallRecordsModality(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphCallRecordsModality: valid values are %v", v, AllowedMicrosoftGraphCallRecordsModalityEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphCallRecordsModality) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphCallRecordsModalityEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.callRecords.modality value
func (v MicrosoftGraphCallRecordsModality) Ptr() *MicrosoftGraphCallRecordsModality {
	return &v
}

type NullableMicrosoftGraphCallRecordsModality struct {
	value *MicrosoftGraphCallRecordsModality
	isSet bool
}

func (v NullableMicrosoftGraphCallRecordsModality) Get() *MicrosoftGraphCallRecordsModality {
	return v.value
}

func (v *NullableMicrosoftGraphCallRecordsModality) Set(val *MicrosoftGraphCallRecordsModality) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphCallRecordsModality) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphCallRecordsModality) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphCallRecordsModality(val *MicrosoftGraphCallRecordsModality) *NullableMicrosoftGraphCallRecordsModality {
	return &NullableMicrosoftGraphCallRecordsModality{value: val, isSet: true}
}

func (v NullableMicrosoftGraphCallRecordsModality) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphCallRecordsModality) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

