/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphRequiredResourceAccess struct for MicrosoftGraphRequiredResourceAccess
type MicrosoftGraphRequiredResourceAccess struct {
	// The list of OAuth2.0 permission scopes and app roles that the application requires from the specified resource.
	ResourceAccess *[]MicrosoftGraphResourceAccess `json:"resourceAccess,omitempty"`
	// The unique identifier for the resource that the application requires access to. This should be equal to the appId declared on the target resource application.
	ResourceAppId *string `json:"resourceAppId,omitempty"`
}

// NewMicrosoftGraphRequiredResourceAccess instantiates a new MicrosoftGraphRequiredResourceAccess object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphRequiredResourceAccess() *MicrosoftGraphRequiredResourceAccess {
	this := MicrosoftGraphRequiredResourceAccess{}
	return &this
}

// NewMicrosoftGraphRequiredResourceAccessWithDefaults instantiates a new MicrosoftGraphRequiredResourceAccess object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphRequiredResourceAccessWithDefaults() *MicrosoftGraphRequiredResourceAccess {
	this := MicrosoftGraphRequiredResourceAccess{}
	return &this
}

// GetResourceAccess returns the ResourceAccess field value if set, zero value otherwise.
func (o *MicrosoftGraphRequiredResourceAccess) GetResourceAccess() []MicrosoftGraphResourceAccess {
	if o == nil || o.ResourceAccess == nil {
		var ret []MicrosoftGraphResourceAccess
		return ret
	}
	return *o.ResourceAccess
}

// GetResourceAccessOk returns a tuple with the ResourceAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphRequiredResourceAccess) GetResourceAccessOk() (*[]MicrosoftGraphResourceAccess, bool) {
	if o == nil || o.ResourceAccess == nil {
		return nil, false
	}
	return o.ResourceAccess, true
}

// HasResourceAccess returns a boolean if a field has been set.
func (o *MicrosoftGraphRequiredResourceAccess) HasResourceAccess() bool {
	if o != nil && o.ResourceAccess != nil {
		return true
	}

	return false
}

// SetResourceAccess gets a reference to the given []MicrosoftGraphResourceAccess and assigns it to the ResourceAccess field.
func (o *MicrosoftGraphRequiredResourceAccess) SetResourceAccess(v []MicrosoftGraphResourceAccess) {
	o.ResourceAccess = &v
}

// GetResourceAppId returns the ResourceAppId field value if set, zero value otherwise.
func (o *MicrosoftGraphRequiredResourceAccess) GetResourceAppId() string {
	if o == nil || o.ResourceAppId == nil {
		var ret string
		return ret
	}
	return *o.ResourceAppId
}

// GetResourceAppIdOk returns a tuple with the ResourceAppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphRequiredResourceAccess) GetResourceAppIdOk() (*string, bool) {
	if o == nil || o.ResourceAppId == nil {
		return nil, false
	}
	return o.ResourceAppId, true
}

// HasResourceAppId returns a boolean if a field has been set.
func (o *MicrosoftGraphRequiredResourceAccess) HasResourceAppId() bool {
	if o != nil && o.ResourceAppId != nil {
		return true
	}

	return false
}

// SetResourceAppId gets a reference to the given string and assigns it to the ResourceAppId field.
func (o *MicrosoftGraphRequiredResourceAccess) SetResourceAppId(v string) {
	o.ResourceAppId = &v
}

func (o MicrosoftGraphRequiredResourceAccess) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResourceAccess != nil {
		toSerialize["resourceAccess"] = o.ResourceAccess
	}
	if o.ResourceAppId != nil {
		toSerialize["resourceAppId"] = o.ResourceAppId
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphRequiredResourceAccess struct {
	value *MicrosoftGraphRequiredResourceAccess
	isSet bool
}

func (v NullableMicrosoftGraphRequiredResourceAccess) Get() *MicrosoftGraphRequiredResourceAccess {
	return v.value
}

func (v *NullableMicrosoftGraphRequiredResourceAccess) Set(val *MicrosoftGraphRequiredResourceAccess) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphRequiredResourceAccess) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphRequiredResourceAccess) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphRequiredResourceAccess(val *MicrosoftGraphRequiredResourceAccess) *NullableMicrosoftGraphRequiredResourceAccess {
	return &NullableMicrosoftGraphRequiredResourceAccess{value: val, isSet: true}
}

func (v NullableMicrosoftGraphRequiredResourceAccess) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphRequiredResourceAccess) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


