/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Shift struct for Shift
type Shift struct {
	// The draft version of this shift that is viewable by managers. Required.
	DraftShift AnyOfmicrosoftGraphShiftItem `json:"draftShift,omitempty"`
	// ID of the scheduling group the shift is part of. Required.
	SchedulingGroupId NullableString `json:"schedulingGroupId,omitempty"`
	// The shared version of this shift that is viewable by both employees and managers. Required.
	SharedShift AnyOfmicrosoftGraphShiftItem `json:"sharedShift,omitempty"`
	// ID of the user assigned to the shift. Required.
	UserId NullableString `json:"userId,omitempty"`
}

// NewShift instantiates a new Shift object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShift() *Shift {
	this := Shift{}
	return &this
}

// NewShiftWithDefaults instantiates a new Shift object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShiftWithDefaults() *Shift {
	this := Shift{}
	return &this
}

// GetDraftShift returns the DraftShift field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Shift) GetDraftShift() AnyOfmicrosoftGraphShiftItem {
	if o == nil  {
		var ret AnyOfmicrosoftGraphShiftItem
		return ret
	}
	return o.DraftShift
}

// GetDraftShiftOk returns a tuple with the DraftShift field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Shift) GetDraftShiftOk() (*AnyOfmicrosoftGraphShiftItem, bool) {
	if o == nil || o.DraftShift == nil {
		return nil, false
	}
	return &o.DraftShift, true
}

// HasDraftShift returns a boolean if a field has been set.
func (o *Shift) HasDraftShift() bool {
	if o != nil && o.DraftShift != nil {
		return true
	}

	return false
}

// SetDraftShift gets a reference to the given AnyOfmicrosoftGraphShiftItem and assigns it to the DraftShift field.
func (o *Shift) SetDraftShift(v AnyOfmicrosoftGraphShiftItem) {
	o.DraftShift = v
}

// GetSchedulingGroupId returns the SchedulingGroupId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Shift) GetSchedulingGroupId() string {
	if o == nil || o.SchedulingGroupId.Get() == nil {
		var ret string
		return ret
	}
	return *o.SchedulingGroupId.Get()
}

// GetSchedulingGroupIdOk returns a tuple with the SchedulingGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Shift) GetSchedulingGroupIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SchedulingGroupId.Get(), o.SchedulingGroupId.IsSet()
}

// HasSchedulingGroupId returns a boolean if a field has been set.
func (o *Shift) HasSchedulingGroupId() bool {
	if o != nil && o.SchedulingGroupId.IsSet() {
		return true
	}

	return false
}

// SetSchedulingGroupId gets a reference to the given NullableString and assigns it to the SchedulingGroupId field.
func (o *Shift) SetSchedulingGroupId(v string) {
	o.SchedulingGroupId.Set(&v)
}
// SetSchedulingGroupIdNil sets the value for SchedulingGroupId to be an explicit nil
func (o *Shift) SetSchedulingGroupIdNil() {
	o.SchedulingGroupId.Set(nil)
}

// UnsetSchedulingGroupId ensures that no value is present for SchedulingGroupId, not even an explicit nil
func (o *Shift) UnsetSchedulingGroupId() {
	o.SchedulingGroupId.Unset()
}

// GetSharedShift returns the SharedShift field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Shift) GetSharedShift() AnyOfmicrosoftGraphShiftItem {
	if o == nil  {
		var ret AnyOfmicrosoftGraphShiftItem
		return ret
	}
	return o.SharedShift
}

// GetSharedShiftOk returns a tuple with the SharedShift field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Shift) GetSharedShiftOk() (*AnyOfmicrosoftGraphShiftItem, bool) {
	if o == nil || o.SharedShift == nil {
		return nil, false
	}
	return &o.SharedShift, true
}

// HasSharedShift returns a boolean if a field has been set.
func (o *Shift) HasSharedShift() bool {
	if o != nil && o.SharedShift != nil {
		return true
	}

	return false
}

// SetSharedShift gets a reference to the given AnyOfmicrosoftGraphShiftItem and assigns it to the SharedShift field.
func (o *Shift) SetSharedShift(v AnyOfmicrosoftGraphShiftItem) {
	o.SharedShift = v
}

// GetUserId returns the UserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Shift) GetUserId() string {
	if o == nil || o.UserId.Get() == nil {
		var ret string
		return ret
	}
	return *o.UserId.Get()
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Shift) GetUserIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UserId.Get(), o.UserId.IsSet()
}

// HasUserId returns a boolean if a field has been set.
func (o *Shift) HasUserId() bool {
	if o != nil && o.UserId.IsSet() {
		return true
	}

	return false
}

// SetUserId gets a reference to the given NullableString and assigns it to the UserId field.
func (o *Shift) SetUserId(v string) {
	o.UserId.Set(&v)
}
// SetUserIdNil sets the value for UserId to be an explicit nil
func (o *Shift) SetUserIdNil() {
	o.UserId.Set(nil)
}

// UnsetUserId ensures that no value is present for UserId, not even an explicit nil
func (o *Shift) UnsetUserId() {
	o.UserId.Unset()
}

func (o Shift) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DraftShift != nil {
		toSerialize["draftShift"] = o.DraftShift
	}
	if o.SchedulingGroupId.IsSet() {
		toSerialize["schedulingGroupId"] = o.SchedulingGroupId.Get()
	}
	if o.SharedShift != nil {
		toSerialize["sharedShift"] = o.SharedShift
	}
	if o.UserId.IsSet() {
		toSerialize["userId"] = o.UserId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableShift struct {
	value *Shift
	isSet bool
}

func (v NullableShift) Get() *Shift {
	return v.value
}

func (v *NullableShift) Set(val *Shift) {
	v.value = val
	v.isSet = true
}

func (v NullableShift) IsSet() bool {
	return v.isSet
}

func (v *NullableShift) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShift(val *Shift) *NullableShift {
	return &NullableShift{value: val, isSet: true}
}

func (v NullableShift) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShift) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


