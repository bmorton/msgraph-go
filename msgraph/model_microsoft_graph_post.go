/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphPost struct for MicrosoftGraphPost
type MicrosoftGraphPost struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// The categories associated with the item
	Categories *[]*string `json:"categories,omitempty"`
	// Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.
	ChangeKey NullableString `json:"changeKey,omitempty"`
	// The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
	CreatedDateTime NullableTime `json:"createdDateTime,omitempty"`
	// The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
	LastModifiedDateTime NullableTime `json:"lastModifiedDateTime,omitempty"`
	// The contents of the post. This is a default property. This property can be null.
	Body AnyOfmicrosoftGraphItemBody `json:"body,omitempty"`
	// Unique ID of the conversation. Read-only.
	ConversationId NullableString `json:"conversationId,omitempty"`
	// Unique ID of the conversation thread. Read-only.
	ConversationThreadId NullableString `json:"conversationThreadId,omitempty"`
	From *MicrosoftGraphRecipient `json:"from,omitempty"`
	// Indicates whether the post has at least one attachment. This is a default property.
	HasAttachments *bool `json:"hasAttachments,omitempty"`
	// Conversation participants that were added to the thread as part of this post.
	NewParticipants *[]MicrosoftGraphRecipient `json:"newParticipants,omitempty"`
	// Specifies when the post was received. The DateTimeOffset type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
	ReceivedDateTime *time.Time `json:"receivedDateTime,omitempty"`
	// Contains the address of the sender. The value of Sender is assumed to be the address of the authenticated user in the case when Sender is not specified. This is a default property.
	Sender AnyOfmicrosoftGraphRecipient `json:"sender,omitempty"`
	// Read-only. Nullable. Supports $expand.
	Attachments *[]MicrosoftGraphAttachment `json:"attachments,omitempty"`
	// The collection of open extensions defined for the post. Read-only. Nullable. Supports $expand.
	Extensions *[]MicrosoftGraphExtension `json:"extensions,omitempty"`
	// Read-only. Supports $expand.
	InReplyTo AnyOfmicrosoftGraphPost `json:"inReplyTo,omitempty"`
	// The collection of multi-value extended properties defined for the post. Read-only. Nullable.
	MultiValueExtendedProperties *[]MicrosoftGraphMultiValueLegacyExtendedProperty `json:"multiValueExtendedProperties,omitempty"`
	// The collection of single-value extended properties defined for the post. Read-only. Nullable.
	SingleValueExtendedProperties *[]MicrosoftGraphSingleValueLegacyExtendedProperty `json:"singleValueExtendedProperties,omitempty"`
}

// NewMicrosoftGraphPost instantiates a new MicrosoftGraphPost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphPost() *MicrosoftGraphPost {
	this := MicrosoftGraphPost{}
	return &this
}

// NewMicrosoftGraphPostWithDefaults instantiates a new MicrosoftGraphPost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphPostWithDefaults() *MicrosoftGraphPost {
	this := MicrosoftGraphPost{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphPost) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPost) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphPost) SetId(v string) {
	o.Id = &v
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *MicrosoftGraphPost) GetCategories() []*string {
	if o == nil || o.Categories == nil {
		var ret []*string
		return ret
	}
	return *o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPost) GetCategoriesOk() (*[]*string, bool) {
	if o == nil || o.Categories == nil {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasCategories() bool {
	if o != nil && o.Categories != nil {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []*string and assigns it to the Categories field.
func (o *MicrosoftGraphPost) SetCategories(v []*string) {
	o.Categories = &v
}

// GetChangeKey returns the ChangeKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphPost) GetChangeKey() string {
	if o == nil || o.ChangeKey.Get() == nil {
		var ret string
		return ret
	}
	return *o.ChangeKey.Get()
}

// GetChangeKeyOk returns a tuple with the ChangeKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphPost) GetChangeKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ChangeKey.Get(), o.ChangeKey.IsSet()
}

// HasChangeKey returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasChangeKey() bool {
	if o != nil && o.ChangeKey.IsSet() {
		return true
	}

	return false
}

// SetChangeKey gets a reference to the given NullableString and assigns it to the ChangeKey field.
func (o *MicrosoftGraphPost) SetChangeKey(v string) {
	o.ChangeKey.Set(&v)
}
// SetChangeKeyNil sets the value for ChangeKey to be an explicit nil
func (o *MicrosoftGraphPost) SetChangeKeyNil() {
	o.ChangeKey.Set(nil)
}

// UnsetChangeKey ensures that no value is present for ChangeKey, not even an explicit nil
func (o *MicrosoftGraphPost) UnsetChangeKey() {
	o.ChangeKey.Unset()
}

// GetCreatedDateTime returns the CreatedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphPost) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime.Get()
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphPost) GetCreatedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatedDateTime.Get(), o.CreatedDateTime.IsSet()
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime.IsSet() {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given NullableTime and assigns it to the CreatedDateTime field.
func (o *MicrosoftGraphPost) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime.Set(&v)
}
// SetCreatedDateTimeNil sets the value for CreatedDateTime to be an explicit nil
func (o *MicrosoftGraphPost) SetCreatedDateTimeNil() {
	o.CreatedDateTime.Set(nil)
}

// UnsetCreatedDateTime ensures that no value is present for CreatedDateTime, not even an explicit nil
func (o *MicrosoftGraphPost) UnsetCreatedDateTime() {
	o.CreatedDateTime.Unset()
}

// GetLastModifiedDateTime returns the LastModifiedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphPost) GetLastModifiedDateTime() time.Time {
	if o == nil || o.LastModifiedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDateTime.Get()
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphPost) GetLastModifiedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastModifiedDateTime.Get(), o.LastModifiedDateTime.IsSet()
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasLastModifiedDateTime() bool {
	if o != nil && o.LastModifiedDateTime.IsSet() {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given NullableTime and assigns it to the LastModifiedDateTime field.
func (o *MicrosoftGraphPost) SetLastModifiedDateTime(v time.Time) {
	o.LastModifiedDateTime.Set(&v)
}
// SetLastModifiedDateTimeNil sets the value for LastModifiedDateTime to be an explicit nil
func (o *MicrosoftGraphPost) SetLastModifiedDateTimeNil() {
	o.LastModifiedDateTime.Set(nil)
}

// UnsetLastModifiedDateTime ensures that no value is present for LastModifiedDateTime, not even an explicit nil
func (o *MicrosoftGraphPost) UnsetLastModifiedDateTime() {
	o.LastModifiedDateTime.Unset()
}

// GetBody returns the Body field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphPost) GetBody() AnyOfmicrosoftGraphItemBody {
	if o == nil  {
		var ret AnyOfmicrosoftGraphItemBody
		return ret
	}
	return o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphPost) GetBodyOk() (*AnyOfmicrosoftGraphItemBody, bool) {
	if o == nil || o.Body == nil {
		return nil, false
	}
	return &o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given AnyOfmicrosoftGraphItemBody and assigns it to the Body field.
func (o *MicrosoftGraphPost) SetBody(v AnyOfmicrosoftGraphItemBody) {
	o.Body = v
}

// GetConversationId returns the ConversationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphPost) GetConversationId() string {
	if o == nil || o.ConversationId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ConversationId.Get()
}

// GetConversationIdOk returns a tuple with the ConversationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphPost) GetConversationIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ConversationId.Get(), o.ConversationId.IsSet()
}

// HasConversationId returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasConversationId() bool {
	if o != nil && o.ConversationId.IsSet() {
		return true
	}

	return false
}

// SetConversationId gets a reference to the given NullableString and assigns it to the ConversationId field.
func (o *MicrosoftGraphPost) SetConversationId(v string) {
	o.ConversationId.Set(&v)
}
// SetConversationIdNil sets the value for ConversationId to be an explicit nil
func (o *MicrosoftGraphPost) SetConversationIdNil() {
	o.ConversationId.Set(nil)
}

// UnsetConversationId ensures that no value is present for ConversationId, not even an explicit nil
func (o *MicrosoftGraphPost) UnsetConversationId() {
	o.ConversationId.Unset()
}

// GetConversationThreadId returns the ConversationThreadId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphPost) GetConversationThreadId() string {
	if o == nil || o.ConversationThreadId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ConversationThreadId.Get()
}

// GetConversationThreadIdOk returns a tuple with the ConversationThreadId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphPost) GetConversationThreadIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ConversationThreadId.Get(), o.ConversationThreadId.IsSet()
}

// HasConversationThreadId returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasConversationThreadId() bool {
	if o != nil && o.ConversationThreadId.IsSet() {
		return true
	}

	return false
}

// SetConversationThreadId gets a reference to the given NullableString and assigns it to the ConversationThreadId field.
func (o *MicrosoftGraphPost) SetConversationThreadId(v string) {
	o.ConversationThreadId.Set(&v)
}
// SetConversationThreadIdNil sets the value for ConversationThreadId to be an explicit nil
func (o *MicrosoftGraphPost) SetConversationThreadIdNil() {
	o.ConversationThreadId.Set(nil)
}

// UnsetConversationThreadId ensures that no value is present for ConversationThreadId, not even an explicit nil
func (o *MicrosoftGraphPost) UnsetConversationThreadId() {
	o.ConversationThreadId.Unset()
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *MicrosoftGraphPost) GetFrom() MicrosoftGraphRecipient {
	if o == nil || o.From == nil {
		var ret MicrosoftGraphRecipient
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPost) GetFromOk() (*MicrosoftGraphRecipient, bool) {
	if o == nil || o.From == nil {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasFrom() bool {
	if o != nil && o.From != nil {
		return true
	}

	return false
}

// SetFrom gets a reference to the given MicrosoftGraphRecipient and assigns it to the From field.
func (o *MicrosoftGraphPost) SetFrom(v MicrosoftGraphRecipient) {
	o.From = &v
}

// GetHasAttachments returns the HasAttachments field value if set, zero value otherwise.
func (o *MicrosoftGraphPost) GetHasAttachments() bool {
	if o == nil || o.HasAttachments == nil {
		var ret bool
		return ret
	}
	return *o.HasAttachments
}

// GetHasAttachmentsOk returns a tuple with the HasAttachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPost) GetHasAttachmentsOk() (*bool, bool) {
	if o == nil || o.HasAttachments == nil {
		return nil, false
	}
	return o.HasAttachments, true
}

// HasHasAttachments returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasHasAttachments() bool {
	if o != nil && o.HasAttachments != nil {
		return true
	}

	return false
}

// SetHasAttachments gets a reference to the given bool and assigns it to the HasAttachments field.
func (o *MicrosoftGraphPost) SetHasAttachments(v bool) {
	o.HasAttachments = &v
}

// GetNewParticipants returns the NewParticipants field value if set, zero value otherwise.
func (o *MicrosoftGraphPost) GetNewParticipants() []MicrosoftGraphRecipient {
	if o == nil || o.NewParticipants == nil {
		var ret []MicrosoftGraphRecipient
		return ret
	}
	return *o.NewParticipants
}

// GetNewParticipantsOk returns a tuple with the NewParticipants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPost) GetNewParticipantsOk() (*[]MicrosoftGraphRecipient, bool) {
	if o == nil || o.NewParticipants == nil {
		return nil, false
	}
	return o.NewParticipants, true
}

// HasNewParticipants returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasNewParticipants() bool {
	if o != nil && o.NewParticipants != nil {
		return true
	}

	return false
}

// SetNewParticipants gets a reference to the given []MicrosoftGraphRecipient and assigns it to the NewParticipants field.
func (o *MicrosoftGraphPost) SetNewParticipants(v []MicrosoftGraphRecipient) {
	o.NewParticipants = &v
}

// GetReceivedDateTime returns the ReceivedDateTime field value if set, zero value otherwise.
func (o *MicrosoftGraphPost) GetReceivedDateTime() time.Time {
	if o == nil || o.ReceivedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.ReceivedDateTime
}

// GetReceivedDateTimeOk returns a tuple with the ReceivedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPost) GetReceivedDateTimeOk() (*time.Time, bool) {
	if o == nil || o.ReceivedDateTime == nil {
		return nil, false
	}
	return o.ReceivedDateTime, true
}

// HasReceivedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasReceivedDateTime() bool {
	if o != nil && o.ReceivedDateTime != nil {
		return true
	}

	return false
}

// SetReceivedDateTime gets a reference to the given time.Time and assigns it to the ReceivedDateTime field.
func (o *MicrosoftGraphPost) SetReceivedDateTime(v time.Time) {
	o.ReceivedDateTime = &v
}

// GetSender returns the Sender field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphPost) GetSender() AnyOfmicrosoftGraphRecipient {
	if o == nil  {
		var ret AnyOfmicrosoftGraphRecipient
		return ret
	}
	return o.Sender
}

// GetSenderOk returns a tuple with the Sender field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphPost) GetSenderOk() (*AnyOfmicrosoftGraphRecipient, bool) {
	if o == nil || o.Sender == nil {
		return nil, false
	}
	return &o.Sender, true
}

// HasSender returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasSender() bool {
	if o != nil && o.Sender != nil {
		return true
	}

	return false
}

// SetSender gets a reference to the given AnyOfmicrosoftGraphRecipient and assigns it to the Sender field.
func (o *MicrosoftGraphPost) SetSender(v AnyOfmicrosoftGraphRecipient) {
	o.Sender = v
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *MicrosoftGraphPost) GetAttachments() []MicrosoftGraphAttachment {
	if o == nil || o.Attachments == nil {
		var ret []MicrosoftGraphAttachment
		return ret
	}
	return *o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPost) GetAttachmentsOk() (*[]MicrosoftGraphAttachment, bool) {
	if o == nil || o.Attachments == nil {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasAttachments() bool {
	if o != nil && o.Attachments != nil {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []MicrosoftGraphAttachment and assigns it to the Attachments field.
func (o *MicrosoftGraphPost) SetAttachments(v []MicrosoftGraphAttachment) {
	o.Attachments = &v
}

// GetExtensions returns the Extensions field value if set, zero value otherwise.
func (o *MicrosoftGraphPost) GetExtensions() []MicrosoftGraphExtension {
	if o == nil || o.Extensions == nil {
		var ret []MicrosoftGraphExtension
		return ret
	}
	return *o.Extensions
}

// GetExtensionsOk returns a tuple with the Extensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPost) GetExtensionsOk() (*[]MicrosoftGraphExtension, bool) {
	if o == nil || o.Extensions == nil {
		return nil, false
	}
	return o.Extensions, true
}

// HasExtensions returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasExtensions() bool {
	if o != nil && o.Extensions != nil {
		return true
	}

	return false
}

// SetExtensions gets a reference to the given []MicrosoftGraphExtension and assigns it to the Extensions field.
func (o *MicrosoftGraphPost) SetExtensions(v []MicrosoftGraphExtension) {
	o.Extensions = &v
}

// GetInReplyTo returns the InReplyTo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphPost) GetInReplyTo() AnyOfmicrosoftGraphPost {
	if o == nil  {
		var ret AnyOfmicrosoftGraphPost
		return ret
	}
	return o.InReplyTo
}

// GetInReplyToOk returns a tuple with the InReplyTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphPost) GetInReplyToOk() (*AnyOfmicrosoftGraphPost, bool) {
	if o == nil || o.InReplyTo == nil {
		return nil, false
	}
	return &o.InReplyTo, true
}

// HasInReplyTo returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasInReplyTo() bool {
	if o != nil && o.InReplyTo != nil {
		return true
	}

	return false
}

// SetInReplyTo gets a reference to the given AnyOfmicrosoftGraphPost and assigns it to the InReplyTo field.
func (o *MicrosoftGraphPost) SetInReplyTo(v AnyOfmicrosoftGraphPost) {
	o.InReplyTo = v
}

// GetMultiValueExtendedProperties returns the MultiValueExtendedProperties field value if set, zero value otherwise.
func (o *MicrosoftGraphPost) GetMultiValueExtendedProperties() []MicrosoftGraphMultiValueLegacyExtendedProperty {
	if o == nil || o.MultiValueExtendedProperties == nil {
		var ret []MicrosoftGraphMultiValueLegacyExtendedProperty
		return ret
	}
	return *o.MultiValueExtendedProperties
}

// GetMultiValueExtendedPropertiesOk returns a tuple with the MultiValueExtendedProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPost) GetMultiValueExtendedPropertiesOk() (*[]MicrosoftGraphMultiValueLegacyExtendedProperty, bool) {
	if o == nil || o.MultiValueExtendedProperties == nil {
		return nil, false
	}
	return o.MultiValueExtendedProperties, true
}

// HasMultiValueExtendedProperties returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasMultiValueExtendedProperties() bool {
	if o != nil && o.MultiValueExtendedProperties != nil {
		return true
	}

	return false
}

// SetMultiValueExtendedProperties gets a reference to the given []MicrosoftGraphMultiValueLegacyExtendedProperty and assigns it to the MultiValueExtendedProperties field.
func (o *MicrosoftGraphPost) SetMultiValueExtendedProperties(v []MicrosoftGraphMultiValueLegacyExtendedProperty) {
	o.MultiValueExtendedProperties = &v
}

// GetSingleValueExtendedProperties returns the SingleValueExtendedProperties field value if set, zero value otherwise.
func (o *MicrosoftGraphPost) GetSingleValueExtendedProperties() []MicrosoftGraphSingleValueLegacyExtendedProperty {
	if o == nil || o.SingleValueExtendedProperties == nil {
		var ret []MicrosoftGraphSingleValueLegacyExtendedProperty
		return ret
	}
	return *o.SingleValueExtendedProperties
}

// GetSingleValueExtendedPropertiesOk returns a tuple with the SingleValueExtendedProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPost) GetSingleValueExtendedPropertiesOk() (*[]MicrosoftGraphSingleValueLegacyExtendedProperty, bool) {
	if o == nil || o.SingleValueExtendedProperties == nil {
		return nil, false
	}
	return o.SingleValueExtendedProperties, true
}

// HasSingleValueExtendedProperties returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasSingleValueExtendedProperties() bool {
	if o != nil && o.SingleValueExtendedProperties != nil {
		return true
	}

	return false
}

// SetSingleValueExtendedProperties gets a reference to the given []MicrosoftGraphSingleValueLegacyExtendedProperty and assigns it to the SingleValueExtendedProperties field.
func (o *MicrosoftGraphPost) SetSingleValueExtendedProperties(v []MicrosoftGraphSingleValueLegacyExtendedProperty) {
	o.SingleValueExtendedProperties = &v
}

func (o MicrosoftGraphPost) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Categories != nil {
		toSerialize["categories"] = o.Categories
	}
	if o.ChangeKey.IsSet() {
		toSerialize["changeKey"] = o.ChangeKey.Get()
	}
	if o.CreatedDateTime.IsSet() {
		toSerialize["createdDateTime"] = o.CreatedDateTime.Get()
	}
	if o.LastModifiedDateTime.IsSet() {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime.Get()
	}
	if o.Body != nil {
		toSerialize["body"] = o.Body
	}
	if o.ConversationId.IsSet() {
		toSerialize["conversationId"] = o.ConversationId.Get()
	}
	if o.ConversationThreadId.IsSet() {
		toSerialize["conversationThreadId"] = o.ConversationThreadId.Get()
	}
	if o.From != nil {
		toSerialize["from"] = o.From
	}
	if o.HasAttachments != nil {
		toSerialize["hasAttachments"] = o.HasAttachments
	}
	if o.NewParticipants != nil {
		toSerialize["newParticipants"] = o.NewParticipants
	}
	if o.ReceivedDateTime != nil {
		toSerialize["receivedDateTime"] = o.ReceivedDateTime
	}
	if o.Sender != nil {
		toSerialize["sender"] = o.Sender
	}
	if o.Attachments != nil {
		toSerialize["attachments"] = o.Attachments
	}
	if o.Extensions != nil {
		toSerialize["extensions"] = o.Extensions
	}
	if o.InReplyTo != nil {
		toSerialize["inReplyTo"] = o.InReplyTo
	}
	if o.MultiValueExtendedProperties != nil {
		toSerialize["multiValueExtendedProperties"] = o.MultiValueExtendedProperties
	}
	if o.SingleValueExtendedProperties != nil {
		toSerialize["singleValueExtendedProperties"] = o.SingleValueExtendedProperties
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphPost struct {
	value *MicrosoftGraphPost
	isSet bool
}

func (v NullableMicrosoftGraphPost) Get() *MicrosoftGraphPost {
	return v.value
}

func (v *NullableMicrosoftGraphPost) Set(val *MicrosoftGraphPost) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphPost) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphPost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphPost(val *MicrosoftGraphPost) *NullableMicrosoftGraphPost {
	return &NullableMicrosoftGraphPost{value: val, isSet: true}
}

func (v NullableMicrosoftGraphPost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphPost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


