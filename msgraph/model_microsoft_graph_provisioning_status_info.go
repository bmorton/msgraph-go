/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphProvisioningStatusInfo struct for MicrosoftGraphProvisioningStatusInfo
type MicrosoftGraphProvisioningStatusInfo struct {
	ErrorInformation AnyOfmicrosoftGraphProvisioningErrorInfo `json:"errorInformation,omitempty"`
	// Possible values are: success, warning, failure, skipped, unknownFutureValue.
	Status AnyOfmicrosoftGraphProvisioningResult `json:"status,omitempty"`
}

// NewMicrosoftGraphProvisioningStatusInfo instantiates a new MicrosoftGraphProvisioningStatusInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphProvisioningStatusInfo() *MicrosoftGraphProvisioningStatusInfo {
	this := MicrosoftGraphProvisioningStatusInfo{}
	return &this
}

// NewMicrosoftGraphProvisioningStatusInfoWithDefaults instantiates a new MicrosoftGraphProvisioningStatusInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphProvisioningStatusInfoWithDefaults() *MicrosoftGraphProvisioningStatusInfo {
	this := MicrosoftGraphProvisioningStatusInfo{}
	return &this
}

// GetErrorInformation returns the ErrorInformation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphProvisioningStatusInfo) GetErrorInformation() AnyOfmicrosoftGraphProvisioningErrorInfo {
	if o == nil  {
		var ret AnyOfmicrosoftGraphProvisioningErrorInfo
		return ret
	}
	return o.ErrorInformation
}

// GetErrorInformationOk returns a tuple with the ErrorInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphProvisioningStatusInfo) GetErrorInformationOk() (*AnyOfmicrosoftGraphProvisioningErrorInfo, bool) {
	if o == nil || o.ErrorInformation == nil {
		return nil, false
	}
	return &o.ErrorInformation, true
}

// HasErrorInformation returns a boolean if a field has been set.
func (o *MicrosoftGraphProvisioningStatusInfo) HasErrorInformation() bool {
	if o != nil && o.ErrorInformation != nil {
		return true
	}

	return false
}

// SetErrorInformation gets a reference to the given AnyOfmicrosoftGraphProvisioningErrorInfo and assigns it to the ErrorInformation field.
func (o *MicrosoftGraphProvisioningStatusInfo) SetErrorInformation(v AnyOfmicrosoftGraphProvisioningErrorInfo) {
	o.ErrorInformation = v
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphProvisioningStatusInfo) GetStatus() AnyOfmicrosoftGraphProvisioningResult {
	if o == nil  {
		var ret AnyOfmicrosoftGraphProvisioningResult
		return ret
	}
	return o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphProvisioningStatusInfo) GetStatusOk() (*AnyOfmicrosoftGraphProvisioningResult, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return &o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MicrosoftGraphProvisioningStatusInfo) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given AnyOfmicrosoftGraphProvisioningResult and assigns it to the Status field.
func (o *MicrosoftGraphProvisioningStatusInfo) SetStatus(v AnyOfmicrosoftGraphProvisioningResult) {
	o.Status = v
}

func (o MicrosoftGraphProvisioningStatusInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ErrorInformation != nil {
		toSerialize["errorInformation"] = o.ErrorInformation
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphProvisioningStatusInfo struct {
	value *MicrosoftGraphProvisioningStatusInfo
	isSet bool
}

func (v NullableMicrosoftGraphProvisioningStatusInfo) Get() *MicrosoftGraphProvisioningStatusInfo {
	return v.value
}

func (v *NullableMicrosoftGraphProvisioningStatusInfo) Set(val *MicrosoftGraphProvisioningStatusInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphProvisioningStatusInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphProvisioningStatusInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphProvisioningStatusInfo(val *MicrosoftGraphProvisioningStatusInfo) *NullableMicrosoftGraphProvisioningStatusInfo {
	return &NullableMicrosoftGraphProvisioningStatusInfo{value: val, isSet: true}
}

func (v NullableMicrosoftGraphProvisioningStatusInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphProvisioningStatusInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


