/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ItemAnalytics struct for ItemAnalytics
type ItemAnalytics struct {
	AllTime AnyOfmicrosoftGraphItemActivityStat `json:"allTime,omitempty"`
	ItemActivityStats *[]MicrosoftGraphItemActivityStat `json:"itemActivityStats,omitempty"`
	LastSevenDays AnyOfmicrosoftGraphItemActivityStat `json:"lastSevenDays,omitempty"`
}

// NewItemAnalytics instantiates a new ItemAnalytics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewItemAnalytics() *ItemAnalytics {
	this := ItemAnalytics{}
	return &this
}

// NewItemAnalyticsWithDefaults instantiates a new ItemAnalytics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewItemAnalyticsWithDefaults() *ItemAnalytics {
	this := ItemAnalytics{}
	return &this
}

// GetAllTime returns the AllTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ItemAnalytics) GetAllTime() AnyOfmicrosoftGraphItemActivityStat {
	if o == nil  {
		var ret AnyOfmicrosoftGraphItemActivityStat
		return ret
	}
	return o.AllTime
}

// GetAllTimeOk returns a tuple with the AllTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ItemAnalytics) GetAllTimeOk() (*AnyOfmicrosoftGraphItemActivityStat, bool) {
	if o == nil || o.AllTime == nil {
		return nil, false
	}
	return &o.AllTime, true
}

// HasAllTime returns a boolean if a field has been set.
func (o *ItemAnalytics) HasAllTime() bool {
	if o != nil && o.AllTime != nil {
		return true
	}

	return false
}

// SetAllTime gets a reference to the given AnyOfmicrosoftGraphItemActivityStat and assigns it to the AllTime field.
func (o *ItemAnalytics) SetAllTime(v AnyOfmicrosoftGraphItemActivityStat) {
	o.AllTime = v
}

// GetItemActivityStats returns the ItemActivityStats field value if set, zero value otherwise.
func (o *ItemAnalytics) GetItemActivityStats() []MicrosoftGraphItemActivityStat {
	if o == nil || o.ItemActivityStats == nil {
		var ret []MicrosoftGraphItemActivityStat
		return ret
	}
	return *o.ItemActivityStats
}

// GetItemActivityStatsOk returns a tuple with the ItemActivityStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemAnalytics) GetItemActivityStatsOk() (*[]MicrosoftGraphItemActivityStat, bool) {
	if o == nil || o.ItemActivityStats == nil {
		return nil, false
	}
	return o.ItemActivityStats, true
}

// HasItemActivityStats returns a boolean if a field has been set.
func (o *ItemAnalytics) HasItemActivityStats() bool {
	if o != nil && o.ItemActivityStats != nil {
		return true
	}

	return false
}

// SetItemActivityStats gets a reference to the given []MicrosoftGraphItemActivityStat and assigns it to the ItemActivityStats field.
func (o *ItemAnalytics) SetItemActivityStats(v []MicrosoftGraphItemActivityStat) {
	o.ItemActivityStats = &v
}

// GetLastSevenDays returns the LastSevenDays field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ItemAnalytics) GetLastSevenDays() AnyOfmicrosoftGraphItemActivityStat {
	if o == nil  {
		var ret AnyOfmicrosoftGraphItemActivityStat
		return ret
	}
	return o.LastSevenDays
}

// GetLastSevenDaysOk returns a tuple with the LastSevenDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ItemAnalytics) GetLastSevenDaysOk() (*AnyOfmicrosoftGraphItemActivityStat, bool) {
	if o == nil || o.LastSevenDays == nil {
		return nil, false
	}
	return &o.LastSevenDays, true
}

// HasLastSevenDays returns a boolean if a field has been set.
func (o *ItemAnalytics) HasLastSevenDays() bool {
	if o != nil && o.LastSevenDays != nil {
		return true
	}

	return false
}

// SetLastSevenDays gets a reference to the given AnyOfmicrosoftGraphItemActivityStat and assigns it to the LastSevenDays field.
func (o *ItemAnalytics) SetLastSevenDays(v AnyOfmicrosoftGraphItemActivityStat) {
	o.LastSevenDays = v
}

func (o ItemAnalytics) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllTime != nil {
		toSerialize["allTime"] = o.AllTime
	}
	if o.ItemActivityStats != nil {
		toSerialize["itemActivityStats"] = o.ItemActivityStats
	}
	if o.LastSevenDays != nil {
		toSerialize["lastSevenDays"] = o.LastSevenDays
	}
	return json.Marshal(toSerialize)
}

type NullableItemAnalytics struct {
	value *ItemAnalytics
	isSet bool
}

func (v NullableItemAnalytics) Get() *ItemAnalytics {
	return v.value
}

func (v *NullableItemAnalytics) Set(val *ItemAnalytics) {
	v.value = val
	v.isSet = true
}

func (v NullableItemAnalytics) IsSet() bool {
	return v.isSet
}

func (v *NullableItemAnalytics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableItemAnalytics(val *ItemAnalytics) *NullableItemAnalytics {
	return &NullableItemAnalytics{value: val, isSet: true}
}

func (v NullableItemAnalytics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableItemAnalytics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


