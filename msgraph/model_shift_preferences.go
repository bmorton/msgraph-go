/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// ShiftPreferences struct for ShiftPreferences
type ShiftPreferences struct {
	// Availability of the user to be scheduled for work and its recurrence pattern.
	Availability *[]*AnyOfmicrosoftGraphShiftAvailability `json:"availability,omitempty"`
}

// NewShiftPreferences instantiates a new ShiftPreferences object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShiftPreferences() *ShiftPreferences {
	this := ShiftPreferences{}
	return &this
}

// NewShiftPreferencesWithDefaults instantiates a new ShiftPreferences object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShiftPreferencesWithDefaults() *ShiftPreferences {
	this := ShiftPreferences{}
	return &this
}

// GetAvailability returns the Availability field value if set, zero value otherwise.
func (o *ShiftPreferences) GetAvailability() []*AnyOfmicrosoftGraphShiftAvailability {
	if o == nil || o.Availability == nil {
		var ret []*AnyOfmicrosoftGraphShiftAvailability
		return ret
	}
	return *o.Availability
}

// GetAvailabilityOk returns a tuple with the Availability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShiftPreferences) GetAvailabilityOk() (*[]*AnyOfmicrosoftGraphShiftAvailability, bool) {
	if o == nil || o.Availability == nil {
		return nil, false
	}
	return o.Availability, true
}

// HasAvailability returns a boolean if a field has been set.
func (o *ShiftPreferences) HasAvailability() bool {
	if o != nil && o.Availability != nil {
		return true
	}

	return false
}

// SetAvailability gets a reference to the given []*AnyOfmicrosoftGraphShiftAvailability and assigns it to the Availability field.
func (o *ShiftPreferences) SetAvailability(v []*AnyOfmicrosoftGraphShiftAvailability) {
	o.Availability = &v
}

func (o ShiftPreferences) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Availability != nil {
		toSerialize["availability"] = o.Availability
	}
	return json.Marshal(toSerialize)
}

type NullableShiftPreferences struct {
	value *ShiftPreferences
	isSet bool
}

func (v NullableShiftPreferences) Get() *ShiftPreferences {
	return v.value
}

func (v *NullableShiftPreferences) Set(val *ShiftPreferences) {
	v.value = val
	v.isSet = true
}

func (v NullableShiftPreferences) IsSet() bool {
	return v.isSet
}

func (v *NullableShiftPreferences) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShiftPreferences(val *ShiftPreferences) *NullableShiftPreferences {
	return &NullableShiftPreferences{value: val, isSet: true}
}

func (v NullableShiftPreferences) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShiftPreferences) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


