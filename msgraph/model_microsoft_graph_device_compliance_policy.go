/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphDeviceCompliancePolicy struct for MicrosoftGraphDeviceCompliancePolicy
type MicrosoftGraphDeviceCompliancePolicy struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// DateTime the object was created.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// Admin provided description of the Device Configuration.
	Description NullableString `json:"description,omitempty"`
	// Admin provided name of the device configuration.
	DisplayName *string `json:"displayName,omitempty"`
	// DateTime the object was last modified.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// Version of the device configuration.
	Version *int32 `json:"version,omitempty"`
	// The collection of assignments for this compliance policy.
	Assignments *[]MicrosoftGraphDeviceCompliancePolicyAssignment `json:"assignments,omitempty"`
	// Compliance Setting State Device Summary
	DeviceSettingStateSummaries *[]MicrosoftGraphSettingStateDeviceSummary `json:"deviceSettingStateSummaries,omitempty"`
	// List of DeviceComplianceDeviceStatus.
	DeviceStatuses *[]MicrosoftGraphDeviceComplianceDeviceStatus `json:"deviceStatuses,omitempty"`
	// Device compliance devices status overview
	DeviceStatusOverview AnyOfmicrosoftGraphDeviceComplianceDeviceOverview `json:"deviceStatusOverview,omitempty"`
	// The list of scheduled action per rule for this compliance policy. This is a required property when creating any individual per-platform compliance policies.
	ScheduledActionsForRule *[]MicrosoftGraphDeviceComplianceScheduledActionForRule `json:"scheduledActionsForRule,omitempty"`
	// List of DeviceComplianceUserStatus.
	UserStatuses *[]MicrosoftGraphDeviceComplianceUserStatus `json:"userStatuses,omitempty"`
	// Device compliance users status overview
	UserStatusOverview AnyOfmicrosoftGraphDeviceComplianceUserOverview `json:"userStatusOverview,omitempty"`
}

// NewMicrosoftGraphDeviceCompliancePolicy instantiates a new MicrosoftGraphDeviceCompliancePolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphDeviceCompliancePolicy() *MicrosoftGraphDeviceCompliancePolicy {
	this := MicrosoftGraphDeviceCompliancePolicy{}
	return &this
}

// NewMicrosoftGraphDeviceCompliancePolicyWithDefaults instantiates a new MicrosoftGraphDeviceCompliancePolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphDeviceCompliancePolicyWithDefaults() *MicrosoftGraphDeviceCompliancePolicy {
	this := MicrosoftGraphDeviceCompliancePolicy{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceCompliancePolicy) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceCompliancePolicy) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceCompliancePolicy) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphDeviceCompliancePolicy) SetId(v string) {
	o.Id = &v
}

// GetCreatedDateTime returns the CreatedDateTime field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceCompliancePolicy) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceCompliancePolicy) GetCreatedDateTimeOk() (*time.Time, bool) {
	if o == nil || o.CreatedDateTime == nil {
		return nil, false
	}
	return o.CreatedDateTime, true
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceCompliancePolicy) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime != nil {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given time.Time and assigns it to the CreatedDateTime field.
func (o *MicrosoftGraphDeviceCompliancePolicy) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDeviceCompliancePolicy) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDeviceCompliancePolicy) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceCompliancePolicy) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *MicrosoftGraphDeviceCompliancePolicy) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *MicrosoftGraphDeviceCompliancePolicy) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *MicrosoftGraphDeviceCompliancePolicy) UnsetDescription() {
	o.Description.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceCompliancePolicy) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceCompliancePolicy) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceCompliancePolicy) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *MicrosoftGraphDeviceCompliancePolicy) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetLastModifiedDateTime returns the LastModifiedDateTime field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceCompliancePolicy) GetLastModifiedDateTime() time.Time {
	if o == nil || o.LastModifiedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDateTime
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceCompliancePolicy) GetLastModifiedDateTimeOk() (*time.Time, bool) {
	if o == nil || o.LastModifiedDateTime == nil {
		return nil, false
	}
	return o.LastModifiedDateTime, true
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceCompliancePolicy) HasLastModifiedDateTime() bool {
	if o != nil && o.LastModifiedDateTime != nil {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given time.Time and assigns it to the LastModifiedDateTime field.
func (o *MicrosoftGraphDeviceCompliancePolicy) SetLastModifiedDateTime(v time.Time) {
	o.LastModifiedDateTime = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceCompliancePolicy) GetVersion() int32 {
	if o == nil || o.Version == nil {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceCompliancePolicy) GetVersionOk() (*int32, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceCompliancePolicy) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *MicrosoftGraphDeviceCompliancePolicy) SetVersion(v int32) {
	o.Version = &v
}

// GetAssignments returns the Assignments field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceCompliancePolicy) GetAssignments() []MicrosoftGraphDeviceCompliancePolicyAssignment {
	if o == nil || o.Assignments == nil {
		var ret []MicrosoftGraphDeviceCompliancePolicyAssignment
		return ret
	}
	return *o.Assignments
}

// GetAssignmentsOk returns a tuple with the Assignments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceCompliancePolicy) GetAssignmentsOk() (*[]MicrosoftGraphDeviceCompliancePolicyAssignment, bool) {
	if o == nil || o.Assignments == nil {
		return nil, false
	}
	return o.Assignments, true
}

// HasAssignments returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceCompliancePolicy) HasAssignments() bool {
	if o != nil && o.Assignments != nil {
		return true
	}

	return false
}

// SetAssignments gets a reference to the given []MicrosoftGraphDeviceCompliancePolicyAssignment and assigns it to the Assignments field.
func (o *MicrosoftGraphDeviceCompliancePolicy) SetAssignments(v []MicrosoftGraphDeviceCompliancePolicyAssignment) {
	o.Assignments = &v
}

// GetDeviceSettingStateSummaries returns the DeviceSettingStateSummaries field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceCompliancePolicy) GetDeviceSettingStateSummaries() []MicrosoftGraphSettingStateDeviceSummary {
	if o == nil || o.DeviceSettingStateSummaries == nil {
		var ret []MicrosoftGraphSettingStateDeviceSummary
		return ret
	}
	return *o.DeviceSettingStateSummaries
}

// GetDeviceSettingStateSummariesOk returns a tuple with the DeviceSettingStateSummaries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceCompliancePolicy) GetDeviceSettingStateSummariesOk() (*[]MicrosoftGraphSettingStateDeviceSummary, bool) {
	if o == nil || o.DeviceSettingStateSummaries == nil {
		return nil, false
	}
	return o.DeviceSettingStateSummaries, true
}

// HasDeviceSettingStateSummaries returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceCompliancePolicy) HasDeviceSettingStateSummaries() bool {
	if o != nil && o.DeviceSettingStateSummaries != nil {
		return true
	}

	return false
}

// SetDeviceSettingStateSummaries gets a reference to the given []MicrosoftGraphSettingStateDeviceSummary and assigns it to the DeviceSettingStateSummaries field.
func (o *MicrosoftGraphDeviceCompliancePolicy) SetDeviceSettingStateSummaries(v []MicrosoftGraphSettingStateDeviceSummary) {
	o.DeviceSettingStateSummaries = &v
}

// GetDeviceStatuses returns the DeviceStatuses field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceCompliancePolicy) GetDeviceStatuses() []MicrosoftGraphDeviceComplianceDeviceStatus {
	if o == nil || o.DeviceStatuses == nil {
		var ret []MicrosoftGraphDeviceComplianceDeviceStatus
		return ret
	}
	return *o.DeviceStatuses
}

// GetDeviceStatusesOk returns a tuple with the DeviceStatuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceCompliancePolicy) GetDeviceStatusesOk() (*[]MicrosoftGraphDeviceComplianceDeviceStatus, bool) {
	if o == nil || o.DeviceStatuses == nil {
		return nil, false
	}
	return o.DeviceStatuses, true
}

// HasDeviceStatuses returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceCompliancePolicy) HasDeviceStatuses() bool {
	if o != nil && o.DeviceStatuses != nil {
		return true
	}

	return false
}

// SetDeviceStatuses gets a reference to the given []MicrosoftGraphDeviceComplianceDeviceStatus and assigns it to the DeviceStatuses field.
func (o *MicrosoftGraphDeviceCompliancePolicy) SetDeviceStatuses(v []MicrosoftGraphDeviceComplianceDeviceStatus) {
	o.DeviceStatuses = &v
}

// GetDeviceStatusOverview returns the DeviceStatusOverview field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDeviceCompliancePolicy) GetDeviceStatusOverview() AnyOfmicrosoftGraphDeviceComplianceDeviceOverview {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDeviceComplianceDeviceOverview
		return ret
	}
	return o.DeviceStatusOverview
}

// GetDeviceStatusOverviewOk returns a tuple with the DeviceStatusOverview field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDeviceCompliancePolicy) GetDeviceStatusOverviewOk() (*AnyOfmicrosoftGraphDeviceComplianceDeviceOverview, bool) {
	if o == nil || o.DeviceStatusOverview == nil {
		return nil, false
	}
	return &o.DeviceStatusOverview, true
}

// HasDeviceStatusOverview returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceCompliancePolicy) HasDeviceStatusOverview() bool {
	if o != nil && o.DeviceStatusOverview != nil {
		return true
	}

	return false
}

// SetDeviceStatusOverview gets a reference to the given AnyOfmicrosoftGraphDeviceComplianceDeviceOverview and assigns it to the DeviceStatusOverview field.
func (o *MicrosoftGraphDeviceCompliancePolicy) SetDeviceStatusOverview(v AnyOfmicrosoftGraphDeviceComplianceDeviceOverview) {
	o.DeviceStatusOverview = v
}

// GetScheduledActionsForRule returns the ScheduledActionsForRule field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceCompliancePolicy) GetScheduledActionsForRule() []MicrosoftGraphDeviceComplianceScheduledActionForRule {
	if o == nil || o.ScheduledActionsForRule == nil {
		var ret []MicrosoftGraphDeviceComplianceScheduledActionForRule
		return ret
	}
	return *o.ScheduledActionsForRule
}

// GetScheduledActionsForRuleOk returns a tuple with the ScheduledActionsForRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceCompliancePolicy) GetScheduledActionsForRuleOk() (*[]MicrosoftGraphDeviceComplianceScheduledActionForRule, bool) {
	if o == nil || o.ScheduledActionsForRule == nil {
		return nil, false
	}
	return o.ScheduledActionsForRule, true
}

// HasScheduledActionsForRule returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceCompliancePolicy) HasScheduledActionsForRule() bool {
	if o != nil && o.ScheduledActionsForRule != nil {
		return true
	}

	return false
}

// SetScheduledActionsForRule gets a reference to the given []MicrosoftGraphDeviceComplianceScheduledActionForRule and assigns it to the ScheduledActionsForRule field.
func (o *MicrosoftGraphDeviceCompliancePolicy) SetScheduledActionsForRule(v []MicrosoftGraphDeviceComplianceScheduledActionForRule) {
	o.ScheduledActionsForRule = &v
}

// GetUserStatuses returns the UserStatuses field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceCompliancePolicy) GetUserStatuses() []MicrosoftGraphDeviceComplianceUserStatus {
	if o == nil || o.UserStatuses == nil {
		var ret []MicrosoftGraphDeviceComplianceUserStatus
		return ret
	}
	return *o.UserStatuses
}

// GetUserStatusesOk returns a tuple with the UserStatuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceCompliancePolicy) GetUserStatusesOk() (*[]MicrosoftGraphDeviceComplianceUserStatus, bool) {
	if o == nil || o.UserStatuses == nil {
		return nil, false
	}
	return o.UserStatuses, true
}

// HasUserStatuses returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceCompliancePolicy) HasUserStatuses() bool {
	if o != nil && o.UserStatuses != nil {
		return true
	}

	return false
}

// SetUserStatuses gets a reference to the given []MicrosoftGraphDeviceComplianceUserStatus and assigns it to the UserStatuses field.
func (o *MicrosoftGraphDeviceCompliancePolicy) SetUserStatuses(v []MicrosoftGraphDeviceComplianceUserStatus) {
	o.UserStatuses = &v
}

// GetUserStatusOverview returns the UserStatusOverview field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDeviceCompliancePolicy) GetUserStatusOverview() AnyOfmicrosoftGraphDeviceComplianceUserOverview {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDeviceComplianceUserOverview
		return ret
	}
	return o.UserStatusOverview
}

// GetUserStatusOverviewOk returns a tuple with the UserStatusOverview field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDeviceCompliancePolicy) GetUserStatusOverviewOk() (*AnyOfmicrosoftGraphDeviceComplianceUserOverview, bool) {
	if o == nil || o.UserStatusOverview == nil {
		return nil, false
	}
	return &o.UserStatusOverview, true
}

// HasUserStatusOverview returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceCompliancePolicy) HasUserStatusOverview() bool {
	if o != nil && o.UserStatusOverview != nil {
		return true
	}

	return false
}

// SetUserStatusOverview gets a reference to the given AnyOfmicrosoftGraphDeviceComplianceUserOverview and assigns it to the UserStatusOverview field.
func (o *MicrosoftGraphDeviceCompliancePolicy) SetUserStatusOverview(v AnyOfmicrosoftGraphDeviceComplianceUserOverview) {
	o.UserStatusOverview = v
}

func (o MicrosoftGraphDeviceCompliancePolicy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.CreatedDateTime != nil {
		toSerialize["createdDateTime"] = o.CreatedDateTime
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.LastModifiedDateTime != nil {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.Assignments != nil {
		toSerialize["assignments"] = o.Assignments
	}
	if o.DeviceSettingStateSummaries != nil {
		toSerialize["deviceSettingStateSummaries"] = o.DeviceSettingStateSummaries
	}
	if o.DeviceStatuses != nil {
		toSerialize["deviceStatuses"] = o.DeviceStatuses
	}
	if o.DeviceStatusOverview != nil {
		toSerialize["deviceStatusOverview"] = o.DeviceStatusOverview
	}
	if o.ScheduledActionsForRule != nil {
		toSerialize["scheduledActionsForRule"] = o.ScheduledActionsForRule
	}
	if o.UserStatuses != nil {
		toSerialize["userStatuses"] = o.UserStatuses
	}
	if o.UserStatusOverview != nil {
		toSerialize["userStatusOverview"] = o.UserStatusOverview
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphDeviceCompliancePolicy struct {
	value *MicrosoftGraphDeviceCompliancePolicy
	isSet bool
}

func (v NullableMicrosoftGraphDeviceCompliancePolicy) Get() *MicrosoftGraphDeviceCompliancePolicy {
	return v.value
}

func (v *NullableMicrosoftGraphDeviceCompliancePolicy) Set(val *MicrosoftGraphDeviceCompliancePolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphDeviceCompliancePolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphDeviceCompliancePolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphDeviceCompliancePolicy(val *MicrosoftGraphDeviceCompliancePolicy) *NullableMicrosoftGraphDeviceCompliancePolicy {
	return &NullableMicrosoftGraphDeviceCompliancePolicy{value: val, isSet: true}
}

func (v NullableMicrosoftGraphDeviceCompliancePolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphDeviceCompliancePolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


