/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// EducationClass struct for EducationClass
type EducationClass struct {
	// Class code used by the school to identify the class.
	ClassCode NullableString `json:"classCode,omitempty"`
	// Course information for the class.
	Course AnyOfmicrosoftGraphEducationCourse `json:"course,omitempty"`
	// Entity who created the class
	CreatedBy AnyOfmicrosoftGraphIdentitySet `json:"createdBy,omitempty"`
	// Description of the class.
	Description NullableString `json:"description,omitempty"`
	// Name of the class.
	DisplayName *string `json:"displayName,omitempty"`
	// ID of the class from the syncing system.
	ExternalId NullableString `json:"externalId,omitempty"`
	// Name of the class in the syncing system.
	ExternalName NullableString `json:"externalName,omitempty"`
	// How this class was created. Possible values are: sis, manual.
	ExternalSource AnyOfmicrosoftGraphEducationExternalSource `json:"externalSource,omitempty"`
	// The name of the external source this resources was generated from.
	ExternalSourceDetail NullableString `json:"externalSourceDetail,omitempty"`
	// Grade level of the class.
	Grade NullableString `json:"grade,omitempty"`
	// Mail name for sending email to all members, if this is enabled.
	MailNickname *string `json:"mailNickname,omitempty"`
	// Term for this class.
	Term AnyOfmicrosoftGraphEducationTerm `json:"term,omitempty"`
	AssignmentCategories *[]MicrosoftGraphEducationCategory `json:"assignmentCategories,omitempty"`
	AssignmentDefaults AnyOfmicrosoftGraphEducationAssignmentDefaults `json:"assignmentDefaults,omitempty"`
	// All assignments associated with this class. Nullable.
	Assignments *[]MicrosoftGraphEducationAssignment `json:"assignments,omitempty"`
	AssignmentSettings AnyOfmicrosoftGraphEducationAssignmentSettings `json:"assignmentSettings,omitempty"`
	// The underlying Microsoft 365 group object.
	Group AnyOfmicrosoftGraphGroup `json:"group,omitempty"`
	// All users in the class. Nullable.
	Members *[]MicrosoftGraphEducationUser `json:"members,omitempty"`
	// All schools that this class is associated with. Nullable.
	Schools *[]MicrosoftGraphEducationSchool `json:"schools,omitempty"`
	// All teachers in the class. Nullable.
	Teachers *[]MicrosoftGraphEducationUser `json:"teachers,omitempty"`
}

// NewEducationClass instantiates a new EducationClass object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEducationClass() *EducationClass {
	this := EducationClass{}
	return &this
}

// NewEducationClassWithDefaults instantiates a new EducationClass object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEducationClassWithDefaults() *EducationClass {
	this := EducationClass{}
	return &this
}

// GetClassCode returns the ClassCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationClass) GetClassCode() string {
	if o == nil || o.ClassCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.ClassCode.Get()
}

// GetClassCodeOk returns a tuple with the ClassCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationClass) GetClassCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClassCode.Get(), o.ClassCode.IsSet()
}

// HasClassCode returns a boolean if a field has been set.
func (o *EducationClass) HasClassCode() bool {
	if o != nil && o.ClassCode.IsSet() {
		return true
	}

	return false
}

// SetClassCode gets a reference to the given NullableString and assigns it to the ClassCode field.
func (o *EducationClass) SetClassCode(v string) {
	o.ClassCode.Set(&v)
}
// SetClassCodeNil sets the value for ClassCode to be an explicit nil
func (o *EducationClass) SetClassCodeNil() {
	o.ClassCode.Set(nil)
}

// UnsetClassCode ensures that no value is present for ClassCode, not even an explicit nil
func (o *EducationClass) UnsetClassCode() {
	o.ClassCode.Unset()
}

// GetCourse returns the Course field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationClass) GetCourse() AnyOfmicrosoftGraphEducationCourse {
	if o == nil  {
		var ret AnyOfmicrosoftGraphEducationCourse
		return ret
	}
	return o.Course
}

// GetCourseOk returns a tuple with the Course field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationClass) GetCourseOk() (*AnyOfmicrosoftGraphEducationCourse, bool) {
	if o == nil || o.Course == nil {
		return nil, false
	}
	return &o.Course, true
}

// HasCourse returns a boolean if a field has been set.
func (o *EducationClass) HasCourse() bool {
	if o != nil && o.Course != nil {
		return true
	}

	return false
}

// SetCourse gets a reference to the given AnyOfmicrosoftGraphEducationCourse and assigns it to the Course field.
func (o *EducationClass) SetCourse(v AnyOfmicrosoftGraphEducationCourse) {
	o.Course = v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationClass) GetCreatedBy() AnyOfmicrosoftGraphIdentitySet {
	if o == nil  {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret
	}
	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationClass) GetCreatedByOk() (*AnyOfmicrosoftGraphIdentitySet, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *EducationClass) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given AnyOfmicrosoftGraphIdentitySet and assigns it to the CreatedBy field.
func (o *EducationClass) SetCreatedBy(v AnyOfmicrosoftGraphIdentitySet) {
	o.CreatedBy = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationClass) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationClass) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *EducationClass) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *EducationClass) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *EducationClass) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *EducationClass) UnsetDescription() {
	o.Description.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *EducationClass) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EducationClass) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *EducationClass) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *EducationClass) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationClass) GetExternalId() string {
	if o == nil || o.ExternalId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ExternalId.Get()
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationClass) GetExternalIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExternalId.Get(), o.ExternalId.IsSet()
}

// HasExternalId returns a boolean if a field has been set.
func (o *EducationClass) HasExternalId() bool {
	if o != nil && o.ExternalId.IsSet() {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given NullableString and assigns it to the ExternalId field.
func (o *EducationClass) SetExternalId(v string) {
	o.ExternalId.Set(&v)
}
// SetExternalIdNil sets the value for ExternalId to be an explicit nil
func (o *EducationClass) SetExternalIdNil() {
	o.ExternalId.Set(nil)
}

// UnsetExternalId ensures that no value is present for ExternalId, not even an explicit nil
func (o *EducationClass) UnsetExternalId() {
	o.ExternalId.Unset()
}

// GetExternalName returns the ExternalName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationClass) GetExternalName() string {
	if o == nil || o.ExternalName.Get() == nil {
		var ret string
		return ret
	}
	return *o.ExternalName.Get()
}

// GetExternalNameOk returns a tuple with the ExternalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationClass) GetExternalNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExternalName.Get(), o.ExternalName.IsSet()
}

// HasExternalName returns a boolean if a field has been set.
func (o *EducationClass) HasExternalName() bool {
	if o != nil && o.ExternalName.IsSet() {
		return true
	}

	return false
}

// SetExternalName gets a reference to the given NullableString and assigns it to the ExternalName field.
func (o *EducationClass) SetExternalName(v string) {
	o.ExternalName.Set(&v)
}
// SetExternalNameNil sets the value for ExternalName to be an explicit nil
func (o *EducationClass) SetExternalNameNil() {
	o.ExternalName.Set(nil)
}

// UnsetExternalName ensures that no value is present for ExternalName, not even an explicit nil
func (o *EducationClass) UnsetExternalName() {
	o.ExternalName.Unset()
}

// GetExternalSource returns the ExternalSource field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationClass) GetExternalSource() AnyOfmicrosoftGraphEducationExternalSource {
	if o == nil  {
		var ret AnyOfmicrosoftGraphEducationExternalSource
		return ret
	}
	return o.ExternalSource
}

// GetExternalSourceOk returns a tuple with the ExternalSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationClass) GetExternalSourceOk() (*AnyOfmicrosoftGraphEducationExternalSource, bool) {
	if o == nil || o.ExternalSource == nil {
		return nil, false
	}
	return &o.ExternalSource, true
}

// HasExternalSource returns a boolean if a field has been set.
func (o *EducationClass) HasExternalSource() bool {
	if o != nil && o.ExternalSource != nil {
		return true
	}

	return false
}

// SetExternalSource gets a reference to the given AnyOfmicrosoftGraphEducationExternalSource and assigns it to the ExternalSource field.
func (o *EducationClass) SetExternalSource(v AnyOfmicrosoftGraphEducationExternalSource) {
	o.ExternalSource = v
}

// GetExternalSourceDetail returns the ExternalSourceDetail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationClass) GetExternalSourceDetail() string {
	if o == nil || o.ExternalSourceDetail.Get() == nil {
		var ret string
		return ret
	}
	return *o.ExternalSourceDetail.Get()
}

// GetExternalSourceDetailOk returns a tuple with the ExternalSourceDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationClass) GetExternalSourceDetailOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExternalSourceDetail.Get(), o.ExternalSourceDetail.IsSet()
}

// HasExternalSourceDetail returns a boolean if a field has been set.
func (o *EducationClass) HasExternalSourceDetail() bool {
	if o != nil && o.ExternalSourceDetail.IsSet() {
		return true
	}

	return false
}

// SetExternalSourceDetail gets a reference to the given NullableString and assigns it to the ExternalSourceDetail field.
func (o *EducationClass) SetExternalSourceDetail(v string) {
	o.ExternalSourceDetail.Set(&v)
}
// SetExternalSourceDetailNil sets the value for ExternalSourceDetail to be an explicit nil
func (o *EducationClass) SetExternalSourceDetailNil() {
	o.ExternalSourceDetail.Set(nil)
}

// UnsetExternalSourceDetail ensures that no value is present for ExternalSourceDetail, not even an explicit nil
func (o *EducationClass) UnsetExternalSourceDetail() {
	o.ExternalSourceDetail.Unset()
}

// GetGrade returns the Grade field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationClass) GetGrade() string {
	if o == nil || o.Grade.Get() == nil {
		var ret string
		return ret
	}
	return *o.Grade.Get()
}

// GetGradeOk returns a tuple with the Grade field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationClass) GetGradeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Grade.Get(), o.Grade.IsSet()
}

// HasGrade returns a boolean if a field has been set.
func (o *EducationClass) HasGrade() bool {
	if o != nil && o.Grade.IsSet() {
		return true
	}

	return false
}

// SetGrade gets a reference to the given NullableString and assigns it to the Grade field.
func (o *EducationClass) SetGrade(v string) {
	o.Grade.Set(&v)
}
// SetGradeNil sets the value for Grade to be an explicit nil
func (o *EducationClass) SetGradeNil() {
	o.Grade.Set(nil)
}

// UnsetGrade ensures that no value is present for Grade, not even an explicit nil
func (o *EducationClass) UnsetGrade() {
	o.Grade.Unset()
}

// GetMailNickname returns the MailNickname field value if set, zero value otherwise.
func (o *EducationClass) GetMailNickname() string {
	if o == nil || o.MailNickname == nil {
		var ret string
		return ret
	}
	return *o.MailNickname
}

// GetMailNicknameOk returns a tuple with the MailNickname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EducationClass) GetMailNicknameOk() (*string, bool) {
	if o == nil || o.MailNickname == nil {
		return nil, false
	}
	return o.MailNickname, true
}

// HasMailNickname returns a boolean if a field has been set.
func (o *EducationClass) HasMailNickname() bool {
	if o != nil && o.MailNickname != nil {
		return true
	}

	return false
}

// SetMailNickname gets a reference to the given string and assigns it to the MailNickname field.
func (o *EducationClass) SetMailNickname(v string) {
	o.MailNickname = &v
}

// GetTerm returns the Term field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationClass) GetTerm() AnyOfmicrosoftGraphEducationTerm {
	if o == nil  {
		var ret AnyOfmicrosoftGraphEducationTerm
		return ret
	}
	return o.Term
}

// GetTermOk returns a tuple with the Term field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationClass) GetTermOk() (*AnyOfmicrosoftGraphEducationTerm, bool) {
	if o == nil || o.Term == nil {
		return nil, false
	}
	return &o.Term, true
}

// HasTerm returns a boolean if a field has been set.
func (o *EducationClass) HasTerm() bool {
	if o != nil && o.Term != nil {
		return true
	}

	return false
}

// SetTerm gets a reference to the given AnyOfmicrosoftGraphEducationTerm and assigns it to the Term field.
func (o *EducationClass) SetTerm(v AnyOfmicrosoftGraphEducationTerm) {
	o.Term = v
}

// GetAssignmentCategories returns the AssignmentCategories field value if set, zero value otherwise.
func (o *EducationClass) GetAssignmentCategories() []MicrosoftGraphEducationCategory {
	if o == nil || o.AssignmentCategories == nil {
		var ret []MicrosoftGraphEducationCategory
		return ret
	}
	return *o.AssignmentCategories
}

// GetAssignmentCategoriesOk returns a tuple with the AssignmentCategories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EducationClass) GetAssignmentCategoriesOk() (*[]MicrosoftGraphEducationCategory, bool) {
	if o == nil || o.AssignmentCategories == nil {
		return nil, false
	}
	return o.AssignmentCategories, true
}

// HasAssignmentCategories returns a boolean if a field has been set.
func (o *EducationClass) HasAssignmentCategories() bool {
	if o != nil && o.AssignmentCategories != nil {
		return true
	}

	return false
}

// SetAssignmentCategories gets a reference to the given []MicrosoftGraphEducationCategory and assigns it to the AssignmentCategories field.
func (o *EducationClass) SetAssignmentCategories(v []MicrosoftGraphEducationCategory) {
	o.AssignmentCategories = &v
}

// GetAssignmentDefaults returns the AssignmentDefaults field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationClass) GetAssignmentDefaults() AnyOfmicrosoftGraphEducationAssignmentDefaults {
	if o == nil  {
		var ret AnyOfmicrosoftGraphEducationAssignmentDefaults
		return ret
	}
	return o.AssignmentDefaults
}

// GetAssignmentDefaultsOk returns a tuple with the AssignmentDefaults field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationClass) GetAssignmentDefaultsOk() (*AnyOfmicrosoftGraphEducationAssignmentDefaults, bool) {
	if o == nil || o.AssignmentDefaults == nil {
		return nil, false
	}
	return &o.AssignmentDefaults, true
}

// HasAssignmentDefaults returns a boolean if a field has been set.
func (o *EducationClass) HasAssignmentDefaults() bool {
	if o != nil && o.AssignmentDefaults != nil {
		return true
	}

	return false
}

// SetAssignmentDefaults gets a reference to the given AnyOfmicrosoftGraphEducationAssignmentDefaults and assigns it to the AssignmentDefaults field.
func (o *EducationClass) SetAssignmentDefaults(v AnyOfmicrosoftGraphEducationAssignmentDefaults) {
	o.AssignmentDefaults = v
}

// GetAssignments returns the Assignments field value if set, zero value otherwise.
func (o *EducationClass) GetAssignments() []MicrosoftGraphEducationAssignment {
	if o == nil || o.Assignments == nil {
		var ret []MicrosoftGraphEducationAssignment
		return ret
	}
	return *o.Assignments
}

// GetAssignmentsOk returns a tuple with the Assignments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EducationClass) GetAssignmentsOk() (*[]MicrosoftGraphEducationAssignment, bool) {
	if o == nil || o.Assignments == nil {
		return nil, false
	}
	return o.Assignments, true
}

// HasAssignments returns a boolean if a field has been set.
func (o *EducationClass) HasAssignments() bool {
	if o != nil && o.Assignments != nil {
		return true
	}

	return false
}

// SetAssignments gets a reference to the given []MicrosoftGraphEducationAssignment and assigns it to the Assignments field.
func (o *EducationClass) SetAssignments(v []MicrosoftGraphEducationAssignment) {
	o.Assignments = &v
}

// GetAssignmentSettings returns the AssignmentSettings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationClass) GetAssignmentSettings() AnyOfmicrosoftGraphEducationAssignmentSettings {
	if o == nil  {
		var ret AnyOfmicrosoftGraphEducationAssignmentSettings
		return ret
	}
	return o.AssignmentSettings
}

// GetAssignmentSettingsOk returns a tuple with the AssignmentSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationClass) GetAssignmentSettingsOk() (*AnyOfmicrosoftGraphEducationAssignmentSettings, bool) {
	if o == nil || o.AssignmentSettings == nil {
		return nil, false
	}
	return &o.AssignmentSettings, true
}

// HasAssignmentSettings returns a boolean if a field has been set.
func (o *EducationClass) HasAssignmentSettings() bool {
	if o != nil && o.AssignmentSettings != nil {
		return true
	}

	return false
}

// SetAssignmentSettings gets a reference to the given AnyOfmicrosoftGraphEducationAssignmentSettings and assigns it to the AssignmentSettings field.
func (o *EducationClass) SetAssignmentSettings(v AnyOfmicrosoftGraphEducationAssignmentSettings) {
	o.AssignmentSettings = v
}

// GetGroup returns the Group field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationClass) GetGroup() AnyOfmicrosoftGraphGroup {
	if o == nil  {
		var ret AnyOfmicrosoftGraphGroup
		return ret
	}
	return o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationClass) GetGroupOk() (*AnyOfmicrosoftGraphGroup, bool) {
	if o == nil || o.Group == nil {
		return nil, false
	}
	return &o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *EducationClass) HasGroup() bool {
	if o != nil && o.Group != nil {
		return true
	}

	return false
}

// SetGroup gets a reference to the given AnyOfmicrosoftGraphGroup and assigns it to the Group field.
func (o *EducationClass) SetGroup(v AnyOfmicrosoftGraphGroup) {
	o.Group = v
}

// GetMembers returns the Members field value if set, zero value otherwise.
func (o *EducationClass) GetMembers() []MicrosoftGraphEducationUser {
	if o == nil || o.Members == nil {
		var ret []MicrosoftGraphEducationUser
		return ret
	}
	return *o.Members
}

// GetMembersOk returns a tuple with the Members field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EducationClass) GetMembersOk() (*[]MicrosoftGraphEducationUser, bool) {
	if o == nil || o.Members == nil {
		return nil, false
	}
	return o.Members, true
}

// HasMembers returns a boolean if a field has been set.
func (o *EducationClass) HasMembers() bool {
	if o != nil && o.Members != nil {
		return true
	}

	return false
}

// SetMembers gets a reference to the given []MicrosoftGraphEducationUser and assigns it to the Members field.
func (o *EducationClass) SetMembers(v []MicrosoftGraphEducationUser) {
	o.Members = &v
}

// GetSchools returns the Schools field value if set, zero value otherwise.
func (o *EducationClass) GetSchools() []MicrosoftGraphEducationSchool {
	if o == nil || o.Schools == nil {
		var ret []MicrosoftGraphEducationSchool
		return ret
	}
	return *o.Schools
}

// GetSchoolsOk returns a tuple with the Schools field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EducationClass) GetSchoolsOk() (*[]MicrosoftGraphEducationSchool, bool) {
	if o == nil || o.Schools == nil {
		return nil, false
	}
	return o.Schools, true
}

// HasSchools returns a boolean if a field has been set.
func (o *EducationClass) HasSchools() bool {
	if o != nil && o.Schools != nil {
		return true
	}

	return false
}

// SetSchools gets a reference to the given []MicrosoftGraphEducationSchool and assigns it to the Schools field.
func (o *EducationClass) SetSchools(v []MicrosoftGraphEducationSchool) {
	o.Schools = &v
}

// GetTeachers returns the Teachers field value if set, zero value otherwise.
func (o *EducationClass) GetTeachers() []MicrosoftGraphEducationUser {
	if o == nil || o.Teachers == nil {
		var ret []MicrosoftGraphEducationUser
		return ret
	}
	return *o.Teachers
}

// GetTeachersOk returns a tuple with the Teachers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EducationClass) GetTeachersOk() (*[]MicrosoftGraphEducationUser, bool) {
	if o == nil || o.Teachers == nil {
		return nil, false
	}
	return o.Teachers, true
}

// HasTeachers returns a boolean if a field has been set.
func (o *EducationClass) HasTeachers() bool {
	if o != nil && o.Teachers != nil {
		return true
	}

	return false
}

// SetTeachers gets a reference to the given []MicrosoftGraphEducationUser and assigns it to the Teachers field.
func (o *EducationClass) SetTeachers(v []MicrosoftGraphEducationUser) {
	o.Teachers = &v
}

func (o EducationClass) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClassCode.IsSet() {
		toSerialize["classCode"] = o.ClassCode.Get()
	}
	if o.Course != nil {
		toSerialize["course"] = o.Course
	}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.ExternalId.IsSet() {
		toSerialize["externalId"] = o.ExternalId.Get()
	}
	if o.ExternalName.IsSet() {
		toSerialize["externalName"] = o.ExternalName.Get()
	}
	if o.ExternalSource != nil {
		toSerialize["externalSource"] = o.ExternalSource
	}
	if o.ExternalSourceDetail.IsSet() {
		toSerialize["externalSourceDetail"] = o.ExternalSourceDetail.Get()
	}
	if o.Grade.IsSet() {
		toSerialize["grade"] = o.Grade.Get()
	}
	if o.MailNickname != nil {
		toSerialize["mailNickname"] = o.MailNickname
	}
	if o.Term != nil {
		toSerialize["term"] = o.Term
	}
	if o.AssignmentCategories != nil {
		toSerialize["assignmentCategories"] = o.AssignmentCategories
	}
	if o.AssignmentDefaults != nil {
		toSerialize["assignmentDefaults"] = o.AssignmentDefaults
	}
	if o.Assignments != nil {
		toSerialize["assignments"] = o.Assignments
	}
	if o.AssignmentSettings != nil {
		toSerialize["assignmentSettings"] = o.AssignmentSettings
	}
	if o.Group != nil {
		toSerialize["group"] = o.Group
	}
	if o.Members != nil {
		toSerialize["members"] = o.Members
	}
	if o.Schools != nil {
		toSerialize["schools"] = o.Schools
	}
	if o.Teachers != nil {
		toSerialize["teachers"] = o.Teachers
	}
	return json.Marshal(toSerialize)
}

type NullableEducationClass struct {
	value *EducationClass
	isSet bool
}

func (v NullableEducationClass) Get() *EducationClass {
	return v.value
}

func (v *NullableEducationClass) Set(val *EducationClass) {
	v.value = val
	v.isSet = true
}

func (v NullableEducationClass) IsSet() bool {
	return v.isSet
}

func (v *NullableEducationClass) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEducationClass(val *EducationClass) *NullableEducationClass {
	return &NullableEducationClass{value: val, isSet: true}
}

func (v NullableEducationClass) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEducationClass) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


