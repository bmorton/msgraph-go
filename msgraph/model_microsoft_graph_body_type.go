/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphBodyType the model 'MicrosoftGraphBodyType'
type MicrosoftGraphBodyType string

// List of microsoft.graph.bodyType
const (
	TEXT MicrosoftGraphBodyType = "text"
	HTML MicrosoftGraphBodyType = "html"
)

// All allowed values of MicrosoftGraphBodyType enum
var AllowedMicrosoftGraphBodyTypeEnumValues = []MicrosoftGraphBodyType{
	"text",
	"html",
}

func (v *MicrosoftGraphBodyType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphBodyType(value)
	for _, existing := range AllowedMicrosoftGraphBodyTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphBodyType", value)
}

// NewMicrosoftGraphBodyTypeFromValue returns a pointer to a valid MicrosoftGraphBodyType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphBodyTypeFromValue(v string) (*MicrosoftGraphBodyType, error) {
	ev := MicrosoftGraphBodyType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphBodyType: valid values are %v", v, AllowedMicrosoftGraphBodyTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphBodyType) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphBodyTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.bodyType value
func (v MicrosoftGraphBodyType) Ptr() *MicrosoftGraphBodyType {
	return &v
}

type NullableMicrosoftGraphBodyType struct {
	value *MicrosoftGraphBodyType
	isSet bool
}

func (v NullableMicrosoftGraphBodyType) Get() *MicrosoftGraphBodyType {
	return v.value
}

func (v *NullableMicrosoftGraphBodyType) Set(val *MicrosoftGraphBodyType) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphBodyType) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphBodyType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphBodyType(val *MicrosoftGraphBodyType) *NullableMicrosoftGraphBodyType {
	return &NullableMicrosoftGraphBodyType{value: val, isSet: true}
}

func (v NullableMicrosoftGraphBodyType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphBodyType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

