/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject1442 struct for InlineObject1442
type InlineObject1442 struct {
	Z AnyOfobject `json:"z,omitempty"`
	Cumulative AnyOfobject `json:"cumulative,omitempty"`
}

// NewInlineObject1442 instantiates a new InlineObject1442 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject1442() *InlineObject1442 {
	this := InlineObject1442{}
	return &this
}

// NewInlineObject1442WithDefaults instantiates a new InlineObject1442 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject1442WithDefaults() *InlineObject1442 {
	this := InlineObject1442{}
	return &this
}

// GetZ returns the Z field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1442) GetZ() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Z
}

// GetZOk returns a tuple with the Z field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1442) GetZOk() (*AnyOfobject, bool) {
	if o == nil || o.Z == nil {
		return nil, false
	}
	return &o.Z, true
}

// HasZ returns a boolean if a field has been set.
func (o *InlineObject1442) HasZ() bool {
	if o != nil && o.Z != nil {
		return true
	}

	return false
}

// SetZ gets a reference to the given AnyOfobject and assigns it to the Z field.
func (o *InlineObject1442) SetZ(v AnyOfobject) {
	o.Z = v
}

// GetCumulative returns the Cumulative field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1442) GetCumulative() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Cumulative
}

// GetCumulativeOk returns a tuple with the Cumulative field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1442) GetCumulativeOk() (*AnyOfobject, bool) {
	if o == nil || o.Cumulative == nil {
		return nil, false
	}
	return &o.Cumulative, true
}

// HasCumulative returns a boolean if a field has been set.
func (o *InlineObject1442) HasCumulative() bool {
	if o != nil && o.Cumulative != nil {
		return true
	}

	return false
}

// SetCumulative gets a reference to the given AnyOfobject and assigns it to the Cumulative field.
func (o *InlineObject1442) SetCumulative(v AnyOfobject) {
	o.Cumulative = v
}

func (o InlineObject1442) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Z != nil {
		toSerialize["z"] = o.Z
	}
	if o.Cumulative != nil {
		toSerialize["cumulative"] = o.Cumulative
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject1442 struct {
	value *InlineObject1442
	isSet bool
}

func (v NullableInlineObject1442) Get() *InlineObject1442 {
	return v.value
}

func (v *NullableInlineObject1442) Set(val *InlineObject1442) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject1442) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject1442) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject1442(val *InlineObject1442) *NullableInlineObject1442 {
	return &NullableInlineObject1442{value: val, isSet: true}
}

func (v NullableInlineObject1442) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject1442) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


