/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// NotificationMessageTemplate Notification messages are messages that are sent to end users who are determined to be not-compliant with the compliance policies defined by the administrator. Administrators choose notifications and configure them in the Intune Admin Console using the compliance policy creation page under the “Actions for non-compliance” section. Use the notificationMessageTemplate object to create your own custom notifications for administrators to choose while configuring actions for non-compliance.
type NotificationMessageTemplate struct {
	// The Message Template Branding Options. Branding is defined in the Intune Admin Console. Possible values are: none, includeCompanyLogo, includeCompanyName, includeContactInformation.
	BrandingOptions AnyOfmicrosoftGraphNotificationTemplateBrandingOptions `json:"brandingOptions,omitempty"`
	// The default locale to fallback onto when the requested locale is not available.
	DefaultLocale NullableString `json:"defaultLocale,omitempty"`
	// Display name for the Notification Message Template.
	DisplayName *string `json:"displayName,omitempty"`
	// DateTime the object was last modified.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// The list of localized messages for this Notification Message Template.
	LocalizedNotificationMessages *[]MicrosoftGraphLocalizedNotificationMessage `json:"localizedNotificationMessages,omitempty"`
}

// NewNotificationMessageTemplate instantiates a new NotificationMessageTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationMessageTemplate() *NotificationMessageTemplate {
	this := NotificationMessageTemplate{}
	return &this
}

// NewNotificationMessageTemplateWithDefaults instantiates a new NotificationMessageTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationMessageTemplateWithDefaults() *NotificationMessageTemplate {
	this := NotificationMessageTemplate{}
	return &this
}

// GetBrandingOptions returns the BrandingOptions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NotificationMessageTemplate) GetBrandingOptions() AnyOfmicrosoftGraphNotificationTemplateBrandingOptions {
	if o == nil  {
		var ret AnyOfmicrosoftGraphNotificationTemplateBrandingOptions
		return ret
	}
	return o.BrandingOptions
}

// GetBrandingOptionsOk returns a tuple with the BrandingOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NotificationMessageTemplate) GetBrandingOptionsOk() (*AnyOfmicrosoftGraphNotificationTemplateBrandingOptions, bool) {
	if o == nil || o.BrandingOptions == nil {
		return nil, false
	}
	return &o.BrandingOptions, true
}

// HasBrandingOptions returns a boolean if a field has been set.
func (o *NotificationMessageTemplate) HasBrandingOptions() bool {
	if o != nil && o.BrandingOptions != nil {
		return true
	}

	return false
}

// SetBrandingOptions gets a reference to the given AnyOfmicrosoftGraphNotificationTemplateBrandingOptions and assigns it to the BrandingOptions field.
func (o *NotificationMessageTemplate) SetBrandingOptions(v AnyOfmicrosoftGraphNotificationTemplateBrandingOptions) {
	o.BrandingOptions = v
}

// GetDefaultLocale returns the DefaultLocale field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NotificationMessageTemplate) GetDefaultLocale() string {
	if o == nil || o.DefaultLocale.Get() == nil {
		var ret string
		return ret
	}
	return *o.DefaultLocale.Get()
}

// GetDefaultLocaleOk returns a tuple with the DefaultLocale field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NotificationMessageTemplate) GetDefaultLocaleOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DefaultLocale.Get(), o.DefaultLocale.IsSet()
}

// HasDefaultLocale returns a boolean if a field has been set.
func (o *NotificationMessageTemplate) HasDefaultLocale() bool {
	if o != nil && o.DefaultLocale.IsSet() {
		return true
	}

	return false
}

// SetDefaultLocale gets a reference to the given NullableString and assigns it to the DefaultLocale field.
func (o *NotificationMessageTemplate) SetDefaultLocale(v string) {
	o.DefaultLocale.Set(&v)
}
// SetDefaultLocaleNil sets the value for DefaultLocale to be an explicit nil
func (o *NotificationMessageTemplate) SetDefaultLocaleNil() {
	o.DefaultLocale.Set(nil)
}

// UnsetDefaultLocale ensures that no value is present for DefaultLocale, not even an explicit nil
func (o *NotificationMessageTemplate) UnsetDefaultLocale() {
	o.DefaultLocale.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *NotificationMessageTemplate) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationMessageTemplate) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *NotificationMessageTemplate) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *NotificationMessageTemplate) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetLastModifiedDateTime returns the LastModifiedDateTime field value if set, zero value otherwise.
func (o *NotificationMessageTemplate) GetLastModifiedDateTime() time.Time {
	if o == nil || o.LastModifiedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDateTime
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationMessageTemplate) GetLastModifiedDateTimeOk() (*time.Time, bool) {
	if o == nil || o.LastModifiedDateTime == nil {
		return nil, false
	}
	return o.LastModifiedDateTime, true
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *NotificationMessageTemplate) HasLastModifiedDateTime() bool {
	if o != nil && o.LastModifiedDateTime != nil {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given time.Time and assigns it to the LastModifiedDateTime field.
func (o *NotificationMessageTemplate) SetLastModifiedDateTime(v time.Time) {
	o.LastModifiedDateTime = &v
}

// GetLocalizedNotificationMessages returns the LocalizedNotificationMessages field value if set, zero value otherwise.
func (o *NotificationMessageTemplate) GetLocalizedNotificationMessages() []MicrosoftGraphLocalizedNotificationMessage {
	if o == nil || o.LocalizedNotificationMessages == nil {
		var ret []MicrosoftGraphLocalizedNotificationMessage
		return ret
	}
	return *o.LocalizedNotificationMessages
}

// GetLocalizedNotificationMessagesOk returns a tuple with the LocalizedNotificationMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationMessageTemplate) GetLocalizedNotificationMessagesOk() (*[]MicrosoftGraphLocalizedNotificationMessage, bool) {
	if o == nil || o.LocalizedNotificationMessages == nil {
		return nil, false
	}
	return o.LocalizedNotificationMessages, true
}

// HasLocalizedNotificationMessages returns a boolean if a field has been set.
func (o *NotificationMessageTemplate) HasLocalizedNotificationMessages() bool {
	if o != nil && o.LocalizedNotificationMessages != nil {
		return true
	}

	return false
}

// SetLocalizedNotificationMessages gets a reference to the given []MicrosoftGraphLocalizedNotificationMessage and assigns it to the LocalizedNotificationMessages field.
func (o *NotificationMessageTemplate) SetLocalizedNotificationMessages(v []MicrosoftGraphLocalizedNotificationMessage) {
	o.LocalizedNotificationMessages = &v
}

func (o NotificationMessageTemplate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BrandingOptions != nil {
		toSerialize["brandingOptions"] = o.BrandingOptions
	}
	if o.DefaultLocale.IsSet() {
		toSerialize["defaultLocale"] = o.DefaultLocale.Get()
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.LastModifiedDateTime != nil {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime
	}
	if o.LocalizedNotificationMessages != nil {
		toSerialize["localizedNotificationMessages"] = o.LocalizedNotificationMessages
	}
	return json.Marshal(toSerialize)
}

type NullableNotificationMessageTemplate struct {
	value *NotificationMessageTemplate
	isSet bool
}

func (v NullableNotificationMessageTemplate) Get() *NotificationMessageTemplate {
	return v.value
}

func (v *NullableNotificationMessageTemplate) Set(val *NotificationMessageTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationMessageTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationMessageTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationMessageTemplate(val *NotificationMessageTemplate) *NullableNotificationMessageTemplate {
	return &NullableNotificationMessageTemplate{value: val, isSet: true}
}

func (v NullableNotificationMessageTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationMessageTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


