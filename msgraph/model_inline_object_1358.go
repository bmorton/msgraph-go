/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// InlineObject1358 struct for InlineObject1358
type InlineObject1358 struct {
	LookupValue AnyOfobject `json:"lookupValue,omitempty"`
	TableArray AnyOfobject `json:"tableArray,omitempty"`
	RowIndexNum AnyOfobject `json:"rowIndexNum,omitempty"`
	RangeLookup AnyOfobject `json:"rangeLookup,omitempty"`
}

// NewInlineObject1358 instantiates a new InlineObject1358 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject1358() *InlineObject1358 {
	this := InlineObject1358{}
	return &this
}

// NewInlineObject1358WithDefaults instantiates a new InlineObject1358 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject1358WithDefaults() *InlineObject1358 {
	this := InlineObject1358{}
	return &this
}

// GetLookupValue returns the LookupValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1358) GetLookupValue() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.LookupValue
}

// GetLookupValueOk returns a tuple with the LookupValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1358) GetLookupValueOk() (*AnyOfobject, bool) {
	if o == nil || o.LookupValue == nil {
		return nil, false
	}
	return &o.LookupValue, true
}

// HasLookupValue returns a boolean if a field has been set.
func (o *InlineObject1358) HasLookupValue() bool {
	if o != nil && o.LookupValue != nil {
		return true
	}

	return false
}

// SetLookupValue gets a reference to the given AnyOfobject and assigns it to the LookupValue field.
func (o *InlineObject1358) SetLookupValue(v AnyOfobject) {
	o.LookupValue = v
}

// GetTableArray returns the TableArray field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1358) GetTableArray() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.TableArray
}

// GetTableArrayOk returns a tuple with the TableArray field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1358) GetTableArrayOk() (*AnyOfobject, bool) {
	if o == nil || o.TableArray == nil {
		return nil, false
	}
	return &o.TableArray, true
}

// HasTableArray returns a boolean if a field has been set.
func (o *InlineObject1358) HasTableArray() bool {
	if o != nil && o.TableArray != nil {
		return true
	}

	return false
}

// SetTableArray gets a reference to the given AnyOfobject and assigns it to the TableArray field.
func (o *InlineObject1358) SetTableArray(v AnyOfobject) {
	o.TableArray = v
}

// GetRowIndexNum returns the RowIndexNum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1358) GetRowIndexNum() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.RowIndexNum
}

// GetRowIndexNumOk returns a tuple with the RowIndexNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1358) GetRowIndexNumOk() (*AnyOfobject, bool) {
	if o == nil || o.RowIndexNum == nil {
		return nil, false
	}
	return &o.RowIndexNum, true
}

// HasRowIndexNum returns a boolean if a field has been set.
func (o *InlineObject1358) HasRowIndexNum() bool {
	if o != nil && o.RowIndexNum != nil {
		return true
	}

	return false
}

// SetRowIndexNum gets a reference to the given AnyOfobject and assigns it to the RowIndexNum field.
func (o *InlineObject1358) SetRowIndexNum(v AnyOfobject) {
	o.RowIndexNum = v
}

// GetRangeLookup returns the RangeLookup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1358) GetRangeLookup() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.RangeLookup
}

// GetRangeLookupOk returns a tuple with the RangeLookup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1358) GetRangeLookupOk() (*AnyOfobject, bool) {
	if o == nil || o.RangeLookup == nil {
		return nil, false
	}
	return &o.RangeLookup, true
}

// HasRangeLookup returns a boolean if a field has been set.
func (o *InlineObject1358) HasRangeLookup() bool {
	if o != nil && o.RangeLookup != nil {
		return true
	}

	return false
}

// SetRangeLookup gets a reference to the given AnyOfobject and assigns it to the RangeLookup field.
func (o *InlineObject1358) SetRangeLookup(v AnyOfobject) {
	o.RangeLookup = v
}

func (o InlineObject1358) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LookupValue != nil {
		toSerialize["lookupValue"] = o.LookupValue
	}
	if o.TableArray != nil {
		toSerialize["tableArray"] = o.TableArray
	}
	if o.RowIndexNum != nil {
		toSerialize["rowIndexNum"] = o.RowIndexNum
	}
	if o.RangeLookup != nil {
		toSerialize["rangeLookup"] = o.RangeLookup
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject1358 struct {
	value *InlineObject1358
	isSet bool
}

func (v NullableInlineObject1358) Get() *InlineObject1358 {
	return v.value
}

func (v *NullableInlineObject1358) Set(val *InlineObject1358) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject1358) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject1358) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject1358(val *InlineObject1358) *NullableInlineObject1358 {
	return &NullableInlineObject1358{value: val, isSet: true}
}

func (v NullableInlineObject1358) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject1358) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


