/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphAverageComparativeScore struct for MicrosoftGraphAverageComparativeScore
type MicrosoftGraphAverageComparativeScore struct {
	// Average score within specified basis.
	AverageScore AnyOfnumberstringstring `json:"averageScore,omitempty"`
	// Scope type. The possible values are: AllTenants, TotalSeats, IndustryTypes.
	Basis NullableString `json:"basis,omitempty"`
}

// NewMicrosoftGraphAverageComparativeScore instantiates a new MicrosoftGraphAverageComparativeScore object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphAverageComparativeScore() *MicrosoftGraphAverageComparativeScore {
	this := MicrosoftGraphAverageComparativeScore{}
	return &this
}

// NewMicrosoftGraphAverageComparativeScoreWithDefaults instantiates a new MicrosoftGraphAverageComparativeScore object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphAverageComparativeScoreWithDefaults() *MicrosoftGraphAverageComparativeScore {
	this := MicrosoftGraphAverageComparativeScore{}
	return &this
}

// GetAverageScore returns the AverageScore field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAverageComparativeScore) GetAverageScore() AnyOfnumberstringstring {
	if o == nil  {
		var ret AnyOfnumberstringstring
		return ret
	}
	return o.AverageScore
}

// GetAverageScoreOk returns a tuple with the AverageScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAverageComparativeScore) GetAverageScoreOk() (*AnyOfnumberstringstring, bool) {
	if o == nil || o.AverageScore == nil {
		return nil, false
	}
	return &o.AverageScore, true
}

// HasAverageScore returns a boolean if a field has been set.
func (o *MicrosoftGraphAverageComparativeScore) HasAverageScore() bool {
	if o != nil && o.AverageScore != nil {
		return true
	}

	return false
}

// SetAverageScore gets a reference to the given AnyOfnumberstringstring and assigns it to the AverageScore field.
func (o *MicrosoftGraphAverageComparativeScore) SetAverageScore(v AnyOfnumberstringstring) {
	o.AverageScore = v
}

// GetBasis returns the Basis field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAverageComparativeScore) GetBasis() string {
	if o == nil || o.Basis.Get() == nil {
		var ret string
		return ret
	}
	return *o.Basis.Get()
}

// GetBasisOk returns a tuple with the Basis field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAverageComparativeScore) GetBasisOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Basis.Get(), o.Basis.IsSet()
}

// HasBasis returns a boolean if a field has been set.
func (o *MicrosoftGraphAverageComparativeScore) HasBasis() bool {
	if o != nil && o.Basis.IsSet() {
		return true
	}

	return false
}

// SetBasis gets a reference to the given NullableString and assigns it to the Basis field.
func (o *MicrosoftGraphAverageComparativeScore) SetBasis(v string) {
	o.Basis.Set(&v)
}
// SetBasisNil sets the value for Basis to be an explicit nil
func (o *MicrosoftGraphAverageComparativeScore) SetBasisNil() {
	o.Basis.Set(nil)
}

// UnsetBasis ensures that no value is present for Basis, not even an explicit nil
func (o *MicrosoftGraphAverageComparativeScore) UnsetBasis() {
	o.Basis.Unset()
}

func (o MicrosoftGraphAverageComparativeScore) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AverageScore != nil {
		toSerialize["averageScore"] = o.AverageScore
	}
	if o.Basis.IsSet() {
		toSerialize["basis"] = o.Basis.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphAverageComparativeScore struct {
	value *MicrosoftGraphAverageComparativeScore
	isSet bool
}

func (v NullableMicrosoftGraphAverageComparativeScore) Get() *MicrosoftGraphAverageComparativeScore {
	return v.value
}

func (v *NullableMicrosoftGraphAverageComparativeScore) Set(val *MicrosoftGraphAverageComparativeScore) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphAverageComparativeScore) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphAverageComparativeScore) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphAverageComparativeScore(val *MicrosoftGraphAverageComparativeScore) *NullableMicrosoftGraphAverageComparativeScore {
	return &NullableMicrosoftGraphAverageComparativeScore{value: val, isSet: true}
}

func (v NullableMicrosoftGraphAverageComparativeScore) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphAverageComparativeScore) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


