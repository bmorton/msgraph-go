/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphDeviceExchangeAccessStateSummary Device Exchange Access State summary
type MicrosoftGraphDeviceExchangeAccessStateSummary struct {
	// Total count of devices with Exchange Access State: Allowed.
	AllowedDeviceCount *int32 `json:"allowedDeviceCount,omitempty"`
	// Total count of devices with Exchange Access State: Blocked.
	BlockedDeviceCount *int32 `json:"blockedDeviceCount,omitempty"`
	// Total count of devices with Exchange Access State: Quarantined.
	QuarantinedDeviceCount *int32 `json:"quarantinedDeviceCount,omitempty"`
	// Total count of devices for which no Exchange Access State could be found.
	UnavailableDeviceCount *int32 `json:"unavailableDeviceCount,omitempty"`
	// Total count of devices with Exchange Access State: Unknown.
	UnknownDeviceCount *int32 `json:"unknownDeviceCount,omitempty"`
}

// NewMicrosoftGraphDeviceExchangeAccessStateSummary instantiates a new MicrosoftGraphDeviceExchangeAccessStateSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphDeviceExchangeAccessStateSummary() *MicrosoftGraphDeviceExchangeAccessStateSummary {
	this := MicrosoftGraphDeviceExchangeAccessStateSummary{}
	return &this
}

// NewMicrosoftGraphDeviceExchangeAccessStateSummaryWithDefaults instantiates a new MicrosoftGraphDeviceExchangeAccessStateSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphDeviceExchangeAccessStateSummaryWithDefaults() *MicrosoftGraphDeviceExchangeAccessStateSummary {
	this := MicrosoftGraphDeviceExchangeAccessStateSummary{}
	return &this
}

// GetAllowedDeviceCount returns the AllowedDeviceCount field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceExchangeAccessStateSummary) GetAllowedDeviceCount() int32 {
	if o == nil || o.AllowedDeviceCount == nil {
		var ret int32
		return ret
	}
	return *o.AllowedDeviceCount
}

// GetAllowedDeviceCountOk returns a tuple with the AllowedDeviceCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceExchangeAccessStateSummary) GetAllowedDeviceCountOk() (*int32, bool) {
	if o == nil || o.AllowedDeviceCount == nil {
		return nil, false
	}
	return o.AllowedDeviceCount, true
}

// HasAllowedDeviceCount returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceExchangeAccessStateSummary) HasAllowedDeviceCount() bool {
	if o != nil && o.AllowedDeviceCount != nil {
		return true
	}

	return false
}

// SetAllowedDeviceCount gets a reference to the given int32 and assigns it to the AllowedDeviceCount field.
func (o *MicrosoftGraphDeviceExchangeAccessStateSummary) SetAllowedDeviceCount(v int32) {
	o.AllowedDeviceCount = &v
}

// GetBlockedDeviceCount returns the BlockedDeviceCount field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceExchangeAccessStateSummary) GetBlockedDeviceCount() int32 {
	if o == nil || o.BlockedDeviceCount == nil {
		var ret int32
		return ret
	}
	return *o.BlockedDeviceCount
}

// GetBlockedDeviceCountOk returns a tuple with the BlockedDeviceCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceExchangeAccessStateSummary) GetBlockedDeviceCountOk() (*int32, bool) {
	if o == nil || o.BlockedDeviceCount == nil {
		return nil, false
	}
	return o.BlockedDeviceCount, true
}

// HasBlockedDeviceCount returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceExchangeAccessStateSummary) HasBlockedDeviceCount() bool {
	if o != nil && o.BlockedDeviceCount != nil {
		return true
	}

	return false
}

// SetBlockedDeviceCount gets a reference to the given int32 and assigns it to the BlockedDeviceCount field.
func (o *MicrosoftGraphDeviceExchangeAccessStateSummary) SetBlockedDeviceCount(v int32) {
	o.BlockedDeviceCount = &v
}

// GetQuarantinedDeviceCount returns the QuarantinedDeviceCount field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceExchangeAccessStateSummary) GetQuarantinedDeviceCount() int32 {
	if o == nil || o.QuarantinedDeviceCount == nil {
		var ret int32
		return ret
	}
	return *o.QuarantinedDeviceCount
}

// GetQuarantinedDeviceCountOk returns a tuple with the QuarantinedDeviceCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceExchangeAccessStateSummary) GetQuarantinedDeviceCountOk() (*int32, bool) {
	if o == nil || o.QuarantinedDeviceCount == nil {
		return nil, false
	}
	return o.QuarantinedDeviceCount, true
}

// HasQuarantinedDeviceCount returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceExchangeAccessStateSummary) HasQuarantinedDeviceCount() bool {
	if o != nil && o.QuarantinedDeviceCount != nil {
		return true
	}

	return false
}

// SetQuarantinedDeviceCount gets a reference to the given int32 and assigns it to the QuarantinedDeviceCount field.
func (o *MicrosoftGraphDeviceExchangeAccessStateSummary) SetQuarantinedDeviceCount(v int32) {
	o.QuarantinedDeviceCount = &v
}

// GetUnavailableDeviceCount returns the UnavailableDeviceCount field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceExchangeAccessStateSummary) GetUnavailableDeviceCount() int32 {
	if o == nil || o.UnavailableDeviceCount == nil {
		var ret int32
		return ret
	}
	return *o.UnavailableDeviceCount
}

// GetUnavailableDeviceCountOk returns a tuple with the UnavailableDeviceCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceExchangeAccessStateSummary) GetUnavailableDeviceCountOk() (*int32, bool) {
	if o == nil || o.UnavailableDeviceCount == nil {
		return nil, false
	}
	return o.UnavailableDeviceCount, true
}

// HasUnavailableDeviceCount returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceExchangeAccessStateSummary) HasUnavailableDeviceCount() bool {
	if o != nil && o.UnavailableDeviceCount != nil {
		return true
	}

	return false
}

// SetUnavailableDeviceCount gets a reference to the given int32 and assigns it to the UnavailableDeviceCount field.
func (o *MicrosoftGraphDeviceExchangeAccessStateSummary) SetUnavailableDeviceCount(v int32) {
	o.UnavailableDeviceCount = &v
}

// GetUnknownDeviceCount returns the UnknownDeviceCount field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceExchangeAccessStateSummary) GetUnknownDeviceCount() int32 {
	if o == nil || o.UnknownDeviceCount == nil {
		var ret int32
		return ret
	}
	return *o.UnknownDeviceCount
}

// GetUnknownDeviceCountOk returns a tuple with the UnknownDeviceCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceExchangeAccessStateSummary) GetUnknownDeviceCountOk() (*int32, bool) {
	if o == nil || o.UnknownDeviceCount == nil {
		return nil, false
	}
	return o.UnknownDeviceCount, true
}

// HasUnknownDeviceCount returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceExchangeAccessStateSummary) HasUnknownDeviceCount() bool {
	if o != nil && o.UnknownDeviceCount != nil {
		return true
	}

	return false
}

// SetUnknownDeviceCount gets a reference to the given int32 and assigns it to the UnknownDeviceCount field.
func (o *MicrosoftGraphDeviceExchangeAccessStateSummary) SetUnknownDeviceCount(v int32) {
	o.UnknownDeviceCount = &v
}

func (o MicrosoftGraphDeviceExchangeAccessStateSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowedDeviceCount != nil {
		toSerialize["allowedDeviceCount"] = o.AllowedDeviceCount
	}
	if o.BlockedDeviceCount != nil {
		toSerialize["blockedDeviceCount"] = o.BlockedDeviceCount
	}
	if o.QuarantinedDeviceCount != nil {
		toSerialize["quarantinedDeviceCount"] = o.QuarantinedDeviceCount
	}
	if o.UnavailableDeviceCount != nil {
		toSerialize["unavailableDeviceCount"] = o.UnavailableDeviceCount
	}
	if o.UnknownDeviceCount != nil {
		toSerialize["unknownDeviceCount"] = o.UnknownDeviceCount
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphDeviceExchangeAccessStateSummary struct {
	value *MicrosoftGraphDeviceExchangeAccessStateSummary
	isSet bool
}

func (v NullableMicrosoftGraphDeviceExchangeAccessStateSummary) Get() *MicrosoftGraphDeviceExchangeAccessStateSummary {
	return v.value
}

func (v *NullableMicrosoftGraphDeviceExchangeAccessStateSummary) Set(val *MicrosoftGraphDeviceExchangeAccessStateSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphDeviceExchangeAccessStateSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphDeviceExchangeAccessStateSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphDeviceExchangeAccessStateSummary(val *MicrosoftGraphDeviceExchangeAccessStateSummary) *NullableMicrosoftGraphDeviceExchangeAccessStateSummary {
	return &NullableMicrosoftGraphDeviceExchangeAccessStateSummary{value: val, isSet: true}
}

func (v NullableMicrosoftGraphDeviceExchangeAccessStateSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphDeviceExchangeAccessStateSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


