/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// PrintOperation struct for PrintOperation
type PrintOperation struct {
	// The DateTimeOffset when the operation was created. Read-only.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	Status *MicrosoftGraphPrintOperationStatus `json:"status,omitempty"`
}

// NewPrintOperation instantiates a new PrintOperation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrintOperation() *PrintOperation {
	this := PrintOperation{}
	return &this
}

// NewPrintOperationWithDefaults instantiates a new PrintOperation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrintOperationWithDefaults() *PrintOperation {
	this := PrintOperation{}
	return &this
}

// GetCreatedDateTime returns the CreatedDateTime field value if set, zero value otherwise.
func (o *PrintOperation) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrintOperation) GetCreatedDateTimeOk() (*time.Time, bool) {
	if o == nil || o.CreatedDateTime == nil {
		return nil, false
	}
	return o.CreatedDateTime, true
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *PrintOperation) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime != nil {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given time.Time and assigns it to the CreatedDateTime field.
func (o *PrintOperation) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PrintOperation) GetStatus() MicrosoftGraphPrintOperationStatus {
	if o == nil || o.Status == nil {
		var ret MicrosoftGraphPrintOperationStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrintOperation) GetStatusOk() (*MicrosoftGraphPrintOperationStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PrintOperation) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given MicrosoftGraphPrintOperationStatus and assigns it to the Status field.
func (o *PrintOperation) SetStatus(v MicrosoftGraphPrintOperationStatus) {
	o.Status = &v
}

func (o PrintOperation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedDateTime != nil {
		toSerialize["createdDateTime"] = o.CreatedDateTime
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullablePrintOperation struct {
	value *PrintOperation
	isSet bool
}

func (v NullablePrintOperation) Get() *PrintOperation {
	return v.value
}

func (v *NullablePrintOperation) Set(val *PrintOperation) {
	v.value = val
	v.isSet = true
}

func (v NullablePrintOperation) IsSet() bool {
	return v.isSet
}

func (v *NullablePrintOperation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrintOperation(val *PrintOperation) *NullablePrintOperation {
	return &NullablePrintOperation{value: val, isSet: true}
}

func (v NullablePrintOperation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrintOperation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


