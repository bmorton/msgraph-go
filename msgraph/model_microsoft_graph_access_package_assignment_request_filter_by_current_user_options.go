/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptions the model 'MicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptions'
type MicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptions string

// List of microsoft.graph.accessPackageAssignmentRequestFilterByCurrentUserOptions
const (
	TARGET MicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptions = "target"
	CREATED_BY MicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptions = "createdBy"
	APPROVER MicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptions = "approver"
	UNKNOWN_FUTURE_VALUE MicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptions = "unknownFutureValue"
)

// All allowed values of MicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptions enum
var AllowedMicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptionsEnumValues = []MicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptions{
	"target",
	"createdBy",
	"approver",
	"unknownFutureValue",
}

func (v *MicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptions) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptions(value)
	for _, existing := range AllowedMicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptionsEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptions", value)
}

// NewMicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptionsFromValue returns a pointer to a valid MicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptions
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptionsFromValue(v string) (*MicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptions, error) {
	ev := MicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptions(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptions: valid values are %v", v, AllowedMicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptionsEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptions) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptionsEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.accessPackageAssignmentRequestFilterByCurrentUserOptions value
func (v MicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptions) Ptr() *MicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptions {
	return &v
}

type NullableMicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptions struct {
	value *MicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptions
	isSet bool
}

func (v NullableMicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptions) Get() *MicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptions {
	return v.value
}

func (v *NullableMicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptions) Set(val *MicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptions(val *MicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptions) *NullableMicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptions {
	return &NullableMicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptions{value: val, isSet: true}
}

func (v NullableMicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphAccessPackageAssignmentRequestFilterByCurrentUserOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

