/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// WorkbookFormatProtection struct for WorkbookFormatProtection
type WorkbookFormatProtection struct {
	// Indicates if Excel hides the formula for the cells in the range. A null value indicates that the entire range doesn't have uniform formula hidden setting.
	FormulaHidden NullableBool `json:"formulaHidden,omitempty"`
	// Indicates if Excel locks the cells in the object. A null value indicates that the entire range doesn't have uniform lock setting.
	Locked NullableBool `json:"locked,omitempty"`
}

// NewWorkbookFormatProtection instantiates a new WorkbookFormatProtection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkbookFormatProtection() *WorkbookFormatProtection {
	this := WorkbookFormatProtection{}
	return &this
}

// NewWorkbookFormatProtectionWithDefaults instantiates a new WorkbookFormatProtection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkbookFormatProtectionWithDefaults() *WorkbookFormatProtection {
	this := WorkbookFormatProtection{}
	return &this
}

// GetFormulaHidden returns the FormulaHidden field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkbookFormatProtection) GetFormulaHidden() bool {
	if o == nil || o.FormulaHidden.Get() == nil {
		var ret bool
		return ret
	}
	return *o.FormulaHidden.Get()
}

// GetFormulaHiddenOk returns a tuple with the FormulaHidden field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkbookFormatProtection) GetFormulaHiddenOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FormulaHidden.Get(), o.FormulaHidden.IsSet()
}

// HasFormulaHidden returns a boolean if a field has been set.
func (o *WorkbookFormatProtection) HasFormulaHidden() bool {
	if o != nil && o.FormulaHidden.IsSet() {
		return true
	}

	return false
}

// SetFormulaHidden gets a reference to the given NullableBool and assigns it to the FormulaHidden field.
func (o *WorkbookFormatProtection) SetFormulaHidden(v bool) {
	o.FormulaHidden.Set(&v)
}
// SetFormulaHiddenNil sets the value for FormulaHidden to be an explicit nil
func (o *WorkbookFormatProtection) SetFormulaHiddenNil() {
	o.FormulaHidden.Set(nil)
}

// UnsetFormulaHidden ensures that no value is present for FormulaHidden, not even an explicit nil
func (o *WorkbookFormatProtection) UnsetFormulaHidden() {
	o.FormulaHidden.Unset()
}

// GetLocked returns the Locked field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkbookFormatProtection) GetLocked() bool {
	if o == nil || o.Locked.Get() == nil {
		var ret bool
		return ret
	}
	return *o.Locked.Get()
}

// GetLockedOk returns a tuple with the Locked field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkbookFormatProtection) GetLockedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Locked.Get(), o.Locked.IsSet()
}

// HasLocked returns a boolean if a field has been set.
func (o *WorkbookFormatProtection) HasLocked() bool {
	if o != nil && o.Locked.IsSet() {
		return true
	}

	return false
}

// SetLocked gets a reference to the given NullableBool and assigns it to the Locked field.
func (o *WorkbookFormatProtection) SetLocked(v bool) {
	o.Locked.Set(&v)
}
// SetLockedNil sets the value for Locked to be an explicit nil
func (o *WorkbookFormatProtection) SetLockedNil() {
	o.Locked.Set(nil)
}

// UnsetLocked ensures that no value is present for Locked, not even an explicit nil
func (o *WorkbookFormatProtection) UnsetLocked() {
	o.Locked.Unset()
}

func (o WorkbookFormatProtection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FormulaHidden.IsSet() {
		toSerialize["formulaHidden"] = o.FormulaHidden.Get()
	}
	if o.Locked.IsSet() {
		toSerialize["locked"] = o.Locked.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableWorkbookFormatProtection struct {
	value *WorkbookFormatProtection
	isSet bool
}

func (v NullableWorkbookFormatProtection) Get() *WorkbookFormatProtection {
	return v.value
}

func (v *NullableWorkbookFormatProtection) Set(val *WorkbookFormatProtection) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkbookFormatProtection) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkbookFormatProtection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkbookFormatProtection(val *WorkbookFormatProtection) *NullableWorkbookFormatProtection {
	return &NullableWorkbookFormatProtection{value: val, isSet: true}
}

func (v NullableWorkbookFormatProtection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkbookFormatProtection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


