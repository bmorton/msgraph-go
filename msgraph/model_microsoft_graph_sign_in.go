/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphSignIn struct for MicrosoftGraphSignIn
type MicrosoftGraphSignIn struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// App name displayed in the Azure Portal. Supports $filter (eq and startsWith operators only).
	AppDisplayName NullableString `json:"appDisplayName,omitempty"`
	// Unique GUID representing the app ID in the Azure Active Directory. Supports $filter (eq operator only).
	AppId NullableString `json:"appId,omitempty"`
	// A list of conditional access policies that are triggered by the corresponding sign-in activity.
	AppliedConditionalAccessPolicies *[]*AnyOfmicrosoftGraphAppliedConditionalAccessPolicy `json:"appliedConditionalAccessPolicies,omitempty"`
	// Identifies the legacy client used for sign-in activity.  Includes Browser, Exchange Active Sync, modern clients, IMAP, MAPI, SMTP, and POP. Supports $filter (eq operator only).
	ClientAppUsed NullableString `json:"clientAppUsed,omitempty"`
	// Reports status of an activated conditional access policy. Possible values are: success, failure, notApplied, and unknownFutureValue. Supports $filter (eq operator only).
	ConditionalAccessStatus AnyOfmicrosoftGraphConditionalAccessStatus `json:"conditionalAccessStatus,omitempty"`
	// The request ID sent from the client when the sign-in is initiated; used to troubleshoot sign-in activity. Supports $filter (eq operator only).
	CorrelationId NullableString `json:"correlationId,omitempty"`
	// Date and time (UTC) the sign-in was initiated. Example: midnight on Jan 1, 2014 is reported as 2014-01-01T00:00:00Z. Supports $orderby and $filter (eq, le, and ge operators only).
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// Device information from where the sign-in occurred; includes device ID, operating system, and browser. Supports $filter (eq and startsWith operators only) on browser and operatingSytem properties.
	DeviceDetail AnyOfmicrosoftGraphDeviceDetail `json:"deviceDetail,omitempty"`
	// IP address of the client used to sign in. Supports $filter (eq and startsWith operators only).
	IpAddress NullableString `json:"ipAddress,omitempty"`
	// Indicates if a sign-in is interactive or not.
	IsInteractive NullableBool `json:"isInteractive,omitempty"`
	// Provides the city, state, and country code where the sign-in originated. Supports $filter (eq and startsWith operators only) on city, state, and countryOrRegion properties.
	Location AnyOfmicrosoftGraphSignInLocation `json:"location,omitempty"`
	// Name of the resource the user signed into. Supports $filter (eq operator only).
	ResourceDisplayName NullableString `json:"resourceDisplayName,omitempty"`
	// ID of the resource that the user signed into. Supports $filter (eq operator only).
	ResourceId NullableString `json:"resourceId,omitempty"`
	// Provides the 'reason' behind a specific state of a risky user, sign-in or a risk event. The possible values are: none, adminGeneratedTemporaryPassword, userPerformedSecuredPasswordChange, userPerformedSecuredPasswordReset, adminConfirmedSigninSafe, aiConfirmedSigninSafe, userPassedMFADrivenByRiskBasedPolicy, adminDismissedAllRiskForUser, adminConfirmedSigninCompromised, unknownFutureValue. The value none means that no action has been performed on the user or sign-in so far.  Supports $filter (eq operator only).Note: Details for this property require an Azure AD Premium P2 license. Other licenses return the value hidden.
	RiskDetail AnyOfmicrosoftGraphRiskDetail `json:"riskDetail,omitempty"`
	// Risk event types associated with the sign-in. The possible values are: unlikelyTravel, anonymizedIPAddress, maliciousIPAddress, unfamiliarFeatures, malwareInfectedIPAddress, suspiciousIPAddress, leakedCredentials, investigationsThreatIntelligence,  generic, and unknownFutureValue. Supports $filter (eq operator only).
	RiskEventTypes *[]*AnyOfmicrosoftGraphRiskEventType `json:"riskEventTypes,omitempty"`
	// The list of risk event types associated with the sign-in. Possible values: unlikelyTravel, anonymizedIPAddress, maliciousIPAddress, unfamiliarFeatures, malwareInfectedIPAddress, suspiciousIPAddress, leakedCredentials, investigationsThreatIntelligence,  generic, or unknownFutureValue. Supports $filter (eq and startsWith operators only).
	RiskEventTypesV2 *[]*string `json:"riskEventTypes_v2,omitempty"`
	// Aggregated risk level. The possible values are: none, low, medium, high, hidden, and unknownFutureValue. The value hidden means the user or sign-in was not enabled for Azure AD Identity Protection. Supports $filter (eq operator only).  Note: Details for this property are only available for Azure AD Premium P2 customers. All other customers will be returned hidden.
	RiskLevelAggregated AnyOfmicrosoftGraphRiskLevel `json:"riskLevelAggregated,omitempty"`
	// Risk level during sign-in. The possible values are: none, low, medium, high, hidden, and unknownFutureValue. The value hidden means the user or sign-in was not enabled for Azure AD Identity Protection.  Supports $filter (eq operator only). Note: Details for this property are only available for Azure AD Premium P2 customers. All other customers will be returned hidden.
	RiskLevelDuringSignIn AnyOfmicrosoftGraphRiskLevel `json:"riskLevelDuringSignIn,omitempty"`
	// Reports status of the risky user, sign-in, or a risk event. The possible values are: none, confirmedSafe, remediated, dismissed, atRisk, confirmedCompromised, unknownFutureValue. Supports $filter (eq operator only).
	RiskState AnyOfmicrosoftGraphRiskState `json:"riskState,omitempty"`
	// Sign-in status. Includes the error code and description of the error (in case of a sign-in failure). Supports $filter (eq operator only) on errorCode property.
	Status AnyOfmicrosoftGraphSignInStatus `json:"status,omitempty"`
	// Display name of the user that initiated the sign-in. Supports $filter (eq and startsWith operators only).
	UserDisplayName NullableString `json:"userDisplayName,omitempty"`
	// ID of the user that initiated the sign-in. Supports $filter (eq operator only).
	UserId *string `json:"userId,omitempty"`
	// User principal name of the user that initiated the sign-in. Supports $filter (eq and startsWith operators only).
	UserPrincipalName NullableString `json:"userPrincipalName,omitempty"`
}

// NewMicrosoftGraphSignIn instantiates a new MicrosoftGraphSignIn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphSignIn() *MicrosoftGraphSignIn {
	this := MicrosoftGraphSignIn{}
	return &this
}

// NewMicrosoftGraphSignInWithDefaults instantiates a new MicrosoftGraphSignIn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphSignInWithDefaults() *MicrosoftGraphSignIn {
	this := MicrosoftGraphSignIn{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphSignIn) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSignIn) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphSignIn) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphSignIn) SetId(v string) {
	o.Id = &v
}

// GetAppDisplayName returns the AppDisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSignIn) GetAppDisplayName() string {
	if o == nil || o.AppDisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.AppDisplayName.Get()
}

// GetAppDisplayNameOk returns a tuple with the AppDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSignIn) GetAppDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AppDisplayName.Get(), o.AppDisplayName.IsSet()
}

// HasAppDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphSignIn) HasAppDisplayName() bool {
	if o != nil && o.AppDisplayName.IsSet() {
		return true
	}

	return false
}

// SetAppDisplayName gets a reference to the given NullableString and assigns it to the AppDisplayName field.
func (o *MicrosoftGraphSignIn) SetAppDisplayName(v string) {
	o.AppDisplayName.Set(&v)
}
// SetAppDisplayNameNil sets the value for AppDisplayName to be an explicit nil
func (o *MicrosoftGraphSignIn) SetAppDisplayNameNil() {
	o.AppDisplayName.Set(nil)
}

// UnsetAppDisplayName ensures that no value is present for AppDisplayName, not even an explicit nil
func (o *MicrosoftGraphSignIn) UnsetAppDisplayName() {
	o.AppDisplayName.Unset()
}

// GetAppId returns the AppId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSignIn) GetAppId() string {
	if o == nil || o.AppId.Get() == nil {
		var ret string
		return ret
	}
	return *o.AppId.Get()
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSignIn) GetAppIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AppId.Get(), o.AppId.IsSet()
}

// HasAppId returns a boolean if a field has been set.
func (o *MicrosoftGraphSignIn) HasAppId() bool {
	if o != nil && o.AppId.IsSet() {
		return true
	}

	return false
}

// SetAppId gets a reference to the given NullableString and assigns it to the AppId field.
func (o *MicrosoftGraphSignIn) SetAppId(v string) {
	o.AppId.Set(&v)
}
// SetAppIdNil sets the value for AppId to be an explicit nil
func (o *MicrosoftGraphSignIn) SetAppIdNil() {
	o.AppId.Set(nil)
}

// UnsetAppId ensures that no value is present for AppId, not even an explicit nil
func (o *MicrosoftGraphSignIn) UnsetAppId() {
	o.AppId.Unset()
}

// GetAppliedConditionalAccessPolicies returns the AppliedConditionalAccessPolicies field value if set, zero value otherwise.
func (o *MicrosoftGraphSignIn) GetAppliedConditionalAccessPolicies() []*AnyOfmicrosoftGraphAppliedConditionalAccessPolicy {
	if o == nil || o.AppliedConditionalAccessPolicies == nil {
		var ret []*AnyOfmicrosoftGraphAppliedConditionalAccessPolicy
		return ret
	}
	return *o.AppliedConditionalAccessPolicies
}

// GetAppliedConditionalAccessPoliciesOk returns a tuple with the AppliedConditionalAccessPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSignIn) GetAppliedConditionalAccessPoliciesOk() (*[]*AnyOfmicrosoftGraphAppliedConditionalAccessPolicy, bool) {
	if o == nil || o.AppliedConditionalAccessPolicies == nil {
		return nil, false
	}
	return o.AppliedConditionalAccessPolicies, true
}

// HasAppliedConditionalAccessPolicies returns a boolean if a field has been set.
func (o *MicrosoftGraphSignIn) HasAppliedConditionalAccessPolicies() bool {
	if o != nil && o.AppliedConditionalAccessPolicies != nil {
		return true
	}

	return false
}

// SetAppliedConditionalAccessPolicies gets a reference to the given []*AnyOfmicrosoftGraphAppliedConditionalAccessPolicy and assigns it to the AppliedConditionalAccessPolicies field.
func (o *MicrosoftGraphSignIn) SetAppliedConditionalAccessPolicies(v []*AnyOfmicrosoftGraphAppliedConditionalAccessPolicy) {
	o.AppliedConditionalAccessPolicies = &v
}

// GetClientAppUsed returns the ClientAppUsed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSignIn) GetClientAppUsed() string {
	if o == nil || o.ClientAppUsed.Get() == nil {
		var ret string
		return ret
	}
	return *o.ClientAppUsed.Get()
}

// GetClientAppUsedOk returns a tuple with the ClientAppUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSignIn) GetClientAppUsedOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClientAppUsed.Get(), o.ClientAppUsed.IsSet()
}

// HasClientAppUsed returns a boolean if a field has been set.
func (o *MicrosoftGraphSignIn) HasClientAppUsed() bool {
	if o != nil && o.ClientAppUsed.IsSet() {
		return true
	}

	return false
}

// SetClientAppUsed gets a reference to the given NullableString and assigns it to the ClientAppUsed field.
func (o *MicrosoftGraphSignIn) SetClientAppUsed(v string) {
	o.ClientAppUsed.Set(&v)
}
// SetClientAppUsedNil sets the value for ClientAppUsed to be an explicit nil
func (o *MicrosoftGraphSignIn) SetClientAppUsedNil() {
	o.ClientAppUsed.Set(nil)
}

// UnsetClientAppUsed ensures that no value is present for ClientAppUsed, not even an explicit nil
func (o *MicrosoftGraphSignIn) UnsetClientAppUsed() {
	o.ClientAppUsed.Unset()
}

// GetConditionalAccessStatus returns the ConditionalAccessStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSignIn) GetConditionalAccessStatus() AnyOfmicrosoftGraphConditionalAccessStatus {
	if o == nil  {
		var ret AnyOfmicrosoftGraphConditionalAccessStatus
		return ret
	}
	return o.ConditionalAccessStatus
}

// GetConditionalAccessStatusOk returns a tuple with the ConditionalAccessStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSignIn) GetConditionalAccessStatusOk() (*AnyOfmicrosoftGraphConditionalAccessStatus, bool) {
	if o == nil || o.ConditionalAccessStatus == nil {
		return nil, false
	}
	return &o.ConditionalAccessStatus, true
}

// HasConditionalAccessStatus returns a boolean if a field has been set.
func (o *MicrosoftGraphSignIn) HasConditionalAccessStatus() bool {
	if o != nil && o.ConditionalAccessStatus != nil {
		return true
	}

	return false
}

// SetConditionalAccessStatus gets a reference to the given AnyOfmicrosoftGraphConditionalAccessStatus and assigns it to the ConditionalAccessStatus field.
func (o *MicrosoftGraphSignIn) SetConditionalAccessStatus(v AnyOfmicrosoftGraphConditionalAccessStatus) {
	o.ConditionalAccessStatus = v
}

// GetCorrelationId returns the CorrelationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSignIn) GetCorrelationId() string {
	if o == nil || o.CorrelationId.Get() == nil {
		var ret string
		return ret
	}
	return *o.CorrelationId.Get()
}

// GetCorrelationIdOk returns a tuple with the CorrelationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSignIn) GetCorrelationIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CorrelationId.Get(), o.CorrelationId.IsSet()
}

// HasCorrelationId returns a boolean if a field has been set.
func (o *MicrosoftGraphSignIn) HasCorrelationId() bool {
	if o != nil && o.CorrelationId.IsSet() {
		return true
	}

	return false
}

// SetCorrelationId gets a reference to the given NullableString and assigns it to the CorrelationId field.
func (o *MicrosoftGraphSignIn) SetCorrelationId(v string) {
	o.CorrelationId.Set(&v)
}
// SetCorrelationIdNil sets the value for CorrelationId to be an explicit nil
func (o *MicrosoftGraphSignIn) SetCorrelationIdNil() {
	o.CorrelationId.Set(nil)
}

// UnsetCorrelationId ensures that no value is present for CorrelationId, not even an explicit nil
func (o *MicrosoftGraphSignIn) UnsetCorrelationId() {
	o.CorrelationId.Unset()
}

// GetCreatedDateTime returns the CreatedDateTime field value if set, zero value otherwise.
func (o *MicrosoftGraphSignIn) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSignIn) GetCreatedDateTimeOk() (*time.Time, bool) {
	if o == nil || o.CreatedDateTime == nil {
		return nil, false
	}
	return o.CreatedDateTime, true
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphSignIn) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime != nil {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given time.Time and assigns it to the CreatedDateTime field.
func (o *MicrosoftGraphSignIn) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime = &v
}

// GetDeviceDetail returns the DeviceDetail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSignIn) GetDeviceDetail() AnyOfmicrosoftGraphDeviceDetail {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDeviceDetail
		return ret
	}
	return o.DeviceDetail
}

// GetDeviceDetailOk returns a tuple with the DeviceDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSignIn) GetDeviceDetailOk() (*AnyOfmicrosoftGraphDeviceDetail, bool) {
	if o == nil || o.DeviceDetail == nil {
		return nil, false
	}
	return &o.DeviceDetail, true
}

// HasDeviceDetail returns a boolean if a field has been set.
func (o *MicrosoftGraphSignIn) HasDeviceDetail() bool {
	if o != nil && o.DeviceDetail != nil {
		return true
	}

	return false
}

// SetDeviceDetail gets a reference to the given AnyOfmicrosoftGraphDeviceDetail and assigns it to the DeviceDetail field.
func (o *MicrosoftGraphSignIn) SetDeviceDetail(v AnyOfmicrosoftGraphDeviceDetail) {
	o.DeviceDetail = v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSignIn) GetIpAddress() string {
	if o == nil || o.IpAddress.Get() == nil {
		var ret string
		return ret
	}
	return *o.IpAddress.Get()
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSignIn) GetIpAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IpAddress.Get(), o.IpAddress.IsSet()
}

// HasIpAddress returns a boolean if a field has been set.
func (o *MicrosoftGraphSignIn) HasIpAddress() bool {
	if o != nil && o.IpAddress.IsSet() {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given NullableString and assigns it to the IpAddress field.
func (o *MicrosoftGraphSignIn) SetIpAddress(v string) {
	o.IpAddress.Set(&v)
}
// SetIpAddressNil sets the value for IpAddress to be an explicit nil
func (o *MicrosoftGraphSignIn) SetIpAddressNil() {
	o.IpAddress.Set(nil)
}

// UnsetIpAddress ensures that no value is present for IpAddress, not even an explicit nil
func (o *MicrosoftGraphSignIn) UnsetIpAddress() {
	o.IpAddress.Unset()
}

// GetIsInteractive returns the IsInteractive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSignIn) GetIsInteractive() bool {
	if o == nil || o.IsInteractive.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsInteractive.Get()
}

// GetIsInteractiveOk returns a tuple with the IsInteractive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSignIn) GetIsInteractiveOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsInteractive.Get(), o.IsInteractive.IsSet()
}

// HasIsInteractive returns a boolean if a field has been set.
func (o *MicrosoftGraphSignIn) HasIsInteractive() bool {
	if o != nil && o.IsInteractive.IsSet() {
		return true
	}

	return false
}

// SetIsInteractive gets a reference to the given NullableBool and assigns it to the IsInteractive field.
func (o *MicrosoftGraphSignIn) SetIsInteractive(v bool) {
	o.IsInteractive.Set(&v)
}
// SetIsInteractiveNil sets the value for IsInteractive to be an explicit nil
func (o *MicrosoftGraphSignIn) SetIsInteractiveNil() {
	o.IsInteractive.Set(nil)
}

// UnsetIsInteractive ensures that no value is present for IsInteractive, not even an explicit nil
func (o *MicrosoftGraphSignIn) UnsetIsInteractive() {
	o.IsInteractive.Unset()
}

// GetLocation returns the Location field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSignIn) GetLocation() AnyOfmicrosoftGraphSignInLocation {
	if o == nil  {
		var ret AnyOfmicrosoftGraphSignInLocation
		return ret
	}
	return o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSignIn) GetLocationOk() (*AnyOfmicrosoftGraphSignInLocation, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return &o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *MicrosoftGraphSignIn) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given AnyOfmicrosoftGraphSignInLocation and assigns it to the Location field.
func (o *MicrosoftGraphSignIn) SetLocation(v AnyOfmicrosoftGraphSignInLocation) {
	o.Location = v
}

// GetResourceDisplayName returns the ResourceDisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSignIn) GetResourceDisplayName() string {
	if o == nil || o.ResourceDisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.ResourceDisplayName.Get()
}

// GetResourceDisplayNameOk returns a tuple with the ResourceDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSignIn) GetResourceDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ResourceDisplayName.Get(), o.ResourceDisplayName.IsSet()
}

// HasResourceDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphSignIn) HasResourceDisplayName() bool {
	if o != nil && o.ResourceDisplayName.IsSet() {
		return true
	}

	return false
}

// SetResourceDisplayName gets a reference to the given NullableString and assigns it to the ResourceDisplayName field.
func (o *MicrosoftGraphSignIn) SetResourceDisplayName(v string) {
	o.ResourceDisplayName.Set(&v)
}
// SetResourceDisplayNameNil sets the value for ResourceDisplayName to be an explicit nil
func (o *MicrosoftGraphSignIn) SetResourceDisplayNameNil() {
	o.ResourceDisplayName.Set(nil)
}

// UnsetResourceDisplayName ensures that no value is present for ResourceDisplayName, not even an explicit nil
func (o *MicrosoftGraphSignIn) UnsetResourceDisplayName() {
	o.ResourceDisplayName.Unset()
}

// GetResourceId returns the ResourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSignIn) GetResourceId() string {
	if o == nil || o.ResourceId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ResourceId.Get()
}

// GetResourceIdOk returns a tuple with the ResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSignIn) GetResourceIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ResourceId.Get(), o.ResourceId.IsSet()
}

// HasResourceId returns a boolean if a field has been set.
func (o *MicrosoftGraphSignIn) HasResourceId() bool {
	if o != nil && o.ResourceId.IsSet() {
		return true
	}

	return false
}

// SetResourceId gets a reference to the given NullableString and assigns it to the ResourceId field.
func (o *MicrosoftGraphSignIn) SetResourceId(v string) {
	o.ResourceId.Set(&v)
}
// SetResourceIdNil sets the value for ResourceId to be an explicit nil
func (o *MicrosoftGraphSignIn) SetResourceIdNil() {
	o.ResourceId.Set(nil)
}

// UnsetResourceId ensures that no value is present for ResourceId, not even an explicit nil
func (o *MicrosoftGraphSignIn) UnsetResourceId() {
	o.ResourceId.Unset()
}

// GetRiskDetail returns the RiskDetail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSignIn) GetRiskDetail() AnyOfmicrosoftGraphRiskDetail {
	if o == nil  {
		var ret AnyOfmicrosoftGraphRiskDetail
		return ret
	}
	return o.RiskDetail
}

// GetRiskDetailOk returns a tuple with the RiskDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSignIn) GetRiskDetailOk() (*AnyOfmicrosoftGraphRiskDetail, bool) {
	if o == nil || o.RiskDetail == nil {
		return nil, false
	}
	return &o.RiskDetail, true
}

// HasRiskDetail returns a boolean if a field has been set.
func (o *MicrosoftGraphSignIn) HasRiskDetail() bool {
	if o != nil && o.RiskDetail != nil {
		return true
	}

	return false
}

// SetRiskDetail gets a reference to the given AnyOfmicrosoftGraphRiskDetail and assigns it to the RiskDetail field.
func (o *MicrosoftGraphSignIn) SetRiskDetail(v AnyOfmicrosoftGraphRiskDetail) {
	o.RiskDetail = v
}

// GetRiskEventTypes returns the RiskEventTypes field value if set, zero value otherwise.
func (o *MicrosoftGraphSignIn) GetRiskEventTypes() []*AnyOfmicrosoftGraphRiskEventType {
	if o == nil || o.RiskEventTypes == nil {
		var ret []*AnyOfmicrosoftGraphRiskEventType
		return ret
	}
	return *o.RiskEventTypes
}

// GetRiskEventTypesOk returns a tuple with the RiskEventTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSignIn) GetRiskEventTypesOk() (*[]*AnyOfmicrosoftGraphRiskEventType, bool) {
	if o == nil || o.RiskEventTypes == nil {
		return nil, false
	}
	return o.RiskEventTypes, true
}

// HasRiskEventTypes returns a boolean if a field has been set.
func (o *MicrosoftGraphSignIn) HasRiskEventTypes() bool {
	if o != nil && o.RiskEventTypes != nil {
		return true
	}

	return false
}

// SetRiskEventTypes gets a reference to the given []*AnyOfmicrosoftGraphRiskEventType and assigns it to the RiskEventTypes field.
func (o *MicrosoftGraphSignIn) SetRiskEventTypes(v []*AnyOfmicrosoftGraphRiskEventType) {
	o.RiskEventTypes = &v
}

// GetRiskEventTypesV2 returns the RiskEventTypesV2 field value if set, zero value otherwise.
func (o *MicrosoftGraphSignIn) GetRiskEventTypesV2() []*string {
	if o == nil || o.RiskEventTypesV2 == nil {
		var ret []*string
		return ret
	}
	return *o.RiskEventTypesV2
}

// GetRiskEventTypesV2Ok returns a tuple with the RiskEventTypesV2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSignIn) GetRiskEventTypesV2Ok() (*[]*string, bool) {
	if o == nil || o.RiskEventTypesV2 == nil {
		return nil, false
	}
	return o.RiskEventTypesV2, true
}

// HasRiskEventTypesV2 returns a boolean if a field has been set.
func (o *MicrosoftGraphSignIn) HasRiskEventTypesV2() bool {
	if o != nil && o.RiskEventTypesV2 != nil {
		return true
	}

	return false
}

// SetRiskEventTypesV2 gets a reference to the given []*string and assigns it to the RiskEventTypesV2 field.
func (o *MicrosoftGraphSignIn) SetRiskEventTypesV2(v []*string) {
	o.RiskEventTypesV2 = &v
}

// GetRiskLevelAggregated returns the RiskLevelAggregated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSignIn) GetRiskLevelAggregated() AnyOfmicrosoftGraphRiskLevel {
	if o == nil  {
		var ret AnyOfmicrosoftGraphRiskLevel
		return ret
	}
	return o.RiskLevelAggregated
}

// GetRiskLevelAggregatedOk returns a tuple with the RiskLevelAggregated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSignIn) GetRiskLevelAggregatedOk() (*AnyOfmicrosoftGraphRiskLevel, bool) {
	if o == nil || o.RiskLevelAggregated == nil {
		return nil, false
	}
	return &o.RiskLevelAggregated, true
}

// HasRiskLevelAggregated returns a boolean if a field has been set.
func (o *MicrosoftGraphSignIn) HasRiskLevelAggregated() bool {
	if o != nil && o.RiskLevelAggregated != nil {
		return true
	}

	return false
}

// SetRiskLevelAggregated gets a reference to the given AnyOfmicrosoftGraphRiskLevel and assigns it to the RiskLevelAggregated field.
func (o *MicrosoftGraphSignIn) SetRiskLevelAggregated(v AnyOfmicrosoftGraphRiskLevel) {
	o.RiskLevelAggregated = v
}

// GetRiskLevelDuringSignIn returns the RiskLevelDuringSignIn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSignIn) GetRiskLevelDuringSignIn() AnyOfmicrosoftGraphRiskLevel {
	if o == nil  {
		var ret AnyOfmicrosoftGraphRiskLevel
		return ret
	}
	return o.RiskLevelDuringSignIn
}

// GetRiskLevelDuringSignInOk returns a tuple with the RiskLevelDuringSignIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSignIn) GetRiskLevelDuringSignInOk() (*AnyOfmicrosoftGraphRiskLevel, bool) {
	if o == nil || o.RiskLevelDuringSignIn == nil {
		return nil, false
	}
	return &o.RiskLevelDuringSignIn, true
}

// HasRiskLevelDuringSignIn returns a boolean if a field has been set.
func (o *MicrosoftGraphSignIn) HasRiskLevelDuringSignIn() bool {
	if o != nil && o.RiskLevelDuringSignIn != nil {
		return true
	}

	return false
}

// SetRiskLevelDuringSignIn gets a reference to the given AnyOfmicrosoftGraphRiskLevel and assigns it to the RiskLevelDuringSignIn field.
func (o *MicrosoftGraphSignIn) SetRiskLevelDuringSignIn(v AnyOfmicrosoftGraphRiskLevel) {
	o.RiskLevelDuringSignIn = v
}

// GetRiskState returns the RiskState field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSignIn) GetRiskState() AnyOfmicrosoftGraphRiskState {
	if o == nil  {
		var ret AnyOfmicrosoftGraphRiskState
		return ret
	}
	return o.RiskState
}

// GetRiskStateOk returns a tuple with the RiskState field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSignIn) GetRiskStateOk() (*AnyOfmicrosoftGraphRiskState, bool) {
	if o == nil || o.RiskState == nil {
		return nil, false
	}
	return &o.RiskState, true
}

// HasRiskState returns a boolean if a field has been set.
func (o *MicrosoftGraphSignIn) HasRiskState() bool {
	if o != nil && o.RiskState != nil {
		return true
	}

	return false
}

// SetRiskState gets a reference to the given AnyOfmicrosoftGraphRiskState and assigns it to the RiskState field.
func (o *MicrosoftGraphSignIn) SetRiskState(v AnyOfmicrosoftGraphRiskState) {
	o.RiskState = v
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSignIn) GetStatus() AnyOfmicrosoftGraphSignInStatus {
	if o == nil  {
		var ret AnyOfmicrosoftGraphSignInStatus
		return ret
	}
	return o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSignIn) GetStatusOk() (*AnyOfmicrosoftGraphSignInStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return &o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MicrosoftGraphSignIn) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given AnyOfmicrosoftGraphSignInStatus and assigns it to the Status field.
func (o *MicrosoftGraphSignIn) SetStatus(v AnyOfmicrosoftGraphSignInStatus) {
	o.Status = v
}

// GetUserDisplayName returns the UserDisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSignIn) GetUserDisplayName() string {
	if o == nil || o.UserDisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.UserDisplayName.Get()
}

// GetUserDisplayNameOk returns a tuple with the UserDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSignIn) GetUserDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UserDisplayName.Get(), o.UserDisplayName.IsSet()
}

// HasUserDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphSignIn) HasUserDisplayName() bool {
	if o != nil && o.UserDisplayName.IsSet() {
		return true
	}

	return false
}

// SetUserDisplayName gets a reference to the given NullableString and assigns it to the UserDisplayName field.
func (o *MicrosoftGraphSignIn) SetUserDisplayName(v string) {
	o.UserDisplayName.Set(&v)
}
// SetUserDisplayNameNil sets the value for UserDisplayName to be an explicit nil
func (o *MicrosoftGraphSignIn) SetUserDisplayNameNil() {
	o.UserDisplayName.Set(nil)
}

// UnsetUserDisplayName ensures that no value is present for UserDisplayName, not even an explicit nil
func (o *MicrosoftGraphSignIn) UnsetUserDisplayName() {
	o.UserDisplayName.Unset()
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *MicrosoftGraphSignIn) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSignIn) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *MicrosoftGraphSignIn) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *MicrosoftGraphSignIn) SetUserId(v string) {
	o.UserId = &v
}

// GetUserPrincipalName returns the UserPrincipalName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSignIn) GetUserPrincipalName() string {
	if o == nil || o.UserPrincipalName.Get() == nil {
		var ret string
		return ret
	}
	return *o.UserPrincipalName.Get()
}

// GetUserPrincipalNameOk returns a tuple with the UserPrincipalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSignIn) GetUserPrincipalNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UserPrincipalName.Get(), o.UserPrincipalName.IsSet()
}

// HasUserPrincipalName returns a boolean if a field has been set.
func (o *MicrosoftGraphSignIn) HasUserPrincipalName() bool {
	if o != nil && o.UserPrincipalName.IsSet() {
		return true
	}

	return false
}

// SetUserPrincipalName gets a reference to the given NullableString and assigns it to the UserPrincipalName field.
func (o *MicrosoftGraphSignIn) SetUserPrincipalName(v string) {
	o.UserPrincipalName.Set(&v)
}
// SetUserPrincipalNameNil sets the value for UserPrincipalName to be an explicit nil
func (o *MicrosoftGraphSignIn) SetUserPrincipalNameNil() {
	o.UserPrincipalName.Set(nil)
}

// UnsetUserPrincipalName ensures that no value is present for UserPrincipalName, not even an explicit nil
func (o *MicrosoftGraphSignIn) UnsetUserPrincipalName() {
	o.UserPrincipalName.Unset()
}

func (o MicrosoftGraphSignIn) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.AppDisplayName.IsSet() {
		toSerialize["appDisplayName"] = o.AppDisplayName.Get()
	}
	if o.AppId.IsSet() {
		toSerialize["appId"] = o.AppId.Get()
	}
	if o.AppliedConditionalAccessPolicies != nil {
		toSerialize["appliedConditionalAccessPolicies"] = o.AppliedConditionalAccessPolicies
	}
	if o.ClientAppUsed.IsSet() {
		toSerialize["clientAppUsed"] = o.ClientAppUsed.Get()
	}
	if o.ConditionalAccessStatus != nil {
		toSerialize["conditionalAccessStatus"] = o.ConditionalAccessStatus
	}
	if o.CorrelationId.IsSet() {
		toSerialize["correlationId"] = o.CorrelationId.Get()
	}
	if o.CreatedDateTime != nil {
		toSerialize["createdDateTime"] = o.CreatedDateTime
	}
	if o.DeviceDetail != nil {
		toSerialize["deviceDetail"] = o.DeviceDetail
	}
	if o.IpAddress.IsSet() {
		toSerialize["ipAddress"] = o.IpAddress.Get()
	}
	if o.IsInteractive.IsSet() {
		toSerialize["isInteractive"] = o.IsInteractive.Get()
	}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.ResourceDisplayName.IsSet() {
		toSerialize["resourceDisplayName"] = o.ResourceDisplayName.Get()
	}
	if o.ResourceId.IsSet() {
		toSerialize["resourceId"] = o.ResourceId.Get()
	}
	if o.RiskDetail != nil {
		toSerialize["riskDetail"] = o.RiskDetail
	}
	if o.RiskEventTypes != nil {
		toSerialize["riskEventTypes"] = o.RiskEventTypes
	}
	if o.RiskEventTypesV2 != nil {
		toSerialize["riskEventTypes_v2"] = o.RiskEventTypesV2
	}
	if o.RiskLevelAggregated != nil {
		toSerialize["riskLevelAggregated"] = o.RiskLevelAggregated
	}
	if o.RiskLevelDuringSignIn != nil {
		toSerialize["riskLevelDuringSignIn"] = o.RiskLevelDuringSignIn
	}
	if o.RiskState != nil {
		toSerialize["riskState"] = o.RiskState
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.UserDisplayName.IsSet() {
		toSerialize["userDisplayName"] = o.UserDisplayName.Get()
	}
	if o.UserId != nil {
		toSerialize["userId"] = o.UserId
	}
	if o.UserPrincipalName.IsSet() {
		toSerialize["userPrincipalName"] = o.UserPrincipalName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphSignIn struct {
	value *MicrosoftGraphSignIn
	isSet bool
}

func (v NullableMicrosoftGraphSignIn) Get() *MicrosoftGraphSignIn {
	return v.value
}

func (v *NullableMicrosoftGraphSignIn) Set(val *MicrosoftGraphSignIn) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphSignIn) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphSignIn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphSignIn(val *MicrosoftGraphSignIn) *NullableMicrosoftGraphSignIn {
	return &NullableMicrosoftGraphSignIn{value: val, isSet: true}
}

func (v NullableMicrosoftGraphSignIn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphSignIn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


