/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphSubscribedSku struct for MicrosoftGraphSubscribedSku
type MicrosoftGraphSubscribedSku struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// For example, 'User' or 'Company'.
	AppliesTo NullableString `json:"appliesTo,omitempty"`
	// Possible values are: Enabled, Warning, Suspended, Deleted, LockedOut. The capabilityStatus is Enabled if the prepaidUnits property has at least 1 unit that is enabled, and LockedOut if the customer cancelled their subscription.
	CapabilityStatus NullableString `json:"capabilityStatus,omitempty"`
	// The number of licenses that have been assigned.
	ConsumedUnits NullableInt32 `json:"consumedUnits,omitempty"`
	// Information about the number and status of prepaid licenses.
	PrepaidUnits AnyOfmicrosoftGraphLicenseUnitsDetail `json:"prepaidUnits,omitempty"`
	// Information about the service plans that are available with the SKU. Not nullable
	ServicePlans *[]MicrosoftGraphServicePlanInfo `json:"servicePlans,omitempty"`
	// The unique identifier (GUID) for the service SKU.
	SkuId NullableString `json:"skuId,omitempty"`
	// The SKU part number; for example: 'AAD_PREMIUM' or 'RMSBASIC'. To get a list of commercial subscriptions that an organization has acquired, see List subscribedSkus.
	SkuPartNumber NullableString `json:"skuPartNumber,omitempty"`
}

// NewMicrosoftGraphSubscribedSku instantiates a new MicrosoftGraphSubscribedSku object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphSubscribedSku() *MicrosoftGraphSubscribedSku {
	this := MicrosoftGraphSubscribedSku{}
	return &this
}

// NewMicrosoftGraphSubscribedSkuWithDefaults instantiates a new MicrosoftGraphSubscribedSku object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphSubscribedSkuWithDefaults() *MicrosoftGraphSubscribedSku {
	this := MicrosoftGraphSubscribedSku{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphSubscribedSku) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSubscribedSku) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphSubscribedSku) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphSubscribedSku) SetId(v string) {
	o.Id = &v
}

// GetAppliesTo returns the AppliesTo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSubscribedSku) GetAppliesTo() string {
	if o == nil || o.AppliesTo.Get() == nil {
		var ret string
		return ret
	}
	return *o.AppliesTo.Get()
}

// GetAppliesToOk returns a tuple with the AppliesTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSubscribedSku) GetAppliesToOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AppliesTo.Get(), o.AppliesTo.IsSet()
}

// HasAppliesTo returns a boolean if a field has been set.
func (o *MicrosoftGraphSubscribedSku) HasAppliesTo() bool {
	if o != nil && o.AppliesTo.IsSet() {
		return true
	}

	return false
}

// SetAppliesTo gets a reference to the given NullableString and assigns it to the AppliesTo field.
func (o *MicrosoftGraphSubscribedSku) SetAppliesTo(v string) {
	o.AppliesTo.Set(&v)
}
// SetAppliesToNil sets the value for AppliesTo to be an explicit nil
func (o *MicrosoftGraphSubscribedSku) SetAppliesToNil() {
	o.AppliesTo.Set(nil)
}

// UnsetAppliesTo ensures that no value is present for AppliesTo, not even an explicit nil
func (o *MicrosoftGraphSubscribedSku) UnsetAppliesTo() {
	o.AppliesTo.Unset()
}

// GetCapabilityStatus returns the CapabilityStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSubscribedSku) GetCapabilityStatus() string {
	if o == nil || o.CapabilityStatus.Get() == nil {
		var ret string
		return ret
	}
	return *o.CapabilityStatus.Get()
}

// GetCapabilityStatusOk returns a tuple with the CapabilityStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSubscribedSku) GetCapabilityStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CapabilityStatus.Get(), o.CapabilityStatus.IsSet()
}

// HasCapabilityStatus returns a boolean if a field has been set.
func (o *MicrosoftGraphSubscribedSku) HasCapabilityStatus() bool {
	if o != nil && o.CapabilityStatus.IsSet() {
		return true
	}

	return false
}

// SetCapabilityStatus gets a reference to the given NullableString and assigns it to the CapabilityStatus field.
func (o *MicrosoftGraphSubscribedSku) SetCapabilityStatus(v string) {
	o.CapabilityStatus.Set(&v)
}
// SetCapabilityStatusNil sets the value for CapabilityStatus to be an explicit nil
func (o *MicrosoftGraphSubscribedSku) SetCapabilityStatusNil() {
	o.CapabilityStatus.Set(nil)
}

// UnsetCapabilityStatus ensures that no value is present for CapabilityStatus, not even an explicit nil
func (o *MicrosoftGraphSubscribedSku) UnsetCapabilityStatus() {
	o.CapabilityStatus.Unset()
}

// GetConsumedUnits returns the ConsumedUnits field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSubscribedSku) GetConsumedUnits() int32 {
	if o == nil || o.ConsumedUnits.Get() == nil {
		var ret int32
		return ret
	}
	return *o.ConsumedUnits.Get()
}

// GetConsumedUnitsOk returns a tuple with the ConsumedUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSubscribedSku) GetConsumedUnitsOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ConsumedUnits.Get(), o.ConsumedUnits.IsSet()
}

// HasConsumedUnits returns a boolean if a field has been set.
func (o *MicrosoftGraphSubscribedSku) HasConsumedUnits() bool {
	if o != nil && o.ConsumedUnits.IsSet() {
		return true
	}

	return false
}

// SetConsumedUnits gets a reference to the given NullableInt32 and assigns it to the ConsumedUnits field.
func (o *MicrosoftGraphSubscribedSku) SetConsumedUnits(v int32) {
	o.ConsumedUnits.Set(&v)
}
// SetConsumedUnitsNil sets the value for ConsumedUnits to be an explicit nil
func (o *MicrosoftGraphSubscribedSku) SetConsumedUnitsNil() {
	o.ConsumedUnits.Set(nil)
}

// UnsetConsumedUnits ensures that no value is present for ConsumedUnits, not even an explicit nil
func (o *MicrosoftGraphSubscribedSku) UnsetConsumedUnits() {
	o.ConsumedUnits.Unset()
}

// GetPrepaidUnits returns the PrepaidUnits field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSubscribedSku) GetPrepaidUnits() AnyOfmicrosoftGraphLicenseUnitsDetail {
	if o == nil  {
		var ret AnyOfmicrosoftGraphLicenseUnitsDetail
		return ret
	}
	return o.PrepaidUnits
}

// GetPrepaidUnitsOk returns a tuple with the PrepaidUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSubscribedSku) GetPrepaidUnitsOk() (*AnyOfmicrosoftGraphLicenseUnitsDetail, bool) {
	if o == nil || o.PrepaidUnits == nil {
		return nil, false
	}
	return &o.PrepaidUnits, true
}

// HasPrepaidUnits returns a boolean if a field has been set.
func (o *MicrosoftGraphSubscribedSku) HasPrepaidUnits() bool {
	if o != nil && o.PrepaidUnits != nil {
		return true
	}

	return false
}

// SetPrepaidUnits gets a reference to the given AnyOfmicrosoftGraphLicenseUnitsDetail and assigns it to the PrepaidUnits field.
func (o *MicrosoftGraphSubscribedSku) SetPrepaidUnits(v AnyOfmicrosoftGraphLicenseUnitsDetail) {
	o.PrepaidUnits = v
}

// GetServicePlans returns the ServicePlans field value if set, zero value otherwise.
func (o *MicrosoftGraphSubscribedSku) GetServicePlans() []MicrosoftGraphServicePlanInfo {
	if o == nil || o.ServicePlans == nil {
		var ret []MicrosoftGraphServicePlanInfo
		return ret
	}
	return *o.ServicePlans
}

// GetServicePlansOk returns a tuple with the ServicePlans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSubscribedSku) GetServicePlansOk() (*[]MicrosoftGraphServicePlanInfo, bool) {
	if o == nil || o.ServicePlans == nil {
		return nil, false
	}
	return o.ServicePlans, true
}

// HasServicePlans returns a boolean if a field has been set.
func (o *MicrosoftGraphSubscribedSku) HasServicePlans() bool {
	if o != nil && o.ServicePlans != nil {
		return true
	}

	return false
}

// SetServicePlans gets a reference to the given []MicrosoftGraphServicePlanInfo and assigns it to the ServicePlans field.
func (o *MicrosoftGraphSubscribedSku) SetServicePlans(v []MicrosoftGraphServicePlanInfo) {
	o.ServicePlans = &v
}

// GetSkuId returns the SkuId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSubscribedSku) GetSkuId() string {
	if o == nil || o.SkuId.Get() == nil {
		var ret string
		return ret
	}
	return *o.SkuId.Get()
}

// GetSkuIdOk returns a tuple with the SkuId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSubscribedSku) GetSkuIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SkuId.Get(), o.SkuId.IsSet()
}

// HasSkuId returns a boolean if a field has been set.
func (o *MicrosoftGraphSubscribedSku) HasSkuId() bool {
	if o != nil && o.SkuId.IsSet() {
		return true
	}

	return false
}

// SetSkuId gets a reference to the given NullableString and assigns it to the SkuId field.
func (o *MicrosoftGraphSubscribedSku) SetSkuId(v string) {
	o.SkuId.Set(&v)
}
// SetSkuIdNil sets the value for SkuId to be an explicit nil
func (o *MicrosoftGraphSubscribedSku) SetSkuIdNil() {
	o.SkuId.Set(nil)
}

// UnsetSkuId ensures that no value is present for SkuId, not even an explicit nil
func (o *MicrosoftGraphSubscribedSku) UnsetSkuId() {
	o.SkuId.Unset()
}

// GetSkuPartNumber returns the SkuPartNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSubscribedSku) GetSkuPartNumber() string {
	if o == nil || o.SkuPartNumber.Get() == nil {
		var ret string
		return ret
	}
	return *o.SkuPartNumber.Get()
}

// GetSkuPartNumberOk returns a tuple with the SkuPartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSubscribedSku) GetSkuPartNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SkuPartNumber.Get(), o.SkuPartNumber.IsSet()
}

// HasSkuPartNumber returns a boolean if a field has been set.
func (o *MicrosoftGraphSubscribedSku) HasSkuPartNumber() bool {
	if o != nil && o.SkuPartNumber.IsSet() {
		return true
	}

	return false
}

// SetSkuPartNumber gets a reference to the given NullableString and assigns it to the SkuPartNumber field.
func (o *MicrosoftGraphSubscribedSku) SetSkuPartNumber(v string) {
	o.SkuPartNumber.Set(&v)
}
// SetSkuPartNumberNil sets the value for SkuPartNumber to be an explicit nil
func (o *MicrosoftGraphSubscribedSku) SetSkuPartNumberNil() {
	o.SkuPartNumber.Set(nil)
}

// UnsetSkuPartNumber ensures that no value is present for SkuPartNumber, not even an explicit nil
func (o *MicrosoftGraphSubscribedSku) UnsetSkuPartNumber() {
	o.SkuPartNumber.Unset()
}

func (o MicrosoftGraphSubscribedSku) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.AppliesTo.IsSet() {
		toSerialize["appliesTo"] = o.AppliesTo.Get()
	}
	if o.CapabilityStatus.IsSet() {
		toSerialize["capabilityStatus"] = o.CapabilityStatus.Get()
	}
	if o.ConsumedUnits.IsSet() {
		toSerialize["consumedUnits"] = o.ConsumedUnits.Get()
	}
	if o.PrepaidUnits != nil {
		toSerialize["prepaidUnits"] = o.PrepaidUnits
	}
	if o.ServicePlans != nil {
		toSerialize["servicePlans"] = o.ServicePlans
	}
	if o.SkuId.IsSet() {
		toSerialize["skuId"] = o.SkuId.Get()
	}
	if o.SkuPartNumber.IsSet() {
		toSerialize["skuPartNumber"] = o.SkuPartNumber.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphSubscribedSku struct {
	value *MicrosoftGraphSubscribedSku
	isSet bool
}

func (v NullableMicrosoftGraphSubscribedSku) Get() *MicrosoftGraphSubscribedSku {
	return v.value
}

func (v *NullableMicrosoftGraphSubscribedSku) Set(val *MicrosoftGraphSubscribedSku) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphSubscribedSku) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphSubscribedSku) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphSubscribedSku(val *MicrosoftGraphSubscribedSku) *NullableMicrosoftGraphSubscribedSku {
	return &NullableMicrosoftGraphSubscribedSku{value: val, isSet: true}
}

func (v NullableMicrosoftGraphSubscribedSku) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphSubscribedSku) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


