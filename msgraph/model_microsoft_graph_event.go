/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphEvent struct for MicrosoftGraphEvent
type MicrosoftGraphEvent struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// The categories associated with the item
	Categories *[]*string `json:"categories,omitempty"`
	// Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.
	ChangeKey NullableString `json:"changeKey,omitempty"`
	// The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
	CreatedDateTime NullableTime `json:"createdDateTime,omitempty"`
	// The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
	LastModifiedDateTime NullableTime `json:"lastModifiedDateTime,omitempty"`
	// true if the meeting organizer allows invitees to propose a new time when responding; otherwise, false. Optional. Default is true.
	AllowNewTimeProposals NullableBool `json:"allowNewTimeProposals,omitempty"`
	// The collection of attendees for the event.
	Attendees *[]*AnyOfmicrosoftGraphAttendee `json:"attendees,omitempty"`
	// The body of the message associated with the event. It can be in HTML or text format.
	Body AnyOfmicrosoftGraphItemBody `json:"body,omitempty"`
	// The preview of the message associated with the event. It is in text format.
	BodyPreview NullableString `json:"bodyPreview,omitempty"`
	// The date, time, and time zone that the event ends. By default, the end time is in UTC.
	End AnyOfmicrosoftGraphDateTimeTimeZone `json:"end,omitempty"`
	// Set to true if the event has attachments.
	HasAttachments NullableBool `json:"hasAttachments,omitempty"`
	// When set to true, each attendee only sees themselves in the meeting request and meeting Tracking list. Default is false.
	HideAttendees NullableBool `json:"hideAttendees,omitempty"`
	// A unique identifier for an event across calendars. This ID is different for each occurrence in a recurring series. Read-only.
	ICalUId NullableString `json:"iCalUId,omitempty"`
	Importance AnyOfmicrosoftGraphImportance `json:"importance,omitempty"`
	IsAllDay NullableBool `json:"isAllDay,omitempty"`
	IsCancelled NullableBool `json:"isCancelled,omitempty"`
	IsDraft NullableBool `json:"isDraft,omitempty"`
	IsOnlineMeeting NullableBool `json:"isOnlineMeeting,omitempty"`
	IsOrganizer NullableBool `json:"isOrganizer,omitempty"`
	IsReminderOn NullableBool `json:"isReminderOn,omitempty"`
	Location AnyOfmicrosoftGraphLocation `json:"location,omitempty"`
	Locations *[]*AnyOfmicrosoftGraphLocation `json:"locations,omitempty"`
	OnlineMeeting AnyOfmicrosoftGraphOnlineMeetingInfo `json:"onlineMeeting,omitempty"`
	OnlineMeetingProvider AnyOfmicrosoftGraphOnlineMeetingProviderType `json:"onlineMeetingProvider,omitempty"`
	OnlineMeetingUrl NullableString `json:"onlineMeetingUrl,omitempty"`
	Organizer AnyOfmicrosoftGraphRecipient `json:"organizer,omitempty"`
	OriginalEndTimeZone NullableString `json:"originalEndTimeZone,omitempty"`
	OriginalStart NullableTime `json:"originalStart,omitempty"`
	OriginalStartTimeZone NullableString `json:"originalStartTimeZone,omitempty"`
	Recurrence AnyOfmicrosoftGraphPatternedRecurrence `json:"recurrence,omitempty"`
	ReminderMinutesBeforeStart NullableInt32 `json:"reminderMinutesBeforeStart,omitempty"`
	ResponseRequested NullableBool `json:"responseRequested,omitempty"`
	ResponseStatus AnyOfmicrosoftGraphResponseStatus `json:"responseStatus,omitempty"`
	Sensitivity AnyOfmicrosoftGraphSensitivity `json:"sensitivity,omitempty"`
	SeriesMasterId NullableString `json:"seriesMasterId,omitempty"`
	ShowAs AnyOfmicrosoftGraphFreeBusyStatus `json:"showAs,omitempty"`
	Start AnyOfmicrosoftGraphDateTimeTimeZone `json:"start,omitempty"`
	Subject NullableString `json:"subject,omitempty"`
	TransactionId NullableString `json:"transactionId,omitempty"`
	Type AnyOfmicrosoftGraphEventType `json:"type,omitempty"`
	WebLink NullableString `json:"webLink,omitempty"`
	// The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.
	Attachments *[]MicrosoftGraphAttachment `json:"attachments,omitempty"`
	// The calendar that contains the event. Navigation property. Read-only.
	Calendar AnyOfmicrosoftGraphCalendar `json:"calendar,omitempty"`
	// The collection of open extensions defined for the event. Nullable.
	Extensions *[]MicrosoftGraphExtension `json:"extensions,omitempty"`
	// The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions that have been modified, but does not include occurrences that have been cancelled from the series. Navigation property. Read-only. Nullable.
	Instances *[]MicrosoftGraphEvent `json:"instances,omitempty"`
	// The collection of multi-value extended properties defined for the event. Read-only. Nullable.
	MultiValueExtendedProperties *[]MicrosoftGraphMultiValueLegacyExtendedProperty `json:"multiValueExtendedProperties,omitempty"`
	// The collection of single-value extended properties defined for the event. Read-only. Nullable.
	SingleValueExtendedProperties *[]MicrosoftGraphSingleValueLegacyExtendedProperty `json:"singleValueExtendedProperties,omitempty"`
}

// NewMicrosoftGraphEvent instantiates a new MicrosoftGraphEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphEvent() *MicrosoftGraphEvent {
	this := MicrosoftGraphEvent{}
	return &this
}

// NewMicrosoftGraphEventWithDefaults instantiates a new MicrosoftGraphEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphEventWithDefaults() *MicrosoftGraphEvent {
	this := MicrosoftGraphEvent{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphEvent) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphEvent) SetId(v string) {
	o.Id = &v
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *MicrosoftGraphEvent) GetCategories() []*string {
	if o == nil || o.Categories == nil {
		var ret []*string
		return ret
	}
	return *o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetCategoriesOk() (*[]*string, bool) {
	if o == nil || o.Categories == nil {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasCategories() bool {
	if o != nil && o.Categories != nil {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []*string and assigns it to the Categories field.
func (o *MicrosoftGraphEvent) SetCategories(v []*string) {
	o.Categories = &v
}

// GetChangeKey returns the ChangeKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetChangeKey() string {
	if o == nil || o.ChangeKey.Get() == nil {
		var ret string
		return ret
	}
	return *o.ChangeKey.Get()
}

// GetChangeKeyOk returns a tuple with the ChangeKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetChangeKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ChangeKey.Get(), o.ChangeKey.IsSet()
}

// HasChangeKey returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasChangeKey() bool {
	if o != nil && o.ChangeKey.IsSet() {
		return true
	}

	return false
}

// SetChangeKey gets a reference to the given NullableString and assigns it to the ChangeKey field.
func (o *MicrosoftGraphEvent) SetChangeKey(v string) {
	o.ChangeKey.Set(&v)
}
// SetChangeKeyNil sets the value for ChangeKey to be an explicit nil
func (o *MicrosoftGraphEvent) SetChangeKeyNil() {
	o.ChangeKey.Set(nil)
}

// UnsetChangeKey ensures that no value is present for ChangeKey, not even an explicit nil
func (o *MicrosoftGraphEvent) UnsetChangeKey() {
	o.ChangeKey.Unset()
}

// GetCreatedDateTime returns the CreatedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime.Get()
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetCreatedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatedDateTime.Get(), o.CreatedDateTime.IsSet()
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime.IsSet() {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given NullableTime and assigns it to the CreatedDateTime field.
func (o *MicrosoftGraphEvent) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime.Set(&v)
}
// SetCreatedDateTimeNil sets the value for CreatedDateTime to be an explicit nil
func (o *MicrosoftGraphEvent) SetCreatedDateTimeNil() {
	o.CreatedDateTime.Set(nil)
}

// UnsetCreatedDateTime ensures that no value is present for CreatedDateTime, not even an explicit nil
func (o *MicrosoftGraphEvent) UnsetCreatedDateTime() {
	o.CreatedDateTime.Unset()
}

// GetLastModifiedDateTime returns the LastModifiedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetLastModifiedDateTime() time.Time {
	if o == nil || o.LastModifiedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDateTime.Get()
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetLastModifiedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastModifiedDateTime.Get(), o.LastModifiedDateTime.IsSet()
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasLastModifiedDateTime() bool {
	if o != nil && o.LastModifiedDateTime.IsSet() {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given NullableTime and assigns it to the LastModifiedDateTime field.
func (o *MicrosoftGraphEvent) SetLastModifiedDateTime(v time.Time) {
	o.LastModifiedDateTime.Set(&v)
}
// SetLastModifiedDateTimeNil sets the value for LastModifiedDateTime to be an explicit nil
func (o *MicrosoftGraphEvent) SetLastModifiedDateTimeNil() {
	o.LastModifiedDateTime.Set(nil)
}

// UnsetLastModifiedDateTime ensures that no value is present for LastModifiedDateTime, not even an explicit nil
func (o *MicrosoftGraphEvent) UnsetLastModifiedDateTime() {
	o.LastModifiedDateTime.Unset()
}

// GetAllowNewTimeProposals returns the AllowNewTimeProposals field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetAllowNewTimeProposals() bool {
	if o == nil || o.AllowNewTimeProposals.Get() == nil {
		var ret bool
		return ret
	}
	return *o.AllowNewTimeProposals.Get()
}

// GetAllowNewTimeProposalsOk returns a tuple with the AllowNewTimeProposals field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetAllowNewTimeProposalsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AllowNewTimeProposals.Get(), o.AllowNewTimeProposals.IsSet()
}

// HasAllowNewTimeProposals returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasAllowNewTimeProposals() bool {
	if o != nil && o.AllowNewTimeProposals.IsSet() {
		return true
	}

	return false
}

// SetAllowNewTimeProposals gets a reference to the given NullableBool and assigns it to the AllowNewTimeProposals field.
func (o *MicrosoftGraphEvent) SetAllowNewTimeProposals(v bool) {
	o.AllowNewTimeProposals.Set(&v)
}
// SetAllowNewTimeProposalsNil sets the value for AllowNewTimeProposals to be an explicit nil
func (o *MicrosoftGraphEvent) SetAllowNewTimeProposalsNil() {
	o.AllowNewTimeProposals.Set(nil)
}

// UnsetAllowNewTimeProposals ensures that no value is present for AllowNewTimeProposals, not even an explicit nil
func (o *MicrosoftGraphEvent) UnsetAllowNewTimeProposals() {
	o.AllowNewTimeProposals.Unset()
}

// GetAttendees returns the Attendees field value if set, zero value otherwise.
func (o *MicrosoftGraphEvent) GetAttendees() []*AnyOfmicrosoftGraphAttendee {
	if o == nil || o.Attendees == nil {
		var ret []*AnyOfmicrosoftGraphAttendee
		return ret
	}
	return *o.Attendees
}

// GetAttendeesOk returns a tuple with the Attendees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetAttendeesOk() (*[]*AnyOfmicrosoftGraphAttendee, bool) {
	if o == nil || o.Attendees == nil {
		return nil, false
	}
	return o.Attendees, true
}

// HasAttendees returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasAttendees() bool {
	if o != nil && o.Attendees != nil {
		return true
	}

	return false
}

// SetAttendees gets a reference to the given []*AnyOfmicrosoftGraphAttendee and assigns it to the Attendees field.
func (o *MicrosoftGraphEvent) SetAttendees(v []*AnyOfmicrosoftGraphAttendee) {
	o.Attendees = &v
}

// GetBody returns the Body field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetBody() AnyOfmicrosoftGraphItemBody {
	if o == nil  {
		var ret AnyOfmicrosoftGraphItemBody
		return ret
	}
	return o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetBodyOk() (*AnyOfmicrosoftGraphItemBody, bool) {
	if o == nil || o.Body == nil {
		return nil, false
	}
	return &o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given AnyOfmicrosoftGraphItemBody and assigns it to the Body field.
func (o *MicrosoftGraphEvent) SetBody(v AnyOfmicrosoftGraphItemBody) {
	o.Body = v
}

// GetBodyPreview returns the BodyPreview field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetBodyPreview() string {
	if o == nil || o.BodyPreview.Get() == nil {
		var ret string
		return ret
	}
	return *o.BodyPreview.Get()
}

// GetBodyPreviewOk returns a tuple with the BodyPreview field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetBodyPreviewOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BodyPreview.Get(), o.BodyPreview.IsSet()
}

// HasBodyPreview returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasBodyPreview() bool {
	if o != nil && o.BodyPreview.IsSet() {
		return true
	}

	return false
}

// SetBodyPreview gets a reference to the given NullableString and assigns it to the BodyPreview field.
func (o *MicrosoftGraphEvent) SetBodyPreview(v string) {
	o.BodyPreview.Set(&v)
}
// SetBodyPreviewNil sets the value for BodyPreview to be an explicit nil
func (o *MicrosoftGraphEvent) SetBodyPreviewNil() {
	o.BodyPreview.Set(nil)
}

// UnsetBodyPreview ensures that no value is present for BodyPreview, not even an explicit nil
func (o *MicrosoftGraphEvent) UnsetBodyPreview() {
	o.BodyPreview.Unset()
}

// GetEnd returns the End field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetEnd() AnyOfmicrosoftGraphDateTimeTimeZone {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDateTimeTimeZone
		return ret
	}
	return o.End
}

// GetEndOk returns a tuple with the End field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetEndOk() (*AnyOfmicrosoftGraphDateTimeTimeZone, bool) {
	if o == nil || o.End == nil {
		return nil, false
	}
	return &o.End, true
}

// HasEnd returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasEnd() bool {
	if o != nil && o.End != nil {
		return true
	}

	return false
}

// SetEnd gets a reference to the given AnyOfmicrosoftGraphDateTimeTimeZone and assigns it to the End field.
func (o *MicrosoftGraphEvent) SetEnd(v AnyOfmicrosoftGraphDateTimeTimeZone) {
	o.End = v
}

// GetHasAttachments returns the HasAttachments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetHasAttachments() bool {
	if o == nil || o.HasAttachments.Get() == nil {
		var ret bool
		return ret
	}
	return *o.HasAttachments.Get()
}

// GetHasAttachmentsOk returns a tuple with the HasAttachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetHasAttachmentsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HasAttachments.Get(), o.HasAttachments.IsSet()
}

// HasHasAttachments returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasHasAttachments() bool {
	if o != nil && o.HasAttachments.IsSet() {
		return true
	}

	return false
}

// SetHasAttachments gets a reference to the given NullableBool and assigns it to the HasAttachments field.
func (o *MicrosoftGraphEvent) SetHasAttachments(v bool) {
	o.HasAttachments.Set(&v)
}
// SetHasAttachmentsNil sets the value for HasAttachments to be an explicit nil
func (o *MicrosoftGraphEvent) SetHasAttachmentsNil() {
	o.HasAttachments.Set(nil)
}

// UnsetHasAttachments ensures that no value is present for HasAttachments, not even an explicit nil
func (o *MicrosoftGraphEvent) UnsetHasAttachments() {
	o.HasAttachments.Unset()
}

// GetHideAttendees returns the HideAttendees field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetHideAttendees() bool {
	if o == nil || o.HideAttendees.Get() == nil {
		var ret bool
		return ret
	}
	return *o.HideAttendees.Get()
}

// GetHideAttendeesOk returns a tuple with the HideAttendees field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetHideAttendeesOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HideAttendees.Get(), o.HideAttendees.IsSet()
}

// HasHideAttendees returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasHideAttendees() bool {
	if o != nil && o.HideAttendees.IsSet() {
		return true
	}

	return false
}

// SetHideAttendees gets a reference to the given NullableBool and assigns it to the HideAttendees field.
func (o *MicrosoftGraphEvent) SetHideAttendees(v bool) {
	o.HideAttendees.Set(&v)
}
// SetHideAttendeesNil sets the value for HideAttendees to be an explicit nil
func (o *MicrosoftGraphEvent) SetHideAttendeesNil() {
	o.HideAttendees.Set(nil)
}

// UnsetHideAttendees ensures that no value is present for HideAttendees, not even an explicit nil
func (o *MicrosoftGraphEvent) UnsetHideAttendees() {
	o.HideAttendees.Unset()
}

// GetICalUId returns the ICalUId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetICalUId() string {
	if o == nil || o.ICalUId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ICalUId.Get()
}

// GetICalUIdOk returns a tuple with the ICalUId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetICalUIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ICalUId.Get(), o.ICalUId.IsSet()
}

// HasICalUId returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasICalUId() bool {
	if o != nil && o.ICalUId.IsSet() {
		return true
	}

	return false
}

// SetICalUId gets a reference to the given NullableString and assigns it to the ICalUId field.
func (o *MicrosoftGraphEvent) SetICalUId(v string) {
	o.ICalUId.Set(&v)
}
// SetICalUIdNil sets the value for ICalUId to be an explicit nil
func (o *MicrosoftGraphEvent) SetICalUIdNil() {
	o.ICalUId.Set(nil)
}

// UnsetICalUId ensures that no value is present for ICalUId, not even an explicit nil
func (o *MicrosoftGraphEvent) UnsetICalUId() {
	o.ICalUId.Unset()
}

// GetImportance returns the Importance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetImportance() AnyOfmicrosoftGraphImportance {
	if o == nil  {
		var ret AnyOfmicrosoftGraphImportance
		return ret
	}
	return o.Importance
}

// GetImportanceOk returns a tuple with the Importance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetImportanceOk() (*AnyOfmicrosoftGraphImportance, bool) {
	if o == nil || o.Importance == nil {
		return nil, false
	}
	return &o.Importance, true
}

// HasImportance returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasImportance() bool {
	if o != nil && o.Importance != nil {
		return true
	}

	return false
}

// SetImportance gets a reference to the given AnyOfmicrosoftGraphImportance and assigns it to the Importance field.
func (o *MicrosoftGraphEvent) SetImportance(v AnyOfmicrosoftGraphImportance) {
	o.Importance = v
}

// GetIsAllDay returns the IsAllDay field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetIsAllDay() bool {
	if o == nil || o.IsAllDay.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsAllDay.Get()
}

// GetIsAllDayOk returns a tuple with the IsAllDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetIsAllDayOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsAllDay.Get(), o.IsAllDay.IsSet()
}

// HasIsAllDay returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasIsAllDay() bool {
	if o != nil && o.IsAllDay.IsSet() {
		return true
	}

	return false
}

// SetIsAllDay gets a reference to the given NullableBool and assigns it to the IsAllDay field.
func (o *MicrosoftGraphEvent) SetIsAllDay(v bool) {
	o.IsAllDay.Set(&v)
}
// SetIsAllDayNil sets the value for IsAllDay to be an explicit nil
func (o *MicrosoftGraphEvent) SetIsAllDayNil() {
	o.IsAllDay.Set(nil)
}

// UnsetIsAllDay ensures that no value is present for IsAllDay, not even an explicit nil
func (o *MicrosoftGraphEvent) UnsetIsAllDay() {
	o.IsAllDay.Unset()
}

// GetIsCancelled returns the IsCancelled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetIsCancelled() bool {
	if o == nil || o.IsCancelled.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsCancelled.Get()
}

// GetIsCancelledOk returns a tuple with the IsCancelled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetIsCancelledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsCancelled.Get(), o.IsCancelled.IsSet()
}

// HasIsCancelled returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasIsCancelled() bool {
	if o != nil && o.IsCancelled.IsSet() {
		return true
	}

	return false
}

// SetIsCancelled gets a reference to the given NullableBool and assigns it to the IsCancelled field.
func (o *MicrosoftGraphEvent) SetIsCancelled(v bool) {
	o.IsCancelled.Set(&v)
}
// SetIsCancelledNil sets the value for IsCancelled to be an explicit nil
func (o *MicrosoftGraphEvent) SetIsCancelledNil() {
	o.IsCancelled.Set(nil)
}

// UnsetIsCancelled ensures that no value is present for IsCancelled, not even an explicit nil
func (o *MicrosoftGraphEvent) UnsetIsCancelled() {
	o.IsCancelled.Unset()
}

// GetIsDraft returns the IsDraft field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetIsDraft() bool {
	if o == nil || o.IsDraft.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsDraft.Get()
}

// GetIsDraftOk returns a tuple with the IsDraft field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetIsDraftOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsDraft.Get(), o.IsDraft.IsSet()
}

// HasIsDraft returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasIsDraft() bool {
	if o != nil && o.IsDraft.IsSet() {
		return true
	}

	return false
}

// SetIsDraft gets a reference to the given NullableBool and assigns it to the IsDraft field.
func (o *MicrosoftGraphEvent) SetIsDraft(v bool) {
	o.IsDraft.Set(&v)
}
// SetIsDraftNil sets the value for IsDraft to be an explicit nil
func (o *MicrosoftGraphEvent) SetIsDraftNil() {
	o.IsDraft.Set(nil)
}

// UnsetIsDraft ensures that no value is present for IsDraft, not even an explicit nil
func (o *MicrosoftGraphEvent) UnsetIsDraft() {
	o.IsDraft.Unset()
}

// GetIsOnlineMeeting returns the IsOnlineMeeting field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetIsOnlineMeeting() bool {
	if o == nil || o.IsOnlineMeeting.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsOnlineMeeting.Get()
}

// GetIsOnlineMeetingOk returns a tuple with the IsOnlineMeeting field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetIsOnlineMeetingOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsOnlineMeeting.Get(), o.IsOnlineMeeting.IsSet()
}

// HasIsOnlineMeeting returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasIsOnlineMeeting() bool {
	if o != nil && o.IsOnlineMeeting.IsSet() {
		return true
	}

	return false
}

// SetIsOnlineMeeting gets a reference to the given NullableBool and assigns it to the IsOnlineMeeting field.
func (o *MicrosoftGraphEvent) SetIsOnlineMeeting(v bool) {
	o.IsOnlineMeeting.Set(&v)
}
// SetIsOnlineMeetingNil sets the value for IsOnlineMeeting to be an explicit nil
func (o *MicrosoftGraphEvent) SetIsOnlineMeetingNil() {
	o.IsOnlineMeeting.Set(nil)
}

// UnsetIsOnlineMeeting ensures that no value is present for IsOnlineMeeting, not even an explicit nil
func (o *MicrosoftGraphEvent) UnsetIsOnlineMeeting() {
	o.IsOnlineMeeting.Unset()
}

// GetIsOrganizer returns the IsOrganizer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetIsOrganizer() bool {
	if o == nil || o.IsOrganizer.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsOrganizer.Get()
}

// GetIsOrganizerOk returns a tuple with the IsOrganizer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetIsOrganizerOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsOrganizer.Get(), o.IsOrganizer.IsSet()
}

// HasIsOrganizer returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasIsOrganizer() bool {
	if o != nil && o.IsOrganizer.IsSet() {
		return true
	}

	return false
}

// SetIsOrganizer gets a reference to the given NullableBool and assigns it to the IsOrganizer field.
func (o *MicrosoftGraphEvent) SetIsOrganizer(v bool) {
	o.IsOrganizer.Set(&v)
}
// SetIsOrganizerNil sets the value for IsOrganizer to be an explicit nil
func (o *MicrosoftGraphEvent) SetIsOrganizerNil() {
	o.IsOrganizer.Set(nil)
}

// UnsetIsOrganizer ensures that no value is present for IsOrganizer, not even an explicit nil
func (o *MicrosoftGraphEvent) UnsetIsOrganizer() {
	o.IsOrganizer.Unset()
}

// GetIsReminderOn returns the IsReminderOn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetIsReminderOn() bool {
	if o == nil || o.IsReminderOn.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsReminderOn.Get()
}

// GetIsReminderOnOk returns a tuple with the IsReminderOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetIsReminderOnOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsReminderOn.Get(), o.IsReminderOn.IsSet()
}

// HasIsReminderOn returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasIsReminderOn() bool {
	if o != nil && o.IsReminderOn.IsSet() {
		return true
	}

	return false
}

// SetIsReminderOn gets a reference to the given NullableBool and assigns it to the IsReminderOn field.
func (o *MicrosoftGraphEvent) SetIsReminderOn(v bool) {
	o.IsReminderOn.Set(&v)
}
// SetIsReminderOnNil sets the value for IsReminderOn to be an explicit nil
func (o *MicrosoftGraphEvent) SetIsReminderOnNil() {
	o.IsReminderOn.Set(nil)
}

// UnsetIsReminderOn ensures that no value is present for IsReminderOn, not even an explicit nil
func (o *MicrosoftGraphEvent) UnsetIsReminderOn() {
	o.IsReminderOn.Unset()
}

// GetLocation returns the Location field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetLocation() AnyOfmicrosoftGraphLocation {
	if o == nil  {
		var ret AnyOfmicrosoftGraphLocation
		return ret
	}
	return o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetLocationOk() (*AnyOfmicrosoftGraphLocation, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return &o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given AnyOfmicrosoftGraphLocation and assigns it to the Location field.
func (o *MicrosoftGraphEvent) SetLocation(v AnyOfmicrosoftGraphLocation) {
	o.Location = v
}

// GetLocations returns the Locations field value if set, zero value otherwise.
func (o *MicrosoftGraphEvent) GetLocations() []*AnyOfmicrosoftGraphLocation {
	if o == nil || o.Locations == nil {
		var ret []*AnyOfmicrosoftGraphLocation
		return ret
	}
	return *o.Locations
}

// GetLocationsOk returns a tuple with the Locations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetLocationsOk() (*[]*AnyOfmicrosoftGraphLocation, bool) {
	if o == nil || o.Locations == nil {
		return nil, false
	}
	return o.Locations, true
}

// HasLocations returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasLocations() bool {
	if o != nil && o.Locations != nil {
		return true
	}

	return false
}

// SetLocations gets a reference to the given []*AnyOfmicrosoftGraphLocation and assigns it to the Locations field.
func (o *MicrosoftGraphEvent) SetLocations(v []*AnyOfmicrosoftGraphLocation) {
	o.Locations = &v
}

// GetOnlineMeeting returns the OnlineMeeting field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetOnlineMeeting() AnyOfmicrosoftGraphOnlineMeetingInfo {
	if o == nil  {
		var ret AnyOfmicrosoftGraphOnlineMeetingInfo
		return ret
	}
	return o.OnlineMeeting
}

// GetOnlineMeetingOk returns a tuple with the OnlineMeeting field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetOnlineMeetingOk() (*AnyOfmicrosoftGraphOnlineMeetingInfo, bool) {
	if o == nil || o.OnlineMeeting == nil {
		return nil, false
	}
	return &o.OnlineMeeting, true
}

// HasOnlineMeeting returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasOnlineMeeting() bool {
	if o != nil && o.OnlineMeeting != nil {
		return true
	}

	return false
}

// SetOnlineMeeting gets a reference to the given AnyOfmicrosoftGraphOnlineMeetingInfo and assigns it to the OnlineMeeting field.
func (o *MicrosoftGraphEvent) SetOnlineMeeting(v AnyOfmicrosoftGraphOnlineMeetingInfo) {
	o.OnlineMeeting = v
}

// GetOnlineMeetingProvider returns the OnlineMeetingProvider field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetOnlineMeetingProvider() AnyOfmicrosoftGraphOnlineMeetingProviderType {
	if o == nil  {
		var ret AnyOfmicrosoftGraphOnlineMeetingProviderType
		return ret
	}
	return o.OnlineMeetingProvider
}

// GetOnlineMeetingProviderOk returns a tuple with the OnlineMeetingProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetOnlineMeetingProviderOk() (*AnyOfmicrosoftGraphOnlineMeetingProviderType, bool) {
	if o == nil || o.OnlineMeetingProvider == nil {
		return nil, false
	}
	return &o.OnlineMeetingProvider, true
}

// HasOnlineMeetingProvider returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasOnlineMeetingProvider() bool {
	if o != nil && o.OnlineMeetingProvider != nil {
		return true
	}

	return false
}

// SetOnlineMeetingProvider gets a reference to the given AnyOfmicrosoftGraphOnlineMeetingProviderType and assigns it to the OnlineMeetingProvider field.
func (o *MicrosoftGraphEvent) SetOnlineMeetingProvider(v AnyOfmicrosoftGraphOnlineMeetingProviderType) {
	o.OnlineMeetingProvider = v
}

// GetOnlineMeetingUrl returns the OnlineMeetingUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetOnlineMeetingUrl() string {
	if o == nil || o.OnlineMeetingUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.OnlineMeetingUrl.Get()
}

// GetOnlineMeetingUrlOk returns a tuple with the OnlineMeetingUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetOnlineMeetingUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OnlineMeetingUrl.Get(), o.OnlineMeetingUrl.IsSet()
}

// HasOnlineMeetingUrl returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasOnlineMeetingUrl() bool {
	if o != nil && o.OnlineMeetingUrl.IsSet() {
		return true
	}

	return false
}

// SetOnlineMeetingUrl gets a reference to the given NullableString and assigns it to the OnlineMeetingUrl field.
func (o *MicrosoftGraphEvent) SetOnlineMeetingUrl(v string) {
	o.OnlineMeetingUrl.Set(&v)
}
// SetOnlineMeetingUrlNil sets the value for OnlineMeetingUrl to be an explicit nil
func (o *MicrosoftGraphEvent) SetOnlineMeetingUrlNil() {
	o.OnlineMeetingUrl.Set(nil)
}

// UnsetOnlineMeetingUrl ensures that no value is present for OnlineMeetingUrl, not even an explicit nil
func (o *MicrosoftGraphEvent) UnsetOnlineMeetingUrl() {
	o.OnlineMeetingUrl.Unset()
}

// GetOrganizer returns the Organizer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetOrganizer() AnyOfmicrosoftGraphRecipient {
	if o == nil  {
		var ret AnyOfmicrosoftGraphRecipient
		return ret
	}
	return o.Organizer
}

// GetOrganizerOk returns a tuple with the Organizer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetOrganizerOk() (*AnyOfmicrosoftGraphRecipient, bool) {
	if o == nil || o.Organizer == nil {
		return nil, false
	}
	return &o.Organizer, true
}

// HasOrganizer returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasOrganizer() bool {
	if o != nil && o.Organizer != nil {
		return true
	}

	return false
}

// SetOrganizer gets a reference to the given AnyOfmicrosoftGraphRecipient and assigns it to the Organizer field.
func (o *MicrosoftGraphEvent) SetOrganizer(v AnyOfmicrosoftGraphRecipient) {
	o.Organizer = v
}

// GetOriginalEndTimeZone returns the OriginalEndTimeZone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetOriginalEndTimeZone() string {
	if o == nil || o.OriginalEndTimeZone.Get() == nil {
		var ret string
		return ret
	}
	return *o.OriginalEndTimeZone.Get()
}

// GetOriginalEndTimeZoneOk returns a tuple with the OriginalEndTimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetOriginalEndTimeZoneOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OriginalEndTimeZone.Get(), o.OriginalEndTimeZone.IsSet()
}

// HasOriginalEndTimeZone returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasOriginalEndTimeZone() bool {
	if o != nil && o.OriginalEndTimeZone.IsSet() {
		return true
	}

	return false
}

// SetOriginalEndTimeZone gets a reference to the given NullableString and assigns it to the OriginalEndTimeZone field.
func (o *MicrosoftGraphEvent) SetOriginalEndTimeZone(v string) {
	o.OriginalEndTimeZone.Set(&v)
}
// SetOriginalEndTimeZoneNil sets the value for OriginalEndTimeZone to be an explicit nil
func (o *MicrosoftGraphEvent) SetOriginalEndTimeZoneNil() {
	o.OriginalEndTimeZone.Set(nil)
}

// UnsetOriginalEndTimeZone ensures that no value is present for OriginalEndTimeZone, not even an explicit nil
func (o *MicrosoftGraphEvent) UnsetOriginalEndTimeZone() {
	o.OriginalEndTimeZone.Unset()
}

// GetOriginalStart returns the OriginalStart field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetOriginalStart() time.Time {
	if o == nil || o.OriginalStart.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.OriginalStart.Get()
}

// GetOriginalStartOk returns a tuple with the OriginalStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetOriginalStartOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OriginalStart.Get(), o.OriginalStart.IsSet()
}

// HasOriginalStart returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasOriginalStart() bool {
	if o != nil && o.OriginalStart.IsSet() {
		return true
	}

	return false
}

// SetOriginalStart gets a reference to the given NullableTime and assigns it to the OriginalStart field.
func (o *MicrosoftGraphEvent) SetOriginalStart(v time.Time) {
	o.OriginalStart.Set(&v)
}
// SetOriginalStartNil sets the value for OriginalStart to be an explicit nil
func (o *MicrosoftGraphEvent) SetOriginalStartNil() {
	o.OriginalStart.Set(nil)
}

// UnsetOriginalStart ensures that no value is present for OriginalStart, not even an explicit nil
func (o *MicrosoftGraphEvent) UnsetOriginalStart() {
	o.OriginalStart.Unset()
}

// GetOriginalStartTimeZone returns the OriginalStartTimeZone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetOriginalStartTimeZone() string {
	if o == nil || o.OriginalStartTimeZone.Get() == nil {
		var ret string
		return ret
	}
	return *o.OriginalStartTimeZone.Get()
}

// GetOriginalStartTimeZoneOk returns a tuple with the OriginalStartTimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetOriginalStartTimeZoneOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OriginalStartTimeZone.Get(), o.OriginalStartTimeZone.IsSet()
}

// HasOriginalStartTimeZone returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasOriginalStartTimeZone() bool {
	if o != nil && o.OriginalStartTimeZone.IsSet() {
		return true
	}

	return false
}

// SetOriginalStartTimeZone gets a reference to the given NullableString and assigns it to the OriginalStartTimeZone field.
func (o *MicrosoftGraphEvent) SetOriginalStartTimeZone(v string) {
	o.OriginalStartTimeZone.Set(&v)
}
// SetOriginalStartTimeZoneNil sets the value for OriginalStartTimeZone to be an explicit nil
func (o *MicrosoftGraphEvent) SetOriginalStartTimeZoneNil() {
	o.OriginalStartTimeZone.Set(nil)
}

// UnsetOriginalStartTimeZone ensures that no value is present for OriginalStartTimeZone, not even an explicit nil
func (o *MicrosoftGraphEvent) UnsetOriginalStartTimeZone() {
	o.OriginalStartTimeZone.Unset()
}

// GetRecurrence returns the Recurrence field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetRecurrence() AnyOfmicrosoftGraphPatternedRecurrence {
	if o == nil  {
		var ret AnyOfmicrosoftGraphPatternedRecurrence
		return ret
	}
	return o.Recurrence
}

// GetRecurrenceOk returns a tuple with the Recurrence field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetRecurrenceOk() (*AnyOfmicrosoftGraphPatternedRecurrence, bool) {
	if o == nil || o.Recurrence == nil {
		return nil, false
	}
	return &o.Recurrence, true
}

// HasRecurrence returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasRecurrence() bool {
	if o != nil && o.Recurrence != nil {
		return true
	}

	return false
}

// SetRecurrence gets a reference to the given AnyOfmicrosoftGraphPatternedRecurrence and assigns it to the Recurrence field.
func (o *MicrosoftGraphEvent) SetRecurrence(v AnyOfmicrosoftGraphPatternedRecurrence) {
	o.Recurrence = v
}

// GetReminderMinutesBeforeStart returns the ReminderMinutesBeforeStart field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetReminderMinutesBeforeStart() int32 {
	if o == nil || o.ReminderMinutesBeforeStart.Get() == nil {
		var ret int32
		return ret
	}
	return *o.ReminderMinutesBeforeStart.Get()
}

// GetReminderMinutesBeforeStartOk returns a tuple with the ReminderMinutesBeforeStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetReminderMinutesBeforeStartOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ReminderMinutesBeforeStart.Get(), o.ReminderMinutesBeforeStart.IsSet()
}

// HasReminderMinutesBeforeStart returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasReminderMinutesBeforeStart() bool {
	if o != nil && o.ReminderMinutesBeforeStart.IsSet() {
		return true
	}

	return false
}

// SetReminderMinutesBeforeStart gets a reference to the given NullableInt32 and assigns it to the ReminderMinutesBeforeStart field.
func (o *MicrosoftGraphEvent) SetReminderMinutesBeforeStart(v int32) {
	o.ReminderMinutesBeforeStart.Set(&v)
}
// SetReminderMinutesBeforeStartNil sets the value for ReminderMinutesBeforeStart to be an explicit nil
func (o *MicrosoftGraphEvent) SetReminderMinutesBeforeStartNil() {
	o.ReminderMinutesBeforeStart.Set(nil)
}

// UnsetReminderMinutesBeforeStart ensures that no value is present for ReminderMinutesBeforeStart, not even an explicit nil
func (o *MicrosoftGraphEvent) UnsetReminderMinutesBeforeStart() {
	o.ReminderMinutesBeforeStart.Unset()
}

// GetResponseRequested returns the ResponseRequested field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetResponseRequested() bool {
	if o == nil || o.ResponseRequested.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ResponseRequested.Get()
}

// GetResponseRequestedOk returns a tuple with the ResponseRequested field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetResponseRequestedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ResponseRequested.Get(), o.ResponseRequested.IsSet()
}

// HasResponseRequested returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasResponseRequested() bool {
	if o != nil && o.ResponseRequested.IsSet() {
		return true
	}

	return false
}

// SetResponseRequested gets a reference to the given NullableBool and assigns it to the ResponseRequested field.
func (o *MicrosoftGraphEvent) SetResponseRequested(v bool) {
	o.ResponseRequested.Set(&v)
}
// SetResponseRequestedNil sets the value for ResponseRequested to be an explicit nil
func (o *MicrosoftGraphEvent) SetResponseRequestedNil() {
	o.ResponseRequested.Set(nil)
}

// UnsetResponseRequested ensures that no value is present for ResponseRequested, not even an explicit nil
func (o *MicrosoftGraphEvent) UnsetResponseRequested() {
	o.ResponseRequested.Unset()
}

// GetResponseStatus returns the ResponseStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetResponseStatus() AnyOfmicrosoftGraphResponseStatus {
	if o == nil  {
		var ret AnyOfmicrosoftGraphResponseStatus
		return ret
	}
	return o.ResponseStatus
}

// GetResponseStatusOk returns a tuple with the ResponseStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetResponseStatusOk() (*AnyOfmicrosoftGraphResponseStatus, bool) {
	if o == nil || o.ResponseStatus == nil {
		return nil, false
	}
	return &o.ResponseStatus, true
}

// HasResponseStatus returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasResponseStatus() bool {
	if o != nil && o.ResponseStatus != nil {
		return true
	}

	return false
}

// SetResponseStatus gets a reference to the given AnyOfmicrosoftGraphResponseStatus and assigns it to the ResponseStatus field.
func (o *MicrosoftGraphEvent) SetResponseStatus(v AnyOfmicrosoftGraphResponseStatus) {
	o.ResponseStatus = v
}

// GetSensitivity returns the Sensitivity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetSensitivity() AnyOfmicrosoftGraphSensitivity {
	if o == nil  {
		var ret AnyOfmicrosoftGraphSensitivity
		return ret
	}
	return o.Sensitivity
}

// GetSensitivityOk returns a tuple with the Sensitivity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetSensitivityOk() (*AnyOfmicrosoftGraphSensitivity, bool) {
	if o == nil || o.Sensitivity == nil {
		return nil, false
	}
	return &o.Sensitivity, true
}

// HasSensitivity returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasSensitivity() bool {
	if o != nil && o.Sensitivity != nil {
		return true
	}

	return false
}

// SetSensitivity gets a reference to the given AnyOfmicrosoftGraphSensitivity and assigns it to the Sensitivity field.
func (o *MicrosoftGraphEvent) SetSensitivity(v AnyOfmicrosoftGraphSensitivity) {
	o.Sensitivity = v
}

// GetSeriesMasterId returns the SeriesMasterId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetSeriesMasterId() string {
	if o == nil || o.SeriesMasterId.Get() == nil {
		var ret string
		return ret
	}
	return *o.SeriesMasterId.Get()
}

// GetSeriesMasterIdOk returns a tuple with the SeriesMasterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetSeriesMasterIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SeriesMasterId.Get(), o.SeriesMasterId.IsSet()
}

// HasSeriesMasterId returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasSeriesMasterId() bool {
	if o != nil && o.SeriesMasterId.IsSet() {
		return true
	}

	return false
}

// SetSeriesMasterId gets a reference to the given NullableString and assigns it to the SeriesMasterId field.
func (o *MicrosoftGraphEvent) SetSeriesMasterId(v string) {
	o.SeriesMasterId.Set(&v)
}
// SetSeriesMasterIdNil sets the value for SeriesMasterId to be an explicit nil
func (o *MicrosoftGraphEvent) SetSeriesMasterIdNil() {
	o.SeriesMasterId.Set(nil)
}

// UnsetSeriesMasterId ensures that no value is present for SeriesMasterId, not even an explicit nil
func (o *MicrosoftGraphEvent) UnsetSeriesMasterId() {
	o.SeriesMasterId.Unset()
}

// GetShowAs returns the ShowAs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetShowAs() AnyOfmicrosoftGraphFreeBusyStatus {
	if o == nil  {
		var ret AnyOfmicrosoftGraphFreeBusyStatus
		return ret
	}
	return o.ShowAs
}

// GetShowAsOk returns a tuple with the ShowAs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetShowAsOk() (*AnyOfmicrosoftGraphFreeBusyStatus, bool) {
	if o == nil || o.ShowAs == nil {
		return nil, false
	}
	return &o.ShowAs, true
}

// HasShowAs returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasShowAs() bool {
	if o != nil && o.ShowAs != nil {
		return true
	}

	return false
}

// SetShowAs gets a reference to the given AnyOfmicrosoftGraphFreeBusyStatus and assigns it to the ShowAs field.
func (o *MicrosoftGraphEvent) SetShowAs(v AnyOfmicrosoftGraphFreeBusyStatus) {
	o.ShowAs = v
}

// GetStart returns the Start field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetStart() AnyOfmicrosoftGraphDateTimeTimeZone {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDateTimeTimeZone
		return ret
	}
	return o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetStartOk() (*AnyOfmicrosoftGraphDateTimeTimeZone, bool) {
	if o == nil || o.Start == nil {
		return nil, false
	}
	return &o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasStart() bool {
	if o != nil && o.Start != nil {
		return true
	}

	return false
}

// SetStart gets a reference to the given AnyOfmicrosoftGraphDateTimeTimeZone and assigns it to the Start field.
func (o *MicrosoftGraphEvent) SetStart(v AnyOfmicrosoftGraphDateTimeTimeZone) {
	o.Start = v
}

// GetSubject returns the Subject field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetSubject() string {
	if o == nil || o.Subject.Get() == nil {
		var ret string
		return ret
	}
	return *o.Subject.Get()
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetSubjectOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Subject.Get(), o.Subject.IsSet()
}

// HasSubject returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasSubject() bool {
	if o != nil && o.Subject.IsSet() {
		return true
	}

	return false
}

// SetSubject gets a reference to the given NullableString and assigns it to the Subject field.
func (o *MicrosoftGraphEvent) SetSubject(v string) {
	o.Subject.Set(&v)
}
// SetSubjectNil sets the value for Subject to be an explicit nil
func (o *MicrosoftGraphEvent) SetSubjectNil() {
	o.Subject.Set(nil)
}

// UnsetSubject ensures that no value is present for Subject, not even an explicit nil
func (o *MicrosoftGraphEvent) UnsetSubject() {
	o.Subject.Unset()
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetTransactionId() string {
	if o == nil || o.TransactionId.Get() == nil {
		var ret string
		return ret
	}
	return *o.TransactionId.Get()
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetTransactionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TransactionId.Get(), o.TransactionId.IsSet()
}

// HasTransactionId returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasTransactionId() bool {
	if o != nil && o.TransactionId.IsSet() {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given NullableString and assigns it to the TransactionId field.
func (o *MicrosoftGraphEvent) SetTransactionId(v string) {
	o.TransactionId.Set(&v)
}
// SetTransactionIdNil sets the value for TransactionId to be an explicit nil
func (o *MicrosoftGraphEvent) SetTransactionIdNil() {
	o.TransactionId.Set(nil)
}

// UnsetTransactionId ensures that no value is present for TransactionId, not even an explicit nil
func (o *MicrosoftGraphEvent) UnsetTransactionId() {
	o.TransactionId.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetType() AnyOfmicrosoftGraphEventType {
	if o == nil  {
		var ret AnyOfmicrosoftGraphEventType
		return ret
	}
	return o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetTypeOk() (*AnyOfmicrosoftGraphEventType, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return &o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given AnyOfmicrosoftGraphEventType and assigns it to the Type field.
func (o *MicrosoftGraphEvent) SetType(v AnyOfmicrosoftGraphEventType) {
	o.Type = v
}

// GetWebLink returns the WebLink field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetWebLink() string {
	if o == nil || o.WebLink.Get() == nil {
		var ret string
		return ret
	}
	return *o.WebLink.Get()
}

// GetWebLinkOk returns a tuple with the WebLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetWebLinkOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.WebLink.Get(), o.WebLink.IsSet()
}

// HasWebLink returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasWebLink() bool {
	if o != nil && o.WebLink.IsSet() {
		return true
	}

	return false
}

// SetWebLink gets a reference to the given NullableString and assigns it to the WebLink field.
func (o *MicrosoftGraphEvent) SetWebLink(v string) {
	o.WebLink.Set(&v)
}
// SetWebLinkNil sets the value for WebLink to be an explicit nil
func (o *MicrosoftGraphEvent) SetWebLinkNil() {
	o.WebLink.Set(nil)
}

// UnsetWebLink ensures that no value is present for WebLink, not even an explicit nil
func (o *MicrosoftGraphEvent) UnsetWebLink() {
	o.WebLink.Unset()
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *MicrosoftGraphEvent) GetAttachments() []MicrosoftGraphAttachment {
	if o == nil || o.Attachments == nil {
		var ret []MicrosoftGraphAttachment
		return ret
	}
	return *o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetAttachmentsOk() (*[]MicrosoftGraphAttachment, bool) {
	if o == nil || o.Attachments == nil {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasAttachments() bool {
	if o != nil && o.Attachments != nil {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []MicrosoftGraphAttachment and assigns it to the Attachments field.
func (o *MicrosoftGraphEvent) SetAttachments(v []MicrosoftGraphAttachment) {
	o.Attachments = &v
}

// GetCalendar returns the Calendar field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEvent) GetCalendar() AnyOfmicrosoftGraphCalendar {
	if o == nil  {
		var ret AnyOfmicrosoftGraphCalendar
		return ret
	}
	return o.Calendar
}

// GetCalendarOk returns a tuple with the Calendar field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEvent) GetCalendarOk() (*AnyOfmicrosoftGraphCalendar, bool) {
	if o == nil || o.Calendar == nil {
		return nil, false
	}
	return &o.Calendar, true
}

// HasCalendar returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasCalendar() bool {
	if o != nil && o.Calendar != nil {
		return true
	}

	return false
}

// SetCalendar gets a reference to the given AnyOfmicrosoftGraphCalendar and assigns it to the Calendar field.
func (o *MicrosoftGraphEvent) SetCalendar(v AnyOfmicrosoftGraphCalendar) {
	o.Calendar = v
}

// GetExtensions returns the Extensions field value if set, zero value otherwise.
func (o *MicrosoftGraphEvent) GetExtensions() []MicrosoftGraphExtension {
	if o == nil || o.Extensions == nil {
		var ret []MicrosoftGraphExtension
		return ret
	}
	return *o.Extensions
}

// GetExtensionsOk returns a tuple with the Extensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetExtensionsOk() (*[]MicrosoftGraphExtension, bool) {
	if o == nil || o.Extensions == nil {
		return nil, false
	}
	return o.Extensions, true
}

// HasExtensions returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasExtensions() bool {
	if o != nil && o.Extensions != nil {
		return true
	}

	return false
}

// SetExtensions gets a reference to the given []MicrosoftGraphExtension and assigns it to the Extensions field.
func (o *MicrosoftGraphEvent) SetExtensions(v []MicrosoftGraphExtension) {
	o.Extensions = &v
}

// GetInstances returns the Instances field value if set, zero value otherwise.
func (o *MicrosoftGraphEvent) GetInstances() []MicrosoftGraphEvent {
	if o == nil || o.Instances == nil {
		var ret []MicrosoftGraphEvent
		return ret
	}
	return *o.Instances
}

// GetInstancesOk returns a tuple with the Instances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetInstancesOk() (*[]MicrosoftGraphEvent, bool) {
	if o == nil || o.Instances == nil {
		return nil, false
	}
	return o.Instances, true
}

// HasInstances returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasInstances() bool {
	if o != nil && o.Instances != nil {
		return true
	}

	return false
}

// SetInstances gets a reference to the given []MicrosoftGraphEvent and assigns it to the Instances field.
func (o *MicrosoftGraphEvent) SetInstances(v []MicrosoftGraphEvent) {
	o.Instances = &v
}

// GetMultiValueExtendedProperties returns the MultiValueExtendedProperties field value if set, zero value otherwise.
func (o *MicrosoftGraphEvent) GetMultiValueExtendedProperties() []MicrosoftGraphMultiValueLegacyExtendedProperty {
	if o == nil || o.MultiValueExtendedProperties == nil {
		var ret []MicrosoftGraphMultiValueLegacyExtendedProperty
		return ret
	}
	return *o.MultiValueExtendedProperties
}

// GetMultiValueExtendedPropertiesOk returns a tuple with the MultiValueExtendedProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetMultiValueExtendedPropertiesOk() (*[]MicrosoftGraphMultiValueLegacyExtendedProperty, bool) {
	if o == nil || o.MultiValueExtendedProperties == nil {
		return nil, false
	}
	return o.MultiValueExtendedProperties, true
}

// HasMultiValueExtendedProperties returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasMultiValueExtendedProperties() bool {
	if o != nil && o.MultiValueExtendedProperties != nil {
		return true
	}

	return false
}

// SetMultiValueExtendedProperties gets a reference to the given []MicrosoftGraphMultiValueLegacyExtendedProperty and assigns it to the MultiValueExtendedProperties field.
func (o *MicrosoftGraphEvent) SetMultiValueExtendedProperties(v []MicrosoftGraphMultiValueLegacyExtendedProperty) {
	o.MultiValueExtendedProperties = &v
}

// GetSingleValueExtendedProperties returns the SingleValueExtendedProperties field value if set, zero value otherwise.
func (o *MicrosoftGraphEvent) GetSingleValueExtendedProperties() []MicrosoftGraphSingleValueLegacyExtendedProperty {
	if o == nil || o.SingleValueExtendedProperties == nil {
		var ret []MicrosoftGraphSingleValueLegacyExtendedProperty
		return ret
	}
	return *o.SingleValueExtendedProperties
}

// GetSingleValueExtendedPropertiesOk returns a tuple with the SingleValueExtendedProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetSingleValueExtendedPropertiesOk() (*[]MicrosoftGraphSingleValueLegacyExtendedProperty, bool) {
	if o == nil || o.SingleValueExtendedProperties == nil {
		return nil, false
	}
	return o.SingleValueExtendedProperties, true
}

// HasSingleValueExtendedProperties returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasSingleValueExtendedProperties() bool {
	if o != nil && o.SingleValueExtendedProperties != nil {
		return true
	}

	return false
}

// SetSingleValueExtendedProperties gets a reference to the given []MicrosoftGraphSingleValueLegacyExtendedProperty and assigns it to the SingleValueExtendedProperties field.
func (o *MicrosoftGraphEvent) SetSingleValueExtendedProperties(v []MicrosoftGraphSingleValueLegacyExtendedProperty) {
	o.SingleValueExtendedProperties = &v
}

func (o MicrosoftGraphEvent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Categories != nil {
		toSerialize["categories"] = o.Categories
	}
	if o.ChangeKey.IsSet() {
		toSerialize["changeKey"] = o.ChangeKey.Get()
	}
	if o.CreatedDateTime.IsSet() {
		toSerialize["createdDateTime"] = o.CreatedDateTime.Get()
	}
	if o.LastModifiedDateTime.IsSet() {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime.Get()
	}
	if o.AllowNewTimeProposals.IsSet() {
		toSerialize["allowNewTimeProposals"] = o.AllowNewTimeProposals.Get()
	}
	if o.Attendees != nil {
		toSerialize["attendees"] = o.Attendees
	}
	if o.Body != nil {
		toSerialize["body"] = o.Body
	}
	if o.BodyPreview.IsSet() {
		toSerialize["bodyPreview"] = o.BodyPreview.Get()
	}
	if o.End != nil {
		toSerialize["end"] = o.End
	}
	if o.HasAttachments.IsSet() {
		toSerialize["hasAttachments"] = o.HasAttachments.Get()
	}
	if o.HideAttendees.IsSet() {
		toSerialize["hideAttendees"] = o.HideAttendees.Get()
	}
	if o.ICalUId.IsSet() {
		toSerialize["iCalUId"] = o.ICalUId.Get()
	}
	if o.Importance != nil {
		toSerialize["importance"] = o.Importance
	}
	if o.IsAllDay.IsSet() {
		toSerialize["isAllDay"] = o.IsAllDay.Get()
	}
	if o.IsCancelled.IsSet() {
		toSerialize["isCancelled"] = o.IsCancelled.Get()
	}
	if o.IsDraft.IsSet() {
		toSerialize["isDraft"] = o.IsDraft.Get()
	}
	if o.IsOnlineMeeting.IsSet() {
		toSerialize["isOnlineMeeting"] = o.IsOnlineMeeting.Get()
	}
	if o.IsOrganizer.IsSet() {
		toSerialize["isOrganizer"] = o.IsOrganizer.Get()
	}
	if o.IsReminderOn.IsSet() {
		toSerialize["isReminderOn"] = o.IsReminderOn.Get()
	}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.Locations != nil {
		toSerialize["locations"] = o.Locations
	}
	if o.OnlineMeeting != nil {
		toSerialize["onlineMeeting"] = o.OnlineMeeting
	}
	if o.OnlineMeetingProvider != nil {
		toSerialize["onlineMeetingProvider"] = o.OnlineMeetingProvider
	}
	if o.OnlineMeetingUrl.IsSet() {
		toSerialize["onlineMeetingUrl"] = o.OnlineMeetingUrl.Get()
	}
	if o.Organizer != nil {
		toSerialize["organizer"] = o.Organizer
	}
	if o.OriginalEndTimeZone.IsSet() {
		toSerialize["originalEndTimeZone"] = o.OriginalEndTimeZone.Get()
	}
	if o.OriginalStart.IsSet() {
		toSerialize["originalStart"] = o.OriginalStart.Get()
	}
	if o.OriginalStartTimeZone.IsSet() {
		toSerialize["originalStartTimeZone"] = o.OriginalStartTimeZone.Get()
	}
	if o.Recurrence != nil {
		toSerialize["recurrence"] = o.Recurrence
	}
	if o.ReminderMinutesBeforeStart.IsSet() {
		toSerialize["reminderMinutesBeforeStart"] = o.ReminderMinutesBeforeStart.Get()
	}
	if o.ResponseRequested.IsSet() {
		toSerialize["responseRequested"] = o.ResponseRequested.Get()
	}
	if o.ResponseStatus != nil {
		toSerialize["responseStatus"] = o.ResponseStatus
	}
	if o.Sensitivity != nil {
		toSerialize["sensitivity"] = o.Sensitivity
	}
	if o.SeriesMasterId.IsSet() {
		toSerialize["seriesMasterId"] = o.SeriesMasterId.Get()
	}
	if o.ShowAs != nil {
		toSerialize["showAs"] = o.ShowAs
	}
	if o.Start != nil {
		toSerialize["start"] = o.Start
	}
	if o.Subject.IsSet() {
		toSerialize["subject"] = o.Subject.Get()
	}
	if o.TransactionId.IsSet() {
		toSerialize["transactionId"] = o.TransactionId.Get()
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.WebLink.IsSet() {
		toSerialize["webLink"] = o.WebLink.Get()
	}
	if o.Attachments != nil {
		toSerialize["attachments"] = o.Attachments
	}
	if o.Calendar != nil {
		toSerialize["calendar"] = o.Calendar
	}
	if o.Extensions != nil {
		toSerialize["extensions"] = o.Extensions
	}
	if o.Instances != nil {
		toSerialize["instances"] = o.Instances
	}
	if o.MultiValueExtendedProperties != nil {
		toSerialize["multiValueExtendedProperties"] = o.MultiValueExtendedProperties
	}
	if o.SingleValueExtendedProperties != nil {
		toSerialize["singleValueExtendedProperties"] = o.SingleValueExtendedProperties
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphEvent struct {
	value *MicrosoftGraphEvent
	isSet bool
}

func (v NullableMicrosoftGraphEvent) Get() *MicrosoftGraphEvent {
	return v.value
}

func (v *NullableMicrosoftGraphEvent) Set(val *MicrosoftGraphEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphEvent(val *MicrosoftGraphEvent) *NullableMicrosoftGraphEvent {
	return &NullableMicrosoftGraphEvent{value: val, isSet: true}
}

func (v NullableMicrosoftGraphEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


