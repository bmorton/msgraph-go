/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphColumnDefinition struct for MicrosoftGraphColumnDefinition
type MicrosoftGraphColumnDefinition struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// This column stores boolean values.
	Boolean AnyOfobject `json:"boolean,omitempty"`
	// This column's data is calculated based on other columns.
	Calculated AnyOfmicrosoftGraphCalculatedColumn `json:"calculated,omitempty"`
	// This column stores data from a list of choices.
	Choice AnyOfmicrosoftGraphChoiceColumn `json:"choice,omitempty"`
	// For site columns, the name of the group this column belongs to. Helps organize related columns.
	ColumnGroup NullableString `json:"columnGroup,omitempty"`
	// This column stores content approval status.
	ContentApprovalStatus AnyOfobject `json:"contentApprovalStatus,omitempty"`
	// This column stores currency values.
	Currency AnyOfmicrosoftGraphCurrencyColumn `json:"currency,omitempty"`
	// This column stores DateTime values.
	DateTime AnyOfmicrosoftGraphDateTimeColumn `json:"dateTime,omitempty"`
	// The default value for this column.
	DefaultValue AnyOfmicrosoftGraphDefaultColumnValue `json:"defaultValue,omitempty"`
	// The user-facing description of the column.
	Description NullableString `json:"description,omitempty"`
	// The user-facing name of the column.
	DisplayName NullableString `json:"displayName,omitempty"`
	// If true, no two list items may have the same value for this column.
	EnforceUniqueValues NullableBool `json:"enforceUniqueValues,omitempty"`
	// This column stores a geolocation.
	Geolocation AnyOfobject `json:"geolocation,omitempty"`
	// Specifies whether the column is displayed in the user interface.
	Hidden NullableBool `json:"hidden,omitempty"`
	// This column stores hyperlink or picture values.
	HyperlinkOrPicture AnyOfmicrosoftGraphHyperlinkOrPictureColumn `json:"hyperlinkOrPicture,omitempty"`
	// Specifies whether the column values can be used for sorting and searching.
	Indexed NullableBool `json:"indexed,omitempty"`
	// Indicates whether this column can be deleted.
	IsDeletable NullableBool `json:"isDeletable,omitempty"`
	// Indicates whether values in the column can be reordered. Read-only.
	IsReorderable NullableBool `json:"isReorderable,omitempty"`
	// Specifies whether the column can be changed.
	IsSealed NullableBool `json:"isSealed,omitempty"`
	// This column's data is looked up from another source in the site.
	Lookup AnyOfmicrosoftGraphLookupColumn `json:"lookup,omitempty"`
	// The API-facing name of the column as it appears in the [fields][] on a [listItem][]. For the user-facing name, see displayName.
	Name NullableString `json:"name,omitempty"`
	// This column stores number values.
	Number AnyOfmicrosoftGraphNumberColumn `json:"number,omitempty"`
	// This column stores Person or Group values.
	PersonOrGroup AnyOfmicrosoftGraphPersonOrGroupColumn `json:"personOrGroup,omitempty"`
	// If 'true', changes to this column will be propagated to lists that implement the column.
	PropagateChanges NullableBool `json:"propagateChanges,omitempty"`
	// Specifies whether the column values can be modified.
	ReadOnly NullableBool `json:"readOnly,omitempty"`
	// Specifies whether the column value isn't optional.
	Required NullableBool `json:"required,omitempty"`
	// This column stores taxonomy terms.
	Term AnyOfmicrosoftGraphTermColumn `json:"term,omitempty"`
	// This column stores text values.
	Text AnyOfmicrosoftGraphTextColumn `json:"text,omitempty"`
	// This column stores thumbnail values.
	Thumbnail AnyOfobject `json:"thumbnail,omitempty"`
	// For site columns, the type of column. Read-only.
	Type AnyOfmicrosoftGraphColumnTypes `json:"type,omitempty"`
	// This column stores validation formula and message for the column.
	Validation AnyOfmicrosoftGraphColumnValidation `json:"validation,omitempty"`
	// The source column for the content type column.
	SourceColumn AnyOfmicrosoftGraphColumnDefinition `json:"sourceColumn,omitempty"`
}

// NewMicrosoftGraphColumnDefinition instantiates a new MicrosoftGraphColumnDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphColumnDefinition() *MicrosoftGraphColumnDefinition {
	this := MicrosoftGraphColumnDefinition{}
	return &this
}

// NewMicrosoftGraphColumnDefinitionWithDefaults instantiates a new MicrosoftGraphColumnDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphColumnDefinitionWithDefaults() *MicrosoftGraphColumnDefinition {
	this := MicrosoftGraphColumnDefinition{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphColumnDefinition) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphColumnDefinition) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphColumnDefinition) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphColumnDefinition) SetId(v string) {
	o.Id = &v
}

// GetBoolean returns the Boolean field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphColumnDefinition) GetBoolean() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Boolean
}

// GetBooleanOk returns a tuple with the Boolean field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphColumnDefinition) GetBooleanOk() (*AnyOfobject, bool) {
	if o == nil || o.Boolean == nil {
		return nil, false
	}
	return &o.Boolean, true
}

// HasBoolean returns a boolean if a field has been set.
func (o *MicrosoftGraphColumnDefinition) HasBoolean() bool {
	if o != nil && o.Boolean != nil {
		return true
	}

	return false
}

// SetBoolean gets a reference to the given AnyOfobject and assigns it to the Boolean field.
func (o *MicrosoftGraphColumnDefinition) SetBoolean(v AnyOfobject) {
	o.Boolean = v
}

// GetCalculated returns the Calculated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphColumnDefinition) GetCalculated() AnyOfmicrosoftGraphCalculatedColumn {
	if o == nil  {
		var ret AnyOfmicrosoftGraphCalculatedColumn
		return ret
	}
	return o.Calculated
}

// GetCalculatedOk returns a tuple with the Calculated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphColumnDefinition) GetCalculatedOk() (*AnyOfmicrosoftGraphCalculatedColumn, bool) {
	if o == nil || o.Calculated == nil {
		return nil, false
	}
	return &o.Calculated, true
}

// HasCalculated returns a boolean if a field has been set.
func (o *MicrosoftGraphColumnDefinition) HasCalculated() bool {
	if o != nil && o.Calculated != nil {
		return true
	}

	return false
}

// SetCalculated gets a reference to the given AnyOfmicrosoftGraphCalculatedColumn and assigns it to the Calculated field.
func (o *MicrosoftGraphColumnDefinition) SetCalculated(v AnyOfmicrosoftGraphCalculatedColumn) {
	o.Calculated = v
}

// GetChoice returns the Choice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphColumnDefinition) GetChoice() AnyOfmicrosoftGraphChoiceColumn {
	if o == nil  {
		var ret AnyOfmicrosoftGraphChoiceColumn
		return ret
	}
	return o.Choice
}

// GetChoiceOk returns a tuple with the Choice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphColumnDefinition) GetChoiceOk() (*AnyOfmicrosoftGraphChoiceColumn, bool) {
	if o == nil || o.Choice == nil {
		return nil, false
	}
	return &o.Choice, true
}

// HasChoice returns a boolean if a field has been set.
func (o *MicrosoftGraphColumnDefinition) HasChoice() bool {
	if o != nil && o.Choice != nil {
		return true
	}

	return false
}

// SetChoice gets a reference to the given AnyOfmicrosoftGraphChoiceColumn and assigns it to the Choice field.
func (o *MicrosoftGraphColumnDefinition) SetChoice(v AnyOfmicrosoftGraphChoiceColumn) {
	o.Choice = v
}

// GetColumnGroup returns the ColumnGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphColumnDefinition) GetColumnGroup() string {
	if o == nil || o.ColumnGroup.Get() == nil {
		var ret string
		return ret
	}
	return *o.ColumnGroup.Get()
}

// GetColumnGroupOk returns a tuple with the ColumnGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphColumnDefinition) GetColumnGroupOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ColumnGroup.Get(), o.ColumnGroup.IsSet()
}

// HasColumnGroup returns a boolean if a field has been set.
func (o *MicrosoftGraphColumnDefinition) HasColumnGroup() bool {
	if o != nil && o.ColumnGroup.IsSet() {
		return true
	}

	return false
}

// SetColumnGroup gets a reference to the given NullableString and assigns it to the ColumnGroup field.
func (o *MicrosoftGraphColumnDefinition) SetColumnGroup(v string) {
	o.ColumnGroup.Set(&v)
}
// SetColumnGroupNil sets the value for ColumnGroup to be an explicit nil
func (o *MicrosoftGraphColumnDefinition) SetColumnGroupNil() {
	o.ColumnGroup.Set(nil)
}

// UnsetColumnGroup ensures that no value is present for ColumnGroup, not even an explicit nil
func (o *MicrosoftGraphColumnDefinition) UnsetColumnGroup() {
	o.ColumnGroup.Unset()
}

// GetContentApprovalStatus returns the ContentApprovalStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphColumnDefinition) GetContentApprovalStatus() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.ContentApprovalStatus
}

// GetContentApprovalStatusOk returns a tuple with the ContentApprovalStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphColumnDefinition) GetContentApprovalStatusOk() (*AnyOfobject, bool) {
	if o == nil || o.ContentApprovalStatus == nil {
		return nil, false
	}
	return &o.ContentApprovalStatus, true
}

// HasContentApprovalStatus returns a boolean if a field has been set.
func (o *MicrosoftGraphColumnDefinition) HasContentApprovalStatus() bool {
	if o != nil && o.ContentApprovalStatus != nil {
		return true
	}

	return false
}

// SetContentApprovalStatus gets a reference to the given AnyOfobject and assigns it to the ContentApprovalStatus field.
func (o *MicrosoftGraphColumnDefinition) SetContentApprovalStatus(v AnyOfobject) {
	o.ContentApprovalStatus = v
}

// GetCurrency returns the Currency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphColumnDefinition) GetCurrency() AnyOfmicrosoftGraphCurrencyColumn {
	if o == nil  {
		var ret AnyOfmicrosoftGraphCurrencyColumn
		return ret
	}
	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphColumnDefinition) GetCurrencyOk() (*AnyOfmicrosoftGraphCurrencyColumn, bool) {
	if o == nil || o.Currency == nil {
		return nil, false
	}
	return &o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *MicrosoftGraphColumnDefinition) HasCurrency() bool {
	if o != nil && o.Currency != nil {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given AnyOfmicrosoftGraphCurrencyColumn and assigns it to the Currency field.
func (o *MicrosoftGraphColumnDefinition) SetCurrency(v AnyOfmicrosoftGraphCurrencyColumn) {
	o.Currency = v
}

// GetDateTime returns the DateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphColumnDefinition) GetDateTime() AnyOfmicrosoftGraphDateTimeColumn {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDateTimeColumn
		return ret
	}
	return o.DateTime
}

// GetDateTimeOk returns a tuple with the DateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphColumnDefinition) GetDateTimeOk() (*AnyOfmicrosoftGraphDateTimeColumn, bool) {
	if o == nil || o.DateTime == nil {
		return nil, false
	}
	return &o.DateTime, true
}

// HasDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphColumnDefinition) HasDateTime() bool {
	if o != nil && o.DateTime != nil {
		return true
	}

	return false
}

// SetDateTime gets a reference to the given AnyOfmicrosoftGraphDateTimeColumn and assigns it to the DateTime field.
func (o *MicrosoftGraphColumnDefinition) SetDateTime(v AnyOfmicrosoftGraphDateTimeColumn) {
	o.DateTime = v
}

// GetDefaultValue returns the DefaultValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphColumnDefinition) GetDefaultValue() AnyOfmicrosoftGraphDefaultColumnValue {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDefaultColumnValue
		return ret
	}
	return o.DefaultValue
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphColumnDefinition) GetDefaultValueOk() (*AnyOfmicrosoftGraphDefaultColumnValue, bool) {
	if o == nil || o.DefaultValue == nil {
		return nil, false
	}
	return &o.DefaultValue, true
}

// HasDefaultValue returns a boolean if a field has been set.
func (o *MicrosoftGraphColumnDefinition) HasDefaultValue() bool {
	if o != nil && o.DefaultValue != nil {
		return true
	}

	return false
}

// SetDefaultValue gets a reference to the given AnyOfmicrosoftGraphDefaultColumnValue and assigns it to the DefaultValue field.
func (o *MicrosoftGraphColumnDefinition) SetDefaultValue(v AnyOfmicrosoftGraphDefaultColumnValue) {
	o.DefaultValue = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphColumnDefinition) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphColumnDefinition) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *MicrosoftGraphColumnDefinition) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *MicrosoftGraphColumnDefinition) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *MicrosoftGraphColumnDefinition) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *MicrosoftGraphColumnDefinition) UnsetDescription() {
	o.Description.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphColumnDefinition) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphColumnDefinition) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphColumnDefinition) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *MicrosoftGraphColumnDefinition) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *MicrosoftGraphColumnDefinition) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *MicrosoftGraphColumnDefinition) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetEnforceUniqueValues returns the EnforceUniqueValues field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphColumnDefinition) GetEnforceUniqueValues() bool {
	if o == nil || o.EnforceUniqueValues.Get() == nil {
		var ret bool
		return ret
	}
	return *o.EnforceUniqueValues.Get()
}

// GetEnforceUniqueValuesOk returns a tuple with the EnforceUniqueValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphColumnDefinition) GetEnforceUniqueValuesOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EnforceUniqueValues.Get(), o.EnforceUniqueValues.IsSet()
}

// HasEnforceUniqueValues returns a boolean if a field has been set.
func (o *MicrosoftGraphColumnDefinition) HasEnforceUniqueValues() bool {
	if o != nil && o.EnforceUniqueValues.IsSet() {
		return true
	}

	return false
}

// SetEnforceUniqueValues gets a reference to the given NullableBool and assigns it to the EnforceUniqueValues field.
func (o *MicrosoftGraphColumnDefinition) SetEnforceUniqueValues(v bool) {
	o.EnforceUniqueValues.Set(&v)
}
// SetEnforceUniqueValuesNil sets the value for EnforceUniqueValues to be an explicit nil
func (o *MicrosoftGraphColumnDefinition) SetEnforceUniqueValuesNil() {
	o.EnforceUniqueValues.Set(nil)
}

// UnsetEnforceUniqueValues ensures that no value is present for EnforceUniqueValues, not even an explicit nil
func (o *MicrosoftGraphColumnDefinition) UnsetEnforceUniqueValues() {
	o.EnforceUniqueValues.Unset()
}

// GetGeolocation returns the Geolocation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphColumnDefinition) GetGeolocation() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Geolocation
}

// GetGeolocationOk returns a tuple with the Geolocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphColumnDefinition) GetGeolocationOk() (*AnyOfobject, bool) {
	if o == nil || o.Geolocation == nil {
		return nil, false
	}
	return &o.Geolocation, true
}

// HasGeolocation returns a boolean if a field has been set.
func (o *MicrosoftGraphColumnDefinition) HasGeolocation() bool {
	if o != nil && o.Geolocation != nil {
		return true
	}

	return false
}

// SetGeolocation gets a reference to the given AnyOfobject and assigns it to the Geolocation field.
func (o *MicrosoftGraphColumnDefinition) SetGeolocation(v AnyOfobject) {
	o.Geolocation = v
}

// GetHidden returns the Hidden field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphColumnDefinition) GetHidden() bool {
	if o == nil || o.Hidden.Get() == nil {
		var ret bool
		return ret
	}
	return *o.Hidden.Get()
}

// GetHiddenOk returns a tuple with the Hidden field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphColumnDefinition) GetHiddenOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Hidden.Get(), o.Hidden.IsSet()
}

// HasHidden returns a boolean if a field has been set.
func (o *MicrosoftGraphColumnDefinition) HasHidden() bool {
	if o != nil && o.Hidden.IsSet() {
		return true
	}

	return false
}

// SetHidden gets a reference to the given NullableBool and assigns it to the Hidden field.
func (o *MicrosoftGraphColumnDefinition) SetHidden(v bool) {
	o.Hidden.Set(&v)
}
// SetHiddenNil sets the value for Hidden to be an explicit nil
func (o *MicrosoftGraphColumnDefinition) SetHiddenNil() {
	o.Hidden.Set(nil)
}

// UnsetHidden ensures that no value is present for Hidden, not even an explicit nil
func (o *MicrosoftGraphColumnDefinition) UnsetHidden() {
	o.Hidden.Unset()
}

// GetHyperlinkOrPicture returns the HyperlinkOrPicture field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphColumnDefinition) GetHyperlinkOrPicture() AnyOfmicrosoftGraphHyperlinkOrPictureColumn {
	if o == nil  {
		var ret AnyOfmicrosoftGraphHyperlinkOrPictureColumn
		return ret
	}
	return o.HyperlinkOrPicture
}

// GetHyperlinkOrPictureOk returns a tuple with the HyperlinkOrPicture field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphColumnDefinition) GetHyperlinkOrPictureOk() (*AnyOfmicrosoftGraphHyperlinkOrPictureColumn, bool) {
	if o == nil || o.HyperlinkOrPicture == nil {
		return nil, false
	}
	return &o.HyperlinkOrPicture, true
}

// HasHyperlinkOrPicture returns a boolean if a field has been set.
func (o *MicrosoftGraphColumnDefinition) HasHyperlinkOrPicture() bool {
	if o != nil && o.HyperlinkOrPicture != nil {
		return true
	}

	return false
}

// SetHyperlinkOrPicture gets a reference to the given AnyOfmicrosoftGraphHyperlinkOrPictureColumn and assigns it to the HyperlinkOrPicture field.
func (o *MicrosoftGraphColumnDefinition) SetHyperlinkOrPicture(v AnyOfmicrosoftGraphHyperlinkOrPictureColumn) {
	o.HyperlinkOrPicture = v
}

// GetIndexed returns the Indexed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphColumnDefinition) GetIndexed() bool {
	if o == nil || o.Indexed.Get() == nil {
		var ret bool
		return ret
	}
	return *o.Indexed.Get()
}

// GetIndexedOk returns a tuple with the Indexed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphColumnDefinition) GetIndexedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Indexed.Get(), o.Indexed.IsSet()
}

// HasIndexed returns a boolean if a field has been set.
func (o *MicrosoftGraphColumnDefinition) HasIndexed() bool {
	if o != nil && o.Indexed.IsSet() {
		return true
	}

	return false
}

// SetIndexed gets a reference to the given NullableBool and assigns it to the Indexed field.
func (o *MicrosoftGraphColumnDefinition) SetIndexed(v bool) {
	o.Indexed.Set(&v)
}
// SetIndexedNil sets the value for Indexed to be an explicit nil
func (o *MicrosoftGraphColumnDefinition) SetIndexedNil() {
	o.Indexed.Set(nil)
}

// UnsetIndexed ensures that no value is present for Indexed, not even an explicit nil
func (o *MicrosoftGraphColumnDefinition) UnsetIndexed() {
	o.Indexed.Unset()
}

// GetIsDeletable returns the IsDeletable field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphColumnDefinition) GetIsDeletable() bool {
	if o == nil || o.IsDeletable.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsDeletable.Get()
}

// GetIsDeletableOk returns a tuple with the IsDeletable field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphColumnDefinition) GetIsDeletableOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsDeletable.Get(), o.IsDeletable.IsSet()
}

// HasIsDeletable returns a boolean if a field has been set.
func (o *MicrosoftGraphColumnDefinition) HasIsDeletable() bool {
	if o != nil && o.IsDeletable.IsSet() {
		return true
	}

	return false
}

// SetIsDeletable gets a reference to the given NullableBool and assigns it to the IsDeletable field.
func (o *MicrosoftGraphColumnDefinition) SetIsDeletable(v bool) {
	o.IsDeletable.Set(&v)
}
// SetIsDeletableNil sets the value for IsDeletable to be an explicit nil
func (o *MicrosoftGraphColumnDefinition) SetIsDeletableNil() {
	o.IsDeletable.Set(nil)
}

// UnsetIsDeletable ensures that no value is present for IsDeletable, not even an explicit nil
func (o *MicrosoftGraphColumnDefinition) UnsetIsDeletable() {
	o.IsDeletable.Unset()
}

// GetIsReorderable returns the IsReorderable field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphColumnDefinition) GetIsReorderable() bool {
	if o == nil || o.IsReorderable.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsReorderable.Get()
}

// GetIsReorderableOk returns a tuple with the IsReorderable field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphColumnDefinition) GetIsReorderableOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsReorderable.Get(), o.IsReorderable.IsSet()
}

// HasIsReorderable returns a boolean if a field has been set.
func (o *MicrosoftGraphColumnDefinition) HasIsReorderable() bool {
	if o != nil && o.IsReorderable.IsSet() {
		return true
	}

	return false
}

// SetIsReorderable gets a reference to the given NullableBool and assigns it to the IsReorderable field.
func (o *MicrosoftGraphColumnDefinition) SetIsReorderable(v bool) {
	o.IsReorderable.Set(&v)
}
// SetIsReorderableNil sets the value for IsReorderable to be an explicit nil
func (o *MicrosoftGraphColumnDefinition) SetIsReorderableNil() {
	o.IsReorderable.Set(nil)
}

// UnsetIsReorderable ensures that no value is present for IsReorderable, not even an explicit nil
func (o *MicrosoftGraphColumnDefinition) UnsetIsReorderable() {
	o.IsReorderable.Unset()
}

// GetIsSealed returns the IsSealed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphColumnDefinition) GetIsSealed() bool {
	if o == nil || o.IsSealed.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsSealed.Get()
}

// GetIsSealedOk returns a tuple with the IsSealed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphColumnDefinition) GetIsSealedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsSealed.Get(), o.IsSealed.IsSet()
}

// HasIsSealed returns a boolean if a field has been set.
func (o *MicrosoftGraphColumnDefinition) HasIsSealed() bool {
	if o != nil && o.IsSealed.IsSet() {
		return true
	}

	return false
}

// SetIsSealed gets a reference to the given NullableBool and assigns it to the IsSealed field.
func (o *MicrosoftGraphColumnDefinition) SetIsSealed(v bool) {
	o.IsSealed.Set(&v)
}
// SetIsSealedNil sets the value for IsSealed to be an explicit nil
func (o *MicrosoftGraphColumnDefinition) SetIsSealedNil() {
	o.IsSealed.Set(nil)
}

// UnsetIsSealed ensures that no value is present for IsSealed, not even an explicit nil
func (o *MicrosoftGraphColumnDefinition) UnsetIsSealed() {
	o.IsSealed.Unset()
}

// GetLookup returns the Lookup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphColumnDefinition) GetLookup() AnyOfmicrosoftGraphLookupColumn {
	if o == nil  {
		var ret AnyOfmicrosoftGraphLookupColumn
		return ret
	}
	return o.Lookup
}

// GetLookupOk returns a tuple with the Lookup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphColumnDefinition) GetLookupOk() (*AnyOfmicrosoftGraphLookupColumn, bool) {
	if o == nil || o.Lookup == nil {
		return nil, false
	}
	return &o.Lookup, true
}

// HasLookup returns a boolean if a field has been set.
func (o *MicrosoftGraphColumnDefinition) HasLookup() bool {
	if o != nil && o.Lookup != nil {
		return true
	}

	return false
}

// SetLookup gets a reference to the given AnyOfmicrosoftGraphLookupColumn and assigns it to the Lookup field.
func (o *MicrosoftGraphColumnDefinition) SetLookup(v AnyOfmicrosoftGraphLookupColumn) {
	o.Lookup = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphColumnDefinition) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphColumnDefinition) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *MicrosoftGraphColumnDefinition) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *MicrosoftGraphColumnDefinition) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *MicrosoftGraphColumnDefinition) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *MicrosoftGraphColumnDefinition) UnsetName() {
	o.Name.Unset()
}

// GetNumber returns the Number field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphColumnDefinition) GetNumber() AnyOfmicrosoftGraphNumberColumn {
	if o == nil  {
		var ret AnyOfmicrosoftGraphNumberColumn
		return ret
	}
	return o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphColumnDefinition) GetNumberOk() (*AnyOfmicrosoftGraphNumberColumn, bool) {
	if o == nil || o.Number == nil {
		return nil, false
	}
	return &o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *MicrosoftGraphColumnDefinition) HasNumber() bool {
	if o != nil && o.Number != nil {
		return true
	}

	return false
}

// SetNumber gets a reference to the given AnyOfmicrosoftGraphNumberColumn and assigns it to the Number field.
func (o *MicrosoftGraphColumnDefinition) SetNumber(v AnyOfmicrosoftGraphNumberColumn) {
	o.Number = v
}

// GetPersonOrGroup returns the PersonOrGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphColumnDefinition) GetPersonOrGroup() AnyOfmicrosoftGraphPersonOrGroupColumn {
	if o == nil  {
		var ret AnyOfmicrosoftGraphPersonOrGroupColumn
		return ret
	}
	return o.PersonOrGroup
}

// GetPersonOrGroupOk returns a tuple with the PersonOrGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphColumnDefinition) GetPersonOrGroupOk() (*AnyOfmicrosoftGraphPersonOrGroupColumn, bool) {
	if o == nil || o.PersonOrGroup == nil {
		return nil, false
	}
	return &o.PersonOrGroup, true
}

// HasPersonOrGroup returns a boolean if a field has been set.
func (o *MicrosoftGraphColumnDefinition) HasPersonOrGroup() bool {
	if o != nil && o.PersonOrGroup != nil {
		return true
	}

	return false
}

// SetPersonOrGroup gets a reference to the given AnyOfmicrosoftGraphPersonOrGroupColumn and assigns it to the PersonOrGroup field.
func (o *MicrosoftGraphColumnDefinition) SetPersonOrGroup(v AnyOfmicrosoftGraphPersonOrGroupColumn) {
	o.PersonOrGroup = v
}

// GetPropagateChanges returns the PropagateChanges field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphColumnDefinition) GetPropagateChanges() bool {
	if o == nil || o.PropagateChanges.Get() == nil {
		var ret bool
		return ret
	}
	return *o.PropagateChanges.Get()
}

// GetPropagateChangesOk returns a tuple with the PropagateChanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphColumnDefinition) GetPropagateChangesOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PropagateChanges.Get(), o.PropagateChanges.IsSet()
}

// HasPropagateChanges returns a boolean if a field has been set.
func (o *MicrosoftGraphColumnDefinition) HasPropagateChanges() bool {
	if o != nil && o.PropagateChanges.IsSet() {
		return true
	}

	return false
}

// SetPropagateChanges gets a reference to the given NullableBool and assigns it to the PropagateChanges field.
func (o *MicrosoftGraphColumnDefinition) SetPropagateChanges(v bool) {
	o.PropagateChanges.Set(&v)
}
// SetPropagateChangesNil sets the value for PropagateChanges to be an explicit nil
func (o *MicrosoftGraphColumnDefinition) SetPropagateChangesNil() {
	o.PropagateChanges.Set(nil)
}

// UnsetPropagateChanges ensures that no value is present for PropagateChanges, not even an explicit nil
func (o *MicrosoftGraphColumnDefinition) UnsetPropagateChanges() {
	o.PropagateChanges.Unset()
}

// GetReadOnly returns the ReadOnly field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphColumnDefinition) GetReadOnly() bool {
	if o == nil || o.ReadOnly.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ReadOnly.Get()
}

// GetReadOnlyOk returns a tuple with the ReadOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphColumnDefinition) GetReadOnlyOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ReadOnly.Get(), o.ReadOnly.IsSet()
}

// HasReadOnly returns a boolean if a field has been set.
func (o *MicrosoftGraphColumnDefinition) HasReadOnly() bool {
	if o != nil && o.ReadOnly.IsSet() {
		return true
	}

	return false
}

// SetReadOnly gets a reference to the given NullableBool and assigns it to the ReadOnly field.
func (o *MicrosoftGraphColumnDefinition) SetReadOnly(v bool) {
	o.ReadOnly.Set(&v)
}
// SetReadOnlyNil sets the value for ReadOnly to be an explicit nil
func (o *MicrosoftGraphColumnDefinition) SetReadOnlyNil() {
	o.ReadOnly.Set(nil)
}

// UnsetReadOnly ensures that no value is present for ReadOnly, not even an explicit nil
func (o *MicrosoftGraphColumnDefinition) UnsetReadOnly() {
	o.ReadOnly.Unset()
}

// GetRequired returns the Required field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphColumnDefinition) GetRequired() bool {
	if o == nil || o.Required.Get() == nil {
		var ret bool
		return ret
	}
	return *o.Required.Get()
}

// GetRequiredOk returns a tuple with the Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphColumnDefinition) GetRequiredOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Required.Get(), o.Required.IsSet()
}

// HasRequired returns a boolean if a field has been set.
func (o *MicrosoftGraphColumnDefinition) HasRequired() bool {
	if o != nil && o.Required.IsSet() {
		return true
	}

	return false
}

// SetRequired gets a reference to the given NullableBool and assigns it to the Required field.
func (o *MicrosoftGraphColumnDefinition) SetRequired(v bool) {
	o.Required.Set(&v)
}
// SetRequiredNil sets the value for Required to be an explicit nil
func (o *MicrosoftGraphColumnDefinition) SetRequiredNil() {
	o.Required.Set(nil)
}

// UnsetRequired ensures that no value is present for Required, not even an explicit nil
func (o *MicrosoftGraphColumnDefinition) UnsetRequired() {
	o.Required.Unset()
}

// GetTerm returns the Term field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphColumnDefinition) GetTerm() AnyOfmicrosoftGraphTermColumn {
	if o == nil  {
		var ret AnyOfmicrosoftGraphTermColumn
		return ret
	}
	return o.Term
}

// GetTermOk returns a tuple with the Term field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphColumnDefinition) GetTermOk() (*AnyOfmicrosoftGraphTermColumn, bool) {
	if o == nil || o.Term == nil {
		return nil, false
	}
	return &o.Term, true
}

// HasTerm returns a boolean if a field has been set.
func (o *MicrosoftGraphColumnDefinition) HasTerm() bool {
	if o != nil && o.Term != nil {
		return true
	}

	return false
}

// SetTerm gets a reference to the given AnyOfmicrosoftGraphTermColumn and assigns it to the Term field.
func (o *MicrosoftGraphColumnDefinition) SetTerm(v AnyOfmicrosoftGraphTermColumn) {
	o.Term = v
}

// GetText returns the Text field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphColumnDefinition) GetText() AnyOfmicrosoftGraphTextColumn {
	if o == nil  {
		var ret AnyOfmicrosoftGraphTextColumn
		return ret
	}
	return o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphColumnDefinition) GetTextOk() (*AnyOfmicrosoftGraphTextColumn, bool) {
	if o == nil || o.Text == nil {
		return nil, false
	}
	return &o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *MicrosoftGraphColumnDefinition) HasText() bool {
	if o != nil && o.Text != nil {
		return true
	}

	return false
}

// SetText gets a reference to the given AnyOfmicrosoftGraphTextColumn and assigns it to the Text field.
func (o *MicrosoftGraphColumnDefinition) SetText(v AnyOfmicrosoftGraphTextColumn) {
	o.Text = v
}

// GetThumbnail returns the Thumbnail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphColumnDefinition) GetThumbnail() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Thumbnail
}

// GetThumbnailOk returns a tuple with the Thumbnail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphColumnDefinition) GetThumbnailOk() (*AnyOfobject, bool) {
	if o == nil || o.Thumbnail == nil {
		return nil, false
	}
	return &o.Thumbnail, true
}

// HasThumbnail returns a boolean if a field has been set.
func (o *MicrosoftGraphColumnDefinition) HasThumbnail() bool {
	if o != nil && o.Thumbnail != nil {
		return true
	}

	return false
}

// SetThumbnail gets a reference to the given AnyOfobject and assigns it to the Thumbnail field.
func (o *MicrosoftGraphColumnDefinition) SetThumbnail(v AnyOfobject) {
	o.Thumbnail = v
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphColumnDefinition) GetType() AnyOfmicrosoftGraphColumnTypes {
	if o == nil  {
		var ret AnyOfmicrosoftGraphColumnTypes
		return ret
	}
	return o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphColumnDefinition) GetTypeOk() (*AnyOfmicrosoftGraphColumnTypes, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return &o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MicrosoftGraphColumnDefinition) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given AnyOfmicrosoftGraphColumnTypes and assigns it to the Type field.
func (o *MicrosoftGraphColumnDefinition) SetType(v AnyOfmicrosoftGraphColumnTypes) {
	o.Type = v
}

// GetValidation returns the Validation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphColumnDefinition) GetValidation() AnyOfmicrosoftGraphColumnValidation {
	if o == nil  {
		var ret AnyOfmicrosoftGraphColumnValidation
		return ret
	}
	return o.Validation
}

// GetValidationOk returns a tuple with the Validation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphColumnDefinition) GetValidationOk() (*AnyOfmicrosoftGraphColumnValidation, bool) {
	if o == nil || o.Validation == nil {
		return nil, false
	}
	return &o.Validation, true
}

// HasValidation returns a boolean if a field has been set.
func (o *MicrosoftGraphColumnDefinition) HasValidation() bool {
	if o != nil && o.Validation != nil {
		return true
	}

	return false
}

// SetValidation gets a reference to the given AnyOfmicrosoftGraphColumnValidation and assigns it to the Validation field.
func (o *MicrosoftGraphColumnDefinition) SetValidation(v AnyOfmicrosoftGraphColumnValidation) {
	o.Validation = v
}

// GetSourceColumn returns the SourceColumn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphColumnDefinition) GetSourceColumn() AnyOfmicrosoftGraphColumnDefinition {
	if o == nil  {
		var ret AnyOfmicrosoftGraphColumnDefinition
		return ret
	}
	return o.SourceColumn
}

// GetSourceColumnOk returns a tuple with the SourceColumn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphColumnDefinition) GetSourceColumnOk() (*AnyOfmicrosoftGraphColumnDefinition, bool) {
	if o == nil || o.SourceColumn == nil {
		return nil, false
	}
	return &o.SourceColumn, true
}

// HasSourceColumn returns a boolean if a field has been set.
func (o *MicrosoftGraphColumnDefinition) HasSourceColumn() bool {
	if o != nil && o.SourceColumn != nil {
		return true
	}

	return false
}

// SetSourceColumn gets a reference to the given AnyOfmicrosoftGraphColumnDefinition and assigns it to the SourceColumn field.
func (o *MicrosoftGraphColumnDefinition) SetSourceColumn(v AnyOfmicrosoftGraphColumnDefinition) {
	o.SourceColumn = v
}

func (o MicrosoftGraphColumnDefinition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Boolean != nil {
		toSerialize["boolean"] = o.Boolean
	}
	if o.Calculated != nil {
		toSerialize["calculated"] = o.Calculated
	}
	if o.Choice != nil {
		toSerialize["choice"] = o.Choice
	}
	if o.ColumnGroup.IsSet() {
		toSerialize["columnGroup"] = o.ColumnGroup.Get()
	}
	if o.ContentApprovalStatus != nil {
		toSerialize["contentApprovalStatus"] = o.ContentApprovalStatus
	}
	if o.Currency != nil {
		toSerialize["currency"] = o.Currency
	}
	if o.DateTime != nil {
		toSerialize["dateTime"] = o.DateTime
	}
	if o.DefaultValue != nil {
		toSerialize["defaultValue"] = o.DefaultValue
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.EnforceUniqueValues.IsSet() {
		toSerialize["enforceUniqueValues"] = o.EnforceUniqueValues.Get()
	}
	if o.Geolocation != nil {
		toSerialize["geolocation"] = o.Geolocation
	}
	if o.Hidden.IsSet() {
		toSerialize["hidden"] = o.Hidden.Get()
	}
	if o.HyperlinkOrPicture != nil {
		toSerialize["hyperlinkOrPicture"] = o.HyperlinkOrPicture
	}
	if o.Indexed.IsSet() {
		toSerialize["indexed"] = o.Indexed.Get()
	}
	if o.IsDeletable.IsSet() {
		toSerialize["isDeletable"] = o.IsDeletable.Get()
	}
	if o.IsReorderable.IsSet() {
		toSerialize["isReorderable"] = o.IsReorderable.Get()
	}
	if o.IsSealed.IsSet() {
		toSerialize["isSealed"] = o.IsSealed.Get()
	}
	if o.Lookup != nil {
		toSerialize["lookup"] = o.Lookup
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Number != nil {
		toSerialize["number"] = o.Number
	}
	if o.PersonOrGroup != nil {
		toSerialize["personOrGroup"] = o.PersonOrGroup
	}
	if o.PropagateChanges.IsSet() {
		toSerialize["propagateChanges"] = o.PropagateChanges.Get()
	}
	if o.ReadOnly.IsSet() {
		toSerialize["readOnly"] = o.ReadOnly.Get()
	}
	if o.Required.IsSet() {
		toSerialize["required"] = o.Required.Get()
	}
	if o.Term != nil {
		toSerialize["term"] = o.Term
	}
	if o.Text != nil {
		toSerialize["text"] = o.Text
	}
	if o.Thumbnail != nil {
		toSerialize["thumbnail"] = o.Thumbnail
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Validation != nil {
		toSerialize["validation"] = o.Validation
	}
	if o.SourceColumn != nil {
		toSerialize["sourceColumn"] = o.SourceColumn
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphColumnDefinition struct {
	value *MicrosoftGraphColumnDefinition
	isSet bool
}

func (v NullableMicrosoftGraphColumnDefinition) Get() *MicrosoftGraphColumnDefinition {
	return v.value
}

func (v *NullableMicrosoftGraphColumnDefinition) Set(val *MicrosoftGraphColumnDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphColumnDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphColumnDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphColumnDefinition(val *MicrosoftGraphColumnDefinition) *NullableMicrosoftGraphColumnDefinition {
	return &NullableMicrosoftGraphColumnDefinition{value: val, isSet: true}
}

func (v NullableMicrosoftGraphColumnDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphColumnDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


