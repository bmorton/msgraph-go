/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphDeviceManagementReports struct for MicrosoftGraphDeviceManagementReports
type MicrosoftGraphDeviceManagementReports struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// Entity representing a job to export a report
	ExportJobs *[]MicrosoftGraphDeviceManagementExportJob `json:"exportJobs,omitempty"`
}

// NewMicrosoftGraphDeviceManagementReports instantiates a new MicrosoftGraphDeviceManagementReports object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphDeviceManagementReports() *MicrosoftGraphDeviceManagementReports {
	this := MicrosoftGraphDeviceManagementReports{}
	return &this
}

// NewMicrosoftGraphDeviceManagementReportsWithDefaults instantiates a new MicrosoftGraphDeviceManagementReports object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphDeviceManagementReportsWithDefaults() *MicrosoftGraphDeviceManagementReports {
	this := MicrosoftGraphDeviceManagementReports{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceManagementReports) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceManagementReports) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceManagementReports) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphDeviceManagementReports) SetId(v string) {
	o.Id = &v
}

// GetExportJobs returns the ExportJobs field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceManagementReports) GetExportJobs() []MicrosoftGraphDeviceManagementExportJob {
	if o == nil || o.ExportJobs == nil {
		var ret []MicrosoftGraphDeviceManagementExportJob
		return ret
	}
	return *o.ExportJobs
}

// GetExportJobsOk returns a tuple with the ExportJobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceManagementReports) GetExportJobsOk() (*[]MicrosoftGraphDeviceManagementExportJob, bool) {
	if o == nil || o.ExportJobs == nil {
		return nil, false
	}
	return o.ExportJobs, true
}

// HasExportJobs returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceManagementReports) HasExportJobs() bool {
	if o != nil && o.ExportJobs != nil {
		return true
	}

	return false
}

// SetExportJobs gets a reference to the given []MicrosoftGraphDeviceManagementExportJob and assigns it to the ExportJobs field.
func (o *MicrosoftGraphDeviceManagementReports) SetExportJobs(v []MicrosoftGraphDeviceManagementExportJob) {
	o.ExportJobs = &v
}

func (o MicrosoftGraphDeviceManagementReports) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ExportJobs != nil {
		toSerialize["exportJobs"] = o.ExportJobs
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphDeviceManagementReports struct {
	value *MicrosoftGraphDeviceManagementReports
	isSet bool
}

func (v NullableMicrosoftGraphDeviceManagementReports) Get() *MicrosoftGraphDeviceManagementReports {
	return v.value
}

func (v *NullableMicrosoftGraphDeviceManagementReports) Set(val *MicrosoftGraphDeviceManagementReports) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphDeviceManagementReports) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphDeviceManagementReports) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphDeviceManagementReports(val *MicrosoftGraphDeviceManagementReports) *NullableMicrosoftGraphDeviceManagementReports {
	return &NullableMicrosoftGraphDeviceManagementReports{value: val, isSet: true}
}

func (v NullableMicrosoftGraphDeviceManagementReports) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphDeviceManagementReports) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


