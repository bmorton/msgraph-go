/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphDeviceManagementExportJob struct for MicrosoftGraphDeviceManagementExportJob
type MicrosoftGraphDeviceManagementExportJob struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// Time that the exported report expires
	ExpirationDateTime *time.Time `json:"expirationDateTime,omitempty"`
	// Filters applied on the report
	Filter NullableString `json:"filter,omitempty"`
	// Format of the exported report. Possible values are: csv, pdf.
	Format AnyOfmicrosoftGraphDeviceManagementReportFileFormat `json:"format,omitempty"`
	// Configures how the requested export job is localized. Possible values are: localizedValuesAsAdditionalColumn, replaceLocalizableValues.
	LocalizationType AnyOfmicrosoftGraphDeviceManagementExportJobLocalizationType `json:"localizationType,omitempty"`
	// Name of the report
	ReportName *string `json:"reportName,omitempty"`
	// Time that the exported report was requested
	RequestDateTime *time.Time `json:"requestDateTime,omitempty"`
	// Columns selected from the report
	Select *[]*string `json:"select,omitempty"`
	// A snapshot is an identifiable subset of the dataset represented by the ReportName. A sessionId or CachedReportConfiguration id can be used here. If a sessionId is specified, Filter, Select, and OrderBy are applied to the data represented by the sessionId. Filter, Select, and OrderBy cannot be specified together with a CachedReportConfiguration id.
	SnapshotId NullableString `json:"snapshotId,omitempty"`
	// Status of the export job. Possible values are: unknown, notStarted, inProgress, completed, failed.
	Status AnyOfmicrosoftGraphDeviceManagementReportStatus `json:"status,omitempty"`
	// Temporary location of the exported report
	Url NullableString `json:"url,omitempty"`
}

// NewMicrosoftGraphDeviceManagementExportJob instantiates a new MicrosoftGraphDeviceManagementExportJob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphDeviceManagementExportJob() *MicrosoftGraphDeviceManagementExportJob {
	this := MicrosoftGraphDeviceManagementExportJob{}
	return &this
}

// NewMicrosoftGraphDeviceManagementExportJobWithDefaults instantiates a new MicrosoftGraphDeviceManagementExportJob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphDeviceManagementExportJobWithDefaults() *MicrosoftGraphDeviceManagementExportJob {
	this := MicrosoftGraphDeviceManagementExportJob{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceManagementExportJob) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceManagementExportJob) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceManagementExportJob) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphDeviceManagementExportJob) SetId(v string) {
	o.Id = &v
}

// GetExpirationDateTime returns the ExpirationDateTime field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceManagementExportJob) GetExpirationDateTime() time.Time {
	if o == nil || o.ExpirationDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.ExpirationDateTime
}

// GetExpirationDateTimeOk returns a tuple with the ExpirationDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceManagementExportJob) GetExpirationDateTimeOk() (*time.Time, bool) {
	if o == nil || o.ExpirationDateTime == nil {
		return nil, false
	}
	return o.ExpirationDateTime, true
}

// HasExpirationDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceManagementExportJob) HasExpirationDateTime() bool {
	if o != nil && o.ExpirationDateTime != nil {
		return true
	}

	return false
}

// SetExpirationDateTime gets a reference to the given time.Time and assigns it to the ExpirationDateTime field.
func (o *MicrosoftGraphDeviceManagementExportJob) SetExpirationDateTime(v time.Time) {
	o.ExpirationDateTime = &v
}

// GetFilter returns the Filter field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDeviceManagementExportJob) GetFilter() string {
	if o == nil || o.Filter.Get() == nil {
		var ret string
		return ret
	}
	return *o.Filter.Get()
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDeviceManagementExportJob) GetFilterOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Filter.Get(), o.Filter.IsSet()
}

// HasFilter returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceManagementExportJob) HasFilter() bool {
	if o != nil && o.Filter.IsSet() {
		return true
	}

	return false
}

// SetFilter gets a reference to the given NullableString and assigns it to the Filter field.
func (o *MicrosoftGraphDeviceManagementExportJob) SetFilter(v string) {
	o.Filter.Set(&v)
}
// SetFilterNil sets the value for Filter to be an explicit nil
func (o *MicrosoftGraphDeviceManagementExportJob) SetFilterNil() {
	o.Filter.Set(nil)
}

// UnsetFilter ensures that no value is present for Filter, not even an explicit nil
func (o *MicrosoftGraphDeviceManagementExportJob) UnsetFilter() {
	o.Filter.Unset()
}

// GetFormat returns the Format field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDeviceManagementExportJob) GetFormat() AnyOfmicrosoftGraphDeviceManagementReportFileFormat {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDeviceManagementReportFileFormat
		return ret
	}
	return o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDeviceManagementExportJob) GetFormatOk() (*AnyOfmicrosoftGraphDeviceManagementReportFileFormat, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return &o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceManagementExportJob) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given AnyOfmicrosoftGraphDeviceManagementReportFileFormat and assigns it to the Format field.
func (o *MicrosoftGraphDeviceManagementExportJob) SetFormat(v AnyOfmicrosoftGraphDeviceManagementReportFileFormat) {
	o.Format = v
}

// GetLocalizationType returns the LocalizationType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDeviceManagementExportJob) GetLocalizationType() AnyOfmicrosoftGraphDeviceManagementExportJobLocalizationType {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDeviceManagementExportJobLocalizationType
		return ret
	}
	return o.LocalizationType
}

// GetLocalizationTypeOk returns a tuple with the LocalizationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDeviceManagementExportJob) GetLocalizationTypeOk() (*AnyOfmicrosoftGraphDeviceManagementExportJobLocalizationType, bool) {
	if o == nil || o.LocalizationType == nil {
		return nil, false
	}
	return &o.LocalizationType, true
}

// HasLocalizationType returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceManagementExportJob) HasLocalizationType() bool {
	if o != nil && o.LocalizationType != nil {
		return true
	}

	return false
}

// SetLocalizationType gets a reference to the given AnyOfmicrosoftGraphDeviceManagementExportJobLocalizationType and assigns it to the LocalizationType field.
func (o *MicrosoftGraphDeviceManagementExportJob) SetLocalizationType(v AnyOfmicrosoftGraphDeviceManagementExportJobLocalizationType) {
	o.LocalizationType = v
}

// GetReportName returns the ReportName field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceManagementExportJob) GetReportName() string {
	if o == nil || o.ReportName == nil {
		var ret string
		return ret
	}
	return *o.ReportName
}

// GetReportNameOk returns a tuple with the ReportName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceManagementExportJob) GetReportNameOk() (*string, bool) {
	if o == nil || o.ReportName == nil {
		return nil, false
	}
	return o.ReportName, true
}

// HasReportName returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceManagementExportJob) HasReportName() bool {
	if o != nil && o.ReportName != nil {
		return true
	}

	return false
}

// SetReportName gets a reference to the given string and assigns it to the ReportName field.
func (o *MicrosoftGraphDeviceManagementExportJob) SetReportName(v string) {
	o.ReportName = &v
}

// GetRequestDateTime returns the RequestDateTime field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceManagementExportJob) GetRequestDateTime() time.Time {
	if o == nil || o.RequestDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.RequestDateTime
}

// GetRequestDateTimeOk returns a tuple with the RequestDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceManagementExportJob) GetRequestDateTimeOk() (*time.Time, bool) {
	if o == nil || o.RequestDateTime == nil {
		return nil, false
	}
	return o.RequestDateTime, true
}

// HasRequestDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceManagementExportJob) HasRequestDateTime() bool {
	if o != nil && o.RequestDateTime != nil {
		return true
	}

	return false
}

// SetRequestDateTime gets a reference to the given time.Time and assigns it to the RequestDateTime field.
func (o *MicrosoftGraphDeviceManagementExportJob) SetRequestDateTime(v time.Time) {
	o.RequestDateTime = &v
}

// GetSelect returns the Select field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceManagementExportJob) GetSelect() []*string {
	if o == nil || o.Select == nil {
		var ret []*string
		return ret
	}
	return *o.Select
}

// GetSelectOk returns a tuple with the Select field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceManagementExportJob) GetSelectOk() (*[]*string, bool) {
	if o == nil || o.Select == nil {
		return nil, false
	}
	return o.Select, true
}

// HasSelect returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceManagementExportJob) HasSelect() bool {
	if o != nil && o.Select != nil {
		return true
	}

	return false
}

// SetSelect gets a reference to the given []*string and assigns it to the Select field.
func (o *MicrosoftGraphDeviceManagementExportJob) SetSelect(v []*string) {
	o.Select = &v
}

// GetSnapshotId returns the SnapshotId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDeviceManagementExportJob) GetSnapshotId() string {
	if o == nil || o.SnapshotId.Get() == nil {
		var ret string
		return ret
	}
	return *o.SnapshotId.Get()
}

// GetSnapshotIdOk returns a tuple with the SnapshotId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDeviceManagementExportJob) GetSnapshotIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SnapshotId.Get(), o.SnapshotId.IsSet()
}

// HasSnapshotId returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceManagementExportJob) HasSnapshotId() bool {
	if o != nil && o.SnapshotId.IsSet() {
		return true
	}

	return false
}

// SetSnapshotId gets a reference to the given NullableString and assigns it to the SnapshotId field.
func (o *MicrosoftGraphDeviceManagementExportJob) SetSnapshotId(v string) {
	o.SnapshotId.Set(&v)
}
// SetSnapshotIdNil sets the value for SnapshotId to be an explicit nil
func (o *MicrosoftGraphDeviceManagementExportJob) SetSnapshotIdNil() {
	o.SnapshotId.Set(nil)
}

// UnsetSnapshotId ensures that no value is present for SnapshotId, not even an explicit nil
func (o *MicrosoftGraphDeviceManagementExportJob) UnsetSnapshotId() {
	o.SnapshotId.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDeviceManagementExportJob) GetStatus() AnyOfmicrosoftGraphDeviceManagementReportStatus {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDeviceManagementReportStatus
		return ret
	}
	return o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDeviceManagementExportJob) GetStatusOk() (*AnyOfmicrosoftGraphDeviceManagementReportStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return &o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceManagementExportJob) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given AnyOfmicrosoftGraphDeviceManagementReportStatus and assigns it to the Status field.
func (o *MicrosoftGraphDeviceManagementExportJob) SetStatus(v AnyOfmicrosoftGraphDeviceManagementReportStatus) {
	o.Status = v
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDeviceManagementExportJob) GetUrl() string {
	if o == nil || o.Url.Get() == nil {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDeviceManagementExportJob) GetUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceManagementExportJob) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *MicrosoftGraphDeviceManagementExportJob) SetUrl(v string) {
	o.Url.Set(&v)
}
// SetUrlNil sets the value for Url to be an explicit nil
func (o *MicrosoftGraphDeviceManagementExportJob) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *MicrosoftGraphDeviceManagementExportJob) UnsetUrl() {
	o.Url.Unset()
}

func (o MicrosoftGraphDeviceManagementExportJob) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ExpirationDateTime != nil {
		toSerialize["expirationDateTime"] = o.ExpirationDateTime
	}
	if o.Filter.IsSet() {
		toSerialize["filter"] = o.Filter.Get()
	}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	if o.LocalizationType != nil {
		toSerialize["localizationType"] = o.LocalizationType
	}
	if o.ReportName != nil {
		toSerialize["reportName"] = o.ReportName
	}
	if o.RequestDateTime != nil {
		toSerialize["requestDateTime"] = o.RequestDateTime
	}
	if o.Select != nil {
		toSerialize["select"] = o.Select
	}
	if o.SnapshotId.IsSet() {
		toSerialize["snapshotId"] = o.SnapshotId.Get()
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphDeviceManagementExportJob struct {
	value *MicrosoftGraphDeviceManagementExportJob
	isSet bool
}

func (v NullableMicrosoftGraphDeviceManagementExportJob) Get() *MicrosoftGraphDeviceManagementExportJob {
	return v.value
}

func (v *NullableMicrosoftGraphDeviceManagementExportJob) Set(val *MicrosoftGraphDeviceManagementExportJob) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphDeviceManagementExportJob) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphDeviceManagementExportJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphDeviceManagementExportJob(val *MicrosoftGraphDeviceManagementExportJob) *NullableMicrosoftGraphDeviceManagementExportJob {
	return &NullableMicrosoftGraphDeviceManagementExportJob{value: val, isSet: true}
}

func (v NullableMicrosoftGraphDeviceManagementExportJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphDeviceManagementExportJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


