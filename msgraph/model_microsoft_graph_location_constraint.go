/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphLocationConstraint struct for MicrosoftGraphLocationConstraint
type MicrosoftGraphLocationConstraint struct {
	// The client requests the service to include in the response a meeting location for the meeting. If this is true and all the resources are busy, findMeetingTimes will not return any meeting time suggestions. If this is false and all the resources are busy, findMeetingTimes would still look for meeting times without locations.
	IsRequired NullableBool `json:"isRequired,omitempty"`
	// Constraint information for one or more locations that the client requests for the meeting.
	Locations *[]*AnyOfmicrosoftGraphLocationConstraintItem `json:"locations,omitempty"`
	// The client requests the service to suggest one or more meeting locations.
	SuggestLocation NullableBool `json:"suggestLocation,omitempty"`
}

// NewMicrosoftGraphLocationConstraint instantiates a new MicrosoftGraphLocationConstraint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphLocationConstraint() *MicrosoftGraphLocationConstraint {
	this := MicrosoftGraphLocationConstraint{}
	return &this
}

// NewMicrosoftGraphLocationConstraintWithDefaults instantiates a new MicrosoftGraphLocationConstraint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphLocationConstraintWithDefaults() *MicrosoftGraphLocationConstraint {
	this := MicrosoftGraphLocationConstraint{}
	return &this
}

// GetIsRequired returns the IsRequired field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphLocationConstraint) GetIsRequired() bool {
	if o == nil || o.IsRequired.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsRequired.Get()
}

// GetIsRequiredOk returns a tuple with the IsRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphLocationConstraint) GetIsRequiredOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsRequired.Get(), o.IsRequired.IsSet()
}

// HasIsRequired returns a boolean if a field has been set.
func (o *MicrosoftGraphLocationConstraint) HasIsRequired() bool {
	if o != nil && o.IsRequired.IsSet() {
		return true
	}

	return false
}

// SetIsRequired gets a reference to the given NullableBool and assigns it to the IsRequired field.
func (o *MicrosoftGraphLocationConstraint) SetIsRequired(v bool) {
	o.IsRequired.Set(&v)
}
// SetIsRequiredNil sets the value for IsRequired to be an explicit nil
func (o *MicrosoftGraphLocationConstraint) SetIsRequiredNil() {
	o.IsRequired.Set(nil)
}

// UnsetIsRequired ensures that no value is present for IsRequired, not even an explicit nil
func (o *MicrosoftGraphLocationConstraint) UnsetIsRequired() {
	o.IsRequired.Unset()
}

// GetLocations returns the Locations field value if set, zero value otherwise.
func (o *MicrosoftGraphLocationConstraint) GetLocations() []*AnyOfmicrosoftGraphLocationConstraintItem {
	if o == nil || o.Locations == nil {
		var ret []*AnyOfmicrosoftGraphLocationConstraintItem
		return ret
	}
	return *o.Locations
}

// GetLocationsOk returns a tuple with the Locations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphLocationConstraint) GetLocationsOk() (*[]*AnyOfmicrosoftGraphLocationConstraintItem, bool) {
	if o == nil || o.Locations == nil {
		return nil, false
	}
	return o.Locations, true
}

// HasLocations returns a boolean if a field has been set.
func (o *MicrosoftGraphLocationConstraint) HasLocations() bool {
	if o != nil && o.Locations != nil {
		return true
	}

	return false
}

// SetLocations gets a reference to the given []*AnyOfmicrosoftGraphLocationConstraintItem and assigns it to the Locations field.
func (o *MicrosoftGraphLocationConstraint) SetLocations(v []*AnyOfmicrosoftGraphLocationConstraintItem) {
	o.Locations = &v
}

// GetSuggestLocation returns the SuggestLocation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphLocationConstraint) GetSuggestLocation() bool {
	if o == nil || o.SuggestLocation.Get() == nil {
		var ret bool
		return ret
	}
	return *o.SuggestLocation.Get()
}

// GetSuggestLocationOk returns a tuple with the SuggestLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphLocationConstraint) GetSuggestLocationOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SuggestLocation.Get(), o.SuggestLocation.IsSet()
}

// HasSuggestLocation returns a boolean if a field has been set.
func (o *MicrosoftGraphLocationConstraint) HasSuggestLocation() bool {
	if o != nil && o.SuggestLocation.IsSet() {
		return true
	}

	return false
}

// SetSuggestLocation gets a reference to the given NullableBool and assigns it to the SuggestLocation field.
func (o *MicrosoftGraphLocationConstraint) SetSuggestLocation(v bool) {
	o.SuggestLocation.Set(&v)
}
// SetSuggestLocationNil sets the value for SuggestLocation to be an explicit nil
func (o *MicrosoftGraphLocationConstraint) SetSuggestLocationNil() {
	o.SuggestLocation.Set(nil)
}

// UnsetSuggestLocation ensures that no value is present for SuggestLocation, not even an explicit nil
func (o *MicrosoftGraphLocationConstraint) UnsetSuggestLocation() {
	o.SuggestLocation.Unset()
}

func (o MicrosoftGraphLocationConstraint) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsRequired.IsSet() {
		toSerialize["isRequired"] = o.IsRequired.Get()
	}
	if o.Locations != nil {
		toSerialize["locations"] = o.Locations
	}
	if o.SuggestLocation.IsSet() {
		toSerialize["suggestLocation"] = o.SuggestLocation.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphLocationConstraint struct {
	value *MicrosoftGraphLocationConstraint
	isSet bool
}

func (v NullableMicrosoftGraphLocationConstraint) Get() *MicrosoftGraphLocationConstraint {
	return v.value
}

func (v *NullableMicrosoftGraphLocationConstraint) Set(val *MicrosoftGraphLocationConstraint) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphLocationConstraint) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphLocationConstraint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphLocationConstraint(val *MicrosoftGraphLocationConstraint) *NullableMicrosoftGraphLocationConstraint {
	return &NullableMicrosoftGraphLocationConstraint{value: val, isSet: true}
}

func (v NullableMicrosoftGraphLocationConstraint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphLocationConstraint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


