/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// InlineObject1524 struct for InlineObject1524
type InlineObject1524 struct {
	X AnyOfobject `json:"x,omitempty"`
	DegFreedom AnyOfobject `json:"degFreedom,omitempty"`
}

// NewInlineObject1524 instantiates a new InlineObject1524 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject1524() *InlineObject1524 {
	this := InlineObject1524{}
	return &this
}

// NewInlineObject1524WithDefaults instantiates a new InlineObject1524 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject1524WithDefaults() *InlineObject1524 {
	this := InlineObject1524{}
	return &this
}

// GetX returns the X field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1524) GetX() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.X
}

// GetXOk returns a tuple with the X field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1524) GetXOk() (*AnyOfobject, bool) {
	if o == nil || o.X == nil {
		return nil, false
	}
	return &o.X, true
}

// HasX returns a boolean if a field has been set.
func (o *InlineObject1524) HasX() bool {
	if o != nil && o.X != nil {
		return true
	}

	return false
}

// SetX gets a reference to the given AnyOfobject and assigns it to the X field.
func (o *InlineObject1524) SetX(v AnyOfobject) {
	o.X = v
}

// GetDegFreedom returns the DegFreedom field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1524) GetDegFreedom() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.DegFreedom
}

// GetDegFreedomOk returns a tuple with the DegFreedom field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1524) GetDegFreedomOk() (*AnyOfobject, bool) {
	if o == nil || o.DegFreedom == nil {
		return nil, false
	}
	return &o.DegFreedom, true
}

// HasDegFreedom returns a boolean if a field has been set.
func (o *InlineObject1524) HasDegFreedom() bool {
	if o != nil && o.DegFreedom != nil {
		return true
	}

	return false
}

// SetDegFreedom gets a reference to the given AnyOfobject and assigns it to the DegFreedom field.
func (o *InlineObject1524) SetDegFreedom(v AnyOfobject) {
	o.DegFreedom = v
}

func (o InlineObject1524) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.X != nil {
		toSerialize["x"] = o.X
	}
	if o.DegFreedom != nil {
		toSerialize["degFreedom"] = o.DegFreedom
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject1524 struct {
	value *InlineObject1524
	isSet bool
}

func (v NullableInlineObject1524) Get() *InlineObject1524 {
	return v.value
}

func (v *NullableInlineObject1524) Set(val *InlineObject1524) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject1524) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject1524) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject1524(val *InlineObject1524) *NullableInlineObject1524 {
	return &NullableInlineObject1524{value: val, isSet: true}
}

func (v NullableInlineObject1524) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject1524) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


