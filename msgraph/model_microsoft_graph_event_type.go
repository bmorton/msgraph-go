/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphEventType the model 'MicrosoftGraphEventType'
type MicrosoftGraphEventType string

// List of microsoft.graph.eventType
const (
	SINGLE_INSTANCE MicrosoftGraphEventType = "singleInstance"
	OCCURRENCE MicrosoftGraphEventType = "occurrence"
	EXCEPTION MicrosoftGraphEventType = "exception"
	SERIES_MASTER MicrosoftGraphEventType = "seriesMaster"
)

// All allowed values of MicrosoftGraphEventType enum
var AllowedMicrosoftGraphEventTypeEnumValues = []MicrosoftGraphEventType{
	"singleInstance",
	"occurrence",
	"exception",
	"seriesMaster",
}

func (v *MicrosoftGraphEventType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphEventType(value)
	for _, existing := range AllowedMicrosoftGraphEventTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphEventType", value)
}

// NewMicrosoftGraphEventTypeFromValue returns a pointer to a valid MicrosoftGraphEventType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphEventTypeFromValue(v string) (*MicrosoftGraphEventType, error) {
	ev := MicrosoftGraphEventType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphEventType: valid values are %v", v, AllowedMicrosoftGraphEventTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphEventType) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphEventTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.eventType value
func (v MicrosoftGraphEventType) Ptr() *MicrosoftGraphEventType {
	return &v
}

type NullableMicrosoftGraphEventType struct {
	value *MicrosoftGraphEventType
	isSet bool
}

func (v NullableMicrosoftGraphEventType) Get() *MicrosoftGraphEventType {
	return v.value
}

func (v *NullableMicrosoftGraphEventType) Set(val *MicrosoftGraphEventType) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphEventType) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphEventType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphEventType(val *MicrosoftGraphEventType) *NullableMicrosoftGraphEventType {
	return &NullableMicrosoftGraphEventType{value: val, isSet: true}
}

func (v NullableMicrosoftGraphEventType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphEventType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

