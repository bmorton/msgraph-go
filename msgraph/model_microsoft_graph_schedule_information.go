/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphScheduleInformation struct for MicrosoftGraphScheduleInformation
type MicrosoftGraphScheduleInformation struct {
	// Represents a merged view of availability of all the items in scheduleItems. The view consists of time slots. Availability during each time slot is indicated with: 0= free, 1= tentative, 2= busy, 3= out of office, 4= working elsewhere.
	AvailabilityView NullableString `json:"availabilityView,omitempty"`
	// Error information from attempting to get the availability of the user, distribution list, or resource.
	Error AnyOfmicrosoftGraphFreeBusyError `json:"error,omitempty"`
	// An SMTP address of the user, distribution list, or resource, identifying an instance of scheduleInformation.
	ScheduleId NullableString `json:"scheduleId,omitempty"`
	// Contains the items that describe the availability of the user or resource.
	ScheduleItems *[]*AnyOfmicrosoftGraphScheduleItem `json:"scheduleItems,omitempty"`
	// The days of the week and hours in a specific time zone that the user works. These are set as part of the user's mailboxSettings.
	WorkingHours AnyOfmicrosoftGraphWorkingHours `json:"workingHours,omitempty"`
}

// NewMicrosoftGraphScheduleInformation instantiates a new MicrosoftGraphScheduleInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphScheduleInformation() *MicrosoftGraphScheduleInformation {
	this := MicrosoftGraphScheduleInformation{}
	return &this
}

// NewMicrosoftGraphScheduleInformationWithDefaults instantiates a new MicrosoftGraphScheduleInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphScheduleInformationWithDefaults() *MicrosoftGraphScheduleInformation {
	this := MicrosoftGraphScheduleInformation{}
	return &this
}

// GetAvailabilityView returns the AvailabilityView field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphScheduleInformation) GetAvailabilityView() string {
	if o == nil || o.AvailabilityView.Get() == nil {
		var ret string
		return ret
	}
	return *o.AvailabilityView.Get()
}

// GetAvailabilityViewOk returns a tuple with the AvailabilityView field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphScheduleInformation) GetAvailabilityViewOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AvailabilityView.Get(), o.AvailabilityView.IsSet()
}

// HasAvailabilityView returns a boolean if a field has been set.
func (o *MicrosoftGraphScheduleInformation) HasAvailabilityView() bool {
	if o != nil && o.AvailabilityView.IsSet() {
		return true
	}

	return false
}

// SetAvailabilityView gets a reference to the given NullableString and assigns it to the AvailabilityView field.
func (o *MicrosoftGraphScheduleInformation) SetAvailabilityView(v string) {
	o.AvailabilityView.Set(&v)
}
// SetAvailabilityViewNil sets the value for AvailabilityView to be an explicit nil
func (o *MicrosoftGraphScheduleInformation) SetAvailabilityViewNil() {
	o.AvailabilityView.Set(nil)
}

// UnsetAvailabilityView ensures that no value is present for AvailabilityView, not even an explicit nil
func (o *MicrosoftGraphScheduleInformation) UnsetAvailabilityView() {
	o.AvailabilityView.Unset()
}

// GetError returns the Error field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphScheduleInformation) GetError() AnyOfmicrosoftGraphFreeBusyError {
	if o == nil  {
		var ret AnyOfmicrosoftGraphFreeBusyError
		return ret
	}
	return o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphScheduleInformation) GetErrorOk() (*AnyOfmicrosoftGraphFreeBusyError, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return &o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *MicrosoftGraphScheduleInformation) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given AnyOfmicrosoftGraphFreeBusyError and assigns it to the Error field.
func (o *MicrosoftGraphScheduleInformation) SetError(v AnyOfmicrosoftGraphFreeBusyError) {
	o.Error = v
}

// GetScheduleId returns the ScheduleId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphScheduleInformation) GetScheduleId() string {
	if o == nil || o.ScheduleId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ScheduleId.Get()
}

// GetScheduleIdOk returns a tuple with the ScheduleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphScheduleInformation) GetScheduleIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ScheduleId.Get(), o.ScheduleId.IsSet()
}

// HasScheduleId returns a boolean if a field has been set.
func (o *MicrosoftGraphScheduleInformation) HasScheduleId() bool {
	if o != nil && o.ScheduleId.IsSet() {
		return true
	}

	return false
}

// SetScheduleId gets a reference to the given NullableString and assigns it to the ScheduleId field.
func (o *MicrosoftGraphScheduleInformation) SetScheduleId(v string) {
	o.ScheduleId.Set(&v)
}
// SetScheduleIdNil sets the value for ScheduleId to be an explicit nil
func (o *MicrosoftGraphScheduleInformation) SetScheduleIdNil() {
	o.ScheduleId.Set(nil)
}

// UnsetScheduleId ensures that no value is present for ScheduleId, not even an explicit nil
func (o *MicrosoftGraphScheduleInformation) UnsetScheduleId() {
	o.ScheduleId.Unset()
}

// GetScheduleItems returns the ScheduleItems field value if set, zero value otherwise.
func (o *MicrosoftGraphScheduleInformation) GetScheduleItems() []*AnyOfmicrosoftGraphScheduleItem {
	if o == nil || o.ScheduleItems == nil {
		var ret []*AnyOfmicrosoftGraphScheduleItem
		return ret
	}
	return *o.ScheduleItems
}

// GetScheduleItemsOk returns a tuple with the ScheduleItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphScheduleInformation) GetScheduleItemsOk() (*[]*AnyOfmicrosoftGraphScheduleItem, bool) {
	if o == nil || o.ScheduleItems == nil {
		return nil, false
	}
	return o.ScheduleItems, true
}

// HasScheduleItems returns a boolean if a field has been set.
func (o *MicrosoftGraphScheduleInformation) HasScheduleItems() bool {
	if o != nil && o.ScheduleItems != nil {
		return true
	}

	return false
}

// SetScheduleItems gets a reference to the given []*AnyOfmicrosoftGraphScheduleItem and assigns it to the ScheduleItems field.
func (o *MicrosoftGraphScheduleInformation) SetScheduleItems(v []*AnyOfmicrosoftGraphScheduleItem) {
	o.ScheduleItems = &v
}

// GetWorkingHours returns the WorkingHours field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphScheduleInformation) GetWorkingHours() AnyOfmicrosoftGraphWorkingHours {
	if o == nil  {
		var ret AnyOfmicrosoftGraphWorkingHours
		return ret
	}
	return o.WorkingHours
}

// GetWorkingHoursOk returns a tuple with the WorkingHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphScheduleInformation) GetWorkingHoursOk() (*AnyOfmicrosoftGraphWorkingHours, bool) {
	if o == nil || o.WorkingHours == nil {
		return nil, false
	}
	return &o.WorkingHours, true
}

// HasWorkingHours returns a boolean if a field has been set.
func (o *MicrosoftGraphScheduleInformation) HasWorkingHours() bool {
	if o != nil && o.WorkingHours != nil {
		return true
	}

	return false
}

// SetWorkingHours gets a reference to the given AnyOfmicrosoftGraphWorkingHours and assigns it to the WorkingHours field.
func (o *MicrosoftGraphScheduleInformation) SetWorkingHours(v AnyOfmicrosoftGraphWorkingHours) {
	o.WorkingHours = v
}

func (o MicrosoftGraphScheduleInformation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AvailabilityView.IsSet() {
		toSerialize["availabilityView"] = o.AvailabilityView.Get()
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	if o.ScheduleId.IsSet() {
		toSerialize["scheduleId"] = o.ScheduleId.Get()
	}
	if o.ScheduleItems != nil {
		toSerialize["scheduleItems"] = o.ScheduleItems
	}
	if o.WorkingHours != nil {
		toSerialize["workingHours"] = o.WorkingHours
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphScheduleInformation struct {
	value *MicrosoftGraphScheduleInformation
	isSet bool
}

func (v NullableMicrosoftGraphScheduleInformation) Get() *MicrosoftGraphScheduleInformation {
	return v.value
}

func (v *NullableMicrosoftGraphScheduleInformation) Set(val *MicrosoftGraphScheduleInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphScheduleInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphScheduleInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphScheduleInformation(val *MicrosoftGraphScheduleInformation) *NullableMicrosoftGraphScheduleInformation {
	return &NullableMicrosoftGraphScheduleInformation{value: val, isSet: true}
}

func (v NullableMicrosoftGraphScheduleInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphScheduleInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


