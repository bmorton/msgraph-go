/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphMediaStream struct for MicrosoftGraphMediaStream
type MicrosoftGraphMediaStream struct {
	// The direction. The possible values are inactive, sendOnly, receiveOnly, sendReceive.
	Direction AnyOfmicrosoftGraphMediaDirection `json:"direction,omitempty"`
	// The media stream label.
	Label NullableString `json:"label,omitempty"`
	// The media type. The possible value are unknown, audio, video, videoBasedScreenSharing, data.
	MediaType AnyOfmicrosoftGraphModality `json:"mediaType,omitempty"`
	// If the media is muted by the server.
	ServerMuted *bool `json:"serverMuted,omitempty"`
	// The source ID.
	SourceId *string `json:"sourceId,omitempty"`
}

// NewMicrosoftGraphMediaStream instantiates a new MicrosoftGraphMediaStream object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphMediaStream() *MicrosoftGraphMediaStream {
	this := MicrosoftGraphMediaStream{}
	return &this
}

// NewMicrosoftGraphMediaStreamWithDefaults instantiates a new MicrosoftGraphMediaStream object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphMediaStreamWithDefaults() *MicrosoftGraphMediaStream {
	this := MicrosoftGraphMediaStream{}
	return &this
}

// GetDirection returns the Direction field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMediaStream) GetDirection() AnyOfmicrosoftGraphMediaDirection {
	if o == nil  {
		var ret AnyOfmicrosoftGraphMediaDirection
		return ret
	}
	return o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMediaStream) GetDirectionOk() (*AnyOfmicrosoftGraphMediaDirection, bool) {
	if o == nil || o.Direction == nil {
		return nil, false
	}
	return &o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *MicrosoftGraphMediaStream) HasDirection() bool {
	if o != nil && o.Direction != nil {
		return true
	}

	return false
}

// SetDirection gets a reference to the given AnyOfmicrosoftGraphMediaDirection and assigns it to the Direction field.
func (o *MicrosoftGraphMediaStream) SetDirection(v AnyOfmicrosoftGraphMediaDirection) {
	o.Direction = v
}

// GetLabel returns the Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMediaStream) GetLabel() string {
	if o == nil || o.Label.Get() == nil {
		var ret string
		return ret
	}
	return *o.Label.Get()
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMediaStream) GetLabelOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Label.Get(), o.Label.IsSet()
}

// HasLabel returns a boolean if a field has been set.
func (o *MicrosoftGraphMediaStream) HasLabel() bool {
	if o != nil && o.Label.IsSet() {
		return true
	}

	return false
}

// SetLabel gets a reference to the given NullableString and assigns it to the Label field.
func (o *MicrosoftGraphMediaStream) SetLabel(v string) {
	o.Label.Set(&v)
}
// SetLabelNil sets the value for Label to be an explicit nil
func (o *MicrosoftGraphMediaStream) SetLabelNil() {
	o.Label.Set(nil)
}

// UnsetLabel ensures that no value is present for Label, not even an explicit nil
func (o *MicrosoftGraphMediaStream) UnsetLabel() {
	o.Label.Unset()
}

// GetMediaType returns the MediaType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMediaStream) GetMediaType() AnyOfmicrosoftGraphModality {
	if o == nil  {
		var ret AnyOfmicrosoftGraphModality
		return ret
	}
	return o.MediaType
}

// GetMediaTypeOk returns a tuple with the MediaType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMediaStream) GetMediaTypeOk() (*AnyOfmicrosoftGraphModality, bool) {
	if o == nil || o.MediaType == nil {
		return nil, false
	}
	return &o.MediaType, true
}

// HasMediaType returns a boolean if a field has been set.
func (o *MicrosoftGraphMediaStream) HasMediaType() bool {
	if o != nil && o.MediaType != nil {
		return true
	}

	return false
}

// SetMediaType gets a reference to the given AnyOfmicrosoftGraphModality and assigns it to the MediaType field.
func (o *MicrosoftGraphMediaStream) SetMediaType(v AnyOfmicrosoftGraphModality) {
	o.MediaType = v
}

// GetServerMuted returns the ServerMuted field value if set, zero value otherwise.
func (o *MicrosoftGraphMediaStream) GetServerMuted() bool {
	if o == nil || o.ServerMuted == nil {
		var ret bool
		return ret
	}
	return *o.ServerMuted
}

// GetServerMutedOk returns a tuple with the ServerMuted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMediaStream) GetServerMutedOk() (*bool, bool) {
	if o == nil || o.ServerMuted == nil {
		return nil, false
	}
	return o.ServerMuted, true
}

// HasServerMuted returns a boolean if a field has been set.
func (o *MicrosoftGraphMediaStream) HasServerMuted() bool {
	if o != nil && o.ServerMuted != nil {
		return true
	}

	return false
}

// SetServerMuted gets a reference to the given bool and assigns it to the ServerMuted field.
func (o *MicrosoftGraphMediaStream) SetServerMuted(v bool) {
	o.ServerMuted = &v
}

// GetSourceId returns the SourceId field value if set, zero value otherwise.
func (o *MicrosoftGraphMediaStream) GetSourceId() string {
	if o == nil || o.SourceId == nil {
		var ret string
		return ret
	}
	return *o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMediaStream) GetSourceIdOk() (*string, bool) {
	if o == nil || o.SourceId == nil {
		return nil, false
	}
	return o.SourceId, true
}

// HasSourceId returns a boolean if a field has been set.
func (o *MicrosoftGraphMediaStream) HasSourceId() bool {
	if o != nil && o.SourceId != nil {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given string and assigns it to the SourceId field.
func (o *MicrosoftGraphMediaStream) SetSourceId(v string) {
	o.SourceId = &v
}

func (o MicrosoftGraphMediaStream) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Direction != nil {
		toSerialize["direction"] = o.Direction
	}
	if o.Label.IsSet() {
		toSerialize["label"] = o.Label.Get()
	}
	if o.MediaType != nil {
		toSerialize["mediaType"] = o.MediaType
	}
	if o.ServerMuted != nil {
		toSerialize["serverMuted"] = o.ServerMuted
	}
	if o.SourceId != nil {
		toSerialize["sourceId"] = o.SourceId
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphMediaStream struct {
	value *MicrosoftGraphMediaStream
	isSet bool
}

func (v NullableMicrosoftGraphMediaStream) Get() *MicrosoftGraphMediaStream {
	return v.value
}

func (v *NullableMicrosoftGraphMediaStream) Set(val *MicrosoftGraphMediaStream) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphMediaStream) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphMediaStream) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphMediaStream(val *MicrosoftGraphMediaStream) *NullableMicrosoftGraphMediaStream {
	return &NullableMicrosoftGraphMediaStream{value: val, isSet: true}
}

func (v NullableMicrosoftGraphMediaStream) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphMediaStream) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


