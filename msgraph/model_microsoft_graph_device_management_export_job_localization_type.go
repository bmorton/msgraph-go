/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphDeviceManagementExportJobLocalizationType Configures how the requested export job is localized
type MicrosoftGraphDeviceManagementExportJobLocalizationType string

// List of microsoft.graph.deviceManagementExportJobLocalizationType
const (
	LOCALIZED_VALUES_AS_ADDITIONAL_COLUMN MicrosoftGraphDeviceManagementExportJobLocalizationType = "localizedValuesAsAdditionalColumn"
	REPLACE_LOCALIZABLE_VALUES MicrosoftGraphDeviceManagementExportJobLocalizationType = "replaceLocalizableValues"
)

// All allowed values of MicrosoftGraphDeviceManagementExportJobLocalizationType enum
var AllowedMicrosoftGraphDeviceManagementExportJobLocalizationTypeEnumValues = []MicrosoftGraphDeviceManagementExportJobLocalizationType{
	"localizedValuesAsAdditionalColumn",
	"replaceLocalizableValues",
}

func (v *MicrosoftGraphDeviceManagementExportJobLocalizationType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphDeviceManagementExportJobLocalizationType(value)
	for _, existing := range AllowedMicrosoftGraphDeviceManagementExportJobLocalizationTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphDeviceManagementExportJobLocalizationType", value)
}

// NewMicrosoftGraphDeviceManagementExportJobLocalizationTypeFromValue returns a pointer to a valid MicrosoftGraphDeviceManagementExportJobLocalizationType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphDeviceManagementExportJobLocalizationTypeFromValue(v string) (*MicrosoftGraphDeviceManagementExportJobLocalizationType, error) {
	ev := MicrosoftGraphDeviceManagementExportJobLocalizationType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphDeviceManagementExportJobLocalizationType: valid values are %v", v, AllowedMicrosoftGraphDeviceManagementExportJobLocalizationTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphDeviceManagementExportJobLocalizationType) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphDeviceManagementExportJobLocalizationTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.deviceManagementExportJobLocalizationType value
func (v MicrosoftGraphDeviceManagementExportJobLocalizationType) Ptr() *MicrosoftGraphDeviceManagementExportJobLocalizationType {
	return &v
}

type NullableMicrosoftGraphDeviceManagementExportJobLocalizationType struct {
	value *MicrosoftGraphDeviceManagementExportJobLocalizationType
	isSet bool
}

func (v NullableMicrosoftGraphDeviceManagementExportJobLocalizationType) Get() *MicrosoftGraphDeviceManagementExportJobLocalizationType {
	return v.value
}

func (v *NullableMicrosoftGraphDeviceManagementExportJobLocalizationType) Set(val *MicrosoftGraphDeviceManagementExportJobLocalizationType) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphDeviceManagementExportJobLocalizationType) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphDeviceManagementExportJobLocalizationType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphDeviceManagementExportJobLocalizationType(val *MicrosoftGraphDeviceManagementExportJobLocalizationType) *NullableMicrosoftGraphDeviceManagementExportJobLocalizationType {
	return &NullableMicrosoftGraphDeviceManagementExportJobLocalizationType{value: val, isSet: true}
}

func (v NullableMicrosoftGraphDeviceManagementExportJobLocalizationType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphDeviceManagementExportJobLocalizationType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

