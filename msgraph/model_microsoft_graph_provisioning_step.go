/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphProvisioningStep struct for MicrosoftGraphProvisioningStep
type MicrosoftGraphProvisioningStep struct {
	// Summary of what occurred during the step.
	Description NullableString `json:"description,omitempty"`
	// Details of what occurred during the step.
	Details AnyOfobject `json:"details,omitempty"`
	// Name of the step.
	Name NullableString `json:"name,omitempty"`
	// Type of step. Possible values are: import, scoping, matching, processing, referenceResolution, export, unknownFutureValue.
	ProvisioningStepType AnyOfmicrosoftGraphProvisioningStepType `json:"provisioningStepType,omitempty"`
	// Status of the step. Possible values are: success, warning,  failure, skipped, unknownFutureValue.
	Status AnyOfmicrosoftGraphProvisioningResult `json:"status,omitempty"`
}

// NewMicrosoftGraphProvisioningStep instantiates a new MicrosoftGraphProvisioningStep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphProvisioningStep() *MicrosoftGraphProvisioningStep {
	this := MicrosoftGraphProvisioningStep{}
	return &this
}

// NewMicrosoftGraphProvisioningStepWithDefaults instantiates a new MicrosoftGraphProvisioningStep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphProvisioningStepWithDefaults() *MicrosoftGraphProvisioningStep {
	this := MicrosoftGraphProvisioningStep{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphProvisioningStep) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphProvisioningStep) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *MicrosoftGraphProvisioningStep) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *MicrosoftGraphProvisioningStep) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *MicrosoftGraphProvisioningStep) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *MicrosoftGraphProvisioningStep) UnsetDescription() {
	o.Description.Unset()
}

// GetDetails returns the Details field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphProvisioningStep) GetDetails() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphProvisioningStep) GetDetailsOk() (*AnyOfobject, bool) {
	if o == nil || o.Details == nil {
		return nil, false
	}
	return &o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *MicrosoftGraphProvisioningStep) HasDetails() bool {
	if o != nil && o.Details != nil {
		return true
	}

	return false
}

// SetDetails gets a reference to the given AnyOfobject and assigns it to the Details field.
func (o *MicrosoftGraphProvisioningStep) SetDetails(v AnyOfobject) {
	o.Details = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphProvisioningStep) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphProvisioningStep) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *MicrosoftGraphProvisioningStep) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *MicrosoftGraphProvisioningStep) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *MicrosoftGraphProvisioningStep) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *MicrosoftGraphProvisioningStep) UnsetName() {
	o.Name.Unset()
}

// GetProvisioningStepType returns the ProvisioningStepType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphProvisioningStep) GetProvisioningStepType() AnyOfmicrosoftGraphProvisioningStepType {
	if o == nil  {
		var ret AnyOfmicrosoftGraphProvisioningStepType
		return ret
	}
	return o.ProvisioningStepType
}

// GetProvisioningStepTypeOk returns a tuple with the ProvisioningStepType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphProvisioningStep) GetProvisioningStepTypeOk() (*AnyOfmicrosoftGraphProvisioningStepType, bool) {
	if o == nil || o.ProvisioningStepType == nil {
		return nil, false
	}
	return &o.ProvisioningStepType, true
}

// HasProvisioningStepType returns a boolean if a field has been set.
func (o *MicrosoftGraphProvisioningStep) HasProvisioningStepType() bool {
	if o != nil && o.ProvisioningStepType != nil {
		return true
	}

	return false
}

// SetProvisioningStepType gets a reference to the given AnyOfmicrosoftGraphProvisioningStepType and assigns it to the ProvisioningStepType field.
func (o *MicrosoftGraphProvisioningStep) SetProvisioningStepType(v AnyOfmicrosoftGraphProvisioningStepType) {
	o.ProvisioningStepType = v
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphProvisioningStep) GetStatus() AnyOfmicrosoftGraphProvisioningResult {
	if o == nil  {
		var ret AnyOfmicrosoftGraphProvisioningResult
		return ret
	}
	return o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphProvisioningStep) GetStatusOk() (*AnyOfmicrosoftGraphProvisioningResult, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return &o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MicrosoftGraphProvisioningStep) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given AnyOfmicrosoftGraphProvisioningResult and assigns it to the Status field.
func (o *MicrosoftGraphProvisioningStep) SetStatus(v AnyOfmicrosoftGraphProvisioningResult) {
	o.Status = v
}

func (o MicrosoftGraphProvisioningStep) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Details != nil {
		toSerialize["details"] = o.Details
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.ProvisioningStepType != nil {
		toSerialize["provisioningStepType"] = o.ProvisioningStepType
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphProvisioningStep struct {
	value *MicrosoftGraphProvisioningStep
	isSet bool
}

func (v NullableMicrosoftGraphProvisioningStep) Get() *MicrosoftGraphProvisioningStep {
	return v.value
}

func (v *NullableMicrosoftGraphProvisioningStep) Set(val *MicrosoftGraphProvisioningStep) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphProvisioningStep) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphProvisioningStep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphProvisioningStep(val *MicrosoftGraphProvisioningStep) *NullableMicrosoftGraphProvisioningStep {
	return &NullableMicrosoftGraphProvisioningStep{value: val, isSet: true}
}

func (v NullableMicrosoftGraphProvisioningStep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphProvisioningStep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


