/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// Endpoint struct for Endpoint
type Endpoint struct {
	// Describes the capability that is associated with this resource. (e.g. Messages, Conversations, etc.)  Not nullable. Read-only.
	Capability *string `json:"capability,omitempty"`
	// Application id of the publishing underlying service. Not nullable. Read-only.
	ProviderId NullableString `json:"providerId,omitempty"`
	// Name of the publishing underlying service. Read-only.
	ProviderName NullableString `json:"providerName,omitempty"`
	// For Microsoft 365 groups, this is set to a well-known name for the resource (e.g. Yammer.FeedURL etc.). Not nullable. Read-only.
	ProviderResourceId NullableString `json:"providerResourceId,omitempty"`
	// URL of the published resource. Not nullable. Read-only.
	Uri *string `json:"uri,omitempty"`
}

// NewEndpoint instantiates a new Endpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpoint() *Endpoint {
	this := Endpoint{}
	return &this
}

// NewEndpointWithDefaults instantiates a new Endpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointWithDefaults() *Endpoint {
	this := Endpoint{}
	return &this
}

// GetCapability returns the Capability field value if set, zero value otherwise.
func (o *Endpoint) GetCapability() string {
	if o == nil || o.Capability == nil {
		var ret string
		return ret
	}
	return *o.Capability
}

// GetCapabilityOk returns a tuple with the Capability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetCapabilityOk() (*string, bool) {
	if o == nil || o.Capability == nil {
		return nil, false
	}
	return o.Capability, true
}

// HasCapability returns a boolean if a field has been set.
func (o *Endpoint) HasCapability() bool {
	if o != nil && o.Capability != nil {
		return true
	}

	return false
}

// SetCapability gets a reference to the given string and assigns it to the Capability field.
func (o *Endpoint) SetCapability(v string) {
	o.Capability = &v
}

// GetProviderId returns the ProviderId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Endpoint) GetProviderId() string {
	if o == nil || o.ProviderId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProviderId.Get()
}

// GetProviderIdOk returns a tuple with the ProviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Endpoint) GetProviderIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProviderId.Get(), o.ProviderId.IsSet()
}

// HasProviderId returns a boolean if a field has been set.
func (o *Endpoint) HasProviderId() bool {
	if o != nil && o.ProviderId.IsSet() {
		return true
	}

	return false
}

// SetProviderId gets a reference to the given NullableString and assigns it to the ProviderId field.
func (o *Endpoint) SetProviderId(v string) {
	o.ProviderId.Set(&v)
}
// SetProviderIdNil sets the value for ProviderId to be an explicit nil
func (o *Endpoint) SetProviderIdNil() {
	o.ProviderId.Set(nil)
}

// UnsetProviderId ensures that no value is present for ProviderId, not even an explicit nil
func (o *Endpoint) UnsetProviderId() {
	o.ProviderId.Unset()
}

// GetProviderName returns the ProviderName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Endpoint) GetProviderName() string {
	if o == nil || o.ProviderName.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProviderName.Get()
}

// GetProviderNameOk returns a tuple with the ProviderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Endpoint) GetProviderNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProviderName.Get(), o.ProviderName.IsSet()
}

// HasProviderName returns a boolean if a field has been set.
func (o *Endpoint) HasProviderName() bool {
	if o != nil && o.ProviderName.IsSet() {
		return true
	}

	return false
}

// SetProviderName gets a reference to the given NullableString and assigns it to the ProviderName field.
func (o *Endpoint) SetProviderName(v string) {
	o.ProviderName.Set(&v)
}
// SetProviderNameNil sets the value for ProviderName to be an explicit nil
func (o *Endpoint) SetProviderNameNil() {
	o.ProviderName.Set(nil)
}

// UnsetProviderName ensures that no value is present for ProviderName, not even an explicit nil
func (o *Endpoint) UnsetProviderName() {
	o.ProviderName.Unset()
}

// GetProviderResourceId returns the ProviderResourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Endpoint) GetProviderResourceId() string {
	if o == nil || o.ProviderResourceId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProviderResourceId.Get()
}

// GetProviderResourceIdOk returns a tuple with the ProviderResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Endpoint) GetProviderResourceIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProviderResourceId.Get(), o.ProviderResourceId.IsSet()
}

// HasProviderResourceId returns a boolean if a field has been set.
func (o *Endpoint) HasProviderResourceId() bool {
	if o != nil && o.ProviderResourceId.IsSet() {
		return true
	}

	return false
}

// SetProviderResourceId gets a reference to the given NullableString and assigns it to the ProviderResourceId field.
func (o *Endpoint) SetProviderResourceId(v string) {
	o.ProviderResourceId.Set(&v)
}
// SetProviderResourceIdNil sets the value for ProviderResourceId to be an explicit nil
func (o *Endpoint) SetProviderResourceIdNil() {
	o.ProviderResourceId.Set(nil)
}

// UnsetProviderResourceId ensures that no value is present for ProviderResourceId, not even an explicit nil
func (o *Endpoint) UnsetProviderResourceId() {
	o.ProviderResourceId.Unset()
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *Endpoint) GetUri() string {
	if o == nil || o.Uri == nil {
		var ret string
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetUriOk() (*string, bool) {
	if o == nil || o.Uri == nil {
		return nil, false
	}
	return o.Uri, true
}

// HasUri returns a boolean if a field has been set.
func (o *Endpoint) HasUri() bool {
	if o != nil && o.Uri != nil {
		return true
	}

	return false
}

// SetUri gets a reference to the given string and assigns it to the Uri field.
func (o *Endpoint) SetUri(v string) {
	o.Uri = &v
}

func (o Endpoint) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Capability != nil {
		toSerialize["capability"] = o.Capability
	}
	if o.ProviderId.IsSet() {
		toSerialize["providerId"] = o.ProviderId.Get()
	}
	if o.ProviderName.IsSet() {
		toSerialize["providerName"] = o.ProviderName.Get()
	}
	if o.ProviderResourceId.IsSet() {
		toSerialize["providerResourceId"] = o.ProviderResourceId.Get()
	}
	if o.Uri != nil {
		toSerialize["uri"] = o.Uri
	}
	return json.Marshal(toSerialize)
}

type NullableEndpoint struct {
	value *Endpoint
	isSet bool
}

func (v NullableEndpoint) Get() *Endpoint {
	return v.value
}

func (v *NullableEndpoint) Set(val *Endpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpoint(val *Endpoint) *NullableEndpoint {
	return &NullableEndpoint{value: val, isSet: true}
}

func (v NullableEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


