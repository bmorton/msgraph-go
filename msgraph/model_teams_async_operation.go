/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// TeamsAsyncOperation struct for TeamsAsyncOperation
type TeamsAsyncOperation struct {
	// Number of times the operation was attempted before being marked successful or failed.
	AttemptsCount *int32 `json:"attemptsCount,omitempty"`
	// Time when the operation was created.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// Any error that causes the async operation to fail.
	Error AnyOfmicrosoftGraphOperationError `json:"error,omitempty"`
	// Time when the async operation was last updated.
	LastActionDateTime *time.Time `json:"lastActionDateTime,omitempty"`
	// Denotes which type of operation is being described.
	OperationType AnyOfmicrosoftGraphTeamsAsyncOperationType `json:"operationType,omitempty"`
	// Operation status.
	Status AnyOfmicrosoftGraphTeamsAsyncOperationStatus `json:"status,omitempty"`
	// The ID of the object that's created or modified as result of this async operation, typically a team.
	TargetResourceId NullableString `json:"targetResourceId,omitempty"`
	// The location of the object that's created or modified as result of this async operation. This URL should be treated as an opaque value and not parsed into its component paths.
	TargetResourceLocation NullableString `json:"targetResourceLocation,omitempty"`
}

// NewTeamsAsyncOperation instantiates a new TeamsAsyncOperation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTeamsAsyncOperation() *TeamsAsyncOperation {
	this := TeamsAsyncOperation{}
	return &this
}

// NewTeamsAsyncOperationWithDefaults instantiates a new TeamsAsyncOperation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTeamsAsyncOperationWithDefaults() *TeamsAsyncOperation {
	this := TeamsAsyncOperation{}
	return &this
}

// GetAttemptsCount returns the AttemptsCount field value if set, zero value otherwise.
func (o *TeamsAsyncOperation) GetAttemptsCount() int32 {
	if o == nil || o.AttemptsCount == nil {
		var ret int32
		return ret
	}
	return *o.AttemptsCount
}

// GetAttemptsCountOk returns a tuple with the AttemptsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamsAsyncOperation) GetAttemptsCountOk() (*int32, bool) {
	if o == nil || o.AttemptsCount == nil {
		return nil, false
	}
	return o.AttemptsCount, true
}

// HasAttemptsCount returns a boolean if a field has been set.
func (o *TeamsAsyncOperation) HasAttemptsCount() bool {
	if o != nil && o.AttemptsCount != nil {
		return true
	}

	return false
}

// SetAttemptsCount gets a reference to the given int32 and assigns it to the AttemptsCount field.
func (o *TeamsAsyncOperation) SetAttemptsCount(v int32) {
	o.AttemptsCount = &v
}

// GetCreatedDateTime returns the CreatedDateTime field value if set, zero value otherwise.
func (o *TeamsAsyncOperation) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamsAsyncOperation) GetCreatedDateTimeOk() (*time.Time, bool) {
	if o == nil || o.CreatedDateTime == nil {
		return nil, false
	}
	return o.CreatedDateTime, true
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *TeamsAsyncOperation) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime != nil {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given time.Time and assigns it to the CreatedDateTime field.
func (o *TeamsAsyncOperation) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime = &v
}

// GetError returns the Error field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TeamsAsyncOperation) GetError() AnyOfmicrosoftGraphOperationError {
	if o == nil  {
		var ret AnyOfmicrosoftGraphOperationError
		return ret
	}
	return o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TeamsAsyncOperation) GetErrorOk() (*AnyOfmicrosoftGraphOperationError, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return &o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *TeamsAsyncOperation) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given AnyOfmicrosoftGraphOperationError and assigns it to the Error field.
func (o *TeamsAsyncOperation) SetError(v AnyOfmicrosoftGraphOperationError) {
	o.Error = v
}

// GetLastActionDateTime returns the LastActionDateTime field value if set, zero value otherwise.
func (o *TeamsAsyncOperation) GetLastActionDateTime() time.Time {
	if o == nil || o.LastActionDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastActionDateTime
}

// GetLastActionDateTimeOk returns a tuple with the LastActionDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamsAsyncOperation) GetLastActionDateTimeOk() (*time.Time, bool) {
	if o == nil || o.LastActionDateTime == nil {
		return nil, false
	}
	return o.LastActionDateTime, true
}

// HasLastActionDateTime returns a boolean if a field has been set.
func (o *TeamsAsyncOperation) HasLastActionDateTime() bool {
	if o != nil && o.LastActionDateTime != nil {
		return true
	}

	return false
}

// SetLastActionDateTime gets a reference to the given time.Time and assigns it to the LastActionDateTime field.
func (o *TeamsAsyncOperation) SetLastActionDateTime(v time.Time) {
	o.LastActionDateTime = &v
}

// GetOperationType returns the OperationType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TeamsAsyncOperation) GetOperationType() AnyOfmicrosoftGraphTeamsAsyncOperationType {
	if o == nil  {
		var ret AnyOfmicrosoftGraphTeamsAsyncOperationType
		return ret
	}
	return o.OperationType
}

// GetOperationTypeOk returns a tuple with the OperationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TeamsAsyncOperation) GetOperationTypeOk() (*AnyOfmicrosoftGraphTeamsAsyncOperationType, bool) {
	if o == nil || o.OperationType == nil {
		return nil, false
	}
	return &o.OperationType, true
}

// HasOperationType returns a boolean if a field has been set.
func (o *TeamsAsyncOperation) HasOperationType() bool {
	if o != nil && o.OperationType != nil {
		return true
	}

	return false
}

// SetOperationType gets a reference to the given AnyOfmicrosoftGraphTeamsAsyncOperationType and assigns it to the OperationType field.
func (o *TeamsAsyncOperation) SetOperationType(v AnyOfmicrosoftGraphTeamsAsyncOperationType) {
	o.OperationType = v
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TeamsAsyncOperation) GetStatus() AnyOfmicrosoftGraphTeamsAsyncOperationStatus {
	if o == nil  {
		var ret AnyOfmicrosoftGraphTeamsAsyncOperationStatus
		return ret
	}
	return o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TeamsAsyncOperation) GetStatusOk() (*AnyOfmicrosoftGraphTeamsAsyncOperationStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return &o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *TeamsAsyncOperation) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given AnyOfmicrosoftGraphTeamsAsyncOperationStatus and assigns it to the Status field.
func (o *TeamsAsyncOperation) SetStatus(v AnyOfmicrosoftGraphTeamsAsyncOperationStatus) {
	o.Status = v
}

// GetTargetResourceId returns the TargetResourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TeamsAsyncOperation) GetTargetResourceId() string {
	if o == nil || o.TargetResourceId.Get() == nil {
		var ret string
		return ret
	}
	return *o.TargetResourceId.Get()
}

// GetTargetResourceIdOk returns a tuple with the TargetResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TeamsAsyncOperation) GetTargetResourceIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TargetResourceId.Get(), o.TargetResourceId.IsSet()
}

// HasTargetResourceId returns a boolean if a field has been set.
func (o *TeamsAsyncOperation) HasTargetResourceId() bool {
	if o != nil && o.TargetResourceId.IsSet() {
		return true
	}

	return false
}

// SetTargetResourceId gets a reference to the given NullableString and assigns it to the TargetResourceId field.
func (o *TeamsAsyncOperation) SetTargetResourceId(v string) {
	o.TargetResourceId.Set(&v)
}
// SetTargetResourceIdNil sets the value for TargetResourceId to be an explicit nil
func (o *TeamsAsyncOperation) SetTargetResourceIdNil() {
	o.TargetResourceId.Set(nil)
}

// UnsetTargetResourceId ensures that no value is present for TargetResourceId, not even an explicit nil
func (o *TeamsAsyncOperation) UnsetTargetResourceId() {
	o.TargetResourceId.Unset()
}

// GetTargetResourceLocation returns the TargetResourceLocation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TeamsAsyncOperation) GetTargetResourceLocation() string {
	if o == nil || o.TargetResourceLocation.Get() == nil {
		var ret string
		return ret
	}
	return *o.TargetResourceLocation.Get()
}

// GetTargetResourceLocationOk returns a tuple with the TargetResourceLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TeamsAsyncOperation) GetTargetResourceLocationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TargetResourceLocation.Get(), o.TargetResourceLocation.IsSet()
}

// HasTargetResourceLocation returns a boolean if a field has been set.
func (o *TeamsAsyncOperation) HasTargetResourceLocation() bool {
	if o != nil && o.TargetResourceLocation.IsSet() {
		return true
	}

	return false
}

// SetTargetResourceLocation gets a reference to the given NullableString and assigns it to the TargetResourceLocation field.
func (o *TeamsAsyncOperation) SetTargetResourceLocation(v string) {
	o.TargetResourceLocation.Set(&v)
}
// SetTargetResourceLocationNil sets the value for TargetResourceLocation to be an explicit nil
func (o *TeamsAsyncOperation) SetTargetResourceLocationNil() {
	o.TargetResourceLocation.Set(nil)
}

// UnsetTargetResourceLocation ensures that no value is present for TargetResourceLocation, not even an explicit nil
func (o *TeamsAsyncOperation) UnsetTargetResourceLocation() {
	o.TargetResourceLocation.Unset()
}

func (o TeamsAsyncOperation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AttemptsCount != nil {
		toSerialize["attemptsCount"] = o.AttemptsCount
	}
	if o.CreatedDateTime != nil {
		toSerialize["createdDateTime"] = o.CreatedDateTime
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	if o.LastActionDateTime != nil {
		toSerialize["lastActionDateTime"] = o.LastActionDateTime
	}
	if o.OperationType != nil {
		toSerialize["operationType"] = o.OperationType
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.TargetResourceId.IsSet() {
		toSerialize["targetResourceId"] = o.TargetResourceId.Get()
	}
	if o.TargetResourceLocation.IsSet() {
		toSerialize["targetResourceLocation"] = o.TargetResourceLocation.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableTeamsAsyncOperation struct {
	value *TeamsAsyncOperation
	isSet bool
}

func (v NullableTeamsAsyncOperation) Get() *TeamsAsyncOperation {
	return v.value
}

func (v *NullableTeamsAsyncOperation) Set(val *TeamsAsyncOperation) {
	v.value = val
	v.isSet = true
}

func (v NullableTeamsAsyncOperation) IsSet() bool {
	return v.isSet
}

func (v *NullableTeamsAsyncOperation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTeamsAsyncOperation(val *TeamsAsyncOperation) *NullableTeamsAsyncOperation {
	return &NullableTeamsAsyncOperation{value: val, isSet: true}
}

func (v NullableTeamsAsyncOperation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTeamsAsyncOperation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


