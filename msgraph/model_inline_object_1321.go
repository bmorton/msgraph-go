/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject1321 struct for InlineObject1321
type InlineObject1321 struct {
	LowerLimit AnyOfobject `json:"lowerLimit,omitempty"`
	UpperLimit AnyOfobject `json:"upperLimit,omitempty"`
}

// NewInlineObject1321 instantiates a new InlineObject1321 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject1321() *InlineObject1321 {
	this := InlineObject1321{}
	return &this
}

// NewInlineObject1321WithDefaults instantiates a new InlineObject1321 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject1321WithDefaults() *InlineObject1321 {
	this := InlineObject1321{}
	return &this
}

// GetLowerLimit returns the LowerLimit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1321) GetLowerLimit() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.LowerLimit
}

// GetLowerLimitOk returns a tuple with the LowerLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1321) GetLowerLimitOk() (*AnyOfobject, bool) {
	if o == nil || o.LowerLimit == nil {
		return nil, false
	}
	return &o.LowerLimit, true
}

// HasLowerLimit returns a boolean if a field has been set.
func (o *InlineObject1321) HasLowerLimit() bool {
	if o != nil && o.LowerLimit != nil {
		return true
	}

	return false
}

// SetLowerLimit gets a reference to the given AnyOfobject and assigns it to the LowerLimit field.
func (o *InlineObject1321) SetLowerLimit(v AnyOfobject) {
	o.LowerLimit = v
}

// GetUpperLimit returns the UpperLimit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1321) GetUpperLimit() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.UpperLimit
}

// GetUpperLimitOk returns a tuple with the UpperLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1321) GetUpperLimitOk() (*AnyOfobject, bool) {
	if o == nil || o.UpperLimit == nil {
		return nil, false
	}
	return &o.UpperLimit, true
}

// HasUpperLimit returns a boolean if a field has been set.
func (o *InlineObject1321) HasUpperLimit() bool {
	if o != nil && o.UpperLimit != nil {
		return true
	}

	return false
}

// SetUpperLimit gets a reference to the given AnyOfobject and assigns it to the UpperLimit field.
func (o *InlineObject1321) SetUpperLimit(v AnyOfobject) {
	o.UpperLimit = v
}

func (o InlineObject1321) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LowerLimit != nil {
		toSerialize["lowerLimit"] = o.LowerLimit
	}
	if o.UpperLimit != nil {
		toSerialize["upperLimit"] = o.UpperLimit
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject1321 struct {
	value *InlineObject1321
	isSet bool
}

func (v NullableInlineObject1321) Get() *InlineObject1321 {
	return v.value
}

func (v *NullableInlineObject1321) Set(val *InlineObject1321) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject1321) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject1321) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject1321(val *InlineObject1321) *NullableInlineObject1321 {
	return &NullableInlineObject1321{value: val, isSet: true}
}

func (v NullableInlineObject1321) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject1321) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


