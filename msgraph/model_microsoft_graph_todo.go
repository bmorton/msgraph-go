/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphTodo struct for MicrosoftGraphTodo
type MicrosoftGraphTodo struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// The task lists in the users mailbox.
	Lists *[]MicrosoftGraphTodoTaskList `json:"lists,omitempty"`
}

// NewMicrosoftGraphTodo instantiates a new MicrosoftGraphTodo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphTodo() *MicrosoftGraphTodo {
	this := MicrosoftGraphTodo{}
	return &this
}

// NewMicrosoftGraphTodoWithDefaults instantiates a new MicrosoftGraphTodo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphTodoWithDefaults() *MicrosoftGraphTodo {
	this := MicrosoftGraphTodo{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphTodo) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTodo) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphTodo) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphTodo) SetId(v string) {
	o.Id = &v
}

// GetLists returns the Lists field value if set, zero value otherwise.
func (o *MicrosoftGraphTodo) GetLists() []MicrosoftGraphTodoTaskList {
	if o == nil || o.Lists == nil {
		var ret []MicrosoftGraphTodoTaskList
		return ret
	}
	return *o.Lists
}

// GetListsOk returns a tuple with the Lists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTodo) GetListsOk() (*[]MicrosoftGraphTodoTaskList, bool) {
	if o == nil || o.Lists == nil {
		return nil, false
	}
	return o.Lists, true
}

// HasLists returns a boolean if a field has been set.
func (o *MicrosoftGraphTodo) HasLists() bool {
	if o != nil && o.Lists != nil {
		return true
	}

	return false
}

// SetLists gets a reference to the given []MicrosoftGraphTodoTaskList and assigns it to the Lists field.
func (o *MicrosoftGraphTodo) SetLists(v []MicrosoftGraphTodoTaskList) {
	o.Lists = &v
}

func (o MicrosoftGraphTodo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Lists != nil {
		toSerialize["lists"] = o.Lists
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphTodo struct {
	value *MicrosoftGraphTodo
	isSet bool
}

func (v NullableMicrosoftGraphTodo) Get() *MicrosoftGraphTodo {
	return v.value
}

func (v *NullableMicrosoftGraphTodo) Set(val *MicrosoftGraphTodo) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphTodo) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphTodo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphTodo(val *MicrosoftGraphTodo) *NullableMicrosoftGraphTodo {
	return &NullableMicrosoftGraphTodo{value: val, isSet: true}
}

func (v NullableMicrosoftGraphTodo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphTodo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


