/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphManagedAppPinCharacterSet Character set which is to be used for a user's app PIN
type MicrosoftGraphManagedAppPinCharacterSet string

// List of microsoft.graph.managedAppPinCharacterSet
const (
	NUMERIC MicrosoftGraphManagedAppPinCharacterSet = "numeric"
	ALPHANUMERIC_AND_SYMBOL MicrosoftGraphManagedAppPinCharacterSet = "alphanumericAndSymbol"
)

// All allowed values of MicrosoftGraphManagedAppPinCharacterSet enum
var AllowedMicrosoftGraphManagedAppPinCharacterSetEnumValues = []MicrosoftGraphManagedAppPinCharacterSet{
	"numeric",
	"alphanumericAndSymbol",
}

func (v *MicrosoftGraphManagedAppPinCharacterSet) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphManagedAppPinCharacterSet(value)
	for _, existing := range AllowedMicrosoftGraphManagedAppPinCharacterSetEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphManagedAppPinCharacterSet", value)
}

// NewMicrosoftGraphManagedAppPinCharacterSetFromValue returns a pointer to a valid MicrosoftGraphManagedAppPinCharacterSet
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphManagedAppPinCharacterSetFromValue(v string) (*MicrosoftGraphManagedAppPinCharacterSet, error) {
	ev := MicrosoftGraphManagedAppPinCharacterSet(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphManagedAppPinCharacterSet: valid values are %v", v, AllowedMicrosoftGraphManagedAppPinCharacterSetEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphManagedAppPinCharacterSet) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphManagedAppPinCharacterSetEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.managedAppPinCharacterSet value
func (v MicrosoftGraphManagedAppPinCharacterSet) Ptr() *MicrosoftGraphManagedAppPinCharacterSet {
	return &v
}

type NullableMicrosoftGraphManagedAppPinCharacterSet struct {
	value *MicrosoftGraphManagedAppPinCharacterSet
	isSet bool
}

func (v NullableMicrosoftGraphManagedAppPinCharacterSet) Get() *MicrosoftGraphManagedAppPinCharacterSet {
	return v.value
}

func (v *NullableMicrosoftGraphManagedAppPinCharacterSet) Set(val *MicrosoftGraphManagedAppPinCharacterSet) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphManagedAppPinCharacterSet) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphManagedAppPinCharacterSet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphManagedAppPinCharacterSet(val *MicrosoftGraphManagedAppPinCharacterSet) *NullableMicrosoftGraphManagedAppPinCharacterSet {
	return &NullableMicrosoftGraphManagedAppPinCharacterSet{value: val, isSet: true}
}

func (v NullableMicrosoftGraphManagedAppPinCharacterSet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphManagedAppPinCharacterSet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

