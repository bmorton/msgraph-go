/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphCallRecordsFailureInfo struct for MicrosoftGraphCallRecordsFailureInfo
type MicrosoftGraphCallRecordsFailureInfo struct {
	// Classification of why a call or portion of a call failed.
	Reason NullableString `json:"reason,omitempty"`
	// The stage when the failure occurred. Possible values are: unknown, callSetup, midcall, unknownFutureValue.
	Stage AnyOfmicrosoftGraphCallRecordsFailureStage `json:"stage,omitempty"`
}

// NewMicrosoftGraphCallRecordsFailureInfo instantiates a new MicrosoftGraphCallRecordsFailureInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphCallRecordsFailureInfo() *MicrosoftGraphCallRecordsFailureInfo {
	this := MicrosoftGraphCallRecordsFailureInfo{}
	return &this
}

// NewMicrosoftGraphCallRecordsFailureInfoWithDefaults instantiates a new MicrosoftGraphCallRecordsFailureInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphCallRecordsFailureInfoWithDefaults() *MicrosoftGraphCallRecordsFailureInfo {
	this := MicrosoftGraphCallRecordsFailureInfo{}
	return &this
}

// GetReason returns the Reason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsFailureInfo) GetReason() string {
	if o == nil || o.Reason.Get() == nil {
		var ret string
		return ret
	}
	return *o.Reason.Get()
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsFailureInfo) GetReasonOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Reason.Get(), o.Reason.IsSet()
}

// HasReason returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsFailureInfo) HasReason() bool {
	if o != nil && o.Reason.IsSet() {
		return true
	}

	return false
}

// SetReason gets a reference to the given NullableString and assigns it to the Reason field.
func (o *MicrosoftGraphCallRecordsFailureInfo) SetReason(v string) {
	o.Reason.Set(&v)
}
// SetReasonNil sets the value for Reason to be an explicit nil
func (o *MicrosoftGraphCallRecordsFailureInfo) SetReasonNil() {
	o.Reason.Set(nil)
}

// UnsetReason ensures that no value is present for Reason, not even an explicit nil
func (o *MicrosoftGraphCallRecordsFailureInfo) UnsetReason() {
	o.Reason.Unset()
}

// GetStage returns the Stage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsFailureInfo) GetStage() AnyOfmicrosoftGraphCallRecordsFailureStage {
	if o == nil  {
		var ret AnyOfmicrosoftGraphCallRecordsFailureStage
		return ret
	}
	return o.Stage
}

// GetStageOk returns a tuple with the Stage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsFailureInfo) GetStageOk() (*AnyOfmicrosoftGraphCallRecordsFailureStage, bool) {
	if o == nil || o.Stage == nil {
		return nil, false
	}
	return &o.Stage, true
}

// HasStage returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsFailureInfo) HasStage() bool {
	if o != nil && o.Stage != nil {
		return true
	}

	return false
}

// SetStage gets a reference to the given AnyOfmicrosoftGraphCallRecordsFailureStage and assigns it to the Stage field.
func (o *MicrosoftGraphCallRecordsFailureInfo) SetStage(v AnyOfmicrosoftGraphCallRecordsFailureStage) {
	o.Stage = v
}

func (o MicrosoftGraphCallRecordsFailureInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Reason.IsSet() {
		toSerialize["reason"] = o.Reason.Get()
	}
	if o.Stage != nil {
		toSerialize["stage"] = o.Stage
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphCallRecordsFailureInfo struct {
	value *MicrosoftGraphCallRecordsFailureInfo
	isSet bool
}

func (v NullableMicrosoftGraphCallRecordsFailureInfo) Get() *MicrosoftGraphCallRecordsFailureInfo {
	return v.value
}

func (v *NullableMicrosoftGraphCallRecordsFailureInfo) Set(val *MicrosoftGraphCallRecordsFailureInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphCallRecordsFailureInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphCallRecordsFailureInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphCallRecordsFailureInfo(val *MicrosoftGraphCallRecordsFailureInfo) *NullableMicrosoftGraphCallRecordsFailureInfo {
	return &NullableMicrosoftGraphCallRecordsFailureInfo{value: val, isSet: true}
}

func (v NullableMicrosoftGraphCallRecordsFailureInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphCallRecordsFailureInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


