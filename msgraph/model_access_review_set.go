/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// AccessReviewSet struct for AccessReviewSet
type AccessReviewSet struct {
	Definitions *[]MicrosoftGraphAccessReviewScheduleDefinition `json:"definitions,omitempty"`
}

// NewAccessReviewSet instantiates a new AccessReviewSet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessReviewSet() *AccessReviewSet {
	this := AccessReviewSet{}
	return &this
}

// NewAccessReviewSetWithDefaults instantiates a new AccessReviewSet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessReviewSetWithDefaults() *AccessReviewSet {
	this := AccessReviewSet{}
	return &this
}

// GetDefinitions returns the Definitions field value if set, zero value otherwise.
func (o *AccessReviewSet) GetDefinitions() []MicrosoftGraphAccessReviewScheduleDefinition {
	if o == nil || o.Definitions == nil {
		var ret []MicrosoftGraphAccessReviewScheduleDefinition
		return ret
	}
	return *o.Definitions
}

// GetDefinitionsOk returns a tuple with the Definitions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessReviewSet) GetDefinitionsOk() (*[]MicrosoftGraphAccessReviewScheduleDefinition, bool) {
	if o == nil || o.Definitions == nil {
		return nil, false
	}
	return o.Definitions, true
}

// HasDefinitions returns a boolean if a field has been set.
func (o *AccessReviewSet) HasDefinitions() bool {
	if o != nil && o.Definitions != nil {
		return true
	}

	return false
}

// SetDefinitions gets a reference to the given []MicrosoftGraphAccessReviewScheduleDefinition and assigns it to the Definitions field.
func (o *AccessReviewSet) SetDefinitions(v []MicrosoftGraphAccessReviewScheduleDefinition) {
	o.Definitions = &v
}

func (o AccessReviewSet) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Definitions != nil {
		toSerialize["definitions"] = o.Definitions
	}
	return json.Marshal(toSerialize)
}

type NullableAccessReviewSet struct {
	value *AccessReviewSet
	isSet bool
}

func (v NullableAccessReviewSet) Get() *AccessReviewSet {
	return v.value
}

func (v *NullableAccessReviewSet) Set(val *AccessReviewSet) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessReviewSet) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessReviewSet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessReviewSet(val *AccessReviewSet) *NullableAccessReviewSet {
	return &NullableAccessReviewSet{value: val, isSet: true}
}

func (v NullableAccessReviewSet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessReviewSet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


