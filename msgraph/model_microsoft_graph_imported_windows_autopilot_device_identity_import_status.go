/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus the model 'MicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus'
type MicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus string

// List of microsoft.graph.importedWindowsAutopilotDeviceIdentityImportStatus
const (
	UNKNOWN MicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus = "unknown"
	PENDING MicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus = "pending"
	PARTIAL MicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus = "partial"
	COMPLETE MicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus = "complete"
	ERROR MicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus = "error"
)

// All allowed values of MicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus enum
var AllowedMicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatusEnumValues = []MicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus{
	"unknown",
	"pending",
	"partial",
	"complete",
	"error",
}

func (v *MicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus(value)
	for _, existing := range AllowedMicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus", value)
}

// NewMicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatusFromValue returns a pointer to a valid MicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatusFromValue(v string) (*MicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus, error) {
	ev := MicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus: valid values are %v", v, AllowedMicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.importedWindowsAutopilotDeviceIdentityImportStatus value
func (v MicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus) Ptr() *MicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus {
	return &v
}

type NullableMicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus struct {
	value *MicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus
	isSet bool
}

func (v NullableMicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus) Get() *MicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus {
	return v.value
}

func (v *NullableMicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus) Set(val *MicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus(val *MicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus) *NullableMicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus {
	return &NullableMicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus{value: val, isSet: true}
}

func (v NullableMicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphImportedWindowsAutopilotDeviceIdentityImportStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

