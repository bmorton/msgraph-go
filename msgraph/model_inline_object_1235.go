/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// InlineObject1235 struct for InlineObject1235
type InlineObject1235 struct {
	X AnyOfobject `json:"x,omitempty"`
	Alpha AnyOfobject `json:"alpha,omitempty"`
	Beta AnyOfobject `json:"beta,omitempty"`
	Cumulative AnyOfobject `json:"cumulative,omitempty"`
	A AnyOfobject `json:"A,omitempty"`
	B AnyOfobject `json:"B,omitempty"`
}

// NewInlineObject1235 instantiates a new InlineObject1235 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject1235() *InlineObject1235 {
	this := InlineObject1235{}
	return &this
}

// NewInlineObject1235WithDefaults instantiates a new InlineObject1235 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject1235WithDefaults() *InlineObject1235 {
	this := InlineObject1235{}
	return &this
}

// GetX returns the X field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1235) GetX() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.X
}

// GetXOk returns a tuple with the X field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1235) GetXOk() (*AnyOfobject, bool) {
	if o == nil || o.X == nil {
		return nil, false
	}
	return &o.X, true
}

// HasX returns a boolean if a field has been set.
func (o *InlineObject1235) HasX() bool {
	if o != nil && o.X != nil {
		return true
	}

	return false
}

// SetX gets a reference to the given AnyOfobject and assigns it to the X field.
func (o *InlineObject1235) SetX(v AnyOfobject) {
	o.X = v
}

// GetAlpha returns the Alpha field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1235) GetAlpha() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Alpha
}

// GetAlphaOk returns a tuple with the Alpha field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1235) GetAlphaOk() (*AnyOfobject, bool) {
	if o == nil || o.Alpha == nil {
		return nil, false
	}
	return &o.Alpha, true
}

// HasAlpha returns a boolean if a field has been set.
func (o *InlineObject1235) HasAlpha() bool {
	if o != nil && o.Alpha != nil {
		return true
	}

	return false
}

// SetAlpha gets a reference to the given AnyOfobject and assigns it to the Alpha field.
func (o *InlineObject1235) SetAlpha(v AnyOfobject) {
	o.Alpha = v
}

// GetBeta returns the Beta field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1235) GetBeta() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Beta
}

// GetBetaOk returns a tuple with the Beta field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1235) GetBetaOk() (*AnyOfobject, bool) {
	if o == nil || o.Beta == nil {
		return nil, false
	}
	return &o.Beta, true
}

// HasBeta returns a boolean if a field has been set.
func (o *InlineObject1235) HasBeta() bool {
	if o != nil && o.Beta != nil {
		return true
	}

	return false
}

// SetBeta gets a reference to the given AnyOfobject and assigns it to the Beta field.
func (o *InlineObject1235) SetBeta(v AnyOfobject) {
	o.Beta = v
}

// GetCumulative returns the Cumulative field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1235) GetCumulative() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Cumulative
}

// GetCumulativeOk returns a tuple with the Cumulative field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1235) GetCumulativeOk() (*AnyOfobject, bool) {
	if o == nil || o.Cumulative == nil {
		return nil, false
	}
	return &o.Cumulative, true
}

// HasCumulative returns a boolean if a field has been set.
func (o *InlineObject1235) HasCumulative() bool {
	if o != nil && o.Cumulative != nil {
		return true
	}

	return false
}

// SetCumulative gets a reference to the given AnyOfobject and assigns it to the Cumulative field.
func (o *InlineObject1235) SetCumulative(v AnyOfobject) {
	o.Cumulative = v
}

// GetA returns the A field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1235) GetA() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.A
}

// GetAOk returns a tuple with the A field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1235) GetAOk() (*AnyOfobject, bool) {
	if o == nil || o.A == nil {
		return nil, false
	}
	return &o.A, true
}

// HasA returns a boolean if a field has been set.
func (o *InlineObject1235) HasA() bool {
	if o != nil && o.A != nil {
		return true
	}

	return false
}

// SetA gets a reference to the given AnyOfobject and assigns it to the A field.
func (o *InlineObject1235) SetA(v AnyOfobject) {
	o.A = v
}

// GetB returns the B field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1235) GetB() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.B
}

// GetBOk returns a tuple with the B field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1235) GetBOk() (*AnyOfobject, bool) {
	if o == nil || o.B == nil {
		return nil, false
	}
	return &o.B, true
}

// HasB returns a boolean if a field has been set.
func (o *InlineObject1235) HasB() bool {
	if o != nil && o.B != nil {
		return true
	}

	return false
}

// SetB gets a reference to the given AnyOfobject and assigns it to the B field.
func (o *InlineObject1235) SetB(v AnyOfobject) {
	o.B = v
}

func (o InlineObject1235) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.X != nil {
		toSerialize["x"] = o.X
	}
	if o.Alpha != nil {
		toSerialize["alpha"] = o.Alpha
	}
	if o.Beta != nil {
		toSerialize["beta"] = o.Beta
	}
	if o.Cumulative != nil {
		toSerialize["cumulative"] = o.Cumulative
	}
	if o.A != nil {
		toSerialize["A"] = o.A
	}
	if o.B != nil {
		toSerialize["B"] = o.B
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject1235 struct {
	value *InlineObject1235
	isSet bool
}

func (v NullableInlineObject1235) Get() *InlineObject1235 {
	return v.value
}

func (v *NullableInlineObject1235) Set(val *InlineObject1235) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject1235) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject1235) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject1235(val *InlineObject1235) *NullableInlineObject1235 {
	return &NullableInlineObject1235{value: val, isSet: true}
}

func (v NullableInlineObject1235) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject1235) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


