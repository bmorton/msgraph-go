/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphResponseStatus struct for MicrosoftGraphResponseStatus
type MicrosoftGraphResponseStatus struct {
	// The response type. Possible values are: none, organizer, tentativelyAccepted, accepted, declined, notResponded.To differentiate between none and notResponded:  none – from organizer's perspective. This value is used when the status of an attendee/participant is reported to the organizer of a meeting.  notResponded – from attendde's perspective. Indicates the attendee has not responded to the meeting request.  Clients can treat notResponded == none.  As an example, if attendee Alex hasn't responded to a meeting request, getting Alex' response status for that event in Alex' calendar returns notResponded. Getting Alex' response from the calendar of any other attendee or the organizer's returns none. Getting the organizer's response for the event in anybody's calendar also returns none.
	Response AnyOfmicrosoftGraphResponseType `json:"response,omitempty"`
	// The date and time that the response was returned. It uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
	Time NullableTime `json:"time,omitempty"`
}

// NewMicrosoftGraphResponseStatus instantiates a new MicrosoftGraphResponseStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphResponseStatus() *MicrosoftGraphResponseStatus {
	this := MicrosoftGraphResponseStatus{}
	return &this
}

// NewMicrosoftGraphResponseStatusWithDefaults instantiates a new MicrosoftGraphResponseStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphResponseStatusWithDefaults() *MicrosoftGraphResponseStatus {
	this := MicrosoftGraphResponseStatus{}
	return &this
}

// GetResponse returns the Response field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphResponseStatus) GetResponse() AnyOfmicrosoftGraphResponseType {
	if o == nil  {
		var ret AnyOfmicrosoftGraphResponseType
		return ret
	}
	return o.Response
}

// GetResponseOk returns a tuple with the Response field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphResponseStatus) GetResponseOk() (*AnyOfmicrosoftGraphResponseType, bool) {
	if o == nil || o.Response == nil {
		return nil, false
	}
	return &o.Response, true
}

// HasResponse returns a boolean if a field has been set.
func (o *MicrosoftGraphResponseStatus) HasResponse() bool {
	if o != nil && o.Response != nil {
		return true
	}

	return false
}

// SetResponse gets a reference to the given AnyOfmicrosoftGraphResponseType and assigns it to the Response field.
func (o *MicrosoftGraphResponseStatus) SetResponse(v AnyOfmicrosoftGraphResponseType) {
	o.Response = v
}

// GetTime returns the Time field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphResponseStatus) GetTime() time.Time {
	if o == nil || o.Time.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.Time.Get()
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphResponseStatus) GetTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Time.Get(), o.Time.IsSet()
}

// HasTime returns a boolean if a field has been set.
func (o *MicrosoftGraphResponseStatus) HasTime() bool {
	if o != nil && o.Time.IsSet() {
		return true
	}

	return false
}

// SetTime gets a reference to the given NullableTime and assigns it to the Time field.
func (o *MicrosoftGraphResponseStatus) SetTime(v time.Time) {
	o.Time.Set(&v)
}
// SetTimeNil sets the value for Time to be an explicit nil
func (o *MicrosoftGraphResponseStatus) SetTimeNil() {
	o.Time.Set(nil)
}

// UnsetTime ensures that no value is present for Time, not even an explicit nil
func (o *MicrosoftGraphResponseStatus) UnsetTime() {
	o.Time.Unset()
}

func (o MicrosoftGraphResponseStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Response != nil {
		toSerialize["response"] = o.Response
	}
	if o.Time.IsSet() {
		toSerialize["time"] = o.Time.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphResponseStatus struct {
	value *MicrosoftGraphResponseStatus
	isSet bool
}

func (v NullableMicrosoftGraphResponseStatus) Get() *MicrosoftGraphResponseStatus {
	return v.value
}

func (v *NullableMicrosoftGraphResponseStatus) Set(val *MicrosoftGraphResponseStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphResponseStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphResponseStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphResponseStatus(val *MicrosoftGraphResponseStatus) *NullableMicrosoftGraphResponseStatus {
	return &NullableMicrosoftGraphResponseStatus{value: val, isSet: true}
}

func (v NullableMicrosoftGraphResponseStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphResponseStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


