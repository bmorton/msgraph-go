/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject1537 struct for InlineObject1537
type InlineObject1537 struct {
	Array AnyOfobject `json:"array,omitempty"`
	Percent AnyOfobject `json:"percent,omitempty"`
}

// NewInlineObject1537 instantiates a new InlineObject1537 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject1537() *InlineObject1537 {
	this := InlineObject1537{}
	return &this
}

// NewInlineObject1537WithDefaults instantiates a new InlineObject1537 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject1537WithDefaults() *InlineObject1537 {
	this := InlineObject1537{}
	return &this
}

// GetArray returns the Array field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1537) GetArray() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Array
}

// GetArrayOk returns a tuple with the Array field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1537) GetArrayOk() (*AnyOfobject, bool) {
	if o == nil || o.Array == nil {
		return nil, false
	}
	return &o.Array, true
}

// HasArray returns a boolean if a field has been set.
func (o *InlineObject1537) HasArray() bool {
	if o != nil && o.Array != nil {
		return true
	}

	return false
}

// SetArray gets a reference to the given AnyOfobject and assigns it to the Array field.
func (o *InlineObject1537) SetArray(v AnyOfobject) {
	o.Array = v
}

// GetPercent returns the Percent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1537) GetPercent() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Percent
}

// GetPercentOk returns a tuple with the Percent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1537) GetPercentOk() (*AnyOfobject, bool) {
	if o == nil || o.Percent == nil {
		return nil, false
	}
	return &o.Percent, true
}

// HasPercent returns a boolean if a field has been set.
func (o *InlineObject1537) HasPercent() bool {
	if o != nil && o.Percent != nil {
		return true
	}

	return false
}

// SetPercent gets a reference to the given AnyOfobject and assigns it to the Percent field.
func (o *InlineObject1537) SetPercent(v AnyOfobject) {
	o.Percent = v
}

func (o InlineObject1537) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Array != nil {
		toSerialize["array"] = o.Array
	}
	if o.Percent != nil {
		toSerialize["percent"] = o.Percent
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject1537 struct {
	value *InlineObject1537
	isSet bool
}

func (v NullableInlineObject1537) Get() *InlineObject1537 {
	return v.value
}

func (v *NullableInlineObject1537) Set(val *InlineObject1537) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject1537) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject1537) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject1537(val *InlineObject1537) *NullableInlineObject1537 {
	return &NullableInlineObject1537{value: val, isSet: true}
}

func (v NullableInlineObject1537) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject1537) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


