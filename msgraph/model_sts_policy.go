/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// StsPolicy struct for StsPolicy
type StsPolicy struct {
	// A string collection containing a JSON string that defines the rules and settings for a policy. The syntax for the definition differs for each derived policy type. Required.
	Definition *[]string `json:"definition,omitempty"`
	// If set to true, activates this policy. There can be many policies for the same policy type, but only one can be activated as the organization default. Optional, default value is false.
	IsOrganizationDefault NullableBool `json:"isOrganizationDefault,omitempty"`
	AppliesTo *[]MicrosoftGraphDirectoryObject `json:"appliesTo,omitempty"`
}

// NewStsPolicy instantiates a new StsPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStsPolicy() *StsPolicy {
	this := StsPolicy{}
	return &this
}

// NewStsPolicyWithDefaults instantiates a new StsPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStsPolicyWithDefaults() *StsPolicy {
	this := StsPolicy{}
	return &this
}

// GetDefinition returns the Definition field value if set, zero value otherwise.
func (o *StsPolicy) GetDefinition() []string {
	if o == nil || o.Definition == nil {
		var ret []string
		return ret
	}
	return *o.Definition
}

// GetDefinitionOk returns a tuple with the Definition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StsPolicy) GetDefinitionOk() (*[]string, bool) {
	if o == nil || o.Definition == nil {
		return nil, false
	}
	return o.Definition, true
}

// HasDefinition returns a boolean if a field has been set.
func (o *StsPolicy) HasDefinition() bool {
	if o != nil && o.Definition != nil {
		return true
	}

	return false
}

// SetDefinition gets a reference to the given []string and assigns it to the Definition field.
func (o *StsPolicy) SetDefinition(v []string) {
	o.Definition = &v
}

// GetIsOrganizationDefault returns the IsOrganizationDefault field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StsPolicy) GetIsOrganizationDefault() bool {
	if o == nil || o.IsOrganizationDefault.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsOrganizationDefault.Get()
}

// GetIsOrganizationDefaultOk returns a tuple with the IsOrganizationDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StsPolicy) GetIsOrganizationDefaultOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsOrganizationDefault.Get(), o.IsOrganizationDefault.IsSet()
}

// HasIsOrganizationDefault returns a boolean if a field has been set.
func (o *StsPolicy) HasIsOrganizationDefault() bool {
	if o != nil && o.IsOrganizationDefault.IsSet() {
		return true
	}

	return false
}

// SetIsOrganizationDefault gets a reference to the given NullableBool and assigns it to the IsOrganizationDefault field.
func (o *StsPolicy) SetIsOrganizationDefault(v bool) {
	o.IsOrganizationDefault.Set(&v)
}
// SetIsOrganizationDefaultNil sets the value for IsOrganizationDefault to be an explicit nil
func (o *StsPolicy) SetIsOrganizationDefaultNil() {
	o.IsOrganizationDefault.Set(nil)
}

// UnsetIsOrganizationDefault ensures that no value is present for IsOrganizationDefault, not even an explicit nil
func (o *StsPolicy) UnsetIsOrganizationDefault() {
	o.IsOrganizationDefault.Unset()
}

// GetAppliesTo returns the AppliesTo field value if set, zero value otherwise.
func (o *StsPolicy) GetAppliesTo() []MicrosoftGraphDirectoryObject {
	if o == nil || o.AppliesTo == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret
	}
	return *o.AppliesTo
}

// GetAppliesToOk returns a tuple with the AppliesTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StsPolicy) GetAppliesToOk() (*[]MicrosoftGraphDirectoryObject, bool) {
	if o == nil || o.AppliesTo == nil {
		return nil, false
	}
	return o.AppliesTo, true
}

// HasAppliesTo returns a boolean if a field has been set.
func (o *StsPolicy) HasAppliesTo() bool {
	if o != nil && o.AppliesTo != nil {
		return true
	}

	return false
}

// SetAppliesTo gets a reference to the given []MicrosoftGraphDirectoryObject and assigns it to the AppliesTo field.
func (o *StsPolicy) SetAppliesTo(v []MicrosoftGraphDirectoryObject) {
	o.AppliesTo = &v
}

func (o StsPolicy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Definition != nil {
		toSerialize["definition"] = o.Definition
	}
	if o.IsOrganizationDefault.IsSet() {
		toSerialize["isOrganizationDefault"] = o.IsOrganizationDefault.Get()
	}
	if o.AppliesTo != nil {
		toSerialize["appliesTo"] = o.AppliesTo
	}
	return json.Marshal(toSerialize)
}

type NullableStsPolicy struct {
	value *StsPolicy
	isSet bool
}

func (v NullableStsPolicy) Get() *StsPolicy {
	return v.value
}

func (v *NullableStsPolicy) Set(val *StsPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableStsPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableStsPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStsPolicy(val *StsPolicy) *NullableStsPolicy {
	return &NullableStsPolicy{value: val, isSet: true}
}

func (v NullableStsPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStsPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


