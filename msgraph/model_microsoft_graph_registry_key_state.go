/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphRegistryKeyState struct for MicrosoftGraphRegistryKeyState
type MicrosoftGraphRegistryKeyState struct {
	// A Windows registry hive : HKEY_CURRENT_CONFIG HKEY_CURRENT_USER HKEY_LOCAL_MACHINE/SAM HKEY_LOCAL_MACHINE/Security HKEY_LOCAL_MACHINE/Software HKEY_LOCAL_MACHINE/System HKEY_USERS/.Default. Possible values are: unknown, currentConfig, currentUser, localMachineSam, localMachineSecurity, localMachineSoftware, localMachineSystem, usersDefault.
	Hive AnyOfmicrosoftGraphRegistryHive `json:"hive,omitempty"`
	// Current (i.e. changed) registry key (excludes HIVE).
	Key NullableString `json:"key,omitempty"`
	// Previous (i.e. before changed) registry key (excludes HIVE).
	OldKey NullableString `json:"oldKey,omitempty"`
	// Previous (i.e. before changed) registry key value data (contents).
	OldValueData NullableString `json:"oldValueData,omitempty"`
	// Previous (i.e. before changed) registry key value name.
	OldValueName NullableString `json:"oldValueName,omitempty"`
	// Operation that changed the registry key name and/or value. Possible values are: unknown, create, modify, delete.
	Operation AnyOfmicrosoftGraphRegistryOperation `json:"operation,omitempty"`
	// Process ID (PID) of the process that modified the registry key (process details will appear in the alert 'processes' collection).
	ProcessId NullableInt32 `json:"processId,omitempty"`
	// Current (i.e. changed) registry key value data (contents).
	ValueData NullableString `json:"valueData,omitempty"`
	// Current (i.e. changed) registry key value name
	ValueName NullableString `json:"valueName,omitempty"`
	// Registry key value type REG_BINARY REG_DWORD REG_DWORD_LITTLE_ENDIAN REG_DWORD_BIG_ENDIANREG_EXPAND_SZ REG_LINK REG_MULTI_SZ REG_NONE REG_QWORD REG_QWORD_LITTLE_ENDIAN REG_SZ Possible values are: unknown, binary, dword, dwordLittleEndian, dwordBigEndian, expandSz, link, multiSz, none, qword, qwordlittleEndian, sz.
	ValueType AnyOfmicrosoftGraphRegistryValueType `json:"valueType,omitempty"`
}

// NewMicrosoftGraphRegistryKeyState instantiates a new MicrosoftGraphRegistryKeyState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphRegistryKeyState() *MicrosoftGraphRegistryKeyState {
	this := MicrosoftGraphRegistryKeyState{}
	return &this
}

// NewMicrosoftGraphRegistryKeyStateWithDefaults instantiates a new MicrosoftGraphRegistryKeyState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphRegistryKeyStateWithDefaults() *MicrosoftGraphRegistryKeyState {
	this := MicrosoftGraphRegistryKeyState{}
	return &this
}

// GetHive returns the Hive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRegistryKeyState) GetHive() AnyOfmicrosoftGraphRegistryHive {
	if o == nil  {
		var ret AnyOfmicrosoftGraphRegistryHive
		return ret
	}
	return o.Hive
}

// GetHiveOk returns a tuple with the Hive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRegistryKeyState) GetHiveOk() (*AnyOfmicrosoftGraphRegistryHive, bool) {
	if o == nil || o.Hive == nil {
		return nil, false
	}
	return &o.Hive, true
}

// HasHive returns a boolean if a field has been set.
func (o *MicrosoftGraphRegistryKeyState) HasHive() bool {
	if o != nil && o.Hive != nil {
		return true
	}

	return false
}

// SetHive gets a reference to the given AnyOfmicrosoftGraphRegistryHive and assigns it to the Hive field.
func (o *MicrosoftGraphRegistryKeyState) SetHive(v AnyOfmicrosoftGraphRegistryHive) {
	o.Hive = v
}

// GetKey returns the Key field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRegistryKeyState) GetKey() string {
	if o == nil || o.Key.Get() == nil {
		var ret string
		return ret
	}
	return *o.Key.Get()
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRegistryKeyState) GetKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Key.Get(), o.Key.IsSet()
}

// HasKey returns a boolean if a field has been set.
func (o *MicrosoftGraphRegistryKeyState) HasKey() bool {
	if o != nil && o.Key.IsSet() {
		return true
	}

	return false
}

// SetKey gets a reference to the given NullableString and assigns it to the Key field.
func (o *MicrosoftGraphRegistryKeyState) SetKey(v string) {
	o.Key.Set(&v)
}
// SetKeyNil sets the value for Key to be an explicit nil
func (o *MicrosoftGraphRegistryKeyState) SetKeyNil() {
	o.Key.Set(nil)
}

// UnsetKey ensures that no value is present for Key, not even an explicit nil
func (o *MicrosoftGraphRegistryKeyState) UnsetKey() {
	o.Key.Unset()
}

// GetOldKey returns the OldKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRegistryKeyState) GetOldKey() string {
	if o == nil || o.OldKey.Get() == nil {
		var ret string
		return ret
	}
	return *o.OldKey.Get()
}

// GetOldKeyOk returns a tuple with the OldKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRegistryKeyState) GetOldKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OldKey.Get(), o.OldKey.IsSet()
}

// HasOldKey returns a boolean if a field has been set.
func (o *MicrosoftGraphRegistryKeyState) HasOldKey() bool {
	if o != nil && o.OldKey.IsSet() {
		return true
	}

	return false
}

// SetOldKey gets a reference to the given NullableString and assigns it to the OldKey field.
func (o *MicrosoftGraphRegistryKeyState) SetOldKey(v string) {
	o.OldKey.Set(&v)
}
// SetOldKeyNil sets the value for OldKey to be an explicit nil
func (o *MicrosoftGraphRegistryKeyState) SetOldKeyNil() {
	o.OldKey.Set(nil)
}

// UnsetOldKey ensures that no value is present for OldKey, not even an explicit nil
func (o *MicrosoftGraphRegistryKeyState) UnsetOldKey() {
	o.OldKey.Unset()
}

// GetOldValueData returns the OldValueData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRegistryKeyState) GetOldValueData() string {
	if o == nil || o.OldValueData.Get() == nil {
		var ret string
		return ret
	}
	return *o.OldValueData.Get()
}

// GetOldValueDataOk returns a tuple with the OldValueData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRegistryKeyState) GetOldValueDataOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OldValueData.Get(), o.OldValueData.IsSet()
}

// HasOldValueData returns a boolean if a field has been set.
func (o *MicrosoftGraphRegistryKeyState) HasOldValueData() bool {
	if o != nil && o.OldValueData.IsSet() {
		return true
	}

	return false
}

// SetOldValueData gets a reference to the given NullableString and assigns it to the OldValueData field.
func (o *MicrosoftGraphRegistryKeyState) SetOldValueData(v string) {
	o.OldValueData.Set(&v)
}
// SetOldValueDataNil sets the value for OldValueData to be an explicit nil
func (o *MicrosoftGraphRegistryKeyState) SetOldValueDataNil() {
	o.OldValueData.Set(nil)
}

// UnsetOldValueData ensures that no value is present for OldValueData, not even an explicit nil
func (o *MicrosoftGraphRegistryKeyState) UnsetOldValueData() {
	o.OldValueData.Unset()
}

// GetOldValueName returns the OldValueName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRegistryKeyState) GetOldValueName() string {
	if o == nil || o.OldValueName.Get() == nil {
		var ret string
		return ret
	}
	return *o.OldValueName.Get()
}

// GetOldValueNameOk returns a tuple with the OldValueName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRegistryKeyState) GetOldValueNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OldValueName.Get(), o.OldValueName.IsSet()
}

// HasOldValueName returns a boolean if a field has been set.
func (o *MicrosoftGraphRegistryKeyState) HasOldValueName() bool {
	if o != nil && o.OldValueName.IsSet() {
		return true
	}

	return false
}

// SetOldValueName gets a reference to the given NullableString and assigns it to the OldValueName field.
func (o *MicrosoftGraphRegistryKeyState) SetOldValueName(v string) {
	o.OldValueName.Set(&v)
}
// SetOldValueNameNil sets the value for OldValueName to be an explicit nil
func (o *MicrosoftGraphRegistryKeyState) SetOldValueNameNil() {
	o.OldValueName.Set(nil)
}

// UnsetOldValueName ensures that no value is present for OldValueName, not even an explicit nil
func (o *MicrosoftGraphRegistryKeyState) UnsetOldValueName() {
	o.OldValueName.Unset()
}

// GetOperation returns the Operation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRegistryKeyState) GetOperation() AnyOfmicrosoftGraphRegistryOperation {
	if o == nil  {
		var ret AnyOfmicrosoftGraphRegistryOperation
		return ret
	}
	return o.Operation
}

// GetOperationOk returns a tuple with the Operation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRegistryKeyState) GetOperationOk() (*AnyOfmicrosoftGraphRegistryOperation, bool) {
	if o == nil || o.Operation == nil {
		return nil, false
	}
	return &o.Operation, true
}

// HasOperation returns a boolean if a field has been set.
func (o *MicrosoftGraphRegistryKeyState) HasOperation() bool {
	if o != nil && o.Operation != nil {
		return true
	}

	return false
}

// SetOperation gets a reference to the given AnyOfmicrosoftGraphRegistryOperation and assigns it to the Operation field.
func (o *MicrosoftGraphRegistryKeyState) SetOperation(v AnyOfmicrosoftGraphRegistryOperation) {
	o.Operation = v
}

// GetProcessId returns the ProcessId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRegistryKeyState) GetProcessId() int32 {
	if o == nil || o.ProcessId.Get() == nil {
		var ret int32
		return ret
	}
	return *o.ProcessId.Get()
}

// GetProcessIdOk returns a tuple with the ProcessId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRegistryKeyState) GetProcessIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProcessId.Get(), o.ProcessId.IsSet()
}

// HasProcessId returns a boolean if a field has been set.
func (o *MicrosoftGraphRegistryKeyState) HasProcessId() bool {
	if o != nil && o.ProcessId.IsSet() {
		return true
	}

	return false
}

// SetProcessId gets a reference to the given NullableInt32 and assigns it to the ProcessId field.
func (o *MicrosoftGraphRegistryKeyState) SetProcessId(v int32) {
	o.ProcessId.Set(&v)
}
// SetProcessIdNil sets the value for ProcessId to be an explicit nil
func (o *MicrosoftGraphRegistryKeyState) SetProcessIdNil() {
	o.ProcessId.Set(nil)
}

// UnsetProcessId ensures that no value is present for ProcessId, not even an explicit nil
func (o *MicrosoftGraphRegistryKeyState) UnsetProcessId() {
	o.ProcessId.Unset()
}

// GetValueData returns the ValueData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRegistryKeyState) GetValueData() string {
	if o == nil || o.ValueData.Get() == nil {
		var ret string
		return ret
	}
	return *o.ValueData.Get()
}

// GetValueDataOk returns a tuple with the ValueData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRegistryKeyState) GetValueDataOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ValueData.Get(), o.ValueData.IsSet()
}

// HasValueData returns a boolean if a field has been set.
func (o *MicrosoftGraphRegistryKeyState) HasValueData() bool {
	if o != nil && o.ValueData.IsSet() {
		return true
	}

	return false
}

// SetValueData gets a reference to the given NullableString and assigns it to the ValueData field.
func (o *MicrosoftGraphRegistryKeyState) SetValueData(v string) {
	o.ValueData.Set(&v)
}
// SetValueDataNil sets the value for ValueData to be an explicit nil
func (o *MicrosoftGraphRegistryKeyState) SetValueDataNil() {
	o.ValueData.Set(nil)
}

// UnsetValueData ensures that no value is present for ValueData, not even an explicit nil
func (o *MicrosoftGraphRegistryKeyState) UnsetValueData() {
	o.ValueData.Unset()
}

// GetValueName returns the ValueName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRegistryKeyState) GetValueName() string {
	if o == nil || o.ValueName.Get() == nil {
		var ret string
		return ret
	}
	return *o.ValueName.Get()
}

// GetValueNameOk returns a tuple with the ValueName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRegistryKeyState) GetValueNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ValueName.Get(), o.ValueName.IsSet()
}

// HasValueName returns a boolean if a field has been set.
func (o *MicrosoftGraphRegistryKeyState) HasValueName() bool {
	if o != nil && o.ValueName.IsSet() {
		return true
	}

	return false
}

// SetValueName gets a reference to the given NullableString and assigns it to the ValueName field.
func (o *MicrosoftGraphRegistryKeyState) SetValueName(v string) {
	o.ValueName.Set(&v)
}
// SetValueNameNil sets the value for ValueName to be an explicit nil
func (o *MicrosoftGraphRegistryKeyState) SetValueNameNil() {
	o.ValueName.Set(nil)
}

// UnsetValueName ensures that no value is present for ValueName, not even an explicit nil
func (o *MicrosoftGraphRegistryKeyState) UnsetValueName() {
	o.ValueName.Unset()
}

// GetValueType returns the ValueType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphRegistryKeyState) GetValueType() AnyOfmicrosoftGraphRegistryValueType {
	if o == nil  {
		var ret AnyOfmicrosoftGraphRegistryValueType
		return ret
	}
	return o.ValueType
}

// GetValueTypeOk returns a tuple with the ValueType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphRegistryKeyState) GetValueTypeOk() (*AnyOfmicrosoftGraphRegistryValueType, bool) {
	if o == nil || o.ValueType == nil {
		return nil, false
	}
	return &o.ValueType, true
}

// HasValueType returns a boolean if a field has been set.
func (o *MicrosoftGraphRegistryKeyState) HasValueType() bool {
	if o != nil && o.ValueType != nil {
		return true
	}

	return false
}

// SetValueType gets a reference to the given AnyOfmicrosoftGraphRegistryValueType and assigns it to the ValueType field.
func (o *MicrosoftGraphRegistryKeyState) SetValueType(v AnyOfmicrosoftGraphRegistryValueType) {
	o.ValueType = v
}

func (o MicrosoftGraphRegistryKeyState) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Hive != nil {
		toSerialize["hive"] = o.Hive
	}
	if o.Key.IsSet() {
		toSerialize["key"] = o.Key.Get()
	}
	if o.OldKey.IsSet() {
		toSerialize["oldKey"] = o.OldKey.Get()
	}
	if o.OldValueData.IsSet() {
		toSerialize["oldValueData"] = o.OldValueData.Get()
	}
	if o.OldValueName.IsSet() {
		toSerialize["oldValueName"] = o.OldValueName.Get()
	}
	if o.Operation != nil {
		toSerialize["operation"] = o.Operation
	}
	if o.ProcessId.IsSet() {
		toSerialize["processId"] = o.ProcessId.Get()
	}
	if o.ValueData.IsSet() {
		toSerialize["valueData"] = o.ValueData.Get()
	}
	if o.ValueName.IsSet() {
		toSerialize["valueName"] = o.ValueName.Get()
	}
	if o.ValueType != nil {
		toSerialize["valueType"] = o.ValueType
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphRegistryKeyState struct {
	value *MicrosoftGraphRegistryKeyState
	isSet bool
}

func (v NullableMicrosoftGraphRegistryKeyState) Get() *MicrosoftGraphRegistryKeyState {
	return v.value
}

func (v *NullableMicrosoftGraphRegistryKeyState) Set(val *MicrosoftGraphRegistryKeyState) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphRegistryKeyState) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphRegistryKeyState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphRegistryKeyState(val *MicrosoftGraphRegistryKeyState) *NullableMicrosoftGraphRegistryKeyState {
	return &NullableMicrosoftGraphRegistryKeyState{value: val, isSet: true}
}

func (v NullableMicrosoftGraphRegistryKeyState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphRegistryKeyState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


