/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// EducationAssignment struct for EducationAssignment
type EducationAssignment struct {
	// Optional field to control the assignment behavior for students who are added after the assignment is published. If not specified, defaults to none value. Currently supports only two values: none or assignIfOpen.
	AddedStudentAction AnyOfmicrosoftGraphEducationAddedStudentAction `json:"addedStudentAction,omitempty"`
	// Identifies whether students can submit after the due date. If this property isn't specified during create, it defaults to true.
	AllowLateSubmissions NullableBool `json:"allowLateSubmissions,omitempty"`
	// Identifies whether students can add their own resources to a submission or if they can only modify resources added by the teacher.
	AllowStudentsToAddResourcesToSubmission NullableBool `json:"allowStudentsToAddResourcesToSubmission,omitempty"`
	// The date when the assignment should become active.  If in the future, the assignment isn't shown to the student until this date.  The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
	AssignDateTime NullableTime `json:"assignDateTime,omitempty"`
	// The moment that the assignment was published to students and the assignment shows up on the students timeline.  The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
	AssignedDateTime NullableTime `json:"assignedDateTime,omitempty"`
	// Which users, or whole class should receive a submission object once the assignment is published.
	AssignTo AnyOfobject `json:"assignTo,omitempty"`
	// Class which this assignment belongs.
	ClassId NullableString `json:"classId,omitempty"`
	// Date when the assignment will be closed for submissions. This is an optional field that can be null if the assignment does not allowLateSubmissions or when the closeDateTime is the same as the dueDateTime. But if specified, then the closeDateTime must be greater than or equal to the dueDateTime. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
	CloseDateTime NullableTime `json:"closeDateTime,omitempty"`
	// Who created the assignment.
	CreatedBy AnyOfmicrosoftGraphIdentitySet `json:"createdBy,omitempty"`
	// Moment when the assignment was created.  The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
	CreatedDateTime NullableTime `json:"createdDateTime,omitempty"`
	// Name of the assignment.
	DisplayName NullableString `json:"displayName,omitempty"`
	// Date when the students assignment is due.  The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
	DueDateTime NullableTime `json:"dueDateTime,omitempty"`
	// How the assignment will be graded.
	Grading AnyOfobject `json:"grading,omitempty"`
	// Instructions for the assignment.  This along with the display name tell the student what to do.
	Instructions AnyOfmicrosoftGraphEducationItemBody `json:"instructions,omitempty"`
	// Who last modified the assignment.
	LastModifiedBy AnyOfmicrosoftGraphIdentitySet `json:"lastModifiedBy,omitempty"`
	// Moment when the assignment was last modified.  The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
	LastModifiedDateTime NullableTime `json:"lastModifiedDateTime,omitempty"`
	// Optional field to specify the URL of the channel to post the assignment publish notification. If not specified or null, defaults to the General channel. This field only applies to assignments where the assignTo value is educationAssignmentClassRecipient. Updating the notificationChannelUrl isn't allowed after the assignment has been published.
	NotificationChannelUrl NullableString `json:"notificationChannelUrl,omitempty"`
	// Folder URL where all the file resources for this assignment are stored.
	ResourcesFolderUrl NullableString `json:"resourcesFolderUrl,omitempty"`
	// Status of the Assignment.  You can't PATCH this value.  Possible values are: draft, scheduled, published, assigned.
	Status AnyOfmicrosoftGraphEducationAssignmentStatus `json:"status,omitempty"`
	// The deep link URL for the given assignment.
	WebUrl NullableString `json:"webUrl,omitempty"`
	// When set, enables users to easily find assignments of a given type.  Read-only. Nullable.
	Categories *[]MicrosoftGraphEducationCategory `json:"categories,omitempty"`
	// Learning objects that are associated with this assignment.  Only teachers can modify this list. Nullable.
	Resources *[]MicrosoftGraphEducationAssignmentResource `json:"resources,omitempty"`
	// When set, the grading rubric attached to this assignment.
	Rubric AnyOfmicrosoftGraphEducationRubric `json:"rubric,omitempty"`
	// Once published, there is a submission object for each student representing their work and grade.  Read-only. Nullable.
	Submissions *[]MicrosoftGraphEducationSubmission `json:"submissions,omitempty"`
}

// NewEducationAssignment instantiates a new EducationAssignment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEducationAssignment() *EducationAssignment {
	this := EducationAssignment{}
	return &this
}

// NewEducationAssignmentWithDefaults instantiates a new EducationAssignment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEducationAssignmentWithDefaults() *EducationAssignment {
	this := EducationAssignment{}
	return &this
}

// GetAddedStudentAction returns the AddedStudentAction field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationAssignment) GetAddedStudentAction() AnyOfmicrosoftGraphEducationAddedStudentAction {
	if o == nil  {
		var ret AnyOfmicrosoftGraphEducationAddedStudentAction
		return ret
	}
	return o.AddedStudentAction
}

// GetAddedStudentActionOk returns a tuple with the AddedStudentAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationAssignment) GetAddedStudentActionOk() (*AnyOfmicrosoftGraphEducationAddedStudentAction, bool) {
	if o == nil || o.AddedStudentAction == nil {
		return nil, false
	}
	return &o.AddedStudentAction, true
}

// HasAddedStudentAction returns a boolean if a field has been set.
func (o *EducationAssignment) HasAddedStudentAction() bool {
	if o != nil && o.AddedStudentAction != nil {
		return true
	}

	return false
}

// SetAddedStudentAction gets a reference to the given AnyOfmicrosoftGraphEducationAddedStudentAction and assigns it to the AddedStudentAction field.
func (o *EducationAssignment) SetAddedStudentAction(v AnyOfmicrosoftGraphEducationAddedStudentAction) {
	o.AddedStudentAction = v
}

// GetAllowLateSubmissions returns the AllowLateSubmissions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationAssignment) GetAllowLateSubmissions() bool {
	if o == nil || o.AllowLateSubmissions.Get() == nil {
		var ret bool
		return ret
	}
	return *o.AllowLateSubmissions.Get()
}

// GetAllowLateSubmissionsOk returns a tuple with the AllowLateSubmissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationAssignment) GetAllowLateSubmissionsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AllowLateSubmissions.Get(), o.AllowLateSubmissions.IsSet()
}

// HasAllowLateSubmissions returns a boolean if a field has been set.
func (o *EducationAssignment) HasAllowLateSubmissions() bool {
	if o != nil && o.AllowLateSubmissions.IsSet() {
		return true
	}

	return false
}

// SetAllowLateSubmissions gets a reference to the given NullableBool and assigns it to the AllowLateSubmissions field.
func (o *EducationAssignment) SetAllowLateSubmissions(v bool) {
	o.AllowLateSubmissions.Set(&v)
}
// SetAllowLateSubmissionsNil sets the value for AllowLateSubmissions to be an explicit nil
func (o *EducationAssignment) SetAllowLateSubmissionsNil() {
	o.AllowLateSubmissions.Set(nil)
}

// UnsetAllowLateSubmissions ensures that no value is present for AllowLateSubmissions, not even an explicit nil
func (o *EducationAssignment) UnsetAllowLateSubmissions() {
	o.AllowLateSubmissions.Unset()
}

// GetAllowStudentsToAddResourcesToSubmission returns the AllowStudentsToAddResourcesToSubmission field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationAssignment) GetAllowStudentsToAddResourcesToSubmission() bool {
	if o == nil || o.AllowStudentsToAddResourcesToSubmission.Get() == nil {
		var ret bool
		return ret
	}
	return *o.AllowStudentsToAddResourcesToSubmission.Get()
}

// GetAllowStudentsToAddResourcesToSubmissionOk returns a tuple with the AllowStudentsToAddResourcesToSubmission field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationAssignment) GetAllowStudentsToAddResourcesToSubmissionOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AllowStudentsToAddResourcesToSubmission.Get(), o.AllowStudentsToAddResourcesToSubmission.IsSet()
}

// HasAllowStudentsToAddResourcesToSubmission returns a boolean if a field has been set.
func (o *EducationAssignment) HasAllowStudentsToAddResourcesToSubmission() bool {
	if o != nil && o.AllowStudentsToAddResourcesToSubmission.IsSet() {
		return true
	}

	return false
}

// SetAllowStudentsToAddResourcesToSubmission gets a reference to the given NullableBool and assigns it to the AllowStudentsToAddResourcesToSubmission field.
func (o *EducationAssignment) SetAllowStudentsToAddResourcesToSubmission(v bool) {
	o.AllowStudentsToAddResourcesToSubmission.Set(&v)
}
// SetAllowStudentsToAddResourcesToSubmissionNil sets the value for AllowStudentsToAddResourcesToSubmission to be an explicit nil
func (o *EducationAssignment) SetAllowStudentsToAddResourcesToSubmissionNil() {
	o.AllowStudentsToAddResourcesToSubmission.Set(nil)
}

// UnsetAllowStudentsToAddResourcesToSubmission ensures that no value is present for AllowStudentsToAddResourcesToSubmission, not even an explicit nil
func (o *EducationAssignment) UnsetAllowStudentsToAddResourcesToSubmission() {
	o.AllowStudentsToAddResourcesToSubmission.Unset()
}

// GetAssignDateTime returns the AssignDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationAssignment) GetAssignDateTime() time.Time {
	if o == nil || o.AssignDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.AssignDateTime.Get()
}

// GetAssignDateTimeOk returns a tuple with the AssignDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationAssignment) GetAssignDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AssignDateTime.Get(), o.AssignDateTime.IsSet()
}

// HasAssignDateTime returns a boolean if a field has been set.
func (o *EducationAssignment) HasAssignDateTime() bool {
	if o != nil && o.AssignDateTime.IsSet() {
		return true
	}

	return false
}

// SetAssignDateTime gets a reference to the given NullableTime and assigns it to the AssignDateTime field.
func (o *EducationAssignment) SetAssignDateTime(v time.Time) {
	o.AssignDateTime.Set(&v)
}
// SetAssignDateTimeNil sets the value for AssignDateTime to be an explicit nil
func (o *EducationAssignment) SetAssignDateTimeNil() {
	o.AssignDateTime.Set(nil)
}

// UnsetAssignDateTime ensures that no value is present for AssignDateTime, not even an explicit nil
func (o *EducationAssignment) UnsetAssignDateTime() {
	o.AssignDateTime.Unset()
}

// GetAssignedDateTime returns the AssignedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationAssignment) GetAssignedDateTime() time.Time {
	if o == nil || o.AssignedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.AssignedDateTime.Get()
}

// GetAssignedDateTimeOk returns a tuple with the AssignedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationAssignment) GetAssignedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AssignedDateTime.Get(), o.AssignedDateTime.IsSet()
}

// HasAssignedDateTime returns a boolean if a field has been set.
func (o *EducationAssignment) HasAssignedDateTime() bool {
	if o != nil && o.AssignedDateTime.IsSet() {
		return true
	}

	return false
}

// SetAssignedDateTime gets a reference to the given NullableTime and assigns it to the AssignedDateTime field.
func (o *EducationAssignment) SetAssignedDateTime(v time.Time) {
	o.AssignedDateTime.Set(&v)
}
// SetAssignedDateTimeNil sets the value for AssignedDateTime to be an explicit nil
func (o *EducationAssignment) SetAssignedDateTimeNil() {
	o.AssignedDateTime.Set(nil)
}

// UnsetAssignedDateTime ensures that no value is present for AssignedDateTime, not even an explicit nil
func (o *EducationAssignment) UnsetAssignedDateTime() {
	o.AssignedDateTime.Unset()
}

// GetAssignTo returns the AssignTo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationAssignment) GetAssignTo() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.AssignTo
}

// GetAssignToOk returns a tuple with the AssignTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationAssignment) GetAssignToOk() (*AnyOfobject, bool) {
	if o == nil || o.AssignTo == nil {
		return nil, false
	}
	return &o.AssignTo, true
}

// HasAssignTo returns a boolean if a field has been set.
func (o *EducationAssignment) HasAssignTo() bool {
	if o != nil && o.AssignTo != nil {
		return true
	}

	return false
}

// SetAssignTo gets a reference to the given AnyOfobject and assigns it to the AssignTo field.
func (o *EducationAssignment) SetAssignTo(v AnyOfobject) {
	o.AssignTo = v
}

// GetClassId returns the ClassId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationAssignment) GetClassId() string {
	if o == nil || o.ClassId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ClassId.Get()
}

// GetClassIdOk returns a tuple with the ClassId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationAssignment) GetClassIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClassId.Get(), o.ClassId.IsSet()
}

// HasClassId returns a boolean if a field has been set.
func (o *EducationAssignment) HasClassId() bool {
	if o != nil && o.ClassId.IsSet() {
		return true
	}

	return false
}

// SetClassId gets a reference to the given NullableString and assigns it to the ClassId field.
func (o *EducationAssignment) SetClassId(v string) {
	o.ClassId.Set(&v)
}
// SetClassIdNil sets the value for ClassId to be an explicit nil
func (o *EducationAssignment) SetClassIdNil() {
	o.ClassId.Set(nil)
}

// UnsetClassId ensures that no value is present for ClassId, not even an explicit nil
func (o *EducationAssignment) UnsetClassId() {
	o.ClassId.Unset()
}

// GetCloseDateTime returns the CloseDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationAssignment) GetCloseDateTime() time.Time {
	if o == nil || o.CloseDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.CloseDateTime.Get()
}

// GetCloseDateTimeOk returns a tuple with the CloseDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationAssignment) GetCloseDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CloseDateTime.Get(), o.CloseDateTime.IsSet()
}

// HasCloseDateTime returns a boolean if a field has been set.
func (o *EducationAssignment) HasCloseDateTime() bool {
	if o != nil && o.CloseDateTime.IsSet() {
		return true
	}

	return false
}

// SetCloseDateTime gets a reference to the given NullableTime and assigns it to the CloseDateTime field.
func (o *EducationAssignment) SetCloseDateTime(v time.Time) {
	o.CloseDateTime.Set(&v)
}
// SetCloseDateTimeNil sets the value for CloseDateTime to be an explicit nil
func (o *EducationAssignment) SetCloseDateTimeNil() {
	o.CloseDateTime.Set(nil)
}

// UnsetCloseDateTime ensures that no value is present for CloseDateTime, not even an explicit nil
func (o *EducationAssignment) UnsetCloseDateTime() {
	o.CloseDateTime.Unset()
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationAssignment) GetCreatedBy() AnyOfmicrosoftGraphIdentitySet {
	if o == nil  {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret
	}
	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationAssignment) GetCreatedByOk() (*AnyOfmicrosoftGraphIdentitySet, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *EducationAssignment) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given AnyOfmicrosoftGraphIdentitySet and assigns it to the CreatedBy field.
func (o *EducationAssignment) SetCreatedBy(v AnyOfmicrosoftGraphIdentitySet) {
	o.CreatedBy = v
}

// GetCreatedDateTime returns the CreatedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationAssignment) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime.Get()
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationAssignment) GetCreatedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatedDateTime.Get(), o.CreatedDateTime.IsSet()
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *EducationAssignment) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime.IsSet() {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given NullableTime and assigns it to the CreatedDateTime field.
func (o *EducationAssignment) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime.Set(&v)
}
// SetCreatedDateTimeNil sets the value for CreatedDateTime to be an explicit nil
func (o *EducationAssignment) SetCreatedDateTimeNil() {
	o.CreatedDateTime.Set(nil)
}

// UnsetCreatedDateTime ensures that no value is present for CreatedDateTime, not even an explicit nil
func (o *EducationAssignment) UnsetCreatedDateTime() {
	o.CreatedDateTime.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationAssignment) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationAssignment) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *EducationAssignment) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *EducationAssignment) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *EducationAssignment) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *EducationAssignment) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetDueDateTime returns the DueDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationAssignment) GetDueDateTime() time.Time {
	if o == nil || o.DueDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.DueDateTime.Get()
}

// GetDueDateTimeOk returns a tuple with the DueDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationAssignment) GetDueDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DueDateTime.Get(), o.DueDateTime.IsSet()
}

// HasDueDateTime returns a boolean if a field has been set.
func (o *EducationAssignment) HasDueDateTime() bool {
	if o != nil && o.DueDateTime.IsSet() {
		return true
	}

	return false
}

// SetDueDateTime gets a reference to the given NullableTime and assigns it to the DueDateTime field.
func (o *EducationAssignment) SetDueDateTime(v time.Time) {
	o.DueDateTime.Set(&v)
}
// SetDueDateTimeNil sets the value for DueDateTime to be an explicit nil
func (o *EducationAssignment) SetDueDateTimeNil() {
	o.DueDateTime.Set(nil)
}

// UnsetDueDateTime ensures that no value is present for DueDateTime, not even an explicit nil
func (o *EducationAssignment) UnsetDueDateTime() {
	o.DueDateTime.Unset()
}

// GetGrading returns the Grading field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationAssignment) GetGrading() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Grading
}

// GetGradingOk returns a tuple with the Grading field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationAssignment) GetGradingOk() (*AnyOfobject, bool) {
	if o == nil || o.Grading == nil {
		return nil, false
	}
	return &o.Grading, true
}

// HasGrading returns a boolean if a field has been set.
func (o *EducationAssignment) HasGrading() bool {
	if o != nil && o.Grading != nil {
		return true
	}

	return false
}

// SetGrading gets a reference to the given AnyOfobject and assigns it to the Grading field.
func (o *EducationAssignment) SetGrading(v AnyOfobject) {
	o.Grading = v
}

// GetInstructions returns the Instructions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationAssignment) GetInstructions() AnyOfmicrosoftGraphEducationItemBody {
	if o == nil  {
		var ret AnyOfmicrosoftGraphEducationItemBody
		return ret
	}
	return o.Instructions
}

// GetInstructionsOk returns a tuple with the Instructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationAssignment) GetInstructionsOk() (*AnyOfmicrosoftGraphEducationItemBody, bool) {
	if o == nil || o.Instructions == nil {
		return nil, false
	}
	return &o.Instructions, true
}

// HasInstructions returns a boolean if a field has been set.
func (o *EducationAssignment) HasInstructions() bool {
	if o != nil && o.Instructions != nil {
		return true
	}

	return false
}

// SetInstructions gets a reference to the given AnyOfmicrosoftGraphEducationItemBody and assigns it to the Instructions field.
func (o *EducationAssignment) SetInstructions(v AnyOfmicrosoftGraphEducationItemBody) {
	o.Instructions = v
}

// GetLastModifiedBy returns the LastModifiedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationAssignment) GetLastModifiedBy() AnyOfmicrosoftGraphIdentitySet {
	if o == nil  {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret
	}
	return o.LastModifiedBy
}

// GetLastModifiedByOk returns a tuple with the LastModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationAssignment) GetLastModifiedByOk() (*AnyOfmicrosoftGraphIdentitySet, bool) {
	if o == nil || o.LastModifiedBy == nil {
		return nil, false
	}
	return &o.LastModifiedBy, true
}

// HasLastModifiedBy returns a boolean if a field has been set.
func (o *EducationAssignment) HasLastModifiedBy() bool {
	if o != nil && o.LastModifiedBy != nil {
		return true
	}

	return false
}

// SetLastModifiedBy gets a reference to the given AnyOfmicrosoftGraphIdentitySet and assigns it to the LastModifiedBy field.
func (o *EducationAssignment) SetLastModifiedBy(v AnyOfmicrosoftGraphIdentitySet) {
	o.LastModifiedBy = v
}

// GetLastModifiedDateTime returns the LastModifiedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationAssignment) GetLastModifiedDateTime() time.Time {
	if o == nil || o.LastModifiedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDateTime.Get()
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationAssignment) GetLastModifiedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastModifiedDateTime.Get(), o.LastModifiedDateTime.IsSet()
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *EducationAssignment) HasLastModifiedDateTime() bool {
	if o != nil && o.LastModifiedDateTime.IsSet() {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given NullableTime and assigns it to the LastModifiedDateTime field.
func (o *EducationAssignment) SetLastModifiedDateTime(v time.Time) {
	o.LastModifiedDateTime.Set(&v)
}
// SetLastModifiedDateTimeNil sets the value for LastModifiedDateTime to be an explicit nil
func (o *EducationAssignment) SetLastModifiedDateTimeNil() {
	o.LastModifiedDateTime.Set(nil)
}

// UnsetLastModifiedDateTime ensures that no value is present for LastModifiedDateTime, not even an explicit nil
func (o *EducationAssignment) UnsetLastModifiedDateTime() {
	o.LastModifiedDateTime.Unset()
}

// GetNotificationChannelUrl returns the NotificationChannelUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationAssignment) GetNotificationChannelUrl() string {
	if o == nil || o.NotificationChannelUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.NotificationChannelUrl.Get()
}

// GetNotificationChannelUrlOk returns a tuple with the NotificationChannelUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationAssignment) GetNotificationChannelUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NotificationChannelUrl.Get(), o.NotificationChannelUrl.IsSet()
}

// HasNotificationChannelUrl returns a boolean if a field has been set.
func (o *EducationAssignment) HasNotificationChannelUrl() bool {
	if o != nil && o.NotificationChannelUrl.IsSet() {
		return true
	}

	return false
}

// SetNotificationChannelUrl gets a reference to the given NullableString and assigns it to the NotificationChannelUrl field.
func (o *EducationAssignment) SetNotificationChannelUrl(v string) {
	o.NotificationChannelUrl.Set(&v)
}
// SetNotificationChannelUrlNil sets the value for NotificationChannelUrl to be an explicit nil
func (o *EducationAssignment) SetNotificationChannelUrlNil() {
	o.NotificationChannelUrl.Set(nil)
}

// UnsetNotificationChannelUrl ensures that no value is present for NotificationChannelUrl, not even an explicit nil
func (o *EducationAssignment) UnsetNotificationChannelUrl() {
	o.NotificationChannelUrl.Unset()
}

// GetResourcesFolderUrl returns the ResourcesFolderUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationAssignment) GetResourcesFolderUrl() string {
	if o == nil || o.ResourcesFolderUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.ResourcesFolderUrl.Get()
}

// GetResourcesFolderUrlOk returns a tuple with the ResourcesFolderUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationAssignment) GetResourcesFolderUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ResourcesFolderUrl.Get(), o.ResourcesFolderUrl.IsSet()
}

// HasResourcesFolderUrl returns a boolean if a field has been set.
func (o *EducationAssignment) HasResourcesFolderUrl() bool {
	if o != nil && o.ResourcesFolderUrl.IsSet() {
		return true
	}

	return false
}

// SetResourcesFolderUrl gets a reference to the given NullableString and assigns it to the ResourcesFolderUrl field.
func (o *EducationAssignment) SetResourcesFolderUrl(v string) {
	o.ResourcesFolderUrl.Set(&v)
}
// SetResourcesFolderUrlNil sets the value for ResourcesFolderUrl to be an explicit nil
func (o *EducationAssignment) SetResourcesFolderUrlNil() {
	o.ResourcesFolderUrl.Set(nil)
}

// UnsetResourcesFolderUrl ensures that no value is present for ResourcesFolderUrl, not even an explicit nil
func (o *EducationAssignment) UnsetResourcesFolderUrl() {
	o.ResourcesFolderUrl.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationAssignment) GetStatus() AnyOfmicrosoftGraphEducationAssignmentStatus {
	if o == nil  {
		var ret AnyOfmicrosoftGraphEducationAssignmentStatus
		return ret
	}
	return o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationAssignment) GetStatusOk() (*AnyOfmicrosoftGraphEducationAssignmentStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return &o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *EducationAssignment) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given AnyOfmicrosoftGraphEducationAssignmentStatus and assigns it to the Status field.
func (o *EducationAssignment) SetStatus(v AnyOfmicrosoftGraphEducationAssignmentStatus) {
	o.Status = v
}

// GetWebUrl returns the WebUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationAssignment) GetWebUrl() string {
	if o == nil || o.WebUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.WebUrl.Get()
}

// GetWebUrlOk returns a tuple with the WebUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationAssignment) GetWebUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.WebUrl.Get(), o.WebUrl.IsSet()
}

// HasWebUrl returns a boolean if a field has been set.
func (o *EducationAssignment) HasWebUrl() bool {
	if o != nil && o.WebUrl.IsSet() {
		return true
	}

	return false
}

// SetWebUrl gets a reference to the given NullableString and assigns it to the WebUrl field.
func (o *EducationAssignment) SetWebUrl(v string) {
	o.WebUrl.Set(&v)
}
// SetWebUrlNil sets the value for WebUrl to be an explicit nil
func (o *EducationAssignment) SetWebUrlNil() {
	o.WebUrl.Set(nil)
}

// UnsetWebUrl ensures that no value is present for WebUrl, not even an explicit nil
func (o *EducationAssignment) UnsetWebUrl() {
	o.WebUrl.Unset()
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *EducationAssignment) GetCategories() []MicrosoftGraphEducationCategory {
	if o == nil || o.Categories == nil {
		var ret []MicrosoftGraphEducationCategory
		return ret
	}
	return *o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EducationAssignment) GetCategoriesOk() (*[]MicrosoftGraphEducationCategory, bool) {
	if o == nil || o.Categories == nil {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *EducationAssignment) HasCategories() bool {
	if o != nil && o.Categories != nil {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []MicrosoftGraphEducationCategory and assigns it to the Categories field.
func (o *EducationAssignment) SetCategories(v []MicrosoftGraphEducationCategory) {
	o.Categories = &v
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *EducationAssignment) GetResources() []MicrosoftGraphEducationAssignmentResource {
	if o == nil || o.Resources == nil {
		var ret []MicrosoftGraphEducationAssignmentResource
		return ret
	}
	return *o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EducationAssignment) GetResourcesOk() (*[]MicrosoftGraphEducationAssignmentResource, bool) {
	if o == nil || o.Resources == nil {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *EducationAssignment) HasResources() bool {
	if o != nil && o.Resources != nil {
		return true
	}

	return false
}

// SetResources gets a reference to the given []MicrosoftGraphEducationAssignmentResource and assigns it to the Resources field.
func (o *EducationAssignment) SetResources(v []MicrosoftGraphEducationAssignmentResource) {
	o.Resources = &v
}

// GetRubric returns the Rubric field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EducationAssignment) GetRubric() AnyOfmicrosoftGraphEducationRubric {
	if o == nil  {
		var ret AnyOfmicrosoftGraphEducationRubric
		return ret
	}
	return o.Rubric
}

// GetRubricOk returns a tuple with the Rubric field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EducationAssignment) GetRubricOk() (*AnyOfmicrosoftGraphEducationRubric, bool) {
	if o == nil || o.Rubric == nil {
		return nil, false
	}
	return &o.Rubric, true
}

// HasRubric returns a boolean if a field has been set.
func (o *EducationAssignment) HasRubric() bool {
	if o != nil && o.Rubric != nil {
		return true
	}

	return false
}

// SetRubric gets a reference to the given AnyOfmicrosoftGraphEducationRubric and assigns it to the Rubric field.
func (o *EducationAssignment) SetRubric(v AnyOfmicrosoftGraphEducationRubric) {
	o.Rubric = v
}

// GetSubmissions returns the Submissions field value if set, zero value otherwise.
func (o *EducationAssignment) GetSubmissions() []MicrosoftGraphEducationSubmission {
	if o == nil || o.Submissions == nil {
		var ret []MicrosoftGraphEducationSubmission
		return ret
	}
	return *o.Submissions
}

// GetSubmissionsOk returns a tuple with the Submissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EducationAssignment) GetSubmissionsOk() (*[]MicrosoftGraphEducationSubmission, bool) {
	if o == nil || o.Submissions == nil {
		return nil, false
	}
	return o.Submissions, true
}

// HasSubmissions returns a boolean if a field has been set.
func (o *EducationAssignment) HasSubmissions() bool {
	if o != nil && o.Submissions != nil {
		return true
	}

	return false
}

// SetSubmissions gets a reference to the given []MicrosoftGraphEducationSubmission and assigns it to the Submissions field.
func (o *EducationAssignment) SetSubmissions(v []MicrosoftGraphEducationSubmission) {
	o.Submissions = &v
}

func (o EducationAssignment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AddedStudentAction != nil {
		toSerialize["addedStudentAction"] = o.AddedStudentAction
	}
	if o.AllowLateSubmissions.IsSet() {
		toSerialize["allowLateSubmissions"] = o.AllowLateSubmissions.Get()
	}
	if o.AllowStudentsToAddResourcesToSubmission.IsSet() {
		toSerialize["allowStudentsToAddResourcesToSubmission"] = o.AllowStudentsToAddResourcesToSubmission.Get()
	}
	if o.AssignDateTime.IsSet() {
		toSerialize["assignDateTime"] = o.AssignDateTime.Get()
	}
	if o.AssignedDateTime.IsSet() {
		toSerialize["assignedDateTime"] = o.AssignedDateTime.Get()
	}
	if o.AssignTo != nil {
		toSerialize["assignTo"] = o.AssignTo
	}
	if o.ClassId.IsSet() {
		toSerialize["classId"] = o.ClassId.Get()
	}
	if o.CloseDateTime.IsSet() {
		toSerialize["closeDateTime"] = o.CloseDateTime.Get()
	}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.CreatedDateTime.IsSet() {
		toSerialize["createdDateTime"] = o.CreatedDateTime.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.DueDateTime.IsSet() {
		toSerialize["dueDateTime"] = o.DueDateTime.Get()
	}
	if o.Grading != nil {
		toSerialize["grading"] = o.Grading
	}
	if o.Instructions != nil {
		toSerialize["instructions"] = o.Instructions
	}
	if o.LastModifiedBy != nil {
		toSerialize["lastModifiedBy"] = o.LastModifiedBy
	}
	if o.LastModifiedDateTime.IsSet() {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime.Get()
	}
	if o.NotificationChannelUrl.IsSet() {
		toSerialize["notificationChannelUrl"] = o.NotificationChannelUrl.Get()
	}
	if o.ResourcesFolderUrl.IsSet() {
		toSerialize["resourcesFolderUrl"] = o.ResourcesFolderUrl.Get()
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.WebUrl.IsSet() {
		toSerialize["webUrl"] = o.WebUrl.Get()
	}
	if o.Categories != nil {
		toSerialize["categories"] = o.Categories
	}
	if o.Resources != nil {
		toSerialize["resources"] = o.Resources
	}
	if o.Rubric != nil {
		toSerialize["rubric"] = o.Rubric
	}
	if o.Submissions != nil {
		toSerialize["submissions"] = o.Submissions
	}
	return json.Marshal(toSerialize)
}

type NullableEducationAssignment struct {
	value *EducationAssignment
	isSet bool
}

func (v NullableEducationAssignment) Get() *EducationAssignment {
	return v.value
}

func (v *NullableEducationAssignment) Set(val *EducationAssignment) {
	v.value = val
	v.isSet = true
}

func (v NullableEducationAssignment) IsSet() bool {
	return v.isSet
}

func (v *NullableEducationAssignment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEducationAssignment(val *EducationAssignment) *NullableEducationAssignment {
	return &NullableEducationAssignment{value: val, isSet: true}
}

func (v NullableEducationAssignment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEducationAssignment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


