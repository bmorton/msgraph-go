/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// InlineObject1484 struct for InlineObject1484
type InlineObject1484 struct {
	OldText AnyOfobject `json:"oldText,omitempty"`
	StartNum AnyOfobject `json:"startNum,omitempty"`
	NumChars AnyOfobject `json:"numChars,omitempty"`
	NewText AnyOfobject `json:"newText,omitempty"`
}

// NewInlineObject1484 instantiates a new InlineObject1484 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject1484() *InlineObject1484 {
	this := InlineObject1484{}
	return &this
}

// NewInlineObject1484WithDefaults instantiates a new InlineObject1484 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject1484WithDefaults() *InlineObject1484 {
	this := InlineObject1484{}
	return &this
}

// GetOldText returns the OldText field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1484) GetOldText() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.OldText
}

// GetOldTextOk returns a tuple with the OldText field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1484) GetOldTextOk() (*AnyOfobject, bool) {
	if o == nil || o.OldText == nil {
		return nil, false
	}
	return &o.OldText, true
}

// HasOldText returns a boolean if a field has been set.
func (o *InlineObject1484) HasOldText() bool {
	if o != nil && o.OldText != nil {
		return true
	}

	return false
}

// SetOldText gets a reference to the given AnyOfobject and assigns it to the OldText field.
func (o *InlineObject1484) SetOldText(v AnyOfobject) {
	o.OldText = v
}

// GetStartNum returns the StartNum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1484) GetStartNum() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.StartNum
}

// GetStartNumOk returns a tuple with the StartNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1484) GetStartNumOk() (*AnyOfobject, bool) {
	if o == nil || o.StartNum == nil {
		return nil, false
	}
	return &o.StartNum, true
}

// HasStartNum returns a boolean if a field has been set.
func (o *InlineObject1484) HasStartNum() bool {
	if o != nil && o.StartNum != nil {
		return true
	}

	return false
}

// SetStartNum gets a reference to the given AnyOfobject and assigns it to the StartNum field.
func (o *InlineObject1484) SetStartNum(v AnyOfobject) {
	o.StartNum = v
}

// GetNumChars returns the NumChars field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1484) GetNumChars() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.NumChars
}

// GetNumCharsOk returns a tuple with the NumChars field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1484) GetNumCharsOk() (*AnyOfobject, bool) {
	if o == nil || o.NumChars == nil {
		return nil, false
	}
	return &o.NumChars, true
}

// HasNumChars returns a boolean if a field has been set.
func (o *InlineObject1484) HasNumChars() bool {
	if o != nil && o.NumChars != nil {
		return true
	}

	return false
}

// SetNumChars gets a reference to the given AnyOfobject and assigns it to the NumChars field.
func (o *InlineObject1484) SetNumChars(v AnyOfobject) {
	o.NumChars = v
}

// GetNewText returns the NewText field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1484) GetNewText() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.NewText
}

// GetNewTextOk returns a tuple with the NewText field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1484) GetNewTextOk() (*AnyOfobject, bool) {
	if o == nil || o.NewText == nil {
		return nil, false
	}
	return &o.NewText, true
}

// HasNewText returns a boolean if a field has been set.
func (o *InlineObject1484) HasNewText() bool {
	if o != nil && o.NewText != nil {
		return true
	}

	return false
}

// SetNewText gets a reference to the given AnyOfobject and assigns it to the NewText field.
func (o *InlineObject1484) SetNewText(v AnyOfobject) {
	o.NewText = v
}

func (o InlineObject1484) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OldText != nil {
		toSerialize["oldText"] = o.OldText
	}
	if o.StartNum != nil {
		toSerialize["startNum"] = o.StartNum
	}
	if o.NumChars != nil {
		toSerialize["numChars"] = o.NumChars
	}
	if o.NewText != nil {
		toSerialize["newText"] = o.NewText
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject1484 struct {
	value *InlineObject1484
	isSet bool
}

func (v NullableInlineObject1484) Get() *InlineObject1484 {
	return v.value
}

func (v *NullableInlineObject1484) Set(val *InlineObject1484) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject1484) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject1484) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject1484(val *InlineObject1484) *NullableInlineObject1484 {
	return &NullableInlineObject1484{value: val, isSet: true}
}

func (v NullableInlineObject1484) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject1484) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


