/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphDeviceCompliancePolicySettingStateSummary struct for MicrosoftGraphDeviceCompliancePolicySettingStateSummary
type MicrosoftGraphDeviceCompliancePolicySettingStateSummary struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// Number of compliant devices
	CompliantDeviceCount *int32 `json:"compliantDeviceCount,omitempty"`
	// Number of conflict devices
	ConflictDeviceCount *int32 `json:"conflictDeviceCount,omitempty"`
	// Number of error devices
	ErrorDeviceCount *int32 `json:"errorDeviceCount,omitempty"`
	// Number of NonCompliant devices
	NonCompliantDeviceCount *int32 `json:"nonCompliantDeviceCount,omitempty"`
	// Number of not applicable devices
	NotApplicableDeviceCount *int32 `json:"notApplicableDeviceCount,omitempty"`
	// Setting platform. Possible values are: android, iOS, macOS, windowsPhone81, windows81AndLater, windows10AndLater, androidWorkProfile, all.
	PlatformType AnyOfmicrosoftGraphPolicyPlatformType `json:"platformType,omitempty"`
	// Number of remediated devices
	RemediatedDeviceCount *int32 `json:"remediatedDeviceCount,omitempty"`
	// The setting class name and property name.
	Setting NullableString `json:"setting,omitempty"`
	// Name of the setting.
	SettingName NullableString `json:"settingName,omitempty"`
	// Number of unknown devices
	UnknownDeviceCount *int32 `json:"unknownDeviceCount,omitempty"`
	// Not yet documented
	DeviceComplianceSettingStates *[]MicrosoftGraphDeviceComplianceSettingState `json:"deviceComplianceSettingStates,omitempty"`
}

// NewMicrosoftGraphDeviceCompliancePolicySettingStateSummary instantiates a new MicrosoftGraphDeviceCompliancePolicySettingStateSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphDeviceCompliancePolicySettingStateSummary() *MicrosoftGraphDeviceCompliancePolicySettingStateSummary {
	this := MicrosoftGraphDeviceCompliancePolicySettingStateSummary{}
	return &this
}

// NewMicrosoftGraphDeviceCompliancePolicySettingStateSummaryWithDefaults instantiates a new MicrosoftGraphDeviceCompliancePolicySettingStateSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphDeviceCompliancePolicySettingStateSummaryWithDefaults() *MicrosoftGraphDeviceCompliancePolicySettingStateSummary {
	this := MicrosoftGraphDeviceCompliancePolicySettingStateSummary{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) SetId(v string) {
	o.Id = &v
}

// GetCompliantDeviceCount returns the CompliantDeviceCount field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) GetCompliantDeviceCount() int32 {
	if o == nil || o.CompliantDeviceCount == nil {
		var ret int32
		return ret
	}
	return *o.CompliantDeviceCount
}

// GetCompliantDeviceCountOk returns a tuple with the CompliantDeviceCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) GetCompliantDeviceCountOk() (*int32, bool) {
	if o == nil || o.CompliantDeviceCount == nil {
		return nil, false
	}
	return o.CompliantDeviceCount, true
}

// HasCompliantDeviceCount returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) HasCompliantDeviceCount() bool {
	if o != nil && o.CompliantDeviceCount != nil {
		return true
	}

	return false
}

// SetCompliantDeviceCount gets a reference to the given int32 and assigns it to the CompliantDeviceCount field.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) SetCompliantDeviceCount(v int32) {
	o.CompliantDeviceCount = &v
}

// GetConflictDeviceCount returns the ConflictDeviceCount field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) GetConflictDeviceCount() int32 {
	if o == nil || o.ConflictDeviceCount == nil {
		var ret int32
		return ret
	}
	return *o.ConflictDeviceCount
}

// GetConflictDeviceCountOk returns a tuple with the ConflictDeviceCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) GetConflictDeviceCountOk() (*int32, bool) {
	if o == nil || o.ConflictDeviceCount == nil {
		return nil, false
	}
	return o.ConflictDeviceCount, true
}

// HasConflictDeviceCount returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) HasConflictDeviceCount() bool {
	if o != nil && o.ConflictDeviceCount != nil {
		return true
	}

	return false
}

// SetConflictDeviceCount gets a reference to the given int32 and assigns it to the ConflictDeviceCount field.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) SetConflictDeviceCount(v int32) {
	o.ConflictDeviceCount = &v
}

// GetErrorDeviceCount returns the ErrorDeviceCount field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) GetErrorDeviceCount() int32 {
	if o == nil || o.ErrorDeviceCount == nil {
		var ret int32
		return ret
	}
	return *o.ErrorDeviceCount
}

// GetErrorDeviceCountOk returns a tuple with the ErrorDeviceCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) GetErrorDeviceCountOk() (*int32, bool) {
	if o == nil || o.ErrorDeviceCount == nil {
		return nil, false
	}
	return o.ErrorDeviceCount, true
}

// HasErrorDeviceCount returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) HasErrorDeviceCount() bool {
	if o != nil && o.ErrorDeviceCount != nil {
		return true
	}

	return false
}

// SetErrorDeviceCount gets a reference to the given int32 and assigns it to the ErrorDeviceCount field.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) SetErrorDeviceCount(v int32) {
	o.ErrorDeviceCount = &v
}

// GetNonCompliantDeviceCount returns the NonCompliantDeviceCount field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) GetNonCompliantDeviceCount() int32 {
	if o == nil || o.NonCompliantDeviceCount == nil {
		var ret int32
		return ret
	}
	return *o.NonCompliantDeviceCount
}

// GetNonCompliantDeviceCountOk returns a tuple with the NonCompliantDeviceCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) GetNonCompliantDeviceCountOk() (*int32, bool) {
	if o == nil || o.NonCompliantDeviceCount == nil {
		return nil, false
	}
	return o.NonCompliantDeviceCount, true
}

// HasNonCompliantDeviceCount returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) HasNonCompliantDeviceCount() bool {
	if o != nil && o.NonCompliantDeviceCount != nil {
		return true
	}

	return false
}

// SetNonCompliantDeviceCount gets a reference to the given int32 and assigns it to the NonCompliantDeviceCount field.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) SetNonCompliantDeviceCount(v int32) {
	o.NonCompliantDeviceCount = &v
}

// GetNotApplicableDeviceCount returns the NotApplicableDeviceCount field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) GetNotApplicableDeviceCount() int32 {
	if o == nil || o.NotApplicableDeviceCount == nil {
		var ret int32
		return ret
	}
	return *o.NotApplicableDeviceCount
}

// GetNotApplicableDeviceCountOk returns a tuple with the NotApplicableDeviceCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) GetNotApplicableDeviceCountOk() (*int32, bool) {
	if o == nil || o.NotApplicableDeviceCount == nil {
		return nil, false
	}
	return o.NotApplicableDeviceCount, true
}

// HasNotApplicableDeviceCount returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) HasNotApplicableDeviceCount() bool {
	if o != nil && o.NotApplicableDeviceCount != nil {
		return true
	}

	return false
}

// SetNotApplicableDeviceCount gets a reference to the given int32 and assigns it to the NotApplicableDeviceCount field.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) SetNotApplicableDeviceCount(v int32) {
	o.NotApplicableDeviceCount = &v
}

// GetPlatformType returns the PlatformType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) GetPlatformType() AnyOfmicrosoftGraphPolicyPlatformType {
	if o == nil  {
		var ret AnyOfmicrosoftGraphPolicyPlatformType
		return ret
	}
	return o.PlatformType
}

// GetPlatformTypeOk returns a tuple with the PlatformType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) GetPlatformTypeOk() (*AnyOfmicrosoftGraphPolicyPlatformType, bool) {
	if o == nil || o.PlatformType == nil {
		return nil, false
	}
	return &o.PlatformType, true
}

// HasPlatformType returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) HasPlatformType() bool {
	if o != nil && o.PlatformType != nil {
		return true
	}

	return false
}

// SetPlatformType gets a reference to the given AnyOfmicrosoftGraphPolicyPlatformType and assigns it to the PlatformType field.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) SetPlatformType(v AnyOfmicrosoftGraphPolicyPlatformType) {
	o.PlatformType = v
}

// GetRemediatedDeviceCount returns the RemediatedDeviceCount field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) GetRemediatedDeviceCount() int32 {
	if o == nil || o.RemediatedDeviceCount == nil {
		var ret int32
		return ret
	}
	return *o.RemediatedDeviceCount
}

// GetRemediatedDeviceCountOk returns a tuple with the RemediatedDeviceCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) GetRemediatedDeviceCountOk() (*int32, bool) {
	if o == nil || o.RemediatedDeviceCount == nil {
		return nil, false
	}
	return o.RemediatedDeviceCount, true
}

// HasRemediatedDeviceCount returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) HasRemediatedDeviceCount() bool {
	if o != nil && o.RemediatedDeviceCount != nil {
		return true
	}

	return false
}

// SetRemediatedDeviceCount gets a reference to the given int32 and assigns it to the RemediatedDeviceCount field.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) SetRemediatedDeviceCount(v int32) {
	o.RemediatedDeviceCount = &v
}

// GetSetting returns the Setting field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) GetSetting() string {
	if o == nil || o.Setting.Get() == nil {
		var ret string
		return ret
	}
	return *o.Setting.Get()
}

// GetSettingOk returns a tuple with the Setting field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) GetSettingOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Setting.Get(), o.Setting.IsSet()
}

// HasSetting returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) HasSetting() bool {
	if o != nil && o.Setting.IsSet() {
		return true
	}

	return false
}

// SetSetting gets a reference to the given NullableString and assigns it to the Setting field.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) SetSetting(v string) {
	o.Setting.Set(&v)
}
// SetSettingNil sets the value for Setting to be an explicit nil
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) SetSettingNil() {
	o.Setting.Set(nil)
}

// UnsetSetting ensures that no value is present for Setting, not even an explicit nil
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) UnsetSetting() {
	o.Setting.Unset()
}

// GetSettingName returns the SettingName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) GetSettingName() string {
	if o == nil || o.SettingName.Get() == nil {
		var ret string
		return ret
	}
	return *o.SettingName.Get()
}

// GetSettingNameOk returns a tuple with the SettingName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) GetSettingNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SettingName.Get(), o.SettingName.IsSet()
}

// HasSettingName returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) HasSettingName() bool {
	if o != nil && o.SettingName.IsSet() {
		return true
	}

	return false
}

// SetSettingName gets a reference to the given NullableString and assigns it to the SettingName field.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) SetSettingName(v string) {
	o.SettingName.Set(&v)
}
// SetSettingNameNil sets the value for SettingName to be an explicit nil
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) SetSettingNameNil() {
	o.SettingName.Set(nil)
}

// UnsetSettingName ensures that no value is present for SettingName, not even an explicit nil
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) UnsetSettingName() {
	o.SettingName.Unset()
}

// GetUnknownDeviceCount returns the UnknownDeviceCount field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) GetUnknownDeviceCount() int32 {
	if o == nil || o.UnknownDeviceCount == nil {
		var ret int32
		return ret
	}
	return *o.UnknownDeviceCount
}

// GetUnknownDeviceCountOk returns a tuple with the UnknownDeviceCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) GetUnknownDeviceCountOk() (*int32, bool) {
	if o == nil || o.UnknownDeviceCount == nil {
		return nil, false
	}
	return o.UnknownDeviceCount, true
}

// HasUnknownDeviceCount returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) HasUnknownDeviceCount() bool {
	if o != nil && o.UnknownDeviceCount != nil {
		return true
	}

	return false
}

// SetUnknownDeviceCount gets a reference to the given int32 and assigns it to the UnknownDeviceCount field.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) SetUnknownDeviceCount(v int32) {
	o.UnknownDeviceCount = &v
}

// GetDeviceComplianceSettingStates returns the DeviceComplianceSettingStates field value if set, zero value otherwise.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) GetDeviceComplianceSettingStates() []MicrosoftGraphDeviceComplianceSettingState {
	if o == nil || o.DeviceComplianceSettingStates == nil {
		var ret []MicrosoftGraphDeviceComplianceSettingState
		return ret
	}
	return *o.DeviceComplianceSettingStates
}

// GetDeviceComplianceSettingStatesOk returns a tuple with the DeviceComplianceSettingStates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) GetDeviceComplianceSettingStatesOk() (*[]MicrosoftGraphDeviceComplianceSettingState, bool) {
	if o == nil || o.DeviceComplianceSettingStates == nil {
		return nil, false
	}
	return o.DeviceComplianceSettingStates, true
}

// HasDeviceComplianceSettingStates returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) HasDeviceComplianceSettingStates() bool {
	if o != nil && o.DeviceComplianceSettingStates != nil {
		return true
	}

	return false
}

// SetDeviceComplianceSettingStates gets a reference to the given []MicrosoftGraphDeviceComplianceSettingState and assigns it to the DeviceComplianceSettingStates field.
func (o *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) SetDeviceComplianceSettingStates(v []MicrosoftGraphDeviceComplianceSettingState) {
	o.DeviceComplianceSettingStates = &v
}

func (o MicrosoftGraphDeviceCompliancePolicySettingStateSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.CompliantDeviceCount != nil {
		toSerialize["compliantDeviceCount"] = o.CompliantDeviceCount
	}
	if o.ConflictDeviceCount != nil {
		toSerialize["conflictDeviceCount"] = o.ConflictDeviceCount
	}
	if o.ErrorDeviceCount != nil {
		toSerialize["errorDeviceCount"] = o.ErrorDeviceCount
	}
	if o.NonCompliantDeviceCount != nil {
		toSerialize["nonCompliantDeviceCount"] = o.NonCompliantDeviceCount
	}
	if o.NotApplicableDeviceCount != nil {
		toSerialize["notApplicableDeviceCount"] = o.NotApplicableDeviceCount
	}
	if o.PlatformType != nil {
		toSerialize["platformType"] = o.PlatformType
	}
	if o.RemediatedDeviceCount != nil {
		toSerialize["remediatedDeviceCount"] = o.RemediatedDeviceCount
	}
	if o.Setting.IsSet() {
		toSerialize["setting"] = o.Setting.Get()
	}
	if o.SettingName.IsSet() {
		toSerialize["settingName"] = o.SettingName.Get()
	}
	if o.UnknownDeviceCount != nil {
		toSerialize["unknownDeviceCount"] = o.UnknownDeviceCount
	}
	if o.DeviceComplianceSettingStates != nil {
		toSerialize["deviceComplianceSettingStates"] = o.DeviceComplianceSettingStates
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphDeviceCompliancePolicySettingStateSummary struct {
	value *MicrosoftGraphDeviceCompliancePolicySettingStateSummary
	isSet bool
}

func (v NullableMicrosoftGraphDeviceCompliancePolicySettingStateSummary) Get() *MicrosoftGraphDeviceCompliancePolicySettingStateSummary {
	return v.value
}

func (v *NullableMicrosoftGraphDeviceCompliancePolicySettingStateSummary) Set(val *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphDeviceCompliancePolicySettingStateSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphDeviceCompliancePolicySettingStateSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphDeviceCompliancePolicySettingStateSummary(val *MicrosoftGraphDeviceCompliancePolicySettingStateSummary) *NullableMicrosoftGraphDeviceCompliancePolicySettingStateSummary {
	return &NullableMicrosoftGraphDeviceCompliancePolicySettingStateSummary{value: val, isSet: true}
}

func (v NullableMicrosoftGraphDeviceCompliancePolicySettingStateSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphDeviceCompliancePolicySettingStateSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


