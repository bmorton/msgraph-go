/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Attendee struct for Attendee
type Attendee struct {
	// An alternate date/time proposed by the attendee for a meeting request to start and end. If the attendee hasn't proposed another time, then this property is not included in a response of a GET event.
	ProposedNewTime AnyOfmicrosoftGraphTimeSlot `json:"proposedNewTime,omitempty"`
	// The attendee's response (none, accepted, declined, etc.) for the event and date-time that the response was sent.
	Status AnyOfmicrosoftGraphResponseStatus `json:"status,omitempty"`
}

// NewAttendee instantiates a new Attendee object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttendee() *Attendee {
	this := Attendee{}
	return &this
}

// NewAttendeeWithDefaults instantiates a new Attendee object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttendeeWithDefaults() *Attendee {
	this := Attendee{}
	return &this
}

// GetProposedNewTime returns the ProposedNewTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Attendee) GetProposedNewTime() AnyOfmicrosoftGraphTimeSlot {
	if o == nil  {
		var ret AnyOfmicrosoftGraphTimeSlot
		return ret
	}
	return o.ProposedNewTime
}

// GetProposedNewTimeOk returns a tuple with the ProposedNewTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Attendee) GetProposedNewTimeOk() (*AnyOfmicrosoftGraphTimeSlot, bool) {
	if o == nil || o.ProposedNewTime == nil {
		return nil, false
	}
	return &o.ProposedNewTime, true
}

// HasProposedNewTime returns a boolean if a field has been set.
func (o *Attendee) HasProposedNewTime() bool {
	if o != nil && o.ProposedNewTime != nil {
		return true
	}

	return false
}

// SetProposedNewTime gets a reference to the given AnyOfmicrosoftGraphTimeSlot and assigns it to the ProposedNewTime field.
func (o *Attendee) SetProposedNewTime(v AnyOfmicrosoftGraphTimeSlot) {
	o.ProposedNewTime = v
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Attendee) GetStatus() AnyOfmicrosoftGraphResponseStatus {
	if o == nil  {
		var ret AnyOfmicrosoftGraphResponseStatus
		return ret
	}
	return o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Attendee) GetStatusOk() (*AnyOfmicrosoftGraphResponseStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return &o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Attendee) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given AnyOfmicrosoftGraphResponseStatus and assigns it to the Status field.
func (o *Attendee) SetStatus(v AnyOfmicrosoftGraphResponseStatus) {
	o.Status = v
}

func (o Attendee) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ProposedNewTime != nil {
		toSerialize["proposedNewTime"] = o.ProposedNewTime
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableAttendee struct {
	value *Attendee
	isSet bool
}

func (v NullableAttendee) Get() *Attendee {
	return v.value
}

func (v *NullableAttendee) Set(val *Attendee) {
	v.value = val
	v.isSet = true
}

func (v NullableAttendee) IsSet() bool {
	return v.isSet
}

func (v *NullableAttendee) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttendee(val *Attendee) *NullableAttendee {
	return &NullableAttendee{value: val, isSet: true}
}

func (v NullableAttendee) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttendee) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


