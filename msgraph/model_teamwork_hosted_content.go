/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TeamworkHostedContent struct for TeamworkHostedContent
type TeamworkHostedContent struct {
	// Write only. Bytes for the hosted content (such as images).
	ContentBytes NullableString `json:"contentBytes,omitempty"`
	// Write only. Content type. sicj as image/png, image/jpg.
	ContentType NullableString `json:"contentType,omitempty"`
}

// NewTeamworkHostedContent instantiates a new TeamworkHostedContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTeamworkHostedContent() *TeamworkHostedContent {
	this := TeamworkHostedContent{}
	return &this
}

// NewTeamworkHostedContentWithDefaults instantiates a new TeamworkHostedContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTeamworkHostedContentWithDefaults() *TeamworkHostedContent {
	this := TeamworkHostedContent{}
	return &this
}

// GetContentBytes returns the ContentBytes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TeamworkHostedContent) GetContentBytes() string {
	if o == nil || o.ContentBytes.Get() == nil {
		var ret string
		return ret
	}
	return *o.ContentBytes.Get()
}

// GetContentBytesOk returns a tuple with the ContentBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TeamworkHostedContent) GetContentBytesOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ContentBytes.Get(), o.ContentBytes.IsSet()
}

// HasContentBytes returns a boolean if a field has been set.
func (o *TeamworkHostedContent) HasContentBytes() bool {
	if o != nil && o.ContentBytes.IsSet() {
		return true
	}

	return false
}

// SetContentBytes gets a reference to the given NullableString and assigns it to the ContentBytes field.
func (o *TeamworkHostedContent) SetContentBytes(v string) {
	o.ContentBytes.Set(&v)
}
// SetContentBytesNil sets the value for ContentBytes to be an explicit nil
func (o *TeamworkHostedContent) SetContentBytesNil() {
	o.ContentBytes.Set(nil)
}

// UnsetContentBytes ensures that no value is present for ContentBytes, not even an explicit nil
func (o *TeamworkHostedContent) UnsetContentBytes() {
	o.ContentBytes.Unset()
}

// GetContentType returns the ContentType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TeamworkHostedContent) GetContentType() string {
	if o == nil || o.ContentType.Get() == nil {
		var ret string
		return ret
	}
	return *o.ContentType.Get()
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TeamworkHostedContent) GetContentTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ContentType.Get(), o.ContentType.IsSet()
}

// HasContentType returns a boolean if a field has been set.
func (o *TeamworkHostedContent) HasContentType() bool {
	if o != nil && o.ContentType.IsSet() {
		return true
	}

	return false
}

// SetContentType gets a reference to the given NullableString and assigns it to the ContentType field.
func (o *TeamworkHostedContent) SetContentType(v string) {
	o.ContentType.Set(&v)
}
// SetContentTypeNil sets the value for ContentType to be an explicit nil
func (o *TeamworkHostedContent) SetContentTypeNil() {
	o.ContentType.Set(nil)
}

// UnsetContentType ensures that no value is present for ContentType, not even an explicit nil
func (o *TeamworkHostedContent) UnsetContentType() {
	o.ContentType.Unset()
}

func (o TeamworkHostedContent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ContentBytes.IsSet() {
		toSerialize["contentBytes"] = o.ContentBytes.Get()
	}
	if o.ContentType.IsSet() {
		toSerialize["contentType"] = o.ContentType.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableTeamworkHostedContent struct {
	value *TeamworkHostedContent
	isSet bool
}

func (v NullableTeamworkHostedContent) Get() *TeamworkHostedContent {
	return v.value
}

func (v *NullableTeamworkHostedContent) Set(val *TeamworkHostedContent) {
	v.value = val
	v.isSet = true
}

func (v NullableTeamworkHostedContent) IsSet() bool {
	return v.isSet
}

func (v *NullableTeamworkHostedContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTeamworkHostedContent(val *TeamworkHostedContent) *NullableTeamworkHostedContent {
	return &NullableTeamworkHostedContent{value: val, isSet: true}
}

func (v NullableTeamworkHostedContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTeamworkHostedContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


