/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphCertificateAuthority struct for MicrosoftGraphCertificateAuthority
type MicrosoftGraphCertificateAuthority struct {
	// Required. The base64 encoded string representing the public certificate.
	Certificate *string `json:"certificate,omitempty"`
	// The URL of the certificate revocation list.
	CertificateRevocationListUrl NullableString `json:"certificateRevocationListUrl,omitempty"`
	// The URL contains the list of all revoked certificates since the last time a full certificate revocaton list was created.
	DeltaCertificateRevocationListUrl NullableString `json:"deltaCertificateRevocationListUrl,omitempty"`
	// Required. true if the trusted certificate is a root authority, false if the trusted certificate is an intermediate authority.
	IsRootAuthority *bool `json:"isRootAuthority,omitempty"`
	// The issuer of the certificate, calculated from the certificate value. Read-only.
	Issuer *string `json:"issuer,omitempty"`
	// The subject key identifier of the certificate, calculated from the certificate value. Read-only.
	IssuerSki *string `json:"issuerSki,omitempty"`
}

// NewMicrosoftGraphCertificateAuthority instantiates a new MicrosoftGraphCertificateAuthority object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphCertificateAuthority() *MicrosoftGraphCertificateAuthority {
	this := MicrosoftGraphCertificateAuthority{}
	return &this
}

// NewMicrosoftGraphCertificateAuthorityWithDefaults instantiates a new MicrosoftGraphCertificateAuthority object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphCertificateAuthorityWithDefaults() *MicrosoftGraphCertificateAuthority {
	this := MicrosoftGraphCertificateAuthority{}
	return &this
}

// GetCertificate returns the Certificate field value if set, zero value otherwise.
func (o *MicrosoftGraphCertificateAuthority) GetCertificate() string {
	if o == nil || o.Certificate == nil {
		var ret string
		return ret
	}
	return *o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphCertificateAuthority) GetCertificateOk() (*string, bool) {
	if o == nil || o.Certificate == nil {
		return nil, false
	}
	return o.Certificate, true
}

// HasCertificate returns a boolean if a field has been set.
func (o *MicrosoftGraphCertificateAuthority) HasCertificate() bool {
	if o != nil && o.Certificate != nil {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given string and assigns it to the Certificate field.
func (o *MicrosoftGraphCertificateAuthority) SetCertificate(v string) {
	o.Certificate = &v
}

// GetCertificateRevocationListUrl returns the CertificateRevocationListUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCertificateAuthority) GetCertificateRevocationListUrl() string {
	if o == nil || o.CertificateRevocationListUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.CertificateRevocationListUrl.Get()
}

// GetCertificateRevocationListUrlOk returns a tuple with the CertificateRevocationListUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCertificateAuthority) GetCertificateRevocationListUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CertificateRevocationListUrl.Get(), o.CertificateRevocationListUrl.IsSet()
}

// HasCertificateRevocationListUrl returns a boolean if a field has been set.
func (o *MicrosoftGraphCertificateAuthority) HasCertificateRevocationListUrl() bool {
	if o != nil && o.CertificateRevocationListUrl.IsSet() {
		return true
	}

	return false
}

// SetCertificateRevocationListUrl gets a reference to the given NullableString and assigns it to the CertificateRevocationListUrl field.
func (o *MicrosoftGraphCertificateAuthority) SetCertificateRevocationListUrl(v string) {
	o.CertificateRevocationListUrl.Set(&v)
}
// SetCertificateRevocationListUrlNil sets the value for CertificateRevocationListUrl to be an explicit nil
func (o *MicrosoftGraphCertificateAuthority) SetCertificateRevocationListUrlNil() {
	o.CertificateRevocationListUrl.Set(nil)
}

// UnsetCertificateRevocationListUrl ensures that no value is present for CertificateRevocationListUrl, not even an explicit nil
func (o *MicrosoftGraphCertificateAuthority) UnsetCertificateRevocationListUrl() {
	o.CertificateRevocationListUrl.Unset()
}

// GetDeltaCertificateRevocationListUrl returns the DeltaCertificateRevocationListUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCertificateAuthority) GetDeltaCertificateRevocationListUrl() string {
	if o == nil || o.DeltaCertificateRevocationListUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.DeltaCertificateRevocationListUrl.Get()
}

// GetDeltaCertificateRevocationListUrlOk returns a tuple with the DeltaCertificateRevocationListUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCertificateAuthority) GetDeltaCertificateRevocationListUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DeltaCertificateRevocationListUrl.Get(), o.DeltaCertificateRevocationListUrl.IsSet()
}

// HasDeltaCertificateRevocationListUrl returns a boolean if a field has been set.
func (o *MicrosoftGraphCertificateAuthority) HasDeltaCertificateRevocationListUrl() bool {
	if o != nil && o.DeltaCertificateRevocationListUrl.IsSet() {
		return true
	}

	return false
}

// SetDeltaCertificateRevocationListUrl gets a reference to the given NullableString and assigns it to the DeltaCertificateRevocationListUrl field.
func (o *MicrosoftGraphCertificateAuthority) SetDeltaCertificateRevocationListUrl(v string) {
	o.DeltaCertificateRevocationListUrl.Set(&v)
}
// SetDeltaCertificateRevocationListUrlNil sets the value for DeltaCertificateRevocationListUrl to be an explicit nil
func (o *MicrosoftGraphCertificateAuthority) SetDeltaCertificateRevocationListUrlNil() {
	o.DeltaCertificateRevocationListUrl.Set(nil)
}

// UnsetDeltaCertificateRevocationListUrl ensures that no value is present for DeltaCertificateRevocationListUrl, not even an explicit nil
func (o *MicrosoftGraphCertificateAuthority) UnsetDeltaCertificateRevocationListUrl() {
	o.DeltaCertificateRevocationListUrl.Unset()
}

// GetIsRootAuthority returns the IsRootAuthority field value if set, zero value otherwise.
func (o *MicrosoftGraphCertificateAuthority) GetIsRootAuthority() bool {
	if o == nil || o.IsRootAuthority == nil {
		var ret bool
		return ret
	}
	return *o.IsRootAuthority
}

// GetIsRootAuthorityOk returns a tuple with the IsRootAuthority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphCertificateAuthority) GetIsRootAuthorityOk() (*bool, bool) {
	if o == nil || o.IsRootAuthority == nil {
		return nil, false
	}
	return o.IsRootAuthority, true
}

// HasIsRootAuthority returns a boolean if a field has been set.
func (o *MicrosoftGraphCertificateAuthority) HasIsRootAuthority() bool {
	if o != nil && o.IsRootAuthority != nil {
		return true
	}

	return false
}

// SetIsRootAuthority gets a reference to the given bool and assigns it to the IsRootAuthority field.
func (o *MicrosoftGraphCertificateAuthority) SetIsRootAuthority(v bool) {
	o.IsRootAuthority = &v
}

// GetIssuer returns the Issuer field value if set, zero value otherwise.
func (o *MicrosoftGraphCertificateAuthority) GetIssuer() string {
	if o == nil || o.Issuer == nil {
		var ret string
		return ret
	}
	return *o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphCertificateAuthority) GetIssuerOk() (*string, bool) {
	if o == nil || o.Issuer == nil {
		return nil, false
	}
	return o.Issuer, true
}

// HasIssuer returns a boolean if a field has been set.
func (o *MicrosoftGraphCertificateAuthority) HasIssuer() bool {
	if o != nil && o.Issuer != nil {
		return true
	}

	return false
}

// SetIssuer gets a reference to the given string and assigns it to the Issuer field.
func (o *MicrosoftGraphCertificateAuthority) SetIssuer(v string) {
	o.Issuer = &v
}

// GetIssuerSki returns the IssuerSki field value if set, zero value otherwise.
func (o *MicrosoftGraphCertificateAuthority) GetIssuerSki() string {
	if o == nil || o.IssuerSki == nil {
		var ret string
		return ret
	}
	return *o.IssuerSki
}

// GetIssuerSkiOk returns a tuple with the IssuerSki field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphCertificateAuthority) GetIssuerSkiOk() (*string, bool) {
	if o == nil || o.IssuerSki == nil {
		return nil, false
	}
	return o.IssuerSki, true
}

// HasIssuerSki returns a boolean if a field has been set.
func (o *MicrosoftGraphCertificateAuthority) HasIssuerSki() bool {
	if o != nil && o.IssuerSki != nil {
		return true
	}

	return false
}

// SetIssuerSki gets a reference to the given string and assigns it to the IssuerSki field.
func (o *MicrosoftGraphCertificateAuthority) SetIssuerSki(v string) {
	o.IssuerSki = &v
}

func (o MicrosoftGraphCertificateAuthority) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Certificate != nil {
		toSerialize["certificate"] = o.Certificate
	}
	if o.CertificateRevocationListUrl.IsSet() {
		toSerialize["certificateRevocationListUrl"] = o.CertificateRevocationListUrl.Get()
	}
	if o.DeltaCertificateRevocationListUrl.IsSet() {
		toSerialize["deltaCertificateRevocationListUrl"] = o.DeltaCertificateRevocationListUrl.Get()
	}
	if o.IsRootAuthority != nil {
		toSerialize["isRootAuthority"] = o.IsRootAuthority
	}
	if o.Issuer != nil {
		toSerialize["issuer"] = o.Issuer
	}
	if o.IssuerSki != nil {
		toSerialize["issuerSki"] = o.IssuerSki
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphCertificateAuthority struct {
	value *MicrosoftGraphCertificateAuthority
	isSet bool
}

func (v NullableMicrosoftGraphCertificateAuthority) Get() *MicrosoftGraphCertificateAuthority {
	return v.value
}

func (v *NullableMicrosoftGraphCertificateAuthority) Set(val *MicrosoftGraphCertificateAuthority) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphCertificateAuthority) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphCertificateAuthority) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphCertificateAuthority(val *MicrosoftGraphCertificateAuthority) *NullableMicrosoftGraphCertificateAuthority {
	return &NullableMicrosoftGraphCertificateAuthority{value: val, isSet: true}
}

func (v NullableMicrosoftGraphCertificateAuthority) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphCertificateAuthority) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


