/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GroupLifecyclePolicy struct for GroupLifecyclePolicy
type GroupLifecyclePolicy struct {
	// List of email address to send notifications for groups without owners. Multiple email address can be defined by separating email address with a semicolon.
	AlternateNotificationEmails NullableString `json:"alternateNotificationEmails,omitempty"`
	// Number of days before a group expires and needs to be renewed. Once renewed, the group expiration is extended by the number of days defined.
	GroupLifetimeInDays NullableInt32 `json:"groupLifetimeInDays,omitempty"`
	// The group type for which the expiration policy applies. Possible values are All, Selected or None.
	ManagedGroupTypes NullableString `json:"managedGroupTypes,omitempty"`
}

// NewGroupLifecyclePolicy instantiates a new GroupLifecyclePolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupLifecyclePolicy() *GroupLifecyclePolicy {
	this := GroupLifecyclePolicy{}
	return &this
}

// NewGroupLifecyclePolicyWithDefaults instantiates a new GroupLifecyclePolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupLifecyclePolicyWithDefaults() *GroupLifecyclePolicy {
	this := GroupLifecyclePolicy{}
	return &this
}

// GetAlternateNotificationEmails returns the AlternateNotificationEmails field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GroupLifecyclePolicy) GetAlternateNotificationEmails() string {
	if o == nil || o.AlternateNotificationEmails.Get() == nil {
		var ret string
		return ret
	}
	return *o.AlternateNotificationEmails.Get()
}

// GetAlternateNotificationEmailsOk returns a tuple with the AlternateNotificationEmails field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GroupLifecyclePolicy) GetAlternateNotificationEmailsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AlternateNotificationEmails.Get(), o.AlternateNotificationEmails.IsSet()
}

// HasAlternateNotificationEmails returns a boolean if a field has been set.
func (o *GroupLifecyclePolicy) HasAlternateNotificationEmails() bool {
	if o != nil && o.AlternateNotificationEmails.IsSet() {
		return true
	}

	return false
}

// SetAlternateNotificationEmails gets a reference to the given NullableString and assigns it to the AlternateNotificationEmails field.
func (o *GroupLifecyclePolicy) SetAlternateNotificationEmails(v string) {
	o.AlternateNotificationEmails.Set(&v)
}
// SetAlternateNotificationEmailsNil sets the value for AlternateNotificationEmails to be an explicit nil
func (o *GroupLifecyclePolicy) SetAlternateNotificationEmailsNil() {
	o.AlternateNotificationEmails.Set(nil)
}

// UnsetAlternateNotificationEmails ensures that no value is present for AlternateNotificationEmails, not even an explicit nil
func (o *GroupLifecyclePolicy) UnsetAlternateNotificationEmails() {
	o.AlternateNotificationEmails.Unset()
}

// GetGroupLifetimeInDays returns the GroupLifetimeInDays field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GroupLifecyclePolicy) GetGroupLifetimeInDays() int32 {
	if o == nil || o.GroupLifetimeInDays.Get() == nil {
		var ret int32
		return ret
	}
	return *o.GroupLifetimeInDays.Get()
}

// GetGroupLifetimeInDaysOk returns a tuple with the GroupLifetimeInDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GroupLifecyclePolicy) GetGroupLifetimeInDaysOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.GroupLifetimeInDays.Get(), o.GroupLifetimeInDays.IsSet()
}

// HasGroupLifetimeInDays returns a boolean if a field has been set.
func (o *GroupLifecyclePolicy) HasGroupLifetimeInDays() bool {
	if o != nil && o.GroupLifetimeInDays.IsSet() {
		return true
	}

	return false
}

// SetGroupLifetimeInDays gets a reference to the given NullableInt32 and assigns it to the GroupLifetimeInDays field.
func (o *GroupLifecyclePolicy) SetGroupLifetimeInDays(v int32) {
	o.GroupLifetimeInDays.Set(&v)
}
// SetGroupLifetimeInDaysNil sets the value for GroupLifetimeInDays to be an explicit nil
func (o *GroupLifecyclePolicy) SetGroupLifetimeInDaysNil() {
	o.GroupLifetimeInDays.Set(nil)
}

// UnsetGroupLifetimeInDays ensures that no value is present for GroupLifetimeInDays, not even an explicit nil
func (o *GroupLifecyclePolicy) UnsetGroupLifetimeInDays() {
	o.GroupLifetimeInDays.Unset()
}

// GetManagedGroupTypes returns the ManagedGroupTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GroupLifecyclePolicy) GetManagedGroupTypes() string {
	if o == nil || o.ManagedGroupTypes.Get() == nil {
		var ret string
		return ret
	}
	return *o.ManagedGroupTypes.Get()
}

// GetManagedGroupTypesOk returns a tuple with the ManagedGroupTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GroupLifecyclePolicy) GetManagedGroupTypesOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ManagedGroupTypes.Get(), o.ManagedGroupTypes.IsSet()
}

// HasManagedGroupTypes returns a boolean if a field has been set.
func (o *GroupLifecyclePolicy) HasManagedGroupTypes() bool {
	if o != nil && o.ManagedGroupTypes.IsSet() {
		return true
	}

	return false
}

// SetManagedGroupTypes gets a reference to the given NullableString and assigns it to the ManagedGroupTypes field.
func (o *GroupLifecyclePolicy) SetManagedGroupTypes(v string) {
	o.ManagedGroupTypes.Set(&v)
}
// SetManagedGroupTypesNil sets the value for ManagedGroupTypes to be an explicit nil
func (o *GroupLifecyclePolicy) SetManagedGroupTypesNil() {
	o.ManagedGroupTypes.Set(nil)
}

// UnsetManagedGroupTypes ensures that no value is present for ManagedGroupTypes, not even an explicit nil
func (o *GroupLifecyclePolicy) UnsetManagedGroupTypes() {
	o.ManagedGroupTypes.Unset()
}

func (o GroupLifecyclePolicy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AlternateNotificationEmails.IsSet() {
		toSerialize["alternateNotificationEmails"] = o.AlternateNotificationEmails.Get()
	}
	if o.GroupLifetimeInDays.IsSet() {
		toSerialize["groupLifetimeInDays"] = o.GroupLifetimeInDays.Get()
	}
	if o.ManagedGroupTypes.IsSet() {
		toSerialize["managedGroupTypes"] = o.ManagedGroupTypes.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableGroupLifecyclePolicy struct {
	value *GroupLifecyclePolicy
	isSet bool
}

func (v NullableGroupLifecyclePolicy) Get() *GroupLifecyclePolicy {
	return v.value
}

func (v *NullableGroupLifecyclePolicy) Set(val *GroupLifecyclePolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupLifecyclePolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupLifecyclePolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupLifecyclePolicy(val *GroupLifecyclePolicy) *NullableGroupLifecyclePolicy {
	return &NullableGroupLifecyclePolicy{value: val, isSet: true}
}

func (v NullableGroupLifecyclePolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupLifecyclePolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


