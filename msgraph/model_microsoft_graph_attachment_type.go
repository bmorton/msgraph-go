/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphAttachmentType the model 'MicrosoftGraphAttachmentType'
type MicrosoftGraphAttachmentType string

// List of microsoft.graph.attachmentType
const (
	FILE MicrosoftGraphAttachmentType = "file"
	ITEM MicrosoftGraphAttachmentType = "item"
	REFERENCE MicrosoftGraphAttachmentType = "reference"
)

// All allowed values of MicrosoftGraphAttachmentType enum
var AllowedMicrosoftGraphAttachmentTypeEnumValues = []MicrosoftGraphAttachmentType{
	"file",
	"item",
	"reference",
}

func (v *MicrosoftGraphAttachmentType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphAttachmentType(value)
	for _, existing := range AllowedMicrosoftGraphAttachmentTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphAttachmentType", value)
}

// NewMicrosoftGraphAttachmentTypeFromValue returns a pointer to a valid MicrosoftGraphAttachmentType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphAttachmentTypeFromValue(v string) (*MicrosoftGraphAttachmentType, error) {
	ev := MicrosoftGraphAttachmentType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphAttachmentType: valid values are %v", v, AllowedMicrosoftGraphAttachmentTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphAttachmentType) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphAttachmentTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.attachmentType value
func (v MicrosoftGraphAttachmentType) Ptr() *MicrosoftGraphAttachmentType {
	return &v
}

type NullableMicrosoftGraphAttachmentType struct {
	value *MicrosoftGraphAttachmentType
	isSet bool
}

func (v NullableMicrosoftGraphAttachmentType) Get() *MicrosoftGraphAttachmentType {
	return v.value
}

func (v *NullableMicrosoftGraphAttachmentType) Set(val *MicrosoftGraphAttachmentType) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphAttachmentType) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphAttachmentType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphAttachmentType(val *MicrosoftGraphAttachmentType) *NullableMicrosoftGraphAttachmentType {
	return &NullableMicrosoftGraphAttachmentType{value: val, isSet: true}
}

func (v NullableMicrosoftGraphAttachmentType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphAttachmentType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

