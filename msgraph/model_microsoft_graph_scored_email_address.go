/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphScoredEmailAddress struct for MicrosoftGraphScoredEmailAddress
type MicrosoftGraphScoredEmailAddress struct {
	// The email address.
	Address NullableString `json:"address,omitempty"`
	ItemId NullableString `json:"itemId,omitempty"`
	// The relevance score of the email address. A relevance score is used as a sort key, in relation to the other returned results. A higher relevance score value corresponds to a more relevant result. Relevance is determined by the userâ€™s communication and collaboration patterns and business relationships.
	RelevanceScore AnyOfnumberstringstring `json:"relevanceScore,omitempty"`
	SelectionLikelihood AnyOfmicrosoftGraphSelectionLikelihoodInfo `json:"selectionLikelihood,omitempty"`
}

// NewMicrosoftGraphScoredEmailAddress instantiates a new MicrosoftGraphScoredEmailAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphScoredEmailAddress() *MicrosoftGraphScoredEmailAddress {
	this := MicrosoftGraphScoredEmailAddress{}
	return &this
}

// NewMicrosoftGraphScoredEmailAddressWithDefaults instantiates a new MicrosoftGraphScoredEmailAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphScoredEmailAddressWithDefaults() *MicrosoftGraphScoredEmailAddress {
	this := MicrosoftGraphScoredEmailAddress{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphScoredEmailAddress) GetAddress() string {
	if o == nil || o.Address.Get() == nil {
		var ret string
		return ret
	}
	return *o.Address.Get()
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphScoredEmailAddress) GetAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Address.Get(), o.Address.IsSet()
}

// HasAddress returns a boolean if a field has been set.
func (o *MicrosoftGraphScoredEmailAddress) HasAddress() bool {
	if o != nil && o.Address.IsSet() {
		return true
	}

	return false
}

// SetAddress gets a reference to the given NullableString and assigns it to the Address field.
func (o *MicrosoftGraphScoredEmailAddress) SetAddress(v string) {
	o.Address.Set(&v)
}
// SetAddressNil sets the value for Address to be an explicit nil
func (o *MicrosoftGraphScoredEmailAddress) SetAddressNil() {
	o.Address.Set(nil)
}

// UnsetAddress ensures that no value is present for Address, not even an explicit nil
func (o *MicrosoftGraphScoredEmailAddress) UnsetAddress() {
	o.Address.Unset()
}

// GetItemId returns the ItemId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphScoredEmailAddress) GetItemId() string {
	if o == nil || o.ItemId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ItemId.Get()
}

// GetItemIdOk returns a tuple with the ItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphScoredEmailAddress) GetItemIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ItemId.Get(), o.ItemId.IsSet()
}

// HasItemId returns a boolean if a field has been set.
func (o *MicrosoftGraphScoredEmailAddress) HasItemId() bool {
	if o != nil && o.ItemId.IsSet() {
		return true
	}

	return false
}

// SetItemId gets a reference to the given NullableString and assigns it to the ItemId field.
func (o *MicrosoftGraphScoredEmailAddress) SetItemId(v string) {
	o.ItemId.Set(&v)
}
// SetItemIdNil sets the value for ItemId to be an explicit nil
func (o *MicrosoftGraphScoredEmailAddress) SetItemIdNil() {
	o.ItemId.Set(nil)
}

// UnsetItemId ensures that no value is present for ItemId, not even an explicit nil
func (o *MicrosoftGraphScoredEmailAddress) UnsetItemId() {
	o.ItemId.Unset()
}

// GetRelevanceScore returns the RelevanceScore field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphScoredEmailAddress) GetRelevanceScore() AnyOfnumberstringstring {
	if o == nil  {
		var ret AnyOfnumberstringstring
		return ret
	}
	return o.RelevanceScore
}

// GetRelevanceScoreOk returns a tuple with the RelevanceScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphScoredEmailAddress) GetRelevanceScoreOk() (*AnyOfnumberstringstring, bool) {
	if o == nil || o.RelevanceScore == nil {
		return nil, false
	}
	return &o.RelevanceScore, true
}

// HasRelevanceScore returns a boolean if a field has been set.
func (o *MicrosoftGraphScoredEmailAddress) HasRelevanceScore() bool {
	if o != nil && o.RelevanceScore != nil {
		return true
	}

	return false
}

// SetRelevanceScore gets a reference to the given AnyOfnumberstringstring and assigns it to the RelevanceScore field.
func (o *MicrosoftGraphScoredEmailAddress) SetRelevanceScore(v AnyOfnumberstringstring) {
	o.RelevanceScore = v
}

// GetSelectionLikelihood returns the SelectionLikelihood field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphScoredEmailAddress) GetSelectionLikelihood() AnyOfmicrosoftGraphSelectionLikelihoodInfo {
	if o == nil  {
		var ret AnyOfmicrosoftGraphSelectionLikelihoodInfo
		return ret
	}
	return o.SelectionLikelihood
}

// GetSelectionLikelihoodOk returns a tuple with the SelectionLikelihood field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphScoredEmailAddress) GetSelectionLikelihoodOk() (*AnyOfmicrosoftGraphSelectionLikelihoodInfo, bool) {
	if o == nil || o.SelectionLikelihood == nil {
		return nil, false
	}
	return &o.SelectionLikelihood, true
}

// HasSelectionLikelihood returns a boolean if a field has been set.
func (o *MicrosoftGraphScoredEmailAddress) HasSelectionLikelihood() bool {
	if o != nil && o.SelectionLikelihood != nil {
		return true
	}

	return false
}

// SetSelectionLikelihood gets a reference to the given AnyOfmicrosoftGraphSelectionLikelihoodInfo and assigns it to the SelectionLikelihood field.
func (o *MicrosoftGraphScoredEmailAddress) SetSelectionLikelihood(v AnyOfmicrosoftGraphSelectionLikelihoodInfo) {
	o.SelectionLikelihood = v
}

func (o MicrosoftGraphScoredEmailAddress) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Address.IsSet() {
		toSerialize["address"] = o.Address.Get()
	}
	if o.ItemId.IsSet() {
		toSerialize["itemId"] = o.ItemId.Get()
	}
	if o.RelevanceScore != nil {
		toSerialize["relevanceScore"] = o.RelevanceScore
	}
	if o.SelectionLikelihood != nil {
		toSerialize["selectionLikelihood"] = o.SelectionLikelihood
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphScoredEmailAddress struct {
	value *MicrosoftGraphScoredEmailAddress
	isSet bool
}

func (v NullableMicrosoftGraphScoredEmailAddress) Get() *MicrosoftGraphScoredEmailAddress {
	return v.value
}

func (v *NullableMicrosoftGraphScoredEmailAddress) Set(val *MicrosoftGraphScoredEmailAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphScoredEmailAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphScoredEmailAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphScoredEmailAddress(val *MicrosoftGraphScoredEmailAddress) *NullableMicrosoftGraphScoredEmailAddress {
	return &NullableMicrosoftGraphScoredEmailAddress{value: val, isSet: true}
}

func (v NullableMicrosoftGraphScoredEmailAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphScoredEmailAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


