/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphTermsOfUseContainer struct for MicrosoftGraphTermsOfUseContainer
type MicrosoftGraphTermsOfUseContainer struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	AgreementAcceptances *[]MicrosoftGraphAgreementAcceptance `json:"agreementAcceptances,omitempty"`
	Agreements *[]MicrosoftGraphAgreement `json:"agreements,omitempty"`
}

// NewMicrosoftGraphTermsOfUseContainer instantiates a new MicrosoftGraphTermsOfUseContainer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphTermsOfUseContainer() *MicrosoftGraphTermsOfUseContainer {
	this := MicrosoftGraphTermsOfUseContainer{}
	return &this
}

// NewMicrosoftGraphTermsOfUseContainerWithDefaults instantiates a new MicrosoftGraphTermsOfUseContainer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphTermsOfUseContainerWithDefaults() *MicrosoftGraphTermsOfUseContainer {
	this := MicrosoftGraphTermsOfUseContainer{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphTermsOfUseContainer) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTermsOfUseContainer) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphTermsOfUseContainer) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphTermsOfUseContainer) SetId(v string) {
	o.Id = &v
}

// GetAgreementAcceptances returns the AgreementAcceptances field value if set, zero value otherwise.
func (o *MicrosoftGraphTermsOfUseContainer) GetAgreementAcceptances() []MicrosoftGraphAgreementAcceptance {
	if o == nil || o.AgreementAcceptances == nil {
		var ret []MicrosoftGraphAgreementAcceptance
		return ret
	}
	return *o.AgreementAcceptances
}

// GetAgreementAcceptancesOk returns a tuple with the AgreementAcceptances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTermsOfUseContainer) GetAgreementAcceptancesOk() (*[]MicrosoftGraphAgreementAcceptance, bool) {
	if o == nil || o.AgreementAcceptances == nil {
		return nil, false
	}
	return o.AgreementAcceptances, true
}

// HasAgreementAcceptances returns a boolean if a field has been set.
func (o *MicrosoftGraphTermsOfUseContainer) HasAgreementAcceptances() bool {
	if o != nil && o.AgreementAcceptances != nil {
		return true
	}

	return false
}

// SetAgreementAcceptances gets a reference to the given []MicrosoftGraphAgreementAcceptance and assigns it to the AgreementAcceptances field.
func (o *MicrosoftGraphTermsOfUseContainer) SetAgreementAcceptances(v []MicrosoftGraphAgreementAcceptance) {
	o.AgreementAcceptances = &v
}

// GetAgreements returns the Agreements field value if set, zero value otherwise.
func (o *MicrosoftGraphTermsOfUseContainer) GetAgreements() []MicrosoftGraphAgreement {
	if o == nil || o.Agreements == nil {
		var ret []MicrosoftGraphAgreement
		return ret
	}
	return *o.Agreements
}

// GetAgreementsOk returns a tuple with the Agreements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphTermsOfUseContainer) GetAgreementsOk() (*[]MicrosoftGraphAgreement, bool) {
	if o == nil || o.Agreements == nil {
		return nil, false
	}
	return o.Agreements, true
}

// HasAgreements returns a boolean if a field has been set.
func (o *MicrosoftGraphTermsOfUseContainer) HasAgreements() bool {
	if o != nil && o.Agreements != nil {
		return true
	}

	return false
}

// SetAgreements gets a reference to the given []MicrosoftGraphAgreement and assigns it to the Agreements field.
func (o *MicrosoftGraphTermsOfUseContainer) SetAgreements(v []MicrosoftGraphAgreement) {
	o.Agreements = &v
}

func (o MicrosoftGraphTermsOfUseContainer) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.AgreementAcceptances != nil {
		toSerialize["agreementAcceptances"] = o.AgreementAcceptances
	}
	if o.Agreements != nil {
		toSerialize["agreements"] = o.Agreements
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphTermsOfUseContainer struct {
	value *MicrosoftGraphTermsOfUseContainer
	isSet bool
}

func (v NullableMicrosoftGraphTermsOfUseContainer) Get() *MicrosoftGraphTermsOfUseContainer {
	return v.value
}

func (v *NullableMicrosoftGraphTermsOfUseContainer) Set(val *MicrosoftGraphTermsOfUseContainer) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphTermsOfUseContainer) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphTermsOfUseContainer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphTermsOfUseContainer(val *MicrosoftGraphTermsOfUseContainer) *NullableMicrosoftGraphTermsOfUseContainer {
	return &NullableMicrosoftGraphTermsOfUseContainer{value: val, isSet: true}
}

func (v NullableMicrosoftGraphTermsOfUseContainer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphTermsOfUseContainer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


