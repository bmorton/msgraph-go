/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"time"
)

// DeviceManagementTroubleshootingEvent Event representing an general failure.
type DeviceManagementTroubleshootingEvent struct {
	// Id used for tracing the failure in the service.
	CorrelationId NullableString `json:"correlationId,omitempty"`
	// Time when the event occurred .
	EventDateTime *time.Time `json:"eventDateTime,omitempty"`
}

// NewDeviceManagementTroubleshootingEvent instantiates a new DeviceManagementTroubleshootingEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceManagementTroubleshootingEvent() *DeviceManagementTroubleshootingEvent {
	this := DeviceManagementTroubleshootingEvent{}
	return &this
}

// NewDeviceManagementTroubleshootingEventWithDefaults instantiates a new DeviceManagementTroubleshootingEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceManagementTroubleshootingEventWithDefaults() *DeviceManagementTroubleshootingEvent {
	this := DeviceManagementTroubleshootingEvent{}
	return &this
}

// GetCorrelationId returns the CorrelationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeviceManagementTroubleshootingEvent) GetCorrelationId() string {
	if o == nil || o.CorrelationId.Get() == nil {
		var ret string
		return ret
	}
	return *o.CorrelationId.Get()
}

// GetCorrelationIdOk returns a tuple with the CorrelationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeviceManagementTroubleshootingEvent) GetCorrelationIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CorrelationId.Get(), o.CorrelationId.IsSet()
}

// HasCorrelationId returns a boolean if a field has been set.
func (o *DeviceManagementTroubleshootingEvent) HasCorrelationId() bool {
	if o != nil && o.CorrelationId.IsSet() {
		return true
	}

	return false
}

// SetCorrelationId gets a reference to the given NullableString and assigns it to the CorrelationId field.
func (o *DeviceManagementTroubleshootingEvent) SetCorrelationId(v string) {
	o.CorrelationId.Set(&v)
}
// SetCorrelationIdNil sets the value for CorrelationId to be an explicit nil
func (o *DeviceManagementTroubleshootingEvent) SetCorrelationIdNil() {
	o.CorrelationId.Set(nil)
}

// UnsetCorrelationId ensures that no value is present for CorrelationId, not even an explicit nil
func (o *DeviceManagementTroubleshootingEvent) UnsetCorrelationId() {
	o.CorrelationId.Unset()
}

// GetEventDateTime returns the EventDateTime field value if set, zero value otherwise.
func (o *DeviceManagementTroubleshootingEvent) GetEventDateTime() time.Time {
	if o == nil || o.EventDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.EventDateTime
}

// GetEventDateTimeOk returns a tuple with the EventDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceManagementTroubleshootingEvent) GetEventDateTimeOk() (*time.Time, bool) {
	if o == nil || o.EventDateTime == nil {
		return nil, false
	}
	return o.EventDateTime, true
}

// HasEventDateTime returns a boolean if a field has been set.
func (o *DeviceManagementTroubleshootingEvent) HasEventDateTime() bool {
	if o != nil && o.EventDateTime != nil {
		return true
	}

	return false
}

// SetEventDateTime gets a reference to the given time.Time and assigns it to the EventDateTime field.
func (o *DeviceManagementTroubleshootingEvent) SetEventDateTime(v time.Time) {
	o.EventDateTime = &v
}

func (o DeviceManagementTroubleshootingEvent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CorrelationId.IsSet() {
		toSerialize["correlationId"] = o.CorrelationId.Get()
	}
	if o.EventDateTime != nil {
		toSerialize["eventDateTime"] = o.EventDateTime
	}
	return json.Marshal(toSerialize)
}

type NullableDeviceManagementTroubleshootingEvent struct {
	value *DeviceManagementTroubleshootingEvent
	isSet bool
}

func (v NullableDeviceManagementTroubleshootingEvent) Get() *DeviceManagementTroubleshootingEvent {
	return v.value
}

func (v *NullableDeviceManagementTroubleshootingEvent) Set(val *DeviceManagementTroubleshootingEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceManagementTroubleshootingEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceManagementTroubleshootingEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceManagementTroubleshootingEvent(val *DeviceManagementTroubleshootingEvent) *NullableDeviceManagementTroubleshootingEvent {
	return &NullableDeviceManagementTroubleshootingEvent{value: val, isSet: true}
}

func (v NullableDeviceManagementTroubleshootingEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceManagementTroubleshootingEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


