/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphExternalConnectorsProperty struct for MicrosoftGraphExternalConnectorsProperty
type MicrosoftGraphExternalConnectorsProperty struct {
	// A set of aliases or a friendly names for the property. Maximum 32 characters. Only alphanumeric characters allowed. For example, each string may not contain control characters, whitespace, or any of the following: :, ;, ,, (, ), [, ], {, }, %, $, +, !, *, =, &, ?, @, #, /, ~, ', ', <, >, `, ^. Optional.
	Aliases *[]*string `json:"aliases,omitempty"`
	// Specifies if the property is queryable. Queryable properties can be used in Keyword Query Language (KQL) queries. Optional.
	IsQueryable NullableBool `json:"isQueryable,omitempty"`
	// Specifies if the property is refinable.  Refinable properties can be used to filter search results in the Search API and add a refiner control in the Microsoft Search user experience. Optional.
	IsRefinable NullableBool `json:"isRefinable,omitempty"`
	// Specifies if the property is retrievable. Retrievable properties are returned in the result set when items are returned by the search API. Retrievable properties are also available to add to the display template used to render search results. Optional.
	IsRetrievable NullableBool `json:"isRetrievable,omitempty"`
	// Specifies if the property is searchable. Only properties of type String or StringCollection can be searchable. Non-searchable properties are not added to the search index. Optional.
	IsSearchable NullableBool `json:"isSearchable,omitempty"`
	// Specifies one or more well-known tags added against a property. Labels help Microsoft Search understand the semantics of the data in the connection. Adding appropriate labels would result in an enhanced search experience (e.g. better relevance). The possible values are: title, url, createdBy, lastModifiedBy, authors, createdDateTime, lastModifiedDateTime, fileName, fileExtension, unknownFutureValue. Optional.
	Labels *[]*AnyOfmicrosoftGraphExternalConnectorsLabel `json:"labels,omitempty"`
	// The name of the property. Maximum 32 characters. Only alphanumeric characters allowed. For example, each string may not contain control characters, whitespace, or any of the following: :, ;, ,, (, ), [, ], {, }, %, $, +, !, *, =, &, ?, @, #, /, ~, ', ', <, >, `, ^.  Required.
	Name *string `json:"name,omitempty"`
	// The data type of the property. Possible values are: string, int64, double, dateTime, boolean, stringCollection, int64Collection, doubleCollection, dateTimeCollection, unknownFutureValue.
	Type AnyOfmicrosoftGraphExternalConnectorsPropertyType `json:"type,omitempty"`
}

// NewMicrosoftGraphExternalConnectorsProperty instantiates a new MicrosoftGraphExternalConnectorsProperty object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphExternalConnectorsProperty() *MicrosoftGraphExternalConnectorsProperty {
	this := MicrosoftGraphExternalConnectorsProperty{}
	return &this
}

// NewMicrosoftGraphExternalConnectorsPropertyWithDefaults instantiates a new MicrosoftGraphExternalConnectorsProperty object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphExternalConnectorsPropertyWithDefaults() *MicrosoftGraphExternalConnectorsProperty {
	this := MicrosoftGraphExternalConnectorsProperty{}
	return &this
}

// GetAliases returns the Aliases field value if set, zero value otherwise.
func (o *MicrosoftGraphExternalConnectorsProperty) GetAliases() []*string {
	if o == nil || o.Aliases == nil {
		var ret []*string
		return ret
	}
	return *o.Aliases
}

// GetAliasesOk returns a tuple with the Aliases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphExternalConnectorsProperty) GetAliasesOk() (*[]*string, bool) {
	if o == nil || o.Aliases == nil {
		return nil, false
	}
	return o.Aliases, true
}

// HasAliases returns a boolean if a field has been set.
func (o *MicrosoftGraphExternalConnectorsProperty) HasAliases() bool {
	if o != nil && o.Aliases != nil {
		return true
	}

	return false
}

// SetAliases gets a reference to the given []*string and assigns it to the Aliases field.
func (o *MicrosoftGraphExternalConnectorsProperty) SetAliases(v []*string) {
	o.Aliases = &v
}

// GetIsQueryable returns the IsQueryable field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphExternalConnectorsProperty) GetIsQueryable() bool {
	if o == nil || o.IsQueryable.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsQueryable.Get()
}

// GetIsQueryableOk returns a tuple with the IsQueryable field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphExternalConnectorsProperty) GetIsQueryableOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsQueryable.Get(), o.IsQueryable.IsSet()
}

// HasIsQueryable returns a boolean if a field has been set.
func (o *MicrosoftGraphExternalConnectorsProperty) HasIsQueryable() bool {
	if o != nil && o.IsQueryable.IsSet() {
		return true
	}

	return false
}

// SetIsQueryable gets a reference to the given NullableBool and assigns it to the IsQueryable field.
func (o *MicrosoftGraphExternalConnectorsProperty) SetIsQueryable(v bool) {
	o.IsQueryable.Set(&v)
}
// SetIsQueryableNil sets the value for IsQueryable to be an explicit nil
func (o *MicrosoftGraphExternalConnectorsProperty) SetIsQueryableNil() {
	o.IsQueryable.Set(nil)
}

// UnsetIsQueryable ensures that no value is present for IsQueryable, not even an explicit nil
func (o *MicrosoftGraphExternalConnectorsProperty) UnsetIsQueryable() {
	o.IsQueryable.Unset()
}

// GetIsRefinable returns the IsRefinable field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphExternalConnectorsProperty) GetIsRefinable() bool {
	if o == nil || o.IsRefinable.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsRefinable.Get()
}

// GetIsRefinableOk returns a tuple with the IsRefinable field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphExternalConnectorsProperty) GetIsRefinableOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsRefinable.Get(), o.IsRefinable.IsSet()
}

// HasIsRefinable returns a boolean if a field has been set.
func (o *MicrosoftGraphExternalConnectorsProperty) HasIsRefinable() bool {
	if o != nil && o.IsRefinable.IsSet() {
		return true
	}

	return false
}

// SetIsRefinable gets a reference to the given NullableBool and assigns it to the IsRefinable field.
func (o *MicrosoftGraphExternalConnectorsProperty) SetIsRefinable(v bool) {
	o.IsRefinable.Set(&v)
}
// SetIsRefinableNil sets the value for IsRefinable to be an explicit nil
func (o *MicrosoftGraphExternalConnectorsProperty) SetIsRefinableNil() {
	o.IsRefinable.Set(nil)
}

// UnsetIsRefinable ensures that no value is present for IsRefinable, not even an explicit nil
func (o *MicrosoftGraphExternalConnectorsProperty) UnsetIsRefinable() {
	o.IsRefinable.Unset()
}

// GetIsRetrievable returns the IsRetrievable field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphExternalConnectorsProperty) GetIsRetrievable() bool {
	if o == nil || o.IsRetrievable.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsRetrievable.Get()
}

// GetIsRetrievableOk returns a tuple with the IsRetrievable field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphExternalConnectorsProperty) GetIsRetrievableOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsRetrievable.Get(), o.IsRetrievable.IsSet()
}

// HasIsRetrievable returns a boolean if a field has been set.
func (o *MicrosoftGraphExternalConnectorsProperty) HasIsRetrievable() bool {
	if o != nil && o.IsRetrievable.IsSet() {
		return true
	}

	return false
}

// SetIsRetrievable gets a reference to the given NullableBool and assigns it to the IsRetrievable field.
func (o *MicrosoftGraphExternalConnectorsProperty) SetIsRetrievable(v bool) {
	o.IsRetrievable.Set(&v)
}
// SetIsRetrievableNil sets the value for IsRetrievable to be an explicit nil
func (o *MicrosoftGraphExternalConnectorsProperty) SetIsRetrievableNil() {
	o.IsRetrievable.Set(nil)
}

// UnsetIsRetrievable ensures that no value is present for IsRetrievable, not even an explicit nil
func (o *MicrosoftGraphExternalConnectorsProperty) UnsetIsRetrievable() {
	o.IsRetrievable.Unset()
}

// GetIsSearchable returns the IsSearchable field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphExternalConnectorsProperty) GetIsSearchable() bool {
	if o == nil || o.IsSearchable.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsSearchable.Get()
}

// GetIsSearchableOk returns a tuple with the IsSearchable field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphExternalConnectorsProperty) GetIsSearchableOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsSearchable.Get(), o.IsSearchable.IsSet()
}

// HasIsSearchable returns a boolean if a field has been set.
func (o *MicrosoftGraphExternalConnectorsProperty) HasIsSearchable() bool {
	if o != nil && o.IsSearchable.IsSet() {
		return true
	}

	return false
}

// SetIsSearchable gets a reference to the given NullableBool and assigns it to the IsSearchable field.
func (o *MicrosoftGraphExternalConnectorsProperty) SetIsSearchable(v bool) {
	o.IsSearchable.Set(&v)
}
// SetIsSearchableNil sets the value for IsSearchable to be an explicit nil
func (o *MicrosoftGraphExternalConnectorsProperty) SetIsSearchableNil() {
	o.IsSearchable.Set(nil)
}

// UnsetIsSearchable ensures that no value is present for IsSearchable, not even an explicit nil
func (o *MicrosoftGraphExternalConnectorsProperty) UnsetIsSearchable() {
	o.IsSearchable.Unset()
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *MicrosoftGraphExternalConnectorsProperty) GetLabels() []*AnyOfmicrosoftGraphExternalConnectorsLabel {
	if o == nil || o.Labels == nil {
		var ret []*AnyOfmicrosoftGraphExternalConnectorsLabel
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphExternalConnectorsProperty) GetLabelsOk() (*[]*AnyOfmicrosoftGraphExternalConnectorsLabel, bool) {
	if o == nil || o.Labels == nil {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *MicrosoftGraphExternalConnectorsProperty) HasLabels() bool {
	if o != nil && o.Labels != nil {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []*AnyOfmicrosoftGraphExternalConnectorsLabel and assigns it to the Labels field.
func (o *MicrosoftGraphExternalConnectorsProperty) SetLabels(v []*AnyOfmicrosoftGraphExternalConnectorsLabel) {
	o.Labels = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MicrosoftGraphExternalConnectorsProperty) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphExternalConnectorsProperty) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MicrosoftGraphExternalConnectorsProperty) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MicrosoftGraphExternalConnectorsProperty) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphExternalConnectorsProperty) GetType() AnyOfmicrosoftGraphExternalConnectorsPropertyType {
	if o == nil  {
		var ret AnyOfmicrosoftGraphExternalConnectorsPropertyType
		return ret
	}
	return o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphExternalConnectorsProperty) GetTypeOk() (*AnyOfmicrosoftGraphExternalConnectorsPropertyType, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return &o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MicrosoftGraphExternalConnectorsProperty) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given AnyOfmicrosoftGraphExternalConnectorsPropertyType and assigns it to the Type field.
func (o *MicrosoftGraphExternalConnectorsProperty) SetType(v AnyOfmicrosoftGraphExternalConnectorsPropertyType) {
	o.Type = v
}

func (o MicrosoftGraphExternalConnectorsProperty) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Aliases != nil {
		toSerialize["aliases"] = o.Aliases
	}
	if o.IsQueryable.IsSet() {
		toSerialize["isQueryable"] = o.IsQueryable.Get()
	}
	if o.IsRefinable.IsSet() {
		toSerialize["isRefinable"] = o.IsRefinable.Get()
	}
	if o.IsRetrievable.IsSet() {
		toSerialize["isRetrievable"] = o.IsRetrievable.Get()
	}
	if o.IsSearchable.IsSet() {
		toSerialize["isSearchable"] = o.IsSearchable.Get()
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphExternalConnectorsProperty struct {
	value *MicrosoftGraphExternalConnectorsProperty
	isSet bool
}

func (v NullableMicrosoftGraphExternalConnectorsProperty) Get() *MicrosoftGraphExternalConnectorsProperty {
	return v.value
}

func (v *NullableMicrosoftGraphExternalConnectorsProperty) Set(val *MicrosoftGraphExternalConnectorsProperty) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphExternalConnectorsProperty) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphExternalConnectorsProperty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphExternalConnectorsProperty(val *MicrosoftGraphExternalConnectorsProperty) *NullableMicrosoftGraphExternalConnectorsProperty {
	return &NullableMicrosoftGraphExternalConnectorsProperty{value: val, isSet: true}
}

func (v NullableMicrosoftGraphExternalConnectorsProperty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphExternalConnectorsProperty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


