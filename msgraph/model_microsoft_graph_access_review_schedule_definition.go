/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphAccessReviewScheduleDefinition struct for MicrosoftGraphAccessReviewScheduleDefinition
type MicrosoftGraphAccessReviewScheduleDefinition struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// Defines the list of additional users or group members to be notified of the access review progress.
	AdditionalNotificationRecipients *[]*AnyOfmicrosoftGraphAccessReviewNotificationRecipientItem `json:"additionalNotificationRecipients,omitempty"`
	// User who created this review. Read-only.
	CreatedBy AnyOfmicrosoftGraphUserIdentity `json:"createdBy,omitempty"`
	// Timestamp when the access review series was created. Supports $select and $orderBy. Read-only.
	CreatedDateTime NullableTime `json:"createdDateTime,omitempty"`
	// Description provided by review creators to provide more context of the review to admins. Supports $select.
	DescriptionForAdmins NullableString `json:"descriptionForAdmins,omitempty"`
	// Description provided  by review creators to provide more context of the review to reviewers. Reviewers will see this description in the email sent to them requesting their review. Email notifications support up to 256 characters. Supports $select.
	DescriptionForReviewers NullableString `json:"descriptionForReviewers,omitempty"`
	// Name of the access review series. Supports $select and $orderBy. Required on create.
	DisplayName NullableString `json:"displayName,omitempty"`
	// This collection of reviewer scopes is used to define the list of fallback reviewers. These fallback reviewers will be notified to take action if no users are found from the list of reviewers specified. This could occur when either the group owner is specified as the reviewer but the group owner does not exist, or manager is specified as reviewer but a user's manager does not exist. See accessReviewReviewerScope. Replaces backupReviewers. Supports $select.
	FallbackReviewers *[]*AnyOfmicrosoftGraphAccessReviewReviewerScope `json:"fallbackReviewers,omitempty"`
	// This property is required when scoping a review to guest users' access across all Microsoft 365 groups and determines which Microsoft 365 groups are reviewed. Each group will become a unique accessReviewInstance of the access review series.  For supported scopes, see accessReviewScope. Supports $select. For examples of options for configuring instanceEnumerationScope, see Configure the scope of your access review definition using the Microsoft Graph API.
	InstanceEnumerationScope AnyOfobject `json:"instanceEnumerationScope,omitempty"`
	// Timestamp when the access review series was last modified. Supports $select. Read-only.
	LastModifiedDateTime NullableTime `json:"lastModifiedDateTime,omitempty"`
	// This collection of access review scopes is used to define who are the reviewers. The reviewers property is only updatable if individual users are assigned as reviewers. Required on create. Supports $select. For examples of options for assigning reviewers, see Assign reviewers to your access review definition using the Microsoft Graph API.
	Reviewers *[]*AnyOfmicrosoftGraphAccessReviewReviewerScope `json:"reviewers,omitempty"`
	// Defines the entities whose access is reviewed.  For supported scopes, see accessReviewScope. Required on create. Supports $select and $filter (contains only). For examples of options for configuring scope, see Configure the scope of your access review definition using the Microsoft Graph API.
	Scope AnyOfobject `json:"scope,omitempty"`
	// The settings for an access review series, see type definition below. Supports $select. Required on create.
	Settings AnyOfmicrosoftGraphAccessReviewScheduleSettings `json:"settings,omitempty"`
	// This read-only field specifies the status of an access review. The typical states include Initializing, NotStarted, Starting, InProgress, Completing, Completed, AutoReviewing, and AutoReviewed.  Supports $select, $orderby, and $filter (eq only). Read-only.
	Status NullableString `json:"status,omitempty"`
	// If the accessReviewScheduleDefinition is a recurring access review, instances represent each recurrence. A review that does not recur will have exactly one instance. Instances also represent each unique resource under review in the accessReviewScheduleDefinition. If a review has multiple resources and multiple instances, each resource will have a unique instance for each recurrence.
	Instances *[]MicrosoftGraphAccessReviewInstance `json:"instances,omitempty"`
}

// NewMicrosoftGraphAccessReviewScheduleDefinition instantiates a new MicrosoftGraphAccessReviewScheduleDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphAccessReviewScheduleDefinition() *MicrosoftGraphAccessReviewScheduleDefinition {
	this := MicrosoftGraphAccessReviewScheduleDefinition{}
	return &this
}

// NewMicrosoftGraphAccessReviewScheduleDefinitionWithDefaults instantiates a new MicrosoftGraphAccessReviewScheduleDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphAccessReviewScheduleDefinitionWithDefaults() *MicrosoftGraphAccessReviewScheduleDefinition {
	this := MicrosoftGraphAccessReviewScheduleDefinition{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) SetId(v string) {
	o.Id = &v
}

// GetAdditionalNotificationRecipients returns the AdditionalNotificationRecipients field value if set, zero value otherwise.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) GetAdditionalNotificationRecipients() []*AnyOfmicrosoftGraphAccessReviewNotificationRecipientItem {
	if o == nil || o.AdditionalNotificationRecipients == nil {
		var ret []*AnyOfmicrosoftGraphAccessReviewNotificationRecipientItem
		return ret
	}
	return *o.AdditionalNotificationRecipients
}

// GetAdditionalNotificationRecipientsOk returns a tuple with the AdditionalNotificationRecipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) GetAdditionalNotificationRecipientsOk() (*[]*AnyOfmicrosoftGraphAccessReviewNotificationRecipientItem, bool) {
	if o == nil || o.AdditionalNotificationRecipients == nil {
		return nil, false
	}
	return o.AdditionalNotificationRecipients, true
}

// HasAdditionalNotificationRecipients returns a boolean if a field has been set.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) HasAdditionalNotificationRecipients() bool {
	if o != nil && o.AdditionalNotificationRecipients != nil {
		return true
	}

	return false
}

// SetAdditionalNotificationRecipients gets a reference to the given []*AnyOfmicrosoftGraphAccessReviewNotificationRecipientItem and assigns it to the AdditionalNotificationRecipients field.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) SetAdditionalNotificationRecipients(v []*AnyOfmicrosoftGraphAccessReviewNotificationRecipientItem) {
	o.AdditionalNotificationRecipients = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAccessReviewScheduleDefinition) GetCreatedBy() AnyOfmicrosoftGraphUserIdentity {
	if o == nil  {
		var ret AnyOfmicrosoftGraphUserIdentity
		return ret
	}
	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAccessReviewScheduleDefinition) GetCreatedByOk() (*AnyOfmicrosoftGraphUserIdentity, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given AnyOfmicrosoftGraphUserIdentity and assigns it to the CreatedBy field.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) SetCreatedBy(v AnyOfmicrosoftGraphUserIdentity) {
	o.CreatedBy = v
}

// GetCreatedDateTime returns the CreatedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAccessReviewScheduleDefinition) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime.Get()
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAccessReviewScheduleDefinition) GetCreatedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatedDateTime.Get(), o.CreatedDateTime.IsSet()
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime.IsSet() {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given NullableTime and assigns it to the CreatedDateTime field.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime.Set(&v)
}
// SetCreatedDateTimeNil sets the value for CreatedDateTime to be an explicit nil
func (o *MicrosoftGraphAccessReviewScheduleDefinition) SetCreatedDateTimeNil() {
	o.CreatedDateTime.Set(nil)
}

// UnsetCreatedDateTime ensures that no value is present for CreatedDateTime, not even an explicit nil
func (o *MicrosoftGraphAccessReviewScheduleDefinition) UnsetCreatedDateTime() {
	o.CreatedDateTime.Unset()
}

// GetDescriptionForAdmins returns the DescriptionForAdmins field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAccessReviewScheduleDefinition) GetDescriptionForAdmins() string {
	if o == nil || o.DescriptionForAdmins.Get() == nil {
		var ret string
		return ret
	}
	return *o.DescriptionForAdmins.Get()
}

// GetDescriptionForAdminsOk returns a tuple with the DescriptionForAdmins field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAccessReviewScheduleDefinition) GetDescriptionForAdminsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DescriptionForAdmins.Get(), o.DescriptionForAdmins.IsSet()
}

// HasDescriptionForAdmins returns a boolean if a field has been set.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) HasDescriptionForAdmins() bool {
	if o != nil && o.DescriptionForAdmins.IsSet() {
		return true
	}

	return false
}

// SetDescriptionForAdmins gets a reference to the given NullableString and assigns it to the DescriptionForAdmins field.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) SetDescriptionForAdmins(v string) {
	o.DescriptionForAdmins.Set(&v)
}
// SetDescriptionForAdminsNil sets the value for DescriptionForAdmins to be an explicit nil
func (o *MicrosoftGraphAccessReviewScheduleDefinition) SetDescriptionForAdminsNil() {
	o.DescriptionForAdmins.Set(nil)
}

// UnsetDescriptionForAdmins ensures that no value is present for DescriptionForAdmins, not even an explicit nil
func (o *MicrosoftGraphAccessReviewScheduleDefinition) UnsetDescriptionForAdmins() {
	o.DescriptionForAdmins.Unset()
}

// GetDescriptionForReviewers returns the DescriptionForReviewers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAccessReviewScheduleDefinition) GetDescriptionForReviewers() string {
	if o == nil || o.DescriptionForReviewers.Get() == nil {
		var ret string
		return ret
	}
	return *o.DescriptionForReviewers.Get()
}

// GetDescriptionForReviewersOk returns a tuple with the DescriptionForReviewers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAccessReviewScheduleDefinition) GetDescriptionForReviewersOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DescriptionForReviewers.Get(), o.DescriptionForReviewers.IsSet()
}

// HasDescriptionForReviewers returns a boolean if a field has been set.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) HasDescriptionForReviewers() bool {
	if o != nil && o.DescriptionForReviewers.IsSet() {
		return true
	}

	return false
}

// SetDescriptionForReviewers gets a reference to the given NullableString and assigns it to the DescriptionForReviewers field.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) SetDescriptionForReviewers(v string) {
	o.DescriptionForReviewers.Set(&v)
}
// SetDescriptionForReviewersNil sets the value for DescriptionForReviewers to be an explicit nil
func (o *MicrosoftGraphAccessReviewScheduleDefinition) SetDescriptionForReviewersNil() {
	o.DescriptionForReviewers.Set(nil)
}

// UnsetDescriptionForReviewers ensures that no value is present for DescriptionForReviewers, not even an explicit nil
func (o *MicrosoftGraphAccessReviewScheduleDefinition) UnsetDescriptionForReviewers() {
	o.DescriptionForReviewers.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAccessReviewScheduleDefinition) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAccessReviewScheduleDefinition) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *MicrosoftGraphAccessReviewScheduleDefinition) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *MicrosoftGraphAccessReviewScheduleDefinition) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetFallbackReviewers returns the FallbackReviewers field value if set, zero value otherwise.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) GetFallbackReviewers() []*AnyOfmicrosoftGraphAccessReviewReviewerScope {
	if o == nil || o.FallbackReviewers == nil {
		var ret []*AnyOfmicrosoftGraphAccessReviewReviewerScope
		return ret
	}
	return *o.FallbackReviewers
}

// GetFallbackReviewersOk returns a tuple with the FallbackReviewers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) GetFallbackReviewersOk() (*[]*AnyOfmicrosoftGraphAccessReviewReviewerScope, bool) {
	if o == nil || o.FallbackReviewers == nil {
		return nil, false
	}
	return o.FallbackReviewers, true
}

// HasFallbackReviewers returns a boolean if a field has been set.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) HasFallbackReviewers() bool {
	if o != nil && o.FallbackReviewers != nil {
		return true
	}

	return false
}

// SetFallbackReviewers gets a reference to the given []*AnyOfmicrosoftGraphAccessReviewReviewerScope and assigns it to the FallbackReviewers field.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) SetFallbackReviewers(v []*AnyOfmicrosoftGraphAccessReviewReviewerScope) {
	o.FallbackReviewers = &v
}

// GetInstanceEnumerationScope returns the InstanceEnumerationScope field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAccessReviewScheduleDefinition) GetInstanceEnumerationScope() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.InstanceEnumerationScope
}

// GetInstanceEnumerationScopeOk returns a tuple with the InstanceEnumerationScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAccessReviewScheduleDefinition) GetInstanceEnumerationScopeOk() (*AnyOfobject, bool) {
	if o == nil || o.InstanceEnumerationScope == nil {
		return nil, false
	}
	return &o.InstanceEnumerationScope, true
}

// HasInstanceEnumerationScope returns a boolean if a field has been set.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) HasInstanceEnumerationScope() bool {
	if o != nil && o.InstanceEnumerationScope != nil {
		return true
	}

	return false
}

// SetInstanceEnumerationScope gets a reference to the given AnyOfobject and assigns it to the InstanceEnumerationScope field.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) SetInstanceEnumerationScope(v AnyOfobject) {
	o.InstanceEnumerationScope = v
}

// GetLastModifiedDateTime returns the LastModifiedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAccessReviewScheduleDefinition) GetLastModifiedDateTime() time.Time {
	if o == nil || o.LastModifiedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDateTime.Get()
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAccessReviewScheduleDefinition) GetLastModifiedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastModifiedDateTime.Get(), o.LastModifiedDateTime.IsSet()
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) HasLastModifiedDateTime() bool {
	if o != nil && o.LastModifiedDateTime.IsSet() {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given NullableTime and assigns it to the LastModifiedDateTime field.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) SetLastModifiedDateTime(v time.Time) {
	o.LastModifiedDateTime.Set(&v)
}
// SetLastModifiedDateTimeNil sets the value for LastModifiedDateTime to be an explicit nil
func (o *MicrosoftGraphAccessReviewScheduleDefinition) SetLastModifiedDateTimeNil() {
	o.LastModifiedDateTime.Set(nil)
}

// UnsetLastModifiedDateTime ensures that no value is present for LastModifiedDateTime, not even an explicit nil
func (o *MicrosoftGraphAccessReviewScheduleDefinition) UnsetLastModifiedDateTime() {
	o.LastModifiedDateTime.Unset()
}

// GetReviewers returns the Reviewers field value if set, zero value otherwise.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) GetReviewers() []*AnyOfmicrosoftGraphAccessReviewReviewerScope {
	if o == nil || o.Reviewers == nil {
		var ret []*AnyOfmicrosoftGraphAccessReviewReviewerScope
		return ret
	}
	return *o.Reviewers
}

// GetReviewersOk returns a tuple with the Reviewers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) GetReviewersOk() (*[]*AnyOfmicrosoftGraphAccessReviewReviewerScope, bool) {
	if o == nil || o.Reviewers == nil {
		return nil, false
	}
	return o.Reviewers, true
}

// HasReviewers returns a boolean if a field has been set.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) HasReviewers() bool {
	if o != nil && o.Reviewers != nil {
		return true
	}

	return false
}

// SetReviewers gets a reference to the given []*AnyOfmicrosoftGraphAccessReviewReviewerScope and assigns it to the Reviewers field.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) SetReviewers(v []*AnyOfmicrosoftGraphAccessReviewReviewerScope) {
	o.Reviewers = &v
}

// GetScope returns the Scope field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAccessReviewScheduleDefinition) GetScope() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAccessReviewScheduleDefinition) GetScopeOk() (*AnyOfobject, bool) {
	if o == nil || o.Scope == nil {
		return nil, false
	}
	return &o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) HasScope() bool {
	if o != nil && o.Scope != nil {
		return true
	}

	return false
}

// SetScope gets a reference to the given AnyOfobject and assigns it to the Scope field.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) SetScope(v AnyOfobject) {
	o.Scope = v
}

// GetSettings returns the Settings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAccessReviewScheduleDefinition) GetSettings() AnyOfmicrosoftGraphAccessReviewScheduleSettings {
	if o == nil  {
		var ret AnyOfmicrosoftGraphAccessReviewScheduleSettings
		return ret
	}
	return o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAccessReviewScheduleDefinition) GetSettingsOk() (*AnyOfmicrosoftGraphAccessReviewScheduleSettings, bool) {
	if o == nil || o.Settings == nil {
		return nil, false
	}
	return &o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) HasSettings() bool {
	if o != nil && o.Settings != nil {
		return true
	}

	return false
}

// SetSettings gets a reference to the given AnyOfmicrosoftGraphAccessReviewScheduleSettings and assigns it to the Settings field.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) SetSettings(v AnyOfmicrosoftGraphAccessReviewScheduleSettings) {
	o.Settings = v
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAccessReviewScheduleDefinition) GetStatus() string {
	if o == nil || o.Status.Get() == nil {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAccessReviewScheduleDefinition) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *MicrosoftGraphAccessReviewScheduleDefinition) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *MicrosoftGraphAccessReviewScheduleDefinition) UnsetStatus() {
	o.Status.Unset()
}

// GetInstances returns the Instances field value if set, zero value otherwise.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) GetInstances() []MicrosoftGraphAccessReviewInstance {
	if o == nil || o.Instances == nil {
		var ret []MicrosoftGraphAccessReviewInstance
		return ret
	}
	return *o.Instances
}

// GetInstancesOk returns a tuple with the Instances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) GetInstancesOk() (*[]MicrosoftGraphAccessReviewInstance, bool) {
	if o == nil || o.Instances == nil {
		return nil, false
	}
	return o.Instances, true
}

// HasInstances returns a boolean if a field has been set.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) HasInstances() bool {
	if o != nil && o.Instances != nil {
		return true
	}

	return false
}

// SetInstances gets a reference to the given []MicrosoftGraphAccessReviewInstance and assigns it to the Instances field.
func (o *MicrosoftGraphAccessReviewScheduleDefinition) SetInstances(v []MicrosoftGraphAccessReviewInstance) {
	o.Instances = &v
}

func (o MicrosoftGraphAccessReviewScheduleDefinition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.AdditionalNotificationRecipients != nil {
		toSerialize["additionalNotificationRecipients"] = o.AdditionalNotificationRecipients
	}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.CreatedDateTime.IsSet() {
		toSerialize["createdDateTime"] = o.CreatedDateTime.Get()
	}
	if o.DescriptionForAdmins.IsSet() {
		toSerialize["descriptionForAdmins"] = o.DescriptionForAdmins.Get()
	}
	if o.DescriptionForReviewers.IsSet() {
		toSerialize["descriptionForReviewers"] = o.DescriptionForReviewers.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.FallbackReviewers != nil {
		toSerialize["fallbackReviewers"] = o.FallbackReviewers
	}
	if o.InstanceEnumerationScope != nil {
		toSerialize["instanceEnumerationScope"] = o.InstanceEnumerationScope
	}
	if o.LastModifiedDateTime.IsSet() {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime.Get()
	}
	if o.Reviewers != nil {
		toSerialize["reviewers"] = o.Reviewers
	}
	if o.Scope != nil {
		toSerialize["scope"] = o.Scope
	}
	if o.Settings != nil {
		toSerialize["settings"] = o.Settings
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.Instances != nil {
		toSerialize["instances"] = o.Instances
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphAccessReviewScheduleDefinition struct {
	value *MicrosoftGraphAccessReviewScheduleDefinition
	isSet bool
}

func (v NullableMicrosoftGraphAccessReviewScheduleDefinition) Get() *MicrosoftGraphAccessReviewScheduleDefinition {
	return v.value
}

func (v *NullableMicrosoftGraphAccessReviewScheduleDefinition) Set(val *MicrosoftGraphAccessReviewScheduleDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphAccessReviewScheduleDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphAccessReviewScheduleDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphAccessReviewScheduleDefinition(val *MicrosoftGraphAccessReviewScheduleDefinition) *NullableMicrosoftGraphAccessReviewScheduleDefinition {
	return &NullableMicrosoftGraphAccessReviewScheduleDefinition{value: val, isSet: true}
}

func (v NullableMicrosoftGraphAccessReviewScheduleDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphAccessReviewScheduleDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


