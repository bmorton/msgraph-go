/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphFreeBusyStatus the model 'MicrosoftGraphFreeBusyStatus'
type MicrosoftGraphFreeBusyStatus string

// List of microsoft.graph.freeBusyStatus
const (
	UNKNOWN MicrosoftGraphFreeBusyStatus = "unknown"
	FREE MicrosoftGraphFreeBusyStatus = "free"
	TENTATIVE MicrosoftGraphFreeBusyStatus = "tentative"
	BUSY MicrosoftGraphFreeBusyStatus = "busy"
	OOF MicrosoftGraphFreeBusyStatus = "oof"
	WORKING_ELSEWHERE MicrosoftGraphFreeBusyStatus = "workingElsewhere"
)

// All allowed values of MicrosoftGraphFreeBusyStatus enum
var AllowedMicrosoftGraphFreeBusyStatusEnumValues = []MicrosoftGraphFreeBusyStatus{
	"unknown",
	"free",
	"tentative",
	"busy",
	"oof",
	"workingElsewhere",
}

func (v *MicrosoftGraphFreeBusyStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphFreeBusyStatus(value)
	for _, existing := range AllowedMicrosoftGraphFreeBusyStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphFreeBusyStatus", value)
}

// NewMicrosoftGraphFreeBusyStatusFromValue returns a pointer to a valid MicrosoftGraphFreeBusyStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphFreeBusyStatusFromValue(v string) (*MicrosoftGraphFreeBusyStatus, error) {
	ev := MicrosoftGraphFreeBusyStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphFreeBusyStatus: valid values are %v", v, AllowedMicrosoftGraphFreeBusyStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphFreeBusyStatus) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphFreeBusyStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.freeBusyStatus value
func (v MicrosoftGraphFreeBusyStatus) Ptr() *MicrosoftGraphFreeBusyStatus {
	return &v
}

type NullableMicrosoftGraphFreeBusyStatus struct {
	value *MicrosoftGraphFreeBusyStatus
	isSet bool
}

func (v NullableMicrosoftGraphFreeBusyStatus) Get() *MicrosoftGraphFreeBusyStatus {
	return v.value
}

func (v *NullableMicrosoftGraphFreeBusyStatus) Set(val *MicrosoftGraphFreeBusyStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphFreeBusyStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphFreeBusyStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphFreeBusyStatus(val *MicrosoftGraphFreeBusyStatus) *NullableMicrosoftGraphFreeBusyStatus {
	return &NullableMicrosoftGraphFreeBusyStatus{value: val, isSet: true}
}

func (v NullableMicrosoftGraphFreeBusyStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphFreeBusyStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

