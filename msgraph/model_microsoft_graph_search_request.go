/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphSearchRequest struct for MicrosoftGraphSearchRequest
type MicrosoftGraphSearchRequest struct {
	// Contains one or more filters to obtain search results aggregated and filtered to a specific value of a field. Optional.Build this filter based on a prior search that aggregates by the same field. From the response of the prior search, identify the searchBucket that filters results to the specific value of the field, use the string in its aggregationFilterToken property, and build an aggregation filter string in the format '{field}:/'{aggregationFilterToken}/''. If multiple values for the same field need to be provided, use the strings in its aggregationFilterToken property and build an aggregation filter string in the format '{field}:or(/'{aggregationFilterToken1}/',/'{aggregationFilterToken2}/')'. For example, searching and aggregating drive items by file type returns a searchBucket for the file type docx in the response. You can conveniently use the aggregationFilterToken returned for this searchBucket in a subsequent search query and filter matches down to drive items of the docx file type. Example 1 and example 2 show the actual requests and responses.
	AggregationFilters *[]*string `json:"aggregationFilters,omitempty"`
	// Specifies aggregations (also known as refiners) to be returned alongside search results. Optional.
	Aggregations *[]*AnyOfmicrosoftGraphAggregationOption `json:"aggregations,omitempty"`
	// Contains the connection to be targeted. Respects the following format : /external/connections/connectionid where connectionid is the ConnectionId defined in the Connectors Administration.  Note: contentSource is only applicable when entityType=externalItem. Optional.
	ContentSources *[]*string `json:"contentSources,omitempty"`
	// This triggers hybrid sort for messages: the first 3 messages are the most relevant. This property is only applicable to entityType=message. Optional.
	EnableTopResults NullableBool `json:"enableTopResults,omitempty"`
	// One or more types of resources expected in the response. Possible values are: list, site, listItem, message, event, drive, driveItem, person, externalItem. See known limitations for those combinations of two or more entity types that are supported in the same search request. Required.
	EntityTypes *[]*AnyOfmicrosoftGraphEntityType `json:"entityTypes,omitempty"`
	// Contains the fields to be returned for each resource object specified in entityTypes, allowing customization of the fields returned by default otherwise, including additional fields such as custom managed properties from SharePoint and OneDrive, or custom fields in externalItem from content that Microsoft Graph connectors bring in. The fields property can be using the semantic labels applied to properties. For example, if a property is label as title, you can retrieve it using the following syntax : label_title.Optional.
	Fields *[]*string `json:"fields,omitempty"`
	// Specifies the offset for the search results. Offset 0 returns the very first result. Optional.
	From *int32 `json:"from,omitempty"`
	Query *MicrosoftGraphSearchQuery `json:"query,omitempty"`
	// The size of the page to be retrieved. Optional.
	Size *int32 `json:"size,omitempty"`
	// Contains the ordered collection of fields and direction to sort results. There can be at most 5 sort properties in the collection. Optional.
	SortProperties *[]*AnyOfmicrosoftGraphSortProperty `json:"sortProperties,omitempty"`
}

// NewMicrosoftGraphSearchRequest instantiates a new MicrosoftGraphSearchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphSearchRequest() *MicrosoftGraphSearchRequest {
	this := MicrosoftGraphSearchRequest{}
	return &this
}

// NewMicrosoftGraphSearchRequestWithDefaults instantiates a new MicrosoftGraphSearchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphSearchRequestWithDefaults() *MicrosoftGraphSearchRequest {
	this := MicrosoftGraphSearchRequest{}
	return &this
}

// GetAggregationFilters returns the AggregationFilters field value if set, zero value otherwise.
func (o *MicrosoftGraphSearchRequest) GetAggregationFilters() []*string {
	if o == nil || o.AggregationFilters == nil {
		var ret []*string
		return ret
	}
	return *o.AggregationFilters
}

// GetAggregationFiltersOk returns a tuple with the AggregationFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSearchRequest) GetAggregationFiltersOk() (*[]*string, bool) {
	if o == nil || o.AggregationFilters == nil {
		return nil, false
	}
	return o.AggregationFilters, true
}

// HasAggregationFilters returns a boolean if a field has been set.
func (o *MicrosoftGraphSearchRequest) HasAggregationFilters() bool {
	if o != nil && o.AggregationFilters != nil {
		return true
	}

	return false
}

// SetAggregationFilters gets a reference to the given []*string and assigns it to the AggregationFilters field.
func (o *MicrosoftGraphSearchRequest) SetAggregationFilters(v []*string) {
	o.AggregationFilters = &v
}

// GetAggregations returns the Aggregations field value if set, zero value otherwise.
func (o *MicrosoftGraphSearchRequest) GetAggregations() []*AnyOfmicrosoftGraphAggregationOption {
	if o == nil || o.Aggregations == nil {
		var ret []*AnyOfmicrosoftGraphAggregationOption
		return ret
	}
	return *o.Aggregations
}

// GetAggregationsOk returns a tuple with the Aggregations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSearchRequest) GetAggregationsOk() (*[]*AnyOfmicrosoftGraphAggregationOption, bool) {
	if o == nil || o.Aggregations == nil {
		return nil, false
	}
	return o.Aggregations, true
}

// HasAggregations returns a boolean if a field has been set.
func (o *MicrosoftGraphSearchRequest) HasAggregations() bool {
	if o != nil && o.Aggregations != nil {
		return true
	}

	return false
}

// SetAggregations gets a reference to the given []*AnyOfmicrosoftGraphAggregationOption and assigns it to the Aggregations field.
func (o *MicrosoftGraphSearchRequest) SetAggregations(v []*AnyOfmicrosoftGraphAggregationOption) {
	o.Aggregations = &v
}

// GetContentSources returns the ContentSources field value if set, zero value otherwise.
func (o *MicrosoftGraphSearchRequest) GetContentSources() []*string {
	if o == nil || o.ContentSources == nil {
		var ret []*string
		return ret
	}
	return *o.ContentSources
}

// GetContentSourcesOk returns a tuple with the ContentSources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSearchRequest) GetContentSourcesOk() (*[]*string, bool) {
	if o == nil || o.ContentSources == nil {
		return nil, false
	}
	return o.ContentSources, true
}

// HasContentSources returns a boolean if a field has been set.
func (o *MicrosoftGraphSearchRequest) HasContentSources() bool {
	if o != nil && o.ContentSources != nil {
		return true
	}

	return false
}

// SetContentSources gets a reference to the given []*string and assigns it to the ContentSources field.
func (o *MicrosoftGraphSearchRequest) SetContentSources(v []*string) {
	o.ContentSources = &v
}

// GetEnableTopResults returns the EnableTopResults field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSearchRequest) GetEnableTopResults() bool {
	if o == nil || o.EnableTopResults.Get() == nil {
		var ret bool
		return ret
	}
	return *o.EnableTopResults.Get()
}

// GetEnableTopResultsOk returns a tuple with the EnableTopResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSearchRequest) GetEnableTopResultsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EnableTopResults.Get(), o.EnableTopResults.IsSet()
}

// HasEnableTopResults returns a boolean if a field has been set.
func (o *MicrosoftGraphSearchRequest) HasEnableTopResults() bool {
	if o != nil && o.EnableTopResults.IsSet() {
		return true
	}

	return false
}

// SetEnableTopResults gets a reference to the given NullableBool and assigns it to the EnableTopResults field.
func (o *MicrosoftGraphSearchRequest) SetEnableTopResults(v bool) {
	o.EnableTopResults.Set(&v)
}
// SetEnableTopResultsNil sets the value for EnableTopResults to be an explicit nil
func (o *MicrosoftGraphSearchRequest) SetEnableTopResultsNil() {
	o.EnableTopResults.Set(nil)
}

// UnsetEnableTopResults ensures that no value is present for EnableTopResults, not even an explicit nil
func (o *MicrosoftGraphSearchRequest) UnsetEnableTopResults() {
	o.EnableTopResults.Unset()
}

// GetEntityTypes returns the EntityTypes field value if set, zero value otherwise.
func (o *MicrosoftGraphSearchRequest) GetEntityTypes() []*AnyOfmicrosoftGraphEntityType {
	if o == nil || o.EntityTypes == nil {
		var ret []*AnyOfmicrosoftGraphEntityType
		return ret
	}
	return *o.EntityTypes
}

// GetEntityTypesOk returns a tuple with the EntityTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSearchRequest) GetEntityTypesOk() (*[]*AnyOfmicrosoftGraphEntityType, bool) {
	if o == nil || o.EntityTypes == nil {
		return nil, false
	}
	return o.EntityTypes, true
}

// HasEntityTypes returns a boolean if a field has been set.
func (o *MicrosoftGraphSearchRequest) HasEntityTypes() bool {
	if o != nil && o.EntityTypes != nil {
		return true
	}

	return false
}

// SetEntityTypes gets a reference to the given []*AnyOfmicrosoftGraphEntityType and assigns it to the EntityTypes field.
func (o *MicrosoftGraphSearchRequest) SetEntityTypes(v []*AnyOfmicrosoftGraphEntityType) {
	o.EntityTypes = &v
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *MicrosoftGraphSearchRequest) GetFields() []*string {
	if o == nil || o.Fields == nil {
		var ret []*string
		return ret
	}
	return *o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSearchRequest) GetFieldsOk() (*[]*string, bool) {
	if o == nil || o.Fields == nil {
		return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *MicrosoftGraphSearchRequest) HasFields() bool {
	if o != nil && o.Fields != nil {
		return true
	}

	return false
}

// SetFields gets a reference to the given []*string and assigns it to the Fields field.
func (o *MicrosoftGraphSearchRequest) SetFields(v []*string) {
	o.Fields = &v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *MicrosoftGraphSearchRequest) GetFrom() int32 {
	if o == nil || o.From == nil {
		var ret int32
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSearchRequest) GetFromOk() (*int32, bool) {
	if o == nil || o.From == nil {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *MicrosoftGraphSearchRequest) HasFrom() bool {
	if o != nil && o.From != nil {
		return true
	}

	return false
}

// SetFrom gets a reference to the given int32 and assigns it to the From field.
func (o *MicrosoftGraphSearchRequest) SetFrom(v int32) {
	o.From = &v
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *MicrosoftGraphSearchRequest) GetQuery() MicrosoftGraphSearchQuery {
	if o == nil || o.Query == nil {
		var ret MicrosoftGraphSearchQuery
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSearchRequest) GetQueryOk() (*MicrosoftGraphSearchQuery, bool) {
	if o == nil || o.Query == nil {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *MicrosoftGraphSearchRequest) HasQuery() bool {
	if o != nil && o.Query != nil {
		return true
	}

	return false
}

// SetQuery gets a reference to the given MicrosoftGraphSearchQuery and assigns it to the Query field.
func (o *MicrosoftGraphSearchRequest) SetQuery(v MicrosoftGraphSearchQuery) {
	o.Query = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *MicrosoftGraphSearchRequest) GetSize() int32 {
	if o == nil || o.Size == nil {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSearchRequest) GetSizeOk() (*int32, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *MicrosoftGraphSearchRequest) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *MicrosoftGraphSearchRequest) SetSize(v int32) {
	o.Size = &v
}

// GetSortProperties returns the SortProperties field value if set, zero value otherwise.
func (o *MicrosoftGraphSearchRequest) GetSortProperties() []*AnyOfmicrosoftGraphSortProperty {
	if o == nil || o.SortProperties == nil {
		var ret []*AnyOfmicrosoftGraphSortProperty
		return ret
	}
	return *o.SortProperties
}

// GetSortPropertiesOk returns a tuple with the SortProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSearchRequest) GetSortPropertiesOk() (*[]*AnyOfmicrosoftGraphSortProperty, bool) {
	if o == nil || o.SortProperties == nil {
		return nil, false
	}
	return o.SortProperties, true
}

// HasSortProperties returns a boolean if a field has been set.
func (o *MicrosoftGraphSearchRequest) HasSortProperties() bool {
	if o != nil && o.SortProperties != nil {
		return true
	}

	return false
}

// SetSortProperties gets a reference to the given []*AnyOfmicrosoftGraphSortProperty and assigns it to the SortProperties field.
func (o *MicrosoftGraphSearchRequest) SetSortProperties(v []*AnyOfmicrosoftGraphSortProperty) {
	o.SortProperties = &v
}

func (o MicrosoftGraphSearchRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AggregationFilters != nil {
		toSerialize["aggregationFilters"] = o.AggregationFilters
	}
	if o.Aggregations != nil {
		toSerialize["aggregations"] = o.Aggregations
	}
	if o.ContentSources != nil {
		toSerialize["contentSources"] = o.ContentSources
	}
	if o.EnableTopResults.IsSet() {
		toSerialize["enableTopResults"] = o.EnableTopResults.Get()
	}
	if o.EntityTypes != nil {
		toSerialize["entityTypes"] = o.EntityTypes
	}
	if o.Fields != nil {
		toSerialize["fields"] = o.Fields
	}
	if o.From != nil {
		toSerialize["from"] = o.From
	}
	if o.Query != nil {
		toSerialize["query"] = o.Query
	}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if o.SortProperties != nil {
		toSerialize["sortProperties"] = o.SortProperties
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphSearchRequest struct {
	value *MicrosoftGraphSearchRequest
	isSet bool
}

func (v NullableMicrosoftGraphSearchRequest) Get() *MicrosoftGraphSearchRequest {
	return v.value
}

func (v *NullableMicrosoftGraphSearchRequest) Set(val *MicrosoftGraphSearchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphSearchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphSearchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphSearchRequest(val *MicrosoftGraphSearchRequest) *NullableMicrosoftGraphSearchRequest {
	return &NullableMicrosoftGraphSearchRequest{value: val, isSet: true}
}

func (v NullableMicrosoftGraphSearchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphSearchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


