/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphSharingLink struct for MicrosoftGraphSharingLink
type MicrosoftGraphSharingLink struct {
	// The app the link is associated with.
	Application AnyOfmicrosoftGraphIdentity `json:"application,omitempty"`
	// If true then the user can only use this link to view the item on the web, and cannot use it to download the contents of the item. Only for OneDrive for Business and SharePoint.
	PreventsDownload NullableBool `json:"preventsDownload,omitempty"`
	// The scope of the link represented by this permission. Value anonymous indicates the link is usable by anyone, organization indicates the link is only usable for users signed into the same tenant.
	Scope NullableString `json:"scope,omitempty"`
	// The type of the link created.
	Type NullableString `json:"type,omitempty"`
	// For embed links, this property contains the HTML code for an <iframe> element that will embed the item in a webpage.
	WebHtml NullableString `json:"webHtml,omitempty"`
	// A URL that opens the item in the browser on the OneDrive website.
	WebUrl NullableString `json:"webUrl,omitempty"`
}

// NewMicrosoftGraphSharingLink instantiates a new MicrosoftGraphSharingLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphSharingLink() *MicrosoftGraphSharingLink {
	this := MicrosoftGraphSharingLink{}
	return &this
}

// NewMicrosoftGraphSharingLinkWithDefaults instantiates a new MicrosoftGraphSharingLink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphSharingLinkWithDefaults() *MicrosoftGraphSharingLink {
	this := MicrosoftGraphSharingLink{}
	return &this
}

// GetApplication returns the Application field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSharingLink) GetApplication() AnyOfmicrosoftGraphIdentity {
	if o == nil  {
		var ret AnyOfmicrosoftGraphIdentity
		return ret
	}
	return o.Application
}

// GetApplicationOk returns a tuple with the Application field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSharingLink) GetApplicationOk() (*AnyOfmicrosoftGraphIdentity, bool) {
	if o == nil || o.Application == nil {
		return nil, false
	}
	return &o.Application, true
}

// HasApplication returns a boolean if a field has been set.
func (o *MicrosoftGraphSharingLink) HasApplication() bool {
	if o != nil && o.Application != nil {
		return true
	}

	return false
}

// SetApplication gets a reference to the given AnyOfmicrosoftGraphIdentity and assigns it to the Application field.
func (o *MicrosoftGraphSharingLink) SetApplication(v AnyOfmicrosoftGraphIdentity) {
	o.Application = v
}

// GetPreventsDownload returns the PreventsDownload field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSharingLink) GetPreventsDownload() bool {
	if o == nil || o.PreventsDownload.Get() == nil {
		var ret bool
		return ret
	}
	return *o.PreventsDownload.Get()
}

// GetPreventsDownloadOk returns a tuple with the PreventsDownload field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSharingLink) GetPreventsDownloadOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PreventsDownload.Get(), o.PreventsDownload.IsSet()
}

// HasPreventsDownload returns a boolean if a field has been set.
func (o *MicrosoftGraphSharingLink) HasPreventsDownload() bool {
	if o != nil && o.PreventsDownload.IsSet() {
		return true
	}

	return false
}

// SetPreventsDownload gets a reference to the given NullableBool and assigns it to the PreventsDownload field.
func (o *MicrosoftGraphSharingLink) SetPreventsDownload(v bool) {
	o.PreventsDownload.Set(&v)
}
// SetPreventsDownloadNil sets the value for PreventsDownload to be an explicit nil
func (o *MicrosoftGraphSharingLink) SetPreventsDownloadNil() {
	o.PreventsDownload.Set(nil)
}

// UnsetPreventsDownload ensures that no value is present for PreventsDownload, not even an explicit nil
func (o *MicrosoftGraphSharingLink) UnsetPreventsDownload() {
	o.PreventsDownload.Unset()
}

// GetScope returns the Scope field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSharingLink) GetScope() string {
	if o == nil || o.Scope.Get() == nil {
		var ret string
		return ret
	}
	return *o.Scope.Get()
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSharingLink) GetScopeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Scope.Get(), o.Scope.IsSet()
}

// HasScope returns a boolean if a field has been set.
func (o *MicrosoftGraphSharingLink) HasScope() bool {
	if o != nil && o.Scope.IsSet() {
		return true
	}

	return false
}

// SetScope gets a reference to the given NullableString and assigns it to the Scope field.
func (o *MicrosoftGraphSharingLink) SetScope(v string) {
	o.Scope.Set(&v)
}
// SetScopeNil sets the value for Scope to be an explicit nil
func (o *MicrosoftGraphSharingLink) SetScopeNil() {
	o.Scope.Set(nil)
}

// UnsetScope ensures that no value is present for Scope, not even an explicit nil
func (o *MicrosoftGraphSharingLink) UnsetScope() {
	o.Scope.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSharingLink) GetType() string {
	if o == nil || o.Type.Get() == nil {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSharingLink) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *MicrosoftGraphSharingLink) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *MicrosoftGraphSharingLink) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *MicrosoftGraphSharingLink) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *MicrosoftGraphSharingLink) UnsetType() {
	o.Type.Unset()
}

// GetWebHtml returns the WebHtml field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSharingLink) GetWebHtml() string {
	if o == nil || o.WebHtml.Get() == nil {
		var ret string
		return ret
	}
	return *o.WebHtml.Get()
}

// GetWebHtmlOk returns a tuple with the WebHtml field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSharingLink) GetWebHtmlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.WebHtml.Get(), o.WebHtml.IsSet()
}

// HasWebHtml returns a boolean if a field has been set.
func (o *MicrosoftGraphSharingLink) HasWebHtml() bool {
	if o != nil && o.WebHtml.IsSet() {
		return true
	}

	return false
}

// SetWebHtml gets a reference to the given NullableString and assigns it to the WebHtml field.
func (o *MicrosoftGraphSharingLink) SetWebHtml(v string) {
	o.WebHtml.Set(&v)
}
// SetWebHtmlNil sets the value for WebHtml to be an explicit nil
func (o *MicrosoftGraphSharingLink) SetWebHtmlNil() {
	o.WebHtml.Set(nil)
}

// UnsetWebHtml ensures that no value is present for WebHtml, not even an explicit nil
func (o *MicrosoftGraphSharingLink) UnsetWebHtml() {
	o.WebHtml.Unset()
}

// GetWebUrl returns the WebUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSharingLink) GetWebUrl() string {
	if o == nil || o.WebUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.WebUrl.Get()
}

// GetWebUrlOk returns a tuple with the WebUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSharingLink) GetWebUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.WebUrl.Get(), o.WebUrl.IsSet()
}

// HasWebUrl returns a boolean if a field has been set.
func (o *MicrosoftGraphSharingLink) HasWebUrl() bool {
	if o != nil && o.WebUrl.IsSet() {
		return true
	}

	return false
}

// SetWebUrl gets a reference to the given NullableString and assigns it to the WebUrl field.
func (o *MicrosoftGraphSharingLink) SetWebUrl(v string) {
	o.WebUrl.Set(&v)
}
// SetWebUrlNil sets the value for WebUrl to be an explicit nil
func (o *MicrosoftGraphSharingLink) SetWebUrlNil() {
	o.WebUrl.Set(nil)
}

// UnsetWebUrl ensures that no value is present for WebUrl, not even an explicit nil
func (o *MicrosoftGraphSharingLink) UnsetWebUrl() {
	o.WebUrl.Unset()
}

func (o MicrosoftGraphSharingLink) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Application != nil {
		toSerialize["application"] = o.Application
	}
	if o.PreventsDownload.IsSet() {
		toSerialize["preventsDownload"] = o.PreventsDownload.Get()
	}
	if o.Scope.IsSet() {
		toSerialize["scope"] = o.Scope.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.WebHtml.IsSet() {
		toSerialize["webHtml"] = o.WebHtml.Get()
	}
	if o.WebUrl.IsSet() {
		toSerialize["webUrl"] = o.WebUrl.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphSharingLink struct {
	value *MicrosoftGraphSharingLink
	isSet bool
}

func (v NullableMicrosoftGraphSharingLink) Get() *MicrosoftGraphSharingLink {
	return v.value
}

func (v *NullableMicrosoftGraphSharingLink) Set(val *MicrosoftGraphSharingLink) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphSharingLink) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphSharingLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphSharingLink(val *MicrosoftGraphSharingLink) *NullableMicrosoftGraphSharingLink {
	return &NullableMicrosoftGraphSharingLink{value: val, isSet: true}
}

func (v NullableMicrosoftGraphSharingLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphSharingLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


