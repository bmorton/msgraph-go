/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphIdentityUserFlowAttributeInputType the model 'MicrosoftGraphIdentityUserFlowAttributeInputType'
type MicrosoftGraphIdentityUserFlowAttributeInputType string

// List of microsoft.graph.identityUserFlowAttributeInputType
const (
	TEXT_BOX MicrosoftGraphIdentityUserFlowAttributeInputType = "textBox"
	DATE_TIME_DROPDOWN MicrosoftGraphIdentityUserFlowAttributeInputType = "dateTimeDropdown"
	RADIO_SINGLE_SELECT MicrosoftGraphIdentityUserFlowAttributeInputType = "radioSingleSelect"
	DROPDOWN_SINGLE_SELECT MicrosoftGraphIdentityUserFlowAttributeInputType = "dropdownSingleSelect"
	EMAIL_BOX MicrosoftGraphIdentityUserFlowAttributeInputType = "emailBox"
	CHECKBOX_MULTI_SELECT MicrosoftGraphIdentityUserFlowAttributeInputType = "checkboxMultiSelect"
)

// All allowed values of MicrosoftGraphIdentityUserFlowAttributeInputType enum
var AllowedMicrosoftGraphIdentityUserFlowAttributeInputTypeEnumValues = []MicrosoftGraphIdentityUserFlowAttributeInputType{
	"textBox",
	"dateTimeDropdown",
	"radioSingleSelect",
	"dropdownSingleSelect",
	"emailBox",
	"checkboxMultiSelect",
}

func (v *MicrosoftGraphIdentityUserFlowAttributeInputType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphIdentityUserFlowAttributeInputType(value)
	for _, existing := range AllowedMicrosoftGraphIdentityUserFlowAttributeInputTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphIdentityUserFlowAttributeInputType", value)
}

// NewMicrosoftGraphIdentityUserFlowAttributeInputTypeFromValue returns a pointer to a valid MicrosoftGraphIdentityUserFlowAttributeInputType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphIdentityUserFlowAttributeInputTypeFromValue(v string) (*MicrosoftGraphIdentityUserFlowAttributeInputType, error) {
	ev := MicrosoftGraphIdentityUserFlowAttributeInputType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphIdentityUserFlowAttributeInputType: valid values are %v", v, AllowedMicrosoftGraphIdentityUserFlowAttributeInputTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphIdentityUserFlowAttributeInputType) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphIdentityUserFlowAttributeInputTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.identityUserFlowAttributeInputType value
func (v MicrosoftGraphIdentityUserFlowAttributeInputType) Ptr() *MicrosoftGraphIdentityUserFlowAttributeInputType {
	return &v
}

type NullableMicrosoftGraphIdentityUserFlowAttributeInputType struct {
	value *MicrosoftGraphIdentityUserFlowAttributeInputType
	isSet bool
}

func (v NullableMicrosoftGraphIdentityUserFlowAttributeInputType) Get() *MicrosoftGraphIdentityUserFlowAttributeInputType {
	return v.value
}

func (v *NullableMicrosoftGraphIdentityUserFlowAttributeInputType) Set(val *MicrosoftGraphIdentityUserFlowAttributeInputType) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphIdentityUserFlowAttributeInputType) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphIdentityUserFlowAttributeInputType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphIdentityUserFlowAttributeInputType(val *MicrosoftGraphIdentityUserFlowAttributeInputType) *NullableMicrosoftGraphIdentityUserFlowAttributeInputType {
	return &NullableMicrosoftGraphIdentityUserFlowAttributeInputType{value: val, isSet: true}
}

func (v NullableMicrosoftGraphIdentityUserFlowAttributeInputType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphIdentityUserFlowAttributeInputType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

