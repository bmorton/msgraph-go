/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphPrintJob struct for MicrosoftGraphPrintJob
type MicrosoftGraphPrintJob struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	Configuration *MicrosoftGraphPrintJobConfiguration `json:"configuration,omitempty"`
	// Read-only. Nullable.
	CreatedBy AnyOfmicrosoftGraphUserIdentity `json:"createdBy,omitempty"`
	// The DateTimeOffset when the job was created. Read-only.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// If true, document can be fetched by printer.
	IsFetchable *bool `json:"isFetchable,omitempty"`
	// Contains the source job URL, if the job has been redirected from another printer.
	RedirectedFrom NullableString `json:"redirectedFrom,omitempty"`
	// Contains the destination job URL, if the job has been redirected to another printer.
	RedirectedTo NullableString `json:"redirectedTo,omitempty"`
	Status *MicrosoftGraphPrintJobStatus `json:"status,omitempty"`
	// Read-only.
	Documents *[]MicrosoftGraphPrintDocument `json:"documents,omitempty"`
	// A list of printTasks that were triggered by this print job.
	Tasks *[]MicrosoftGraphPrintTask `json:"tasks,omitempty"`
}

// NewMicrosoftGraphPrintJob instantiates a new MicrosoftGraphPrintJob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphPrintJob() *MicrosoftGraphPrintJob {
	this := MicrosoftGraphPrintJob{}
	return &this
}

// NewMicrosoftGraphPrintJobWithDefaults instantiates a new MicrosoftGraphPrintJob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphPrintJobWithDefaults() *MicrosoftGraphPrintJob {
	this := MicrosoftGraphPrintJob{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphPrintJob) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPrintJob) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphPrintJob) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphPrintJob) SetId(v string) {
	o.Id = &v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *MicrosoftGraphPrintJob) GetConfiguration() MicrosoftGraphPrintJobConfiguration {
	if o == nil || o.Configuration == nil {
		var ret MicrosoftGraphPrintJobConfiguration
		return ret
	}
	return *o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPrintJob) GetConfigurationOk() (*MicrosoftGraphPrintJobConfiguration, bool) {
	if o == nil || o.Configuration == nil {
		return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *MicrosoftGraphPrintJob) HasConfiguration() bool {
	if o != nil && o.Configuration != nil {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given MicrosoftGraphPrintJobConfiguration and assigns it to the Configuration field.
func (o *MicrosoftGraphPrintJob) SetConfiguration(v MicrosoftGraphPrintJobConfiguration) {
	o.Configuration = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphPrintJob) GetCreatedBy() AnyOfmicrosoftGraphUserIdentity {
	if o == nil  {
		var ret AnyOfmicrosoftGraphUserIdentity
		return ret
	}
	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphPrintJob) GetCreatedByOk() (*AnyOfmicrosoftGraphUserIdentity, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *MicrosoftGraphPrintJob) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given AnyOfmicrosoftGraphUserIdentity and assigns it to the CreatedBy field.
func (o *MicrosoftGraphPrintJob) SetCreatedBy(v AnyOfmicrosoftGraphUserIdentity) {
	o.CreatedBy = v
}

// GetCreatedDateTime returns the CreatedDateTime field value if set, zero value otherwise.
func (o *MicrosoftGraphPrintJob) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPrintJob) GetCreatedDateTimeOk() (*time.Time, bool) {
	if o == nil || o.CreatedDateTime == nil {
		return nil, false
	}
	return o.CreatedDateTime, true
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphPrintJob) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime != nil {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given time.Time and assigns it to the CreatedDateTime field.
func (o *MicrosoftGraphPrintJob) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime = &v
}

// GetIsFetchable returns the IsFetchable field value if set, zero value otherwise.
func (o *MicrosoftGraphPrintJob) GetIsFetchable() bool {
	if o == nil || o.IsFetchable == nil {
		var ret bool
		return ret
	}
	return *o.IsFetchable
}

// GetIsFetchableOk returns a tuple with the IsFetchable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPrintJob) GetIsFetchableOk() (*bool, bool) {
	if o == nil || o.IsFetchable == nil {
		return nil, false
	}
	return o.IsFetchable, true
}

// HasIsFetchable returns a boolean if a field has been set.
func (o *MicrosoftGraphPrintJob) HasIsFetchable() bool {
	if o != nil && o.IsFetchable != nil {
		return true
	}

	return false
}

// SetIsFetchable gets a reference to the given bool and assigns it to the IsFetchable field.
func (o *MicrosoftGraphPrintJob) SetIsFetchable(v bool) {
	o.IsFetchable = &v
}

// GetRedirectedFrom returns the RedirectedFrom field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphPrintJob) GetRedirectedFrom() string {
	if o == nil || o.RedirectedFrom.Get() == nil {
		var ret string
		return ret
	}
	return *o.RedirectedFrom.Get()
}

// GetRedirectedFromOk returns a tuple with the RedirectedFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphPrintJob) GetRedirectedFromOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RedirectedFrom.Get(), o.RedirectedFrom.IsSet()
}

// HasRedirectedFrom returns a boolean if a field has been set.
func (o *MicrosoftGraphPrintJob) HasRedirectedFrom() bool {
	if o != nil && o.RedirectedFrom.IsSet() {
		return true
	}

	return false
}

// SetRedirectedFrom gets a reference to the given NullableString and assigns it to the RedirectedFrom field.
func (o *MicrosoftGraphPrintJob) SetRedirectedFrom(v string) {
	o.RedirectedFrom.Set(&v)
}
// SetRedirectedFromNil sets the value for RedirectedFrom to be an explicit nil
func (o *MicrosoftGraphPrintJob) SetRedirectedFromNil() {
	o.RedirectedFrom.Set(nil)
}

// UnsetRedirectedFrom ensures that no value is present for RedirectedFrom, not even an explicit nil
func (o *MicrosoftGraphPrintJob) UnsetRedirectedFrom() {
	o.RedirectedFrom.Unset()
}

// GetRedirectedTo returns the RedirectedTo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphPrintJob) GetRedirectedTo() string {
	if o == nil || o.RedirectedTo.Get() == nil {
		var ret string
		return ret
	}
	return *o.RedirectedTo.Get()
}

// GetRedirectedToOk returns a tuple with the RedirectedTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphPrintJob) GetRedirectedToOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RedirectedTo.Get(), o.RedirectedTo.IsSet()
}

// HasRedirectedTo returns a boolean if a field has been set.
func (o *MicrosoftGraphPrintJob) HasRedirectedTo() bool {
	if o != nil && o.RedirectedTo.IsSet() {
		return true
	}

	return false
}

// SetRedirectedTo gets a reference to the given NullableString and assigns it to the RedirectedTo field.
func (o *MicrosoftGraphPrintJob) SetRedirectedTo(v string) {
	o.RedirectedTo.Set(&v)
}
// SetRedirectedToNil sets the value for RedirectedTo to be an explicit nil
func (o *MicrosoftGraphPrintJob) SetRedirectedToNil() {
	o.RedirectedTo.Set(nil)
}

// UnsetRedirectedTo ensures that no value is present for RedirectedTo, not even an explicit nil
func (o *MicrosoftGraphPrintJob) UnsetRedirectedTo() {
	o.RedirectedTo.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *MicrosoftGraphPrintJob) GetStatus() MicrosoftGraphPrintJobStatus {
	if o == nil || o.Status == nil {
		var ret MicrosoftGraphPrintJobStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPrintJob) GetStatusOk() (*MicrosoftGraphPrintJobStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MicrosoftGraphPrintJob) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given MicrosoftGraphPrintJobStatus and assigns it to the Status field.
func (o *MicrosoftGraphPrintJob) SetStatus(v MicrosoftGraphPrintJobStatus) {
	o.Status = &v
}

// GetDocuments returns the Documents field value if set, zero value otherwise.
func (o *MicrosoftGraphPrintJob) GetDocuments() []MicrosoftGraphPrintDocument {
	if o == nil || o.Documents == nil {
		var ret []MicrosoftGraphPrintDocument
		return ret
	}
	return *o.Documents
}

// GetDocumentsOk returns a tuple with the Documents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPrintJob) GetDocumentsOk() (*[]MicrosoftGraphPrintDocument, bool) {
	if o == nil || o.Documents == nil {
		return nil, false
	}
	return o.Documents, true
}

// HasDocuments returns a boolean if a field has been set.
func (o *MicrosoftGraphPrintJob) HasDocuments() bool {
	if o != nil && o.Documents != nil {
		return true
	}

	return false
}

// SetDocuments gets a reference to the given []MicrosoftGraphPrintDocument and assigns it to the Documents field.
func (o *MicrosoftGraphPrintJob) SetDocuments(v []MicrosoftGraphPrintDocument) {
	o.Documents = &v
}

// GetTasks returns the Tasks field value if set, zero value otherwise.
func (o *MicrosoftGraphPrintJob) GetTasks() []MicrosoftGraphPrintTask {
	if o == nil || o.Tasks == nil {
		var ret []MicrosoftGraphPrintTask
		return ret
	}
	return *o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPrintJob) GetTasksOk() (*[]MicrosoftGraphPrintTask, bool) {
	if o == nil || o.Tasks == nil {
		return nil, false
	}
	return o.Tasks, true
}

// HasTasks returns a boolean if a field has been set.
func (o *MicrosoftGraphPrintJob) HasTasks() bool {
	if o != nil && o.Tasks != nil {
		return true
	}

	return false
}

// SetTasks gets a reference to the given []MicrosoftGraphPrintTask and assigns it to the Tasks field.
func (o *MicrosoftGraphPrintJob) SetTasks(v []MicrosoftGraphPrintTask) {
	o.Tasks = &v
}

func (o MicrosoftGraphPrintJob) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Configuration != nil {
		toSerialize["configuration"] = o.Configuration
	}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.CreatedDateTime != nil {
		toSerialize["createdDateTime"] = o.CreatedDateTime
	}
	if o.IsFetchable != nil {
		toSerialize["isFetchable"] = o.IsFetchable
	}
	if o.RedirectedFrom.IsSet() {
		toSerialize["redirectedFrom"] = o.RedirectedFrom.Get()
	}
	if o.RedirectedTo.IsSet() {
		toSerialize["redirectedTo"] = o.RedirectedTo.Get()
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Documents != nil {
		toSerialize["documents"] = o.Documents
	}
	if o.Tasks != nil {
		toSerialize["tasks"] = o.Tasks
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphPrintJob struct {
	value *MicrosoftGraphPrintJob
	isSet bool
}

func (v NullableMicrosoftGraphPrintJob) Get() *MicrosoftGraphPrintJob {
	return v.value
}

func (v *NullableMicrosoftGraphPrintJob) Set(val *MicrosoftGraphPrintJob) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphPrintJob) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphPrintJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphPrintJob(val *MicrosoftGraphPrintJob) *NullableMicrosoftGraphPrintJob {
	return &NullableMicrosoftGraphPrintJob{value: val, isSet: true}
}

func (v NullableMicrosoftGraphPrintJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphPrintJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


