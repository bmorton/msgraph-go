/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphOutlookItem struct for MicrosoftGraphOutlookItem
type MicrosoftGraphOutlookItem struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// The categories associated with the item
	Categories *[]*string `json:"categories,omitempty"`
	// Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.
	ChangeKey NullableString `json:"changeKey,omitempty"`
	// The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
	CreatedDateTime NullableTime `json:"createdDateTime,omitempty"`
	// The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
	LastModifiedDateTime NullableTime `json:"lastModifiedDateTime,omitempty"`
}

// NewMicrosoftGraphOutlookItem instantiates a new MicrosoftGraphOutlookItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphOutlookItem() *MicrosoftGraphOutlookItem {
	this := MicrosoftGraphOutlookItem{}
	return &this
}

// NewMicrosoftGraphOutlookItemWithDefaults instantiates a new MicrosoftGraphOutlookItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphOutlookItemWithDefaults() *MicrosoftGraphOutlookItem {
	this := MicrosoftGraphOutlookItem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphOutlookItem) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphOutlookItem) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphOutlookItem) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphOutlookItem) SetId(v string) {
	o.Id = &v
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *MicrosoftGraphOutlookItem) GetCategories() []*string {
	if o == nil || o.Categories == nil {
		var ret []*string
		return ret
	}
	return *o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphOutlookItem) GetCategoriesOk() (*[]*string, bool) {
	if o == nil || o.Categories == nil {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *MicrosoftGraphOutlookItem) HasCategories() bool {
	if o != nil && o.Categories != nil {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []*string and assigns it to the Categories field.
func (o *MicrosoftGraphOutlookItem) SetCategories(v []*string) {
	o.Categories = &v
}

// GetChangeKey returns the ChangeKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOutlookItem) GetChangeKey() string {
	if o == nil || o.ChangeKey.Get() == nil {
		var ret string
		return ret
	}
	return *o.ChangeKey.Get()
}

// GetChangeKeyOk returns a tuple with the ChangeKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOutlookItem) GetChangeKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ChangeKey.Get(), o.ChangeKey.IsSet()
}

// HasChangeKey returns a boolean if a field has been set.
func (o *MicrosoftGraphOutlookItem) HasChangeKey() bool {
	if o != nil && o.ChangeKey.IsSet() {
		return true
	}

	return false
}

// SetChangeKey gets a reference to the given NullableString and assigns it to the ChangeKey field.
func (o *MicrosoftGraphOutlookItem) SetChangeKey(v string) {
	o.ChangeKey.Set(&v)
}
// SetChangeKeyNil sets the value for ChangeKey to be an explicit nil
func (o *MicrosoftGraphOutlookItem) SetChangeKeyNil() {
	o.ChangeKey.Set(nil)
}

// UnsetChangeKey ensures that no value is present for ChangeKey, not even an explicit nil
func (o *MicrosoftGraphOutlookItem) UnsetChangeKey() {
	o.ChangeKey.Unset()
}

// GetCreatedDateTime returns the CreatedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOutlookItem) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime.Get()
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOutlookItem) GetCreatedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatedDateTime.Get(), o.CreatedDateTime.IsSet()
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphOutlookItem) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime.IsSet() {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given NullableTime and assigns it to the CreatedDateTime field.
func (o *MicrosoftGraphOutlookItem) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime.Set(&v)
}
// SetCreatedDateTimeNil sets the value for CreatedDateTime to be an explicit nil
func (o *MicrosoftGraphOutlookItem) SetCreatedDateTimeNil() {
	o.CreatedDateTime.Set(nil)
}

// UnsetCreatedDateTime ensures that no value is present for CreatedDateTime, not even an explicit nil
func (o *MicrosoftGraphOutlookItem) UnsetCreatedDateTime() {
	o.CreatedDateTime.Unset()
}

// GetLastModifiedDateTime returns the LastModifiedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphOutlookItem) GetLastModifiedDateTime() time.Time {
	if o == nil || o.LastModifiedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDateTime.Get()
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphOutlookItem) GetLastModifiedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastModifiedDateTime.Get(), o.LastModifiedDateTime.IsSet()
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphOutlookItem) HasLastModifiedDateTime() bool {
	if o != nil && o.LastModifiedDateTime.IsSet() {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given NullableTime and assigns it to the LastModifiedDateTime field.
func (o *MicrosoftGraphOutlookItem) SetLastModifiedDateTime(v time.Time) {
	o.LastModifiedDateTime.Set(&v)
}
// SetLastModifiedDateTimeNil sets the value for LastModifiedDateTime to be an explicit nil
func (o *MicrosoftGraphOutlookItem) SetLastModifiedDateTimeNil() {
	o.LastModifiedDateTime.Set(nil)
}

// UnsetLastModifiedDateTime ensures that no value is present for LastModifiedDateTime, not even an explicit nil
func (o *MicrosoftGraphOutlookItem) UnsetLastModifiedDateTime() {
	o.LastModifiedDateTime.Unset()
}

func (o MicrosoftGraphOutlookItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Categories != nil {
		toSerialize["categories"] = o.Categories
	}
	if o.ChangeKey.IsSet() {
		toSerialize["changeKey"] = o.ChangeKey.Get()
	}
	if o.CreatedDateTime.IsSet() {
		toSerialize["createdDateTime"] = o.CreatedDateTime.Get()
	}
	if o.LastModifiedDateTime.IsSet() {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphOutlookItem struct {
	value *MicrosoftGraphOutlookItem
	isSet bool
}

func (v NullableMicrosoftGraphOutlookItem) Get() *MicrosoftGraphOutlookItem {
	return v.value
}

func (v *NullableMicrosoftGraphOutlookItem) Set(val *MicrosoftGraphOutlookItem) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphOutlookItem) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphOutlookItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphOutlookItem(val *MicrosoftGraphOutlookItem) *NullableMicrosoftGraphOutlookItem {
	return &NullableMicrosoftGraphOutlookItem{value: val, isSet: true}
}

func (v NullableMicrosoftGraphOutlookItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphOutlookItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


