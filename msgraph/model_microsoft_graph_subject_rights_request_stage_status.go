/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphSubjectRightsRequestStageStatus the model 'MicrosoftGraphSubjectRightsRequestStageStatus'
type MicrosoftGraphSubjectRightsRequestStageStatus string

// List of microsoft.graph.subjectRightsRequestStageStatus
const (
	NOT_STARTED MicrosoftGraphSubjectRightsRequestStageStatus = "notStarted"
	CURRENT MicrosoftGraphSubjectRightsRequestStageStatus = "current"
	COMPLETED MicrosoftGraphSubjectRightsRequestStageStatus = "completed"
	FAILED MicrosoftGraphSubjectRightsRequestStageStatus = "failed"
	UNKNOWN_FUTURE_VALUE MicrosoftGraphSubjectRightsRequestStageStatus = "unknownFutureValue"
)

// All allowed values of MicrosoftGraphSubjectRightsRequestStageStatus enum
var AllowedMicrosoftGraphSubjectRightsRequestStageStatusEnumValues = []MicrosoftGraphSubjectRightsRequestStageStatus{
	"notStarted",
	"current",
	"completed",
	"failed",
	"unknownFutureValue",
}

func (v *MicrosoftGraphSubjectRightsRequestStageStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphSubjectRightsRequestStageStatus(value)
	for _, existing := range AllowedMicrosoftGraphSubjectRightsRequestStageStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphSubjectRightsRequestStageStatus", value)
}

// NewMicrosoftGraphSubjectRightsRequestStageStatusFromValue returns a pointer to a valid MicrosoftGraphSubjectRightsRequestStageStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphSubjectRightsRequestStageStatusFromValue(v string) (*MicrosoftGraphSubjectRightsRequestStageStatus, error) {
	ev := MicrosoftGraphSubjectRightsRequestStageStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphSubjectRightsRequestStageStatus: valid values are %v", v, AllowedMicrosoftGraphSubjectRightsRequestStageStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphSubjectRightsRequestStageStatus) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphSubjectRightsRequestStageStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.subjectRightsRequestStageStatus value
func (v MicrosoftGraphSubjectRightsRequestStageStatus) Ptr() *MicrosoftGraphSubjectRightsRequestStageStatus {
	return &v
}

type NullableMicrosoftGraphSubjectRightsRequestStageStatus struct {
	value *MicrosoftGraphSubjectRightsRequestStageStatus
	isSet bool
}

func (v NullableMicrosoftGraphSubjectRightsRequestStageStatus) Get() *MicrosoftGraphSubjectRightsRequestStageStatus {
	return v.value
}

func (v *NullableMicrosoftGraphSubjectRightsRequestStageStatus) Set(val *MicrosoftGraphSubjectRightsRequestStageStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphSubjectRightsRequestStageStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphSubjectRightsRequestStageStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphSubjectRightsRequestStageStatus(val *MicrosoftGraphSubjectRightsRequestStageStatus) *NullableMicrosoftGraphSubjectRightsRequestStageStatus {
	return &NullableMicrosoftGraphSubjectRightsRequestStageStatus{value: val, isSet: true}
}

func (v NullableMicrosoftGraphSubjectRightsRequestStageStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphSubjectRightsRequestStageStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

