/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphAppliedConditionalAccessPolicy struct for MicrosoftGraphAppliedConditionalAccessPolicy
type MicrosoftGraphAppliedConditionalAccessPolicy struct {
	// Refers to the Name of the conditional access policy (example: 'Require MFA for Salesforce').
	DisplayName NullableString `json:"displayName,omitempty"`
	// Refers to the grant controls enforced by the conditional access policy (example: 'Require multi-factor authentication').
	EnforcedGrantControls *[]*string `json:"enforcedGrantControls,omitempty"`
	// Refers to the session controls enforced by the conditional access policy (example: 'Require app enforced controls').
	EnforcedSessionControls *[]*string `json:"enforcedSessionControls,omitempty"`
	// An identifier of the conditional access policy.
	Id NullableString `json:"id,omitempty"`
	// Indicates the result of the CA policy that was triggered. Possible values are: success, failure, notApplied (Policy isn't applied because policy conditions were not met),notEnabled (This is due to the policy in disabled state), unknown, unknownFutureValue.
	Result AnyOfmicrosoftGraphAppliedConditionalAccessPolicyResult `json:"result,omitempty"`
}

// NewMicrosoftGraphAppliedConditionalAccessPolicy instantiates a new MicrosoftGraphAppliedConditionalAccessPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphAppliedConditionalAccessPolicy() *MicrosoftGraphAppliedConditionalAccessPolicy {
	this := MicrosoftGraphAppliedConditionalAccessPolicy{}
	return &this
}

// NewMicrosoftGraphAppliedConditionalAccessPolicyWithDefaults instantiates a new MicrosoftGraphAppliedConditionalAccessPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphAppliedConditionalAccessPolicyWithDefaults() *MicrosoftGraphAppliedConditionalAccessPolicy {
	this := MicrosoftGraphAppliedConditionalAccessPolicy{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetEnforcedGrantControls returns the EnforcedGrantControls field value if set, zero value otherwise.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) GetEnforcedGrantControls() []*string {
	if o == nil || o.EnforcedGrantControls == nil {
		var ret []*string
		return ret
	}
	return *o.EnforcedGrantControls
}

// GetEnforcedGrantControlsOk returns a tuple with the EnforcedGrantControls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) GetEnforcedGrantControlsOk() (*[]*string, bool) {
	if o == nil || o.EnforcedGrantControls == nil {
		return nil, false
	}
	return o.EnforcedGrantControls, true
}

// HasEnforcedGrantControls returns a boolean if a field has been set.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) HasEnforcedGrantControls() bool {
	if o != nil && o.EnforcedGrantControls != nil {
		return true
	}

	return false
}

// SetEnforcedGrantControls gets a reference to the given []*string and assigns it to the EnforcedGrantControls field.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) SetEnforcedGrantControls(v []*string) {
	o.EnforcedGrantControls = &v
}

// GetEnforcedSessionControls returns the EnforcedSessionControls field value if set, zero value otherwise.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) GetEnforcedSessionControls() []*string {
	if o == nil || o.EnforcedSessionControls == nil {
		var ret []*string
		return ret
	}
	return *o.EnforcedSessionControls
}

// GetEnforcedSessionControlsOk returns a tuple with the EnforcedSessionControls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) GetEnforcedSessionControlsOk() (*[]*string, bool) {
	if o == nil || o.EnforcedSessionControls == nil {
		return nil, false
	}
	return o.EnforcedSessionControls, true
}

// HasEnforcedSessionControls returns a boolean if a field has been set.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) HasEnforcedSessionControls() bool {
	if o != nil && o.EnforcedSessionControls != nil {
		return true
	}

	return false
}

// SetEnforcedSessionControls gets a reference to the given []*string and assigns it to the EnforcedSessionControls field.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) SetEnforcedSessionControls(v []*string) {
	o.EnforcedSessionControls = &v
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) GetId() string {
	if o == nil || o.Id.Get() == nil {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) UnsetId() {
	o.Id.Unset()
}

// GetResult returns the Result field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) GetResult() AnyOfmicrosoftGraphAppliedConditionalAccessPolicyResult {
	if o == nil  {
		var ret AnyOfmicrosoftGraphAppliedConditionalAccessPolicyResult
		return ret
	}
	return o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) GetResultOk() (*AnyOfmicrosoftGraphAppliedConditionalAccessPolicyResult, bool) {
	if o == nil || o.Result == nil {
		return nil, false
	}
	return &o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) HasResult() bool {
	if o != nil && o.Result != nil {
		return true
	}

	return false
}

// SetResult gets a reference to the given AnyOfmicrosoftGraphAppliedConditionalAccessPolicyResult and assigns it to the Result field.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) SetResult(v AnyOfmicrosoftGraphAppliedConditionalAccessPolicyResult) {
	o.Result = v
}

func (o MicrosoftGraphAppliedConditionalAccessPolicy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.EnforcedGrantControls != nil {
		toSerialize["enforcedGrantControls"] = o.EnforcedGrantControls
	}
	if o.EnforcedSessionControls != nil {
		toSerialize["enforcedSessionControls"] = o.EnforcedSessionControls
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Result != nil {
		toSerialize["result"] = o.Result
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphAppliedConditionalAccessPolicy struct {
	value *MicrosoftGraphAppliedConditionalAccessPolicy
	isSet bool
}

func (v NullableMicrosoftGraphAppliedConditionalAccessPolicy) Get() *MicrosoftGraphAppliedConditionalAccessPolicy {
	return v.value
}

func (v *NullableMicrosoftGraphAppliedConditionalAccessPolicy) Set(val *MicrosoftGraphAppliedConditionalAccessPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphAppliedConditionalAccessPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphAppliedConditionalAccessPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphAppliedConditionalAccessPolicy(val *MicrosoftGraphAppliedConditionalAccessPolicy) *NullableMicrosoftGraphAppliedConditionalAccessPolicy {
	return &NullableMicrosoftGraphAppliedConditionalAccessPolicy{value: val, isSet: true}
}

func (v NullableMicrosoftGraphAppliedConditionalAccessPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphAppliedConditionalAccessPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


