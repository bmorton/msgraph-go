/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"time"
)

// Message struct for Message
type Message struct {
	// The Bcc: recipients for the message.
	BccRecipients *[]*AnyOfmicrosoftGraphRecipient `json:"bccRecipients,omitempty"`
	// The body of the message. It can be in HTML or text format. Find out about safe HTML in a message body.
	Body AnyOfmicrosoftGraphItemBody `json:"body,omitempty"`
	// The first 255 characters of the message body. It is in text format.
	BodyPreview NullableString `json:"bodyPreview,omitempty"`
	// The Cc: recipients for the message.
	CcRecipients *[]*AnyOfmicrosoftGraphRecipient `json:"ccRecipients,omitempty"`
	// The ID of the conversation the email belongs to.
	ConversationId NullableString `json:"conversationId,omitempty"`
	// Indicates the position of the message within the conversation.
	ConversationIndex NullableString `json:"conversationIndex,omitempty"`
	// The flag value that indicates the status, start date, due date, or completion date for the message.
	Flag AnyOfmicrosoftGraphFollowupFlag `json:"flag,omitempty"`
	// The owner of the mailbox from which the message is sent. In most cases, this value is the same as the sender property, except for sharing or delegation scenarios. The value must correspond to the actual mailbox used. Find out more about setting the from and sender properties of a message.
	From AnyOfmicrosoftGraphRecipient `json:"from,omitempty"`
	// Indicates whether the message has attachments. This property doesn't include inline attachments, so if a message contains only inline attachments, this property is false. To verify the existence of inline attachments, parse the body property to look for a src attribute, such as <IMG src='cid:image001.jpg@01D26CD8.6C05F070'>.
	HasAttachments NullableBool `json:"hasAttachments,omitempty"`
	Importance AnyOfmicrosoftGraphImportance `json:"importance,omitempty"`
	InferenceClassification AnyOfmicrosoftGraphInferenceClassificationType `json:"inferenceClassification,omitempty"`
	InternetMessageHeaders *[]*AnyOfmicrosoftGraphInternetMessageHeader `json:"internetMessageHeaders,omitempty"`
	InternetMessageId NullableString `json:"internetMessageId,omitempty"`
	IsDeliveryReceiptRequested NullableBool `json:"isDeliveryReceiptRequested,omitempty"`
	IsDraft NullableBool `json:"isDraft,omitempty"`
	IsRead NullableBool `json:"isRead,omitempty"`
	IsReadReceiptRequested NullableBool `json:"isReadReceiptRequested,omitempty"`
	ParentFolderId NullableString `json:"parentFolderId,omitempty"`
	ReceivedDateTime NullableTime `json:"receivedDateTime,omitempty"`
	ReplyTo *[]*AnyOfmicrosoftGraphRecipient `json:"replyTo,omitempty"`
	Sender AnyOfmicrosoftGraphRecipient `json:"sender,omitempty"`
	SentDateTime NullableTime `json:"sentDateTime,omitempty"`
	Subject NullableString `json:"subject,omitempty"`
	ToRecipients *[]*AnyOfmicrosoftGraphRecipient `json:"toRecipients,omitempty"`
	UniqueBody AnyOfmicrosoftGraphItemBody `json:"uniqueBody,omitempty"`
	WebLink NullableString `json:"webLink,omitempty"`
	// The fileAttachment and itemAttachment attachments for the message.
	Attachments *[]MicrosoftGraphAttachment `json:"attachments,omitempty"`
	// The collection of open extensions defined for the message. Nullable.
	Extensions *[]MicrosoftGraphExtension `json:"extensions,omitempty"`
	// The collection of multi-value extended properties defined for the message. Nullable.
	MultiValueExtendedProperties *[]MicrosoftGraphMultiValueLegacyExtendedProperty `json:"multiValueExtendedProperties,omitempty"`
	// The collection of single-value extended properties defined for the message. Nullable.
	SingleValueExtendedProperties *[]MicrosoftGraphSingleValueLegacyExtendedProperty `json:"singleValueExtendedProperties,omitempty"`
}

// NewMessage instantiates a new Message object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessage() *Message {
	this := Message{}
	return &this
}

// NewMessageWithDefaults instantiates a new Message object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageWithDefaults() *Message {
	this := Message{}
	return &this
}

// GetBccRecipients returns the BccRecipients field value if set, zero value otherwise.
func (o *Message) GetBccRecipients() []*AnyOfmicrosoftGraphRecipient {
	if o == nil || o.BccRecipients == nil {
		var ret []*AnyOfmicrosoftGraphRecipient
		return ret
	}
	return *o.BccRecipients
}

// GetBccRecipientsOk returns a tuple with the BccRecipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetBccRecipientsOk() (*[]*AnyOfmicrosoftGraphRecipient, bool) {
	if o == nil || o.BccRecipients == nil {
		return nil, false
	}
	return o.BccRecipients, true
}

// HasBccRecipients returns a boolean if a field has been set.
func (o *Message) HasBccRecipients() bool {
	if o != nil && o.BccRecipients != nil {
		return true
	}

	return false
}

// SetBccRecipients gets a reference to the given []*AnyOfmicrosoftGraphRecipient and assigns it to the BccRecipients field.
func (o *Message) SetBccRecipients(v []*AnyOfmicrosoftGraphRecipient) {
	o.BccRecipients = &v
}

// GetBody returns the Body field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Message) GetBody() AnyOfmicrosoftGraphItemBody {
	if o == nil  {
		var ret AnyOfmicrosoftGraphItemBody
		return ret
	}
	return o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Message) GetBodyOk() (*AnyOfmicrosoftGraphItemBody, bool) {
	if o == nil || o.Body == nil {
		return nil, false
	}
	return &o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *Message) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given AnyOfmicrosoftGraphItemBody and assigns it to the Body field.
func (o *Message) SetBody(v AnyOfmicrosoftGraphItemBody) {
	o.Body = v
}

// GetBodyPreview returns the BodyPreview field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Message) GetBodyPreview() string {
	if o == nil || o.BodyPreview.Get() == nil {
		var ret string
		return ret
	}
	return *o.BodyPreview.Get()
}

// GetBodyPreviewOk returns a tuple with the BodyPreview field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Message) GetBodyPreviewOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BodyPreview.Get(), o.BodyPreview.IsSet()
}

// HasBodyPreview returns a boolean if a field has been set.
func (o *Message) HasBodyPreview() bool {
	if o != nil && o.BodyPreview.IsSet() {
		return true
	}

	return false
}

// SetBodyPreview gets a reference to the given NullableString and assigns it to the BodyPreview field.
func (o *Message) SetBodyPreview(v string) {
	o.BodyPreview.Set(&v)
}
// SetBodyPreviewNil sets the value for BodyPreview to be an explicit nil
func (o *Message) SetBodyPreviewNil() {
	o.BodyPreview.Set(nil)
}

// UnsetBodyPreview ensures that no value is present for BodyPreview, not even an explicit nil
func (o *Message) UnsetBodyPreview() {
	o.BodyPreview.Unset()
}

// GetCcRecipients returns the CcRecipients field value if set, zero value otherwise.
func (o *Message) GetCcRecipients() []*AnyOfmicrosoftGraphRecipient {
	if o == nil || o.CcRecipients == nil {
		var ret []*AnyOfmicrosoftGraphRecipient
		return ret
	}
	return *o.CcRecipients
}

// GetCcRecipientsOk returns a tuple with the CcRecipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetCcRecipientsOk() (*[]*AnyOfmicrosoftGraphRecipient, bool) {
	if o == nil || o.CcRecipients == nil {
		return nil, false
	}
	return o.CcRecipients, true
}

// HasCcRecipients returns a boolean if a field has been set.
func (o *Message) HasCcRecipients() bool {
	if o != nil && o.CcRecipients != nil {
		return true
	}

	return false
}

// SetCcRecipients gets a reference to the given []*AnyOfmicrosoftGraphRecipient and assigns it to the CcRecipients field.
func (o *Message) SetCcRecipients(v []*AnyOfmicrosoftGraphRecipient) {
	o.CcRecipients = &v
}

// GetConversationId returns the ConversationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Message) GetConversationId() string {
	if o == nil || o.ConversationId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ConversationId.Get()
}

// GetConversationIdOk returns a tuple with the ConversationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Message) GetConversationIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ConversationId.Get(), o.ConversationId.IsSet()
}

// HasConversationId returns a boolean if a field has been set.
func (o *Message) HasConversationId() bool {
	if o != nil && o.ConversationId.IsSet() {
		return true
	}

	return false
}

// SetConversationId gets a reference to the given NullableString and assigns it to the ConversationId field.
func (o *Message) SetConversationId(v string) {
	o.ConversationId.Set(&v)
}
// SetConversationIdNil sets the value for ConversationId to be an explicit nil
func (o *Message) SetConversationIdNil() {
	o.ConversationId.Set(nil)
}

// UnsetConversationId ensures that no value is present for ConversationId, not even an explicit nil
func (o *Message) UnsetConversationId() {
	o.ConversationId.Unset()
}

// GetConversationIndex returns the ConversationIndex field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Message) GetConversationIndex() string {
	if o == nil || o.ConversationIndex.Get() == nil {
		var ret string
		return ret
	}
	return *o.ConversationIndex.Get()
}

// GetConversationIndexOk returns a tuple with the ConversationIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Message) GetConversationIndexOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ConversationIndex.Get(), o.ConversationIndex.IsSet()
}

// HasConversationIndex returns a boolean if a field has been set.
func (o *Message) HasConversationIndex() bool {
	if o != nil && o.ConversationIndex.IsSet() {
		return true
	}

	return false
}

// SetConversationIndex gets a reference to the given NullableString and assigns it to the ConversationIndex field.
func (o *Message) SetConversationIndex(v string) {
	o.ConversationIndex.Set(&v)
}
// SetConversationIndexNil sets the value for ConversationIndex to be an explicit nil
func (o *Message) SetConversationIndexNil() {
	o.ConversationIndex.Set(nil)
}

// UnsetConversationIndex ensures that no value is present for ConversationIndex, not even an explicit nil
func (o *Message) UnsetConversationIndex() {
	o.ConversationIndex.Unset()
}

// GetFlag returns the Flag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Message) GetFlag() AnyOfmicrosoftGraphFollowupFlag {
	if o == nil  {
		var ret AnyOfmicrosoftGraphFollowupFlag
		return ret
	}
	return o.Flag
}

// GetFlagOk returns a tuple with the Flag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Message) GetFlagOk() (*AnyOfmicrosoftGraphFollowupFlag, bool) {
	if o == nil || o.Flag == nil {
		return nil, false
	}
	return &o.Flag, true
}

// HasFlag returns a boolean if a field has been set.
func (o *Message) HasFlag() bool {
	if o != nil && o.Flag != nil {
		return true
	}

	return false
}

// SetFlag gets a reference to the given AnyOfmicrosoftGraphFollowupFlag and assigns it to the Flag field.
func (o *Message) SetFlag(v AnyOfmicrosoftGraphFollowupFlag) {
	o.Flag = v
}

// GetFrom returns the From field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Message) GetFrom() AnyOfmicrosoftGraphRecipient {
	if o == nil  {
		var ret AnyOfmicrosoftGraphRecipient
		return ret
	}
	return o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Message) GetFromOk() (*AnyOfmicrosoftGraphRecipient, bool) {
	if o == nil || o.From == nil {
		return nil, false
	}
	return &o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *Message) HasFrom() bool {
	if o != nil && o.From != nil {
		return true
	}

	return false
}

// SetFrom gets a reference to the given AnyOfmicrosoftGraphRecipient and assigns it to the From field.
func (o *Message) SetFrom(v AnyOfmicrosoftGraphRecipient) {
	o.From = v
}

// GetHasAttachments returns the HasAttachments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Message) GetHasAttachments() bool {
	if o == nil || o.HasAttachments.Get() == nil {
		var ret bool
		return ret
	}
	return *o.HasAttachments.Get()
}

// GetHasAttachmentsOk returns a tuple with the HasAttachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Message) GetHasAttachmentsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HasAttachments.Get(), o.HasAttachments.IsSet()
}

// HasHasAttachments returns a boolean if a field has been set.
func (o *Message) HasHasAttachments() bool {
	if o != nil && o.HasAttachments.IsSet() {
		return true
	}

	return false
}

// SetHasAttachments gets a reference to the given NullableBool and assigns it to the HasAttachments field.
func (o *Message) SetHasAttachments(v bool) {
	o.HasAttachments.Set(&v)
}
// SetHasAttachmentsNil sets the value for HasAttachments to be an explicit nil
func (o *Message) SetHasAttachmentsNil() {
	o.HasAttachments.Set(nil)
}

// UnsetHasAttachments ensures that no value is present for HasAttachments, not even an explicit nil
func (o *Message) UnsetHasAttachments() {
	o.HasAttachments.Unset()
}

// GetImportance returns the Importance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Message) GetImportance() AnyOfmicrosoftGraphImportance {
	if o == nil  {
		var ret AnyOfmicrosoftGraphImportance
		return ret
	}
	return o.Importance
}

// GetImportanceOk returns a tuple with the Importance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Message) GetImportanceOk() (*AnyOfmicrosoftGraphImportance, bool) {
	if o == nil || o.Importance == nil {
		return nil, false
	}
	return &o.Importance, true
}

// HasImportance returns a boolean if a field has been set.
func (o *Message) HasImportance() bool {
	if o != nil && o.Importance != nil {
		return true
	}

	return false
}

// SetImportance gets a reference to the given AnyOfmicrosoftGraphImportance and assigns it to the Importance field.
func (o *Message) SetImportance(v AnyOfmicrosoftGraphImportance) {
	o.Importance = v
}

// GetInferenceClassification returns the InferenceClassification field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Message) GetInferenceClassification() AnyOfmicrosoftGraphInferenceClassificationType {
	if o == nil  {
		var ret AnyOfmicrosoftGraphInferenceClassificationType
		return ret
	}
	return o.InferenceClassification
}

// GetInferenceClassificationOk returns a tuple with the InferenceClassification field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Message) GetInferenceClassificationOk() (*AnyOfmicrosoftGraphInferenceClassificationType, bool) {
	if o == nil || o.InferenceClassification == nil {
		return nil, false
	}
	return &o.InferenceClassification, true
}

// HasInferenceClassification returns a boolean if a field has been set.
func (o *Message) HasInferenceClassification() bool {
	if o != nil && o.InferenceClassification != nil {
		return true
	}

	return false
}

// SetInferenceClassification gets a reference to the given AnyOfmicrosoftGraphInferenceClassificationType and assigns it to the InferenceClassification field.
func (o *Message) SetInferenceClassification(v AnyOfmicrosoftGraphInferenceClassificationType) {
	o.InferenceClassification = v
}

// GetInternetMessageHeaders returns the InternetMessageHeaders field value if set, zero value otherwise.
func (o *Message) GetInternetMessageHeaders() []*AnyOfmicrosoftGraphInternetMessageHeader {
	if o == nil || o.InternetMessageHeaders == nil {
		var ret []*AnyOfmicrosoftGraphInternetMessageHeader
		return ret
	}
	return *o.InternetMessageHeaders
}

// GetInternetMessageHeadersOk returns a tuple with the InternetMessageHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetInternetMessageHeadersOk() (*[]*AnyOfmicrosoftGraphInternetMessageHeader, bool) {
	if o == nil || o.InternetMessageHeaders == nil {
		return nil, false
	}
	return o.InternetMessageHeaders, true
}

// HasInternetMessageHeaders returns a boolean if a field has been set.
func (o *Message) HasInternetMessageHeaders() bool {
	if o != nil && o.InternetMessageHeaders != nil {
		return true
	}

	return false
}

// SetInternetMessageHeaders gets a reference to the given []*AnyOfmicrosoftGraphInternetMessageHeader and assigns it to the InternetMessageHeaders field.
func (o *Message) SetInternetMessageHeaders(v []*AnyOfmicrosoftGraphInternetMessageHeader) {
	o.InternetMessageHeaders = &v
}

// GetInternetMessageId returns the InternetMessageId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Message) GetInternetMessageId() string {
	if o == nil || o.InternetMessageId.Get() == nil {
		var ret string
		return ret
	}
	return *o.InternetMessageId.Get()
}

// GetInternetMessageIdOk returns a tuple with the InternetMessageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Message) GetInternetMessageIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InternetMessageId.Get(), o.InternetMessageId.IsSet()
}

// HasInternetMessageId returns a boolean if a field has been set.
func (o *Message) HasInternetMessageId() bool {
	if o != nil && o.InternetMessageId.IsSet() {
		return true
	}

	return false
}

// SetInternetMessageId gets a reference to the given NullableString and assigns it to the InternetMessageId field.
func (o *Message) SetInternetMessageId(v string) {
	o.InternetMessageId.Set(&v)
}
// SetInternetMessageIdNil sets the value for InternetMessageId to be an explicit nil
func (o *Message) SetInternetMessageIdNil() {
	o.InternetMessageId.Set(nil)
}

// UnsetInternetMessageId ensures that no value is present for InternetMessageId, not even an explicit nil
func (o *Message) UnsetInternetMessageId() {
	o.InternetMessageId.Unset()
}

// GetIsDeliveryReceiptRequested returns the IsDeliveryReceiptRequested field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Message) GetIsDeliveryReceiptRequested() bool {
	if o == nil || o.IsDeliveryReceiptRequested.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsDeliveryReceiptRequested.Get()
}

// GetIsDeliveryReceiptRequestedOk returns a tuple with the IsDeliveryReceiptRequested field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Message) GetIsDeliveryReceiptRequestedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsDeliveryReceiptRequested.Get(), o.IsDeliveryReceiptRequested.IsSet()
}

// HasIsDeliveryReceiptRequested returns a boolean if a field has been set.
func (o *Message) HasIsDeliveryReceiptRequested() bool {
	if o != nil && o.IsDeliveryReceiptRequested.IsSet() {
		return true
	}

	return false
}

// SetIsDeliveryReceiptRequested gets a reference to the given NullableBool and assigns it to the IsDeliveryReceiptRequested field.
func (o *Message) SetIsDeliveryReceiptRequested(v bool) {
	o.IsDeliveryReceiptRequested.Set(&v)
}
// SetIsDeliveryReceiptRequestedNil sets the value for IsDeliveryReceiptRequested to be an explicit nil
func (o *Message) SetIsDeliveryReceiptRequestedNil() {
	o.IsDeliveryReceiptRequested.Set(nil)
}

// UnsetIsDeliveryReceiptRequested ensures that no value is present for IsDeliveryReceiptRequested, not even an explicit nil
func (o *Message) UnsetIsDeliveryReceiptRequested() {
	o.IsDeliveryReceiptRequested.Unset()
}

// GetIsDraft returns the IsDraft field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Message) GetIsDraft() bool {
	if o == nil || o.IsDraft.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsDraft.Get()
}

// GetIsDraftOk returns a tuple with the IsDraft field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Message) GetIsDraftOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsDraft.Get(), o.IsDraft.IsSet()
}

// HasIsDraft returns a boolean if a field has been set.
func (o *Message) HasIsDraft() bool {
	if o != nil && o.IsDraft.IsSet() {
		return true
	}

	return false
}

// SetIsDraft gets a reference to the given NullableBool and assigns it to the IsDraft field.
func (o *Message) SetIsDraft(v bool) {
	o.IsDraft.Set(&v)
}
// SetIsDraftNil sets the value for IsDraft to be an explicit nil
func (o *Message) SetIsDraftNil() {
	o.IsDraft.Set(nil)
}

// UnsetIsDraft ensures that no value is present for IsDraft, not even an explicit nil
func (o *Message) UnsetIsDraft() {
	o.IsDraft.Unset()
}

// GetIsRead returns the IsRead field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Message) GetIsRead() bool {
	if o == nil || o.IsRead.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsRead.Get()
}

// GetIsReadOk returns a tuple with the IsRead field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Message) GetIsReadOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsRead.Get(), o.IsRead.IsSet()
}

// HasIsRead returns a boolean if a field has been set.
func (o *Message) HasIsRead() bool {
	if o != nil && o.IsRead.IsSet() {
		return true
	}

	return false
}

// SetIsRead gets a reference to the given NullableBool and assigns it to the IsRead field.
func (o *Message) SetIsRead(v bool) {
	o.IsRead.Set(&v)
}
// SetIsReadNil sets the value for IsRead to be an explicit nil
func (o *Message) SetIsReadNil() {
	o.IsRead.Set(nil)
}

// UnsetIsRead ensures that no value is present for IsRead, not even an explicit nil
func (o *Message) UnsetIsRead() {
	o.IsRead.Unset()
}

// GetIsReadReceiptRequested returns the IsReadReceiptRequested field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Message) GetIsReadReceiptRequested() bool {
	if o == nil || o.IsReadReceiptRequested.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsReadReceiptRequested.Get()
}

// GetIsReadReceiptRequestedOk returns a tuple with the IsReadReceiptRequested field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Message) GetIsReadReceiptRequestedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsReadReceiptRequested.Get(), o.IsReadReceiptRequested.IsSet()
}

// HasIsReadReceiptRequested returns a boolean if a field has been set.
func (o *Message) HasIsReadReceiptRequested() bool {
	if o != nil && o.IsReadReceiptRequested.IsSet() {
		return true
	}

	return false
}

// SetIsReadReceiptRequested gets a reference to the given NullableBool and assigns it to the IsReadReceiptRequested field.
func (o *Message) SetIsReadReceiptRequested(v bool) {
	o.IsReadReceiptRequested.Set(&v)
}
// SetIsReadReceiptRequestedNil sets the value for IsReadReceiptRequested to be an explicit nil
func (o *Message) SetIsReadReceiptRequestedNil() {
	o.IsReadReceiptRequested.Set(nil)
}

// UnsetIsReadReceiptRequested ensures that no value is present for IsReadReceiptRequested, not even an explicit nil
func (o *Message) UnsetIsReadReceiptRequested() {
	o.IsReadReceiptRequested.Unset()
}

// GetParentFolderId returns the ParentFolderId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Message) GetParentFolderId() string {
	if o == nil || o.ParentFolderId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ParentFolderId.Get()
}

// GetParentFolderIdOk returns a tuple with the ParentFolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Message) GetParentFolderIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ParentFolderId.Get(), o.ParentFolderId.IsSet()
}

// HasParentFolderId returns a boolean if a field has been set.
func (o *Message) HasParentFolderId() bool {
	if o != nil && o.ParentFolderId.IsSet() {
		return true
	}

	return false
}

// SetParentFolderId gets a reference to the given NullableString and assigns it to the ParentFolderId field.
func (o *Message) SetParentFolderId(v string) {
	o.ParentFolderId.Set(&v)
}
// SetParentFolderIdNil sets the value for ParentFolderId to be an explicit nil
func (o *Message) SetParentFolderIdNil() {
	o.ParentFolderId.Set(nil)
}

// UnsetParentFolderId ensures that no value is present for ParentFolderId, not even an explicit nil
func (o *Message) UnsetParentFolderId() {
	o.ParentFolderId.Unset()
}

// GetReceivedDateTime returns the ReceivedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Message) GetReceivedDateTime() time.Time {
	if o == nil || o.ReceivedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.ReceivedDateTime.Get()
}

// GetReceivedDateTimeOk returns a tuple with the ReceivedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Message) GetReceivedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ReceivedDateTime.Get(), o.ReceivedDateTime.IsSet()
}

// HasReceivedDateTime returns a boolean if a field has been set.
func (o *Message) HasReceivedDateTime() bool {
	if o != nil && o.ReceivedDateTime.IsSet() {
		return true
	}

	return false
}

// SetReceivedDateTime gets a reference to the given NullableTime and assigns it to the ReceivedDateTime field.
func (o *Message) SetReceivedDateTime(v time.Time) {
	o.ReceivedDateTime.Set(&v)
}
// SetReceivedDateTimeNil sets the value for ReceivedDateTime to be an explicit nil
func (o *Message) SetReceivedDateTimeNil() {
	o.ReceivedDateTime.Set(nil)
}

// UnsetReceivedDateTime ensures that no value is present for ReceivedDateTime, not even an explicit nil
func (o *Message) UnsetReceivedDateTime() {
	o.ReceivedDateTime.Unset()
}

// GetReplyTo returns the ReplyTo field value if set, zero value otherwise.
func (o *Message) GetReplyTo() []*AnyOfmicrosoftGraphRecipient {
	if o == nil || o.ReplyTo == nil {
		var ret []*AnyOfmicrosoftGraphRecipient
		return ret
	}
	return *o.ReplyTo
}

// GetReplyToOk returns a tuple with the ReplyTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetReplyToOk() (*[]*AnyOfmicrosoftGraphRecipient, bool) {
	if o == nil || o.ReplyTo == nil {
		return nil, false
	}
	return o.ReplyTo, true
}

// HasReplyTo returns a boolean if a field has been set.
func (o *Message) HasReplyTo() bool {
	if o != nil && o.ReplyTo != nil {
		return true
	}

	return false
}

// SetReplyTo gets a reference to the given []*AnyOfmicrosoftGraphRecipient and assigns it to the ReplyTo field.
func (o *Message) SetReplyTo(v []*AnyOfmicrosoftGraphRecipient) {
	o.ReplyTo = &v
}

// GetSender returns the Sender field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Message) GetSender() AnyOfmicrosoftGraphRecipient {
	if o == nil  {
		var ret AnyOfmicrosoftGraphRecipient
		return ret
	}
	return o.Sender
}

// GetSenderOk returns a tuple with the Sender field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Message) GetSenderOk() (*AnyOfmicrosoftGraphRecipient, bool) {
	if o == nil || o.Sender == nil {
		return nil, false
	}
	return &o.Sender, true
}

// HasSender returns a boolean if a field has been set.
func (o *Message) HasSender() bool {
	if o != nil && o.Sender != nil {
		return true
	}

	return false
}

// SetSender gets a reference to the given AnyOfmicrosoftGraphRecipient and assigns it to the Sender field.
func (o *Message) SetSender(v AnyOfmicrosoftGraphRecipient) {
	o.Sender = v
}

// GetSentDateTime returns the SentDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Message) GetSentDateTime() time.Time {
	if o == nil || o.SentDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.SentDateTime.Get()
}

// GetSentDateTimeOk returns a tuple with the SentDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Message) GetSentDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SentDateTime.Get(), o.SentDateTime.IsSet()
}

// HasSentDateTime returns a boolean if a field has been set.
func (o *Message) HasSentDateTime() bool {
	if o != nil && o.SentDateTime.IsSet() {
		return true
	}

	return false
}

// SetSentDateTime gets a reference to the given NullableTime and assigns it to the SentDateTime field.
func (o *Message) SetSentDateTime(v time.Time) {
	o.SentDateTime.Set(&v)
}
// SetSentDateTimeNil sets the value for SentDateTime to be an explicit nil
func (o *Message) SetSentDateTimeNil() {
	o.SentDateTime.Set(nil)
}

// UnsetSentDateTime ensures that no value is present for SentDateTime, not even an explicit nil
func (o *Message) UnsetSentDateTime() {
	o.SentDateTime.Unset()
}

// GetSubject returns the Subject field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Message) GetSubject() string {
	if o == nil || o.Subject.Get() == nil {
		var ret string
		return ret
	}
	return *o.Subject.Get()
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Message) GetSubjectOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Subject.Get(), o.Subject.IsSet()
}

// HasSubject returns a boolean if a field has been set.
func (o *Message) HasSubject() bool {
	if o != nil && o.Subject.IsSet() {
		return true
	}

	return false
}

// SetSubject gets a reference to the given NullableString and assigns it to the Subject field.
func (o *Message) SetSubject(v string) {
	o.Subject.Set(&v)
}
// SetSubjectNil sets the value for Subject to be an explicit nil
func (o *Message) SetSubjectNil() {
	o.Subject.Set(nil)
}

// UnsetSubject ensures that no value is present for Subject, not even an explicit nil
func (o *Message) UnsetSubject() {
	o.Subject.Unset()
}

// GetToRecipients returns the ToRecipients field value if set, zero value otherwise.
func (o *Message) GetToRecipients() []*AnyOfmicrosoftGraphRecipient {
	if o == nil || o.ToRecipients == nil {
		var ret []*AnyOfmicrosoftGraphRecipient
		return ret
	}
	return *o.ToRecipients
}

// GetToRecipientsOk returns a tuple with the ToRecipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetToRecipientsOk() (*[]*AnyOfmicrosoftGraphRecipient, bool) {
	if o == nil || o.ToRecipients == nil {
		return nil, false
	}
	return o.ToRecipients, true
}

// HasToRecipients returns a boolean if a field has been set.
func (o *Message) HasToRecipients() bool {
	if o != nil && o.ToRecipients != nil {
		return true
	}

	return false
}

// SetToRecipients gets a reference to the given []*AnyOfmicrosoftGraphRecipient and assigns it to the ToRecipients field.
func (o *Message) SetToRecipients(v []*AnyOfmicrosoftGraphRecipient) {
	o.ToRecipients = &v
}

// GetUniqueBody returns the UniqueBody field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Message) GetUniqueBody() AnyOfmicrosoftGraphItemBody {
	if o == nil  {
		var ret AnyOfmicrosoftGraphItemBody
		return ret
	}
	return o.UniqueBody
}

// GetUniqueBodyOk returns a tuple with the UniqueBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Message) GetUniqueBodyOk() (*AnyOfmicrosoftGraphItemBody, bool) {
	if o == nil || o.UniqueBody == nil {
		return nil, false
	}
	return &o.UniqueBody, true
}

// HasUniqueBody returns a boolean if a field has been set.
func (o *Message) HasUniqueBody() bool {
	if o != nil && o.UniqueBody != nil {
		return true
	}

	return false
}

// SetUniqueBody gets a reference to the given AnyOfmicrosoftGraphItemBody and assigns it to the UniqueBody field.
func (o *Message) SetUniqueBody(v AnyOfmicrosoftGraphItemBody) {
	o.UniqueBody = v
}

// GetWebLink returns the WebLink field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Message) GetWebLink() string {
	if o == nil || o.WebLink.Get() == nil {
		var ret string
		return ret
	}
	return *o.WebLink.Get()
}

// GetWebLinkOk returns a tuple with the WebLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Message) GetWebLinkOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.WebLink.Get(), o.WebLink.IsSet()
}

// HasWebLink returns a boolean if a field has been set.
func (o *Message) HasWebLink() bool {
	if o != nil && o.WebLink.IsSet() {
		return true
	}

	return false
}

// SetWebLink gets a reference to the given NullableString and assigns it to the WebLink field.
func (o *Message) SetWebLink(v string) {
	o.WebLink.Set(&v)
}
// SetWebLinkNil sets the value for WebLink to be an explicit nil
func (o *Message) SetWebLinkNil() {
	o.WebLink.Set(nil)
}

// UnsetWebLink ensures that no value is present for WebLink, not even an explicit nil
func (o *Message) UnsetWebLink() {
	o.WebLink.Unset()
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *Message) GetAttachments() []MicrosoftGraphAttachment {
	if o == nil || o.Attachments == nil {
		var ret []MicrosoftGraphAttachment
		return ret
	}
	return *o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetAttachmentsOk() (*[]MicrosoftGraphAttachment, bool) {
	if o == nil || o.Attachments == nil {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *Message) HasAttachments() bool {
	if o != nil && o.Attachments != nil {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []MicrosoftGraphAttachment and assigns it to the Attachments field.
func (o *Message) SetAttachments(v []MicrosoftGraphAttachment) {
	o.Attachments = &v
}

// GetExtensions returns the Extensions field value if set, zero value otherwise.
func (o *Message) GetExtensions() []MicrosoftGraphExtension {
	if o == nil || o.Extensions == nil {
		var ret []MicrosoftGraphExtension
		return ret
	}
	return *o.Extensions
}

// GetExtensionsOk returns a tuple with the Extensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetExtensionsOk() (*[]MicrosoftGraphExtension, bool) {
	if o == nil || o.Extensions == nil {
		return nil, false
	}
	return o.Extensions, true
}

// HasExtensions returns a boolean if a field has been set.
func (o *Message) HasExtensions() bool {
	if o != nil && o.Extensions != nil {
		return true
	}

	return false
}

// SetExtensions gets a reference to the given []MicrosoftGraphExtension and assigns it to the Extensions field.
func (o *Message) SetExtensions(v []MicrosoftGraphExtension) {
	o.Extensions = &v
}

// GetMultiValueExtendedProperties returns the MultiValueExtendedProperties field value if set, zero value otherwise.
func (o *Message) GetMultiValueExtendedProperties() []MicrosoftGraphMultiValueLegacyExtendedProperty {
	if o == nil || o.MultiValueExtendedProperties == nil {
		var ret []MicrosoftGraphMultiValueLegacyExtendedProperty
		return ret
	}
	return *o.MultiValueExtendedProperties
}

// GetMultiValueExtendedPropertiesOk returns a tuple with the MultiValueExtendedProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetMultiValueExtendedPropertiesOk() (*[]MicrosoftGraphMultiValueLegacyExtendedProperty, bool) {
	if o == nil || o.MultiValueExtendedProperties == nil {
		return nil, false
	}
	return o.MultiValueExtendedProperties, true
}

// HasMultiValueExtendedProperties returns a boolean if a field has been set.
func (o *Message) HasMultiValueExtendedProperties() bool {
	if o != nil && o.MultiValueExtendedProperties != nil {
		return true
	}

	return false
}

// SetMultiValueExtendedProperties gets a reference to the given []MicrosoftGraphMultiValueLegacyExtendedProperty and assigns it to the MultiValueExtendedProperties field.
func (o *Message) SetMultiValueExtendedProperties(v []MicrosoftGraphMultiValueLegacyExtendedProperty) {
	o.MultiValueExtendedProperties = &v
}

// GetSingleValueExtendedProperties returns the SingleValueExtendedProperties field value if set, zero value otherwise.
func (o *Message) GetSingleValueExtendedProperties() []MicrosoftGraphSingleValueLegacyExtendedProperty {
	if o == nil || o.SingleValueExtendedProperties == nil {
		var ret []MicrosoftGraphSingleValueLegacyExtendedProperty
		return ret
	}
	return *o.SingleValueExtendedProperties
}

// GetSingleValueExtendedPropertiesOk returns a tuple with the SingleValueExtendedProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetSingleValueExtendedPropertiesOk() (*[]MicrosoftGraphSingleValueLegacyExtendedProperty, bool) {
	if o == nil || o.SingleValueExtendedProperties == nil {
		return nil, false
	}
	return o.SingleValueExtendedProperties, true
}

// HasSingleValueExtendedProperties returns a boolean if a field has been set.
func (o *Message) HasSingleValueExtendedProperties() bool {
	if o != nil && o.SingleValueExtendedProperties != nil {
		return true
	}

	return false
}

// SetSingleValueExtendedProperties gets a reference to the given []MicrosoftGraphSingleValueLegacyExtendedProperty and assigns it to the SingleValueExtendedProperties field.
func (o *Message) SetSingleValueExtendedProperties(v []MicrosoftGraphSingleValueLegacyExtendedProperty) {
	o.SingleValueExtendedProperties = &v
}

func (o Message) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BccRecipients != nil {
		toSerialize["bccRecipients"] = o.BccRecipients
	}
	if o.Body != nil {
		toSerialize["body"] = o.Body
	}
	if o.BodyPreview.IsSet() {
		toSerialize["bodyPreview"] = o.BodyPreview.Get()
	}
	if o.CcRecipients != nil {
		toSerialize["ccRecipients"] = o.CcRecipients
	}
	if o.ConversationId.IsSet() {
		toSerialize["conversationId"] = o.ConversationId.Get()
	}
	if o.ConversationIndex.IsSet() {
		toSerialize["conversationIndex"] = o.ConversationIndex.Get()
	}
	if o.Flag != nil {
		toSerialize["flag"] = o.Flag
	}
	if o.From != nil {
		toSerialize["from"] = o.From
	}
	if o.HasAttachments.IsSet() {
		toSerialize["hasAttachments"] = o.HasAttachments.Get()
	}
	if o.Importance != nil {
		toSerialize["importance"] = o.Importance
	}
	if o.InferenceClassification != nil {
		toSerialize["inferenceClassification"] = o.InferenceClassification
	}
	if o.InternetMessageHeaders != nil {
		toSerialize["internetMessageHeaders"] = o.InternetMessageHeaders
	}
	if o.InternetMessageId.IsSet() {
		toSerialize["internetMessageId"] = o.InternetMessageId.Get()
	}
	if o.IsDeliveryReceiptRequested.IsSet() {
		toSerialize["isDeliveryReceiptRequested"] = o.IsDeliveryReceiptRequested.Get()
	}
	if o.IsDraft.IsSet() {
		toSerialize["isDraft"] = o.IsDraft.Get()
	}
	if o.IsRead.IsSet() {
		toSerialize["isRead"] = o.IsRead.Get()
	}
	if o.IsReadReceiptRequested.IsSet() {
		toSerialize["isReadReceiptRequested"] = o.IsReadReceiptRequested.Get()
	}
	if o.ParentFolderId.IsSet() {
		toSerialize["parentFolderId"] = o.ParentFolderId.Get()
	}
	if o.ReceivedDateTime.IsSet() {
		toSerialize["receivedDateTime"] = o.ReceivedDateTime.Get()
	}
	if o.ReplyTo != nil {
		toSerialize["replyTo"] = o.ReplyTo
	}
	if o.Sender != nil {
		toSerialize["sender"] = o.Sender
	}
	if o.SentDateTime.IsSet() {
		toSerialize["sentDateTime"] = o.SentDateTime.Get()
	}
	if o.Subject.IsSet() {
		toSerialize["subject"] = o.Subject.Get()
	}
	if o.ToRecipients != nil {
		toSerialize["toRecipients"] = o.ToRecipients
	}
	if o.UniqueBody != nil {
		toSerialize["uniqueBody"] = o.UniqueBody
	}
	if o.WebLink.IsSet() {
		toSerialize["webLink"] = o.WebLink.Get()
	}
	if o.Attachments != nil {
		toSerialize["attachments"] = o.Attachments
	}
	if o.Extensions != nil {
		toSerialize["extensions"] = o.Extensions
	}
	if o.MultiValueExtendedProperties != nil {
		toSerialize["multiValueExtendedProperties"] = o.MultiValueExtendedProperties
	}
	if o.SingleValueExtendedProperties != nil {
		toSerialize["singleValueExtendedProperties"] = o.SingleValueExtendedProperties
	}
	return json.Marshal(toSerialize)
}

type NullableMessage struct {
	value *Message
	isSet bool
}

func (v NullableMessage) Get() *Message {
	return v.value
}

func (v *NullableMessage) Set(val *Message) {
	v.value = val
	v.isSet = true
}

func (v NullableMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessage(val *Message) *NullableMessage {
	return &NullableMessage{value: val, isSet: true}
}

func (v NullableMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


