/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject1556 struct for InlineObject1556
type InlineObject1556 struct {
	Values AnyOfobject `json:"values,omitempty"`
	Dates AnyOfobject `json:"dates,omitempty"`
	Guess AnyOfobject `json:"guess,omitempty"`
}

// NewInlineObject1556 instantiates a new InlineObject1556 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject1556() *InlineObject1556 {
	this := InlineObject1556{}
	return &this
}

// NewInlineObject1556WithDefaults instantiates a new InlineObject1556 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject1556WithDefaults() *InlineObject1556 {
	this := InlineObject1556{}
	return &this
}

// GetValues returns the Values field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1556) GetValues() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1556) GetValuesOk() (*AnyOfobject, bool) {
	if o == nil || o.Values == nil {
		return nil, false
	}
	return &o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *InlineObject1556) HasValues() bool {
	if o != nil && o.Values != nil {
		return true
	}

	return false
}

// SetValues gets a reference to the given AnyOfobject and assigns it to the Values field.
func (o *InlineObject1556) SetValues(v AnyOfobject) {
	o.Values = v
}

// GetDates returns the Dates field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1556) GetDates() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Dates
}

// GetDatesOk returns a tuple with the Dates field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1556) GetDatesOk() (*AnyOfobject, bool) {
	if o == nil || o.Dates == nil {
		return nil, false
	}
	return &o.Dates, true
}

// HasDates returns a boolean if a field has been set.
func (o *InlineObject1556) HasDates() bool {
	if o != nil && o.Dates != nil {
		return true
	}

	return false
}

// SetDates gets a reference to the given AnyOfobject and assigns it to the Dates field.
func (o *InlineObject1556) SetDates(v AnyOfobject) {
	o.Dates = v
}

// GetGuess returns the Guess field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1556) GetGuess() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Guess
}

// GetGuessOk returns a tuple with the Guess field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1556) GetGuessOk() (*AnyOfobject, bool) {
	if o == nil || o.Guess == nil {
		return nil, false
	}
	return &o.Guess, true
}

// HasGuess returns a boolean if a field has been set.
func (o *InlineObject1556) HasGuess() bool {
	if o != nil && o.Guess != nil {
		return true
	}

	return false
}

// SetGuess gets a reference to the given AnyOfobject and assigns it to the Guess field.
func (o *InlineObject1556) SetGuess(v AnyOfobject) {
	o.Guess = v
}

func (o InlineObject1556) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Values != nil {
		toSerialize["values"] = o.Values
	}
	if o.Dates != nil {
		toSerialize["dates"] = o.Dates
	}
	if o.Guess != nil {
		toSerialize["guess"] = o.Guess
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject1556 struct {
	value *InlineObject1556
	isSet bool
}

func (v NullableInlineObject1556) Get() *InlineObject1556 {
	return v.value
}

func (v *NullableInlineObject1556) Set(val *InlineObject1556) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject1556) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject1556) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject1556(val *InlineObject1556) *NullableInlineObject1556 {
	return &NullableInlineObject1556{value: val, isSet: true}
}

func (v NullableInlineObject1556) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject1556) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


