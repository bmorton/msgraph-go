/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphSecureScoreControlStateUpdate struct for MicrosoftGraphSecureScoreControlStateUpdate
type MicrosoftGraphSecureScoreControlStateUpdate struct {
	AssignedTo NullableString `json:"assignedTo,omitempty"`
	Comment NullableString `json:"comment,omitempty"`
	State NullableString `json:"state,omitempty"`
	UpdatedBy NullableString `json:"updatedBy,omitempty"`
	UpdatedDateTime NullableTime `json:"updatedDateTime,omitempty"`
}

// NewMicrosoftGraphSecureScoreControlStateUpdate instantiates a new MicrosoftGraphSecureScoreControlStateUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphSecureScoreControlStateUpdate() *MicrosoftGraphSecureScoreControlStateUpdate {
	this := MicrosoftGraphSecureScoreControlStateUpdate{}
	return &this
}

// NewMicrosoftGraphSecureScoreControlStateUpdateWithDefaults instantiates a new MicrosoftGraphSecureScoreControlStateUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphSecureScoreControlStateUpdateWithDefaults() *MicrosoftGraphSecureScoreControlStateUpdate {
	this := MicrosoftGraphSecureScoreControlStateUpdate{}
	return &this
}

// GetAssignedTo returns the AssignedTo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSecureScoreControlStateUpdate) GetAssignedTo() string {
	if o == nil || o.AssignedTo.Get() == nil {
		var ret string
		return ret
	}
	return *o.AssignedTo.Get()
}

// GetAssignedToOk returns a tuple with the AssignedTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSecureScoreControlStateUpdate) GetAssignedToOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AssignedTo.Get(), o.AssignedTo.IsSet()
}

// HasAssignedTo returns a boolean if a field has been set.
func (o *MicrosoftGraphSecureScoreControlStateUpdate) HasAssignedTo() bool {
	if o != nil && o.AssignedTo.IsSet() {
		return true
	}

	return false
}

// SetAssignedTo gets a reference to the given NullableString and assigns it to the AssignedTo field.
func (o *MicrosoftGraphSecureScoreControlStateUpdate) SetAssignedTo(v string) {
	o.AssignedTo.Set(&v)
}
// SetAssignedToNil sets the value for AssignedTo to be an explicit nil
func (o *MicrosoftGraphSecureScoreControlStateUpdate) SetAssignedToNil() {
	o.AssignedTo.Set(nil)
}

// UnsetAssignedTo ensures that no value is present for AssignedTo, not even an explicit nil
func (o *MicrosoftGraphSecureScoreControlStateUpdate) UnsetAssignedTo() {
	o.AssignedTo.Unset()
}

// GetComment returns the Comment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSecureScoreControlStateUpdate) GetComment() string {
	if o == nil || o.Comment.Get() == nil {
		var ret string
		return ret
	}
	return *o.Comment.Get()
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSecureScoreControlStateUpdate) GetCommentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Comment.Get(), o.Comment.IsSet()
}

// HasComment returns a boolean if a field has been set.
func (o *MicrosoftGraphSecureScoreControlStateUpdate) HasComment() bool {
	if o != nil && o.Comment.IsSet() {
		return true
	}

	return false
}

// SetComment gets a reference to the given NullableString and assigns it to the Comment field.
func (o *MicrosoftGraphSecureScoreControlStateUpdate) SetComment(v string) {
	o.Comment.Set(&v)
}
// SetCommentNil sets the value for Comment to be an explicit nil
func (o *MicrosoftGraphSecureScoreControlStateUpdate) SetCommentNil() {
	o.Comment.Set(nil)
}

// UnsetComment ensures that no value is present for Comment, not even an explicit nil
func (o *MicrosoftGraphSecureScoreControlStateUpdate) UnsetComment() {
	o.Comment.Unset()
}

// GetState returns the State field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSecureScoreControlStateUpdate) GetState() string {
	if o == nil || o.State.Get() == nil {
		var ret string
		return ret
	}
	return *o.State.Get()
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSecureScoreControlStateUpdate) GetStateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.State.Get(), o.State.IsSet()
}

// HasState returns a boolean if a field has been set.
func (o *MicrosoftGraphSecureScoreControlStateUpdate) HasState() bool {
	if o != nil && o.State.IsSet() {
		return true
	}

	return false
}

// SetState gets a reference to the given NullableString and assigns it to the State field.
func (o *MicrosoftGraphSecureScoreControlStateUpdate) SetState(v string) {
	o.State.Set(&v)
}
// SetStateNil sets the value for State to be an explicit nil
func (o *MicrosoftGraphSecureScoreControlStateUpdate) SetStateNil() {
	o.State.Set(nil)
}

// UnsetState ensures that no value is present for State, not even an explicit nil
func (o *MicrosoftGraphSecureScoreControlStateUpdate) UnsetState() {
	o.State.Unset()
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSecureScoreControlStateUpdate) GetUpdatedBy() string {
	if o == nil || o.UpdatedBy.Get() == nil {
		var ret string
		return ret
	}
	return *o.UpdatedBy.Get()
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSecureScoreControlStateUpdate) GetUpdatedByOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UpdatedBy.Get(), o.UpdatedBy.IsSet()
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *MicrosoftGraphSecureScoreControlStateUpdate) HasUpdatedBy() bool {
	if o != nil && o.UpdatedBy.IsSet() {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given NullableString and assigns it to the UpdatedBy field.
func (o *MicrosoftGraphSecureScoreControlStateUpdate) SetUpdatedBy(v string) {
	o.UpdatedBy.Set(&v)
}
// SetUpdatedByNil sets the value for UpdatedBy to be an explicit nil
func (o *MicrosoftGraphSecureScoreControlStateUpdate) SetUpdatedByNil() {
	o.UpdatedBy.Set(nil)
}

// UnsetUpdatedBy ensures that no value is present for UpdatedBy, not even an explicit nil
func (o *MicrosoftGraphSecureScoreControlStateUpdate) UnsetUpdatedBy() {
	o.UpdatedBy.Unset()
}

// GetUpdatedDateTime returns the UpdatedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSecureScoreControlStateUpdate) GetUpdatedDateTime() time.Time {
	if o == nil || o.UpdatedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedDateTime.Get()
}

// GetUpdatedDateTimeOk returns a tuple with the UpdatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSecureScoreControlStateUpdate) GetUpdatedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UpdatedDateTime.Get(), o.UpdatedDateTime.IsSet()
}

// HasUpdatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphSecureScoreControlStateUpdate) HasUpdatedDateTime() bool {
	if o != nil && o.UpdatedDateTime.IsSet() {
		return true
	}

	return false
}

// SetUpdatedDateTime gets a reference to the given NullableTime and assigns it to the UpdatedDateTime field.
func (o *MicrosoftGraphSecureScoreControlStateUpdate) SetUpdatedDateTime(v time.Time) {
	o.UpdatedDateTime.Set(&v)
}
// SetUpdatedDateTimeNil sets the value for UpdatedDateTime to be an explicit nil
func (o *MicrosoftGraphSecureScoreControlStateUpdate) SetUpdatedDateTimeNil() {
	o.UpdatedDateTime.Set(nil)
}

// UnsetUpdatedDateTime ensures that no value is present for UpdatedDateTime, not even an explicit nil
func (o *MicrosoftGraphSecureScoreControlStateUpdate) UnsetUpdatedDateTime() {
	o.UpdatedDateTime.Unset()
}

func (o MicrosoftGraphSecureScoreControlStateUpdate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AssignedTo.IsSet() {
		toSerialize["assignedTo"] = o.AssignedTo.Get()
	}
	if o.Comment.IsSet() {
		toSerialize["comment"] = o.Comment.Get()
	}
	if o.State.IsSet() {
		toSerialize["state"] = o.State.Get()
	}
	if o.UpdatedBy.IsSet() {
		toSerialize["updatedBy"] = o.UpdatedBy.Get()
	}
	if o.UpdatedDateTime.IsSet() {
		toSerialize["updatedDateTime"] = o.UpdatedDateTime.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphSecureScoreControlStateUpdate struct {
	value *MicrosoftGraphSecureScoreControlStateUpdate
	isSet bool
}

func (v NullableMicrosoftGraphSecureScoreControlStateUpdate) Get() *MicrosoftGraphSecureScoreControlStateUpdate {
	return v.value
}

func (v *NullableMicrosoftGraphSecureScoreControlStateUpdate) Set(val *MicrosoftGraphSecureScoreControlStateUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphSecureScoreControlStateUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphSecureScoreControlStateUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphSecureScoreControlStateUpdate(val *MicrosoftGraphSecureScoreControlStateUpdate) *NullableMicrosoftGraphSecureScoreControlStateUpdate {
	return &NullableMicrosoftGraphSecureScoreControlStateUpdate{value: val, isSet: true}
}

func (v NullableMicrosoftGraphSecureScoreControlStateUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphSecureScoreControlStateUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


