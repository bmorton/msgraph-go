/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphTimeRange struct for MicrosoftGraphTimeRange
type MicrosoftGraphTimeRange struct {
	// End time for the time range.
	EndTime NullableString `json:"endTime,omitempty"`
	// Start time for the time range.
	StartTime NullableString `json:"startTime,omitempty"`
}

// NewMicrosoftGraphTimeRange instantiates a new MicrosoftGraphTimeRange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphTimeRange() *MicrosoftGraphTimeRange {
	this := MicrosoftGraphTimeRange{}
	return &this
}

// NewMicrosoftGraphTimeRangeWithDefaults instantiates a new MicrosoftGraphTimeRange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphTimeRangeWithDefaults() *MicrosoftGraphTimeRange {
	this := MicrosoftGraphTimeRange{}
	return &this
}

// GetEndTime returns the EndTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTimeRange) GetEndTime() string {
	if o == nil || o.EndTime.Get() == nil {
		var ret string
		return ret
	}
	return *o.EndTime.Get()
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTimeRange) GetEndTimeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EndTime.Get(), o.EndTime.IsSet()
}

// HasEndTime returns a boolean if a field has been set.
func (o *MicrosoftGraphTimeRange) HasEndTime() bool {
	if o != nil && o.EndTime.IsSet() {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given NullableString and assigns it to the EndTime field.
func (o *MicrosoftGraphTimeRange) SetEndTime(v string) {
	o.EndTime.Set(&v)
}
// SetEndTimeNil sets the value for EndTime to be an explicit nil
func (o *MicrosoftGraphTimeRange) SetEndTimeNil() {
	o.EndTime.Set(nil)
}

// UnsetEndTime ensures that no value is present for EndTime, not even an explicit nil
func (o *MicrosoftGraphTimeRange) UnsetEndTime() {
	o.EndTime.Unset()
}

// GetStartTime returns the StartTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTimeRange) GetStartTime() string {
	if o == nil || o.StartTime.Get() == nil {
		var ret string
		return ret
	}
	return *o.StartTime.Get()
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTimeRange) GetStartTimeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StartTime.Get(), o.StartTime.IsSet()
}

// HasStartTime returns a boolean if a field has been set.
func (o *MicrosoftGraphTimeRange) HasStartTime() bool {
	if o != nil && o.StartTime.IsSet() {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given NullableString and assigns it to the StartTime field.
func (o *MicrosoftGraphTimeRange) SetStartTime(v string) {
	o.StartTime.Set(&v)
}
// SetStartTimeNil sets the value for StartTime to be an explicit nil
func (o *MicrosoftGraphTimeRange) SetStartTimeNil() {
	o.StartTime.Set(nil)
}

// UnsetStartTime ensures that no value is present for StartTime, not even an explicit nil
func (o *MicrosoftGraphTimeRange) UnsetStartTime() {
	o.StartTime.Unset()
}

func (o MicrosoftGraphTimeRange) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EndTime.IsSet() {
		toSerialize["endTime"] = o.EndTime.Get()
	}
	if o.StartTime.IsSet() {
		toSerialize["startTime"] = o.StartTime.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphTimeRange struct {
	value *MicrosoftGraphTimeRange
	isSet bool
}

func (v NullableMicrosoftGraphTimeRange) Get() *MicrosoftGraphTimeRange {
	return v.value
}

func (v *NullableMicrosoftGraphTimeRange) Set(val *MicrosoftGraphTimeRange) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphTimeRange) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphTimeRange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphTimeRange(val *MicrosoftGraphTimeRange) *NullableMicrosoftGraphTimeRange {
	return &NullableMicrosoftGraphTimeRange{value: val, isSet: true}
}

func (v NullableMicrosoftGraphTimeRange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphTimeRange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


