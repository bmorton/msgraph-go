/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SharedDriveItem struct for SharedDriveItem
type SharedDriveItem struct {
	// Information about the owner of the shared item being referenced.
	Owner AnyOfmicrosoftGraphIdentitySet `json:"owner,omitempty"`
	// Used to access the underlying driveItem
	DriveItem AnyOfmicrosoftGraphDriveItem `json:"driveItem,omitempty"`
	// All driveItems contained in the sharing root. This collection cannot be enumerated.
	Items *[]MicrosoftGraphDriveItem `json:"items,omitempty"`
	// Used to access the underlying list
	List AnyOfmicrosoftGraphList `json:"list,omitempty"`
	// Used to access the underlying listItem
	ListItem AnyOfmicrosoftGraphListItem `json:"listItem,omitempty"`
	// Used to access the permission representing the underlying sharing link
	Permission AnyOfmicrosoftGraphPermission `json:"permission,omitempty"`
	// Used to access the underlying driveItem. Deprecated -- use driveItem instead.
	Root AnyOfmicrosoftGraphDriveItem `json:"root,omitempty"`
	// Used to access the underlying site
	Site AnyOfmicrosoftGraphSite `json:"site,omitempty"`
}

// NewSharedDriveItem instantiates a new SharedDriveItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSharedDriveItem() *SharedDriveItem {
	this := SharedDriveItem{}
	return &this
}

// NewSharedDriveItemWithDefaults instantiates a new SharedDriveItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSharedDriveItemWithDefaults() *SharedDriveItem {
	this := SharedDriveItem{}
	return &this
}

// GetOwner returns the Owner field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SharedDriveItem) GetOwner() AnyOfmicrosoftGraphIdentitySet {
	if o == nil  {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret
	}
	return o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SharedDriveItem) GetOwnerOk() (*AnyOfmicrosoftGraphIdentitySet, bool) {
	if o == nil || o.Owner == nil {
		return nil, false
	}
	return &o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *SharedDriveItem) HasOwner() bool {
	if o != nil && o.Owner != nil {
		return true
	}

	return false
}

// SetOwner gets a reference to the given AnyOfmicrosoftGraphIdentitySet and assigns it to the Owner field.
func (o *SharedDriveItem) SetOwner(v AnyOfmicrosoftGraphIdentitySet) {
	o.Owner = v
}

// GetDriveItem returns the DriveItem field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SharedDriveItem) GetDriveItem() AnyOfmicrosoftGraphDriveItem {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDriveItem
		return ret
	}
	return o.DriveItem
}

// GetDriveItemOk returns a tuple with the DriveItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SharedDriveItem) GetDriveItemOk() (*AnyOfmicrosoftGraphDriveItem, bool) {
	if o == nil || o.DriveItem == nil {
		return nil, false
	}
	return &o.DriveItem, true
}

// HasDriveItem returns a boolean if a field has been set.
func (o *SharedDriveItem) HasDriveItem() bool {
	if o != nil && o.DriveItem != nil {
		return true
	}

	return false
}

// SetDriveItem gets a reference to the given AnyOfmicrosoftGraphDriveItem and assigns it to the DriveItem field.
func (o *SharedDriveItem) SetDriveItem(v AnyOfmicrosoftGraphDriveItem) {
	o.DriveItem = v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *SharedDriveItem) GetItems() []MicrosoftGraphDriveItem {
	if o == nil || o.Items == nil {
		var ret []MicrosoftGraphDriveItem
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharedDriveItem) GetItemsOk() (*[]MicrosoftGraphDriveItem, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *SharedDriveItem) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []MicrosoftGraphDriveItem and assigns it to the Items field.
func (o *SharedDriveItem) SetItems(v []MicrosoftGraphDriveItem) {
	o.Items = &v
}

// GetList returns the List field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SharedDriveItem) GetList() AnyOfmicrosoftGraphList {
	if o == nil  {
		var ret AnyOfmicrosoftGraphList
		return ret
	}
	return o.List
}

// GetListOk returns a tuple with the List field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SharedDriveItem) GetListOk() (*AnyOfmicrosoftGraphList, bool) {
	if o == nil || o.List == nil {
		return nil, false
	}
	return &o.List, true
}

// HasList returns a boolean if a field has been set.
func (o *SharedDriveItem) HasList() bool {
	if o != nil && o.List != nil {
		return true
	}

	return false
}

// SetList gets a reference to the given AnyOfmicrosoftGraphList and assigns it to the List field.
func (o *SharedDriveItem) SetList(v AnyOfmicrosoftGraphList) {
	o.List = v
}

// GetListItem returns the ListItem field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SharedDriveItem) GetListItem() AnyOfmicrosoftGraphListItem {
	if o == nil  {
		var ret AnyOfmicrosoftGraphListItem
		return ret
	}
	return o.ListItem
}

// GetListItemOk returns a tuple with the ListItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SharedDriveItem) GetListItemOk() (*AnyOfmicrosoftGraphListItem, bool) {
	if o == nil || o.ListItem == nil {
		return nil, false
	}
	return &o.ListItem, true
}

// HasListItem returns a boolean if a field has been set.
func (o *SharedDriveItem) HasListItem() bool {
	if o != nil && o.ListItem != nil {
		return true
	}

	return false
}

// SetListItem gets a reference to the given AnyOfmicrosoftGraphListItem and assigns it to the ListItem field.
func (o *SharedDriveItem) SetListItem(v AnyOfmicrosoftGraphListItem) {
	o.ListItem = v
}

// GetPermission returns the Permission field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SharedDriveItem) GetPermission() AnyOfmicrosoftGraphPermission {
	if o == nil  {
		var ret AnyOfmicrosoftGraphPermission
		return ret
	}
	return o.Permission
}

// GetPermissionOk returns a tuple with the Permission field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SharedDriveItem) GetPermissionOk() (*AnyOfmicrosoftGraphPermission, bool) {
	if o == nil || o.Permission == nil {
		return nil, false
	}
	return &o.Permission, true
}

// HasPermission returns a boolean if a field has been set.
func (o *SharedDriveItem) HasPermission() bool {
	if o != nil && o.Permission != nil {
		return true
	}

	return false
}

// SetPermission gets a reference to the given AnyOfmicrosoftGraphPermission and assigns it to the Permission field.
func (o *SharedDriveItem) SetPermission(v AnyOfmicrosoftGraphPermission) {
	o.Permission = v
}

// GetRoot returns the Root field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SharedDriveItem) GetRoot() AnyOfmicrosoftGraphDriveItem {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDriveItem
		return ret
	}
	return o.Root
}

// GetRootOk returns a tuple with the Root field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SharedDriveItem) GetRootOk() (*AnyOfmicrosoftGraphDriveItem, bool) {
	if o == nil || o.Root == nil {
		return nil, false
	}
	return &o.Root, true
}

// HasRoot returns a boolean if a field has been set.
func (o *SharedDriveItem) HasRoot() bool {
	if o != nil && o.Root != nil {
		return true
	}

	return false
}

// SetRoot gets a reference to the given AnyOfmicrosoftGraphDriveItem and assigns it to the Root field.
func (o *SharedDriveItem) SetRoot(v AnyOfmicrosoftGraphDriveItem) {
	o.Root = v
}

// GetSite returns the Site field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SharedDriveItem) GetSite() AnyOfmicrosoftGraphSite {
	if o == nil  {
		var ret AnyOfmicrosoftGraphSite
		return ret
	}
	return o.Site
}

// GetSiteOk returns a tuple with the Site field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SharedDriveItem) GetSiteOk() (*AnyOfmicrosoftGraphSite, bool) {
	if o == nil || o.Site == nil {
		return nil, false
	}
	return &o.Site, true
}

// HasSite returns a boolean if a field has been set.
func (o *SharedDriveItem) HasSite() bool {
	if o != nil && o.Site != nil {
		return true
	}

	return false
}

// SetSite gets a reference to the given AnyOfmicrosoftGraphSite and assigns it to the Site field.
func (o *SharedDriveItem) SetSite(v AnyOfmicrosoftGraphSite) {
	o.Site = v
}

func (o SharedDriveItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Owner != nil {
		toSerialize["owner"] = o.Owner
	}
	if o.DriveItem != nil {
		toSerialize["driveItem"] = o.DriveItem
	}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	if o.List != nil {
		toSerialize["list"] = o.List
	}
	if o.ListItem != nil {
		toSerialize["listItem"] = o.ListItem
	}
	if o.Permission != nil {
		toSerialize["permission"] = o.Permission
	}
	if o.Root != nil {
		toSerialize["root"] = o.Root
	}
	if o.Site != nil {
		toSerialize["site"] = o.Site
	}
	return json.Marshal(toSerialize)
}

type NullableSharedDriveItem struct {
	value *SharedDriveItem
	isSet bool
}

func (v NullableSharedDriveItem) Get() *SharedDriveItem {
	return v.value
}

func (v *NullableSharedDriveItem) Set(val *SharedDriveItem) {
	v.value = val
	v.isSet = true
}

func (v NullableSharedDriveItem) IsSet() bool {
	return v.isSet
}

func (v *NullableSharedDriveItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSharedDriveItem(val *SharedDriveItem) *NullableSharedDriveItem {
	return &NullableSharedDriveItem{value: val, isSet: true}
}

func (v NullableSharedDriveItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSharedDriveItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


