/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// InlineObject83 struct for InlineObject83
type InlineObject83 struct {
	KeepUserData *bool `json:"keepUserData,omitempty"`
}

// NewInlineObject83 instantiates a new InlineObject83 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject83() *InlineObject83 {
	this := InlineObject83{}
	var keepUserData bool = false
	this.KeepUserData = &keepUserData
	return &this
}

// NewInlineObject83WithDefaults instantiates a new InlineObject83 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject83WithDefaults() *InlineObject83 {
	this := InlineObject83{}
	var keepUserData bool = false
	this.KeepUserData = &keepUserData
	return &this
}

// GetKeepUserData returns the KeepUserData field value if set, zero value otherwise.
func (o *InlineObject83) GetKeepUserData() bool {
	if o == nil || o.KeepUserData == nil {
		var ret bool
		return ret
	}
	return *o.KeepUserData
}

// GetKeepUserDataOk returns a tuple with the KeepUserData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject83) GetKeepUserDataOk() (*bool, bool) {
	if o == nil || o.KeepUserData == nil {
		return nil, false
	}
	return o.KeepUserData, true
}

// HasKeepUserData returns a boolean if a field has been set.
func (o *InlineObject83) HasKeepUserData() bool {
	if o != nil && o.KeepUserData != nil {
		return true
	}

	return false
}

// SetKeepUserData gets a reference to the given bool and assigns it to the KeepUserData field.
func (o *InlineObject83) SetKeepUserData(v bool) {
	o.KeepUserData = &v
}

func (o InlineObject83) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.KeepUserData != nil {
		toSerialize["keepUserData"] = o.KeepUserData
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject83 struct {
	value *InlineObject83
	isSet bool
}

func (v NullableInlineObject83) Get() *InlineObject83 {
	return v.value
}

func (v *NullableInlineObject83) Set(val *InlineObject83) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject83) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject83) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject83(val *InlineObject83) *NullableInlineObject83 {
	return &NullableInlineObject83{value: val, isSet: true}
}

func (v NullableInlineObject83) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject83) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


