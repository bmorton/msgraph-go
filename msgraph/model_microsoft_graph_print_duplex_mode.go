/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphPrintDuplexMode the model 'MicrosoftGraphPrintDuplexMode'
type MicrosoftGraphPrintDuplexMode string

// List of microsoft.graph.printDuplexMode
const (
	FLIP_ON_LONG_EDGE MicrosoftGraphPrintDuplexMode = "flipOnLongEdge"
	FLIP_ON_SHORT_EDGE MicrosoftGraphPrintDuplexMode = "flipOnShortEdge"
	ONE_SIDED MicrosoftGraphPrintDuplexMode = "oneSided"
	UNKNOWN_FUTURE_VALUE MicrosoftGraphPrintDuplexMode = "unknownFutureValue"
)

// All allowed values of MicrosoftGraphPrintDuplexMode enum
var AllowedMicrosoftGraphPrintDuplexModeEnumValues = []MicrosoftGraphPrintDuplexMode{
	"flipOnLongEdge",
	"flipOnShortEdge",
	"oneSided",
	"unknownFutureValue",
}

func (v *MicrosoftGraphPrintDuplexMode) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphPrintDuplexMode(value)
	for _, existing := range AllowedMicrosoftGraphPrintDuplexModeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphPrintDuplexMode", value)
}

// NewMicrosoftGraphPrintDuplexModeFromValue returns a pointer to a valid MicrosoftGraphPrintDuplexMode
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphPrintDuplexModeFromValue(v string) (*MicrosoftGraphPrintDuplexMode, error) {
	ev := MicrosoftGraphPrintDuplexMode(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphPrintDuplexMode: valid values are %v", v, AllowedMicrosoftGraphPrintDuplexModeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphPrintDuplexMode) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphPrintDuplexModeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.printDuplexMode value
func (v MicrosoftGraphPrintDuplexMode) Ptr() *MicrosoftGraphPrintDuplexMode {
	return &v
}

type NullableMicrosoftGraphPrintDuplexMode struct {
	value *MicrosoftGraphPrintDuplexMode
	isSet bool
}

func (v NullableMicrosoftGraphPrintDuplexMode) Get() *MicrosoftGraphPrintDuplexMode {
	return v.value
}

func (v *NullableMicrosoftGraphPrintDuplexMode) Set(val *MicrosoftGraphPrintDuplexMode) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphPrintDuplexMode) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphPrintDuplexMode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphPrintDuplexMode(val *MicrosoftGraphPrintDuplexMode) *NullableMicrosoftGraphPrintDuplexMode {
	return &NullableMicrosoftGraphPrintDuplexMode{value: val, isSet: true}
}

func (v NullableMicrosoftGraphPrintDuplexMode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphPrintDuplexMode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

