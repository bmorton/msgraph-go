/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphPrintQuality the model 'MicrosoftGraphPrintQuality'
type MicrosoftGraphPrintQuality string

// List of microsoft.graph.printQuality
const (
	LOW MicrosoftGraphPrintQuality = "low"
	MEDIUM MicrosoftGraphPrintQuality = "medium"
	HIGH MicrosoftGraphPrintQuality = "high"
	UNKNOWN_FUTURE_VALUE MicrosoftGraphPrintQuality = "unknownFutureValue"
)

// All allowed values of MicrosoftGraphPrintQuality enum
var AllowedMicrosoftGraphPrintQualityEnumValues = []MicrosoftGraphPrintQuality{
	"low",
	"medium",
	"high",
	"unknownFutureValue",
}

func (v *MicrosoftGraphPrintQuality) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphPrintQuality(value)
	for _, existing := range AllowedMicrosoftGraphPrintQualityEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphPrintQuality", value)
}

// NewMicrosoftGraphPrintQualityFromValue returns a pointer to a valid MicrosoftGraphPrintQuality
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphPrintQualityFromValue(v string) (*MicrosoftGraphPrintQuality, error) {
	ev := MicrosoftGraphPrintQuality(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphPrintQuality: valid values are %v", v, AllowedMicrosoftGraphPrintQualityEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphPrintQuality) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphPrintQualityEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.printQuality value
func (v MicrosoftGraphPrintQuality) Ptr() *MicrosoftGraphPrintQuality {
	return &v
}

type NullableMicrosoftGraphPrintQuality struct {
	value *MicrosoftGraphPrintQuality
	isSet bool
}

func (v NullableMicrosoftGraphPrintQuality) Get() *MicrosoftGraphPrintQuality {
	return v.value
}

func (v *NullableMicrosoftGraphPrintQuality) Set(val *MicrosoftGraphPrintQuality) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphPrintQuality) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphPrintQuality) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphPrintQuality(val *MicrosoftGraphPrintQuality) *NullableMicrosoftGraphPrintQuality {
	return &NullableMicrosoftGraphPrintQuality{value: val, isSet: true}
}

func (v NullableMicrosoftGraphPrintQuality) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphPrintQuality) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

