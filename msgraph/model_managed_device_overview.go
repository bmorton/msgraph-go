/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ManagedDeviceOverview Summary data for managed devices
type ManagedDeviceOverview struct {
	// Distribution of Exchange Access State in Intune
	DeviceExchangeAccessStateSummary AnyOfmicrosoftGraphDeviceExchangeAccessStateSummary `json:"deviceExchangeAccessStateSummary,omitempty"`
	// Device operating system summary.
	DeviceOperatingSystemSummary AnyOfmicrosoftGraphDeviceOperatingSystemSummary `json:"deviceOperatingSystemSummary,omitempty"`
	// The number of devices enrolled in both MDM and EAS
	DualEnrolledDeviceCount *int32 `json:"dualEnrolledDeviceCount,omitempty"`
	// Total enrolled device count. Does not include PC devices managed via Intune PC Agent
	EnrolledDeviceCount *int32 `json:"enrolledDeviceCount,omitempty"`
	// The number of devices enrolled in MDM
	MdmEnrolledCount *int32 `json:"mdmEnrolledCount,omitempty"`
}

// NewManagedDeviceOverview instantiates a new ManagedDeviceOverview object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagedDeviceOverview() *ManagedDeviceOverview {
	this := ManagedDeviceOverview{}
	return &this
}

// NewManagedDeviceOverviewWithDefaults instantiates a new ManagedDeviceOverview object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagedDeviceOverviewWithDefaults() *ManagedDeviceOverview {
	this := ManagedDeviceOverview{}
	return &this
}

// GetDeviceExchangeAccessStateSummary returns the DeviceExchangeAccessStateSummary field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ManagedDeviceOverview) GetDeviceExchangeAccessStateSummary() AnyOfmicrosoftGraphDeviceExchangeAccessStateSummary {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDeviceExchangeAccessStateSummary
		return ret
	}
	return o.DeviceExchangeAccessStateSummary
}

// GetDeviceExchangeAccessStateSummaryOk returns a tuple with the DeviceExchangeAccessStateSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedDeviceOverview) GetDeviceExchangeAccessStateSummaryOk() (*AnyOfmicrosoftGraphDeviceExchangeAccessStateSummary, bool) {
	if o == nil || o.DeviceExchangeAccessStateSummary == nil {
		return nil, false
	}
	return &o.DeviceExchangeAccessStateSummary, true
}

// HasDeviceExchangeAccessStateSummary returns a boolean if a field has been set.
func (o *ManagedDeviceOverview) HasDeviceExchangeAccessStateSummary() bool {
	if o != nil && o.DeviceExchangeAccessStateSummary != nil {
		return true
	}

	return false
}

// SetDeviceExchangeAccessStateSummary gets a reference to the given AnyOfmicrosoftGraphDeviceExchangeAccessStateSummary and assigns it to the DeviceExchangeAccessStateSummary field.
func (o *ManagedDeviceOverview) SetDeviceExchangeAccessStateSummary(v AnyOfmicrosoftGraphDeviceExchangeAccessStateSummary) {
	o.DeviceExchangeAccessStateSummary = v
}

// GetDeviceOperatingSystemSummary returns the DeviceOperatingSystemSummary field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ManagedDeviceOverview) GetDeviceOperatingSystemSummary() AnyOfmicrosoftGraphDeviceOperatingSystemSummary {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDeviceOperatingSystemSummary
		return ret
	}
	return o.DeviceOperatingSystemSummary
}

// GetDeviceOperatingSystemSummaryOk returns a tuple with the DeviceOperatingSystemSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedDeviceOverview) GetDeviceOperatingSystemSummaryOk() (*AnyOfmicrosoftGraphDeviceOperatingSystemSummary, bool) {
	if o == nil || o.DeviceOperatingSystemSummary == nil {
		return nil, false
	}
	return &o.DeviceOperatingSystemSummary, true
}

// HasDeviceOperatingSystemSummary returns a boolean if a field has been set.
func (o *ManagedDeviceOverview) HasDeviceOperatingSystemSummary() bool {
	if o != nil && o.DeviceOperatingSystemSummary != nil {
		return true
	}

	return false
}

// SetDeviceOperatingSystemSummary gets a reference to the given AnyOfmicrosoftGraphDeviceOperatingSystemSummary and assigns it to the DeviceOperatingSystemSummary field.
func (o *ManagedDeviceOverview) SetDeviceOperatingSystemSummary(v AnyOfmicrosoftGraphDeviceOperatingSystemSummary) {
	o.DeviceOperatingSystemSummary = v
}

// GetDualEnrolledDeviceCount returns the DualEnrolledDeviceCount field value if set, zero value otherwise.
func (o *ManagedDeviceOverview) GetDualEnrolledDeviceCount() int32 {
	if o == nil || o.DualEnrolledDeviceCount == nil {
		var ret int32
		return ret
	}
	return *o.DualEnrolledDeviceCount
}

// GetDualEnrolledDeviceCountOk returns a tuple with the DualEnrolledDeviceCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedDeviceOverview) GetDualEnrolledDeviceCountOk() (*int32, bool) {
	if o == nil || o.DualEnrolledDeviceCount == nil {
		return nil, false
	}
	return o.DualEnrolledDeviceCount, true
}

// HasDualEnrolledDeviceCount returns a boolean if a field has been set.
func (o *ManagedDeviceOverview) HasDualEnrolledDeviceCount() bool {
	if o != nil && o.DualEnrolledDeviceCount != nil {
		return true
	}

	return false
}

// SetDualEnrolledDeviceCount gets a reference to the given int32 and assigns it to the DualEnrolledDeviceCount field.
func (o *ManagedDeviceOverview) SetDualEnrolledDeviceCount(v int32) {
	o.DualEnrolledDeviceCount = &v
}

// GetEnrolledDeviceCount returns the EnrolledDeviceCount field value if set, zero value otherwise.
func (o *ManagedDeviceOverview) GetEnrolledDeviceCount() int32 {
	if o == nil || o.EnrolledDeviceCount == nil {
		var ret int32
		return ret
	}
	return *o.EnrolledDeviceCount
}

// GetEnrolledDeviceCountOk returns a tuple with the EnrolledDeviceCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedDeviceOverview) GetEnrolledDeviceCountOk() (*int32, bool) {
	if o == nil || o.EnrolledDeviceCount == nil {
		return nil, false
	}
	return o.EnrolledDeviceCount, true
}

// HasEnrolledDeviceCount returns a boolean if a field has been set.
func (o *ManagedDeviceOverview) HasEnrolledDeviceCount() bool {
	if o != nil && o.EnrolledDeviceCount != nil {
		return true
	}

	return false
}

// SetEnrolledDeviceCount gets a reference to the given int32 and assigns it to the EnrolledDeviceCount field.
func (o *ManagedDeviceOverview) SetEnrolledDeviceCount(v int32) {
	o.EnrolledDeviceCount = &v
}

// GetMdmEnrolledCount returns the MdmEnrolledCount field value if set, zero value otherwise.
func (o *ManagedDeviceOverview) GetMdmEnrolledCount() int32 {
	if o == nil || o.MdmEnrolledCount == nil {
		var ret int32
		return ret
	}
	return *o.MdmEnrolledCount
}

// GetMdmEnrolledCountOk returns a tuple with the MdmEnrolledCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedDeviceOverview) GetMdmEnrolledCountOk() (*int32, bool) {
	if o == nil || o.MdmEnrolledCount == nil {
		return nil, false
	}
	return o.MdmEnrolledCount, true
}

// HasMdmEnrolledCount returns a boolean if a field has been set.
func (o *ManagedDeviceOverview) HasMdmEnrolledCount() bool {
	if o != nil && o.MdmEnrolledCount != nil {
		return true
	}

	return false
}

// SetMdmEnrolledCount gets a reference to the given int32 and assigns it to the MdmEnrolledCount field.
func (o *ManagedDeviceOverview) SetMdmEnrolledCount(v int32) {
	o.MdmEnrolledCount = &v
}

func (o ManagedDeviceOverview) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeviceExchangeAccessStateSummary != nil {
		toSerialize["deviceExchangeAccessStateSummary"] = o.DeviceExchangeAccessStateSummary
	}
	if o.DeviceOperatingSystemSummary != nil {
		toSerialize["deviceOperatingSystemSummary"] = o.DeviceOperatingSystemSummary
	}
	if o.DualEnrolledDeviceCount != nil {
		toSerialize["dualEnrolledDeviceCount"] = o.DualEnrolledDeviceCount
	}
	if o.EnrolledDeviceCount != nil {
		toSerialize["enrolledDeviceCount"] = o.EnrolledDeviceCount
	}
	if o.MdmEnrolledCount != nil {
		toSerialize["mdmEnrolledCount"] = o.MdmEnrolledCount
	}
	return json.Marshal(toSerialize)
}

type NullableManagedDeviceOverview struct {
	value *ManagedDeviceOverview
	isSet bool
}

func (v NullableManagedDeviceOverview) Get() *ManagedDeviceOverview {
	return v.value
}

func (v *NullableManagedDeviceOverview) Set(val *ManagedDeviceOverview) {
	v.value = val
	v.isSet = true
}

func (v NullableManagedDeviceOverview) IsSet() bool {
	return v.isSet
}

func (v *NullableManagedDeviceOverview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagedDeviceOverview(val *ManagedDeviceOverview) *NullableManagedDeviceOverview {
	return &NullableManagedDeviceOverview{value: val, isSet: true}
}

func (v NullableManagedDeviceOverview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagedDeviceOverview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


