/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphTeamsAsyncOperationStatus the model 'MicrosoftGraphTeamsAsyncOperationStatus'
type MicrosoftGraphTeamsAsyncOperationStatus string

// List of microsoft.graph.teamsAsyncOperationStatus
const (
	INVALID MicrosoftGraphTeamsAsyncOperationStatus = "invalid"
	NOT_STARTED MicrosoftGraphTeamsAsyncOperationStatus = "notStarted"
	IN_PROGRESS MicrosoftGraphTeamsAsyncOperationStatus = "inProgress"
	SUCCEEDED MicrosoftGraphTeamsAsyncOperationStatus = "succeeded"
	FAILED MicrosoftGraphTeamsAsyncOperationStatus = "failed"
	UNKNOWN_FUTURE_VALUE MicrosoftGraphTeamsAsyncOperationStatus = "unknownFutureValue"
)

// All allowed values of MicrosoftGraphTeamsAsyncOperationStatus enum
var AllowedMicrosoftGraphTeamsAsyncOperationStatusEnumValues = []MicrosoftGraphTeamsAsyncOperationStatus{
	"invalid",
	"notStarted",
	"inProgress",
	"succeeded",
	"failed",
	"unknownFutureValue",
}

func (v *MicrosoftGraphTeamsAsyncOperationStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphTeamsAsyncOperationStatus(value)
	for _, existing := range AllowedMicrosoftGraphTeamsAsyncOperationStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphTeamsAsyncOperationStatus", value)
}

// NewMicrosoftGraphTeamsAsyncOperationStatusFromValue returns a pointer to a valid MicrosoftGraphTeamsAsyncOperationStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphTeamsAsyncOperationStatusFromValue(v string) (*MicrosoftGraphTeamsAsyncOperationStatus, error) {
	ev := MicrosoftGraphTeamsAsyncOperationStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphTeamsAsyncOperationStatus: valid values are %v", v, AllowedMicrosoftGraphTeamsAsyncOperationStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphTeamsAsyncOperationStatus) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphTeamsAsyncOperationStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.teamsAsyncOperationStatus value
func (v MicrosoftGraphTeamsAsyncOperationStatus) Ptr() *MicrosoftGraphTeamsAsyncOperationStatus {
	return &v
}

type NullableMicrosoftGraphTeamsAsyncOperationStatus struct {
	value *MicrosoftGraphTeamsAsyncOperationStatus
	isSet bool
}

func (v NullableMicrosoftGraphTeamsAsyncOperationStatus) Get() *MicrosoftGraphTeamsAsyncOperationStatus {
	return v.value
}

func (v *NullableMicrosoftGraphTeamsAsyncOperationStatus) Set(val *MicrosoftGraphTeamsAsyncOperationStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphTeamsAsyncOperationStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphTeamsAsyncOperationStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphTeamsAsyncOperationStatus(val *MicrosoftGraphTeamsAsyncOperationStatus) *NullableMicrosoftGraphTeamsAsyncOperationStatus {
	return &NullableMicrosoftGraphTeamsAsyncOperationStatus{value: val, isSet: true}
}

func (v NullableMicrosoftGraphTeamsAsyncOperationStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphTeamsAsyncOperationStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

