/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphChatMessage struct for MicrosoftGraphChatMessage
type MicrosoftGraphChatMessage struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// References to attached objects like files, tabs, meetings etc.
	Attachments *[]*AnyOfmicrosoftGraphChatMessageAttachment `json:"attachments,omitempty"`
	Body *MicrosoftGraphItemBody `json:"body,omitempty"`
	// If the message was sent in a channel, represents identity of the channel.
	ChannelIdentity AnyOfmicrosoftGraphChannelIdentity `json:"channelIdentity,omitempty"`
	// If the message was sent in a chat, represents the identity of the chat.
	ChatId NullableString `json:"chatId,omitempty"`
	// Timestamp of when the chat message was created.
	CreatedDateTime NullableTime `json:"createdDateTime,omitempty"`
	// Read only. Timestamp at which the chat message was deleted, or null if not deleted.
	DeletedDateTime NullableTime `json:"deletedDateTime,omitempty"`
	// Read-only. Version number of the chat message.
	Etag NullableString `json:"etag,omitempty"`
	// Read-only. If present, represents details of an event that happened in a chat, a channel, or a team, for example, adding new members. For event messages, the messageType property will be set to systemEventMessage.
	EventDetail AnyOfobject `json:"eventDetail,omitempty"`
	// Details of the sender of the chat message. Can only be set during migration.
	From AnyOfmicrosoftGraphChatMessageFromIdentitySet `json:"from,omitempty"`
	// The importance of the chat message. The possible values are: normal, high, urgent.
	Importance AnyOfmicrosoftGraphChatMessageImportance `json:"importance,omitempty"`
	// Read only. Timestamp when edits to the chat message were made. Triggers an 'Edited' flag in the Teams UI. If no edits are made the value is null.
	LastEditedDateTime NullableTime `json:"lastEditedDateTime,omitempty"`
	// Read only. Timestamp when the chat message is created (initial setting) or modified, including when a reaction is added or removed.
	LastModifiedDateTime NullableTime `json:"lastModifiedDateTime,omitempty"`
	// Locale of the chat message set by the client. Always set to en-us.
	Locale *string `json:"locale,omitempty"`
	// List of entities mentioned in the chat message. Supported entities are: user, bot, team, and channel.
	Mentions *[]*AnyOfmicrosoftGraphChatMessageMention `json:"mentions,omitempty"`
	// The type of chat message. The possible values are: message, chatEvent, typing, unknownFutureValue, systemEventMessage. Note that you must use the Prefer: include-unknown-enum-members request header to get the following value in this evolvable enum: systemEventMessage.
	MessageType AnyOfmicrosoftGraphChatMessageType `json:"messageType,omitempty"`
	// Defines the properties of a policy violation set by a data loss prevention (DLP) application.
	PolicyViolation AnyOfmicrosoftGraphChatMessagePolicyViolation `json:"policyViolation,omitempty"`
	// Reactions for this chat message (for example, Like).
	Reactions *[]*AnyOfmicrosoftGraphChatMessageReaction `json:"reactions,omitempty"`
	// Read-only. ID of the parent chat message or root chat message of the thread. (Only applies to chat messages in channels, not chats.)
	ReplyToId NullableString `json:"replyToId,omitempty"`
	// The subject of the chat message, in plaintext.
	Subject NullableString `json:"subject,omitempty"`
	// Summary text of the chat message that could be used for push notifications and summary views or fall back views. Only applies to channel chat messages, not chat messages in a chat.
	Summary NullableString `json:"summary,omitempty"`
	// Read-only. Link to the message in Microsoft Teams.
	WebUrl NullableString `json:"webUrl,omitempty"`
	// Content in a message hosted by Microsoft Teams - for example, images or code snippets.
	HostedContents *[]MicrosoftGraphChatMessageHostedContent `json:"hostedContents,omitempty"`
	// Replies for a specified message.
	Replies *[]MicrosoftGraphChatMessage `json:"replies,omitempty"`
}

// NewMicrosoftGraphChatMessage instantiates a new MicrosoftGraphChatMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphChatMessage() *MicrosoftGraphChatMessage {
	this := MicrosoftGraphChatMessage{}
	return &this
}

// NewMicrosoftGraphChatMessageWithDefaults instantiates a new MicrosoftGraphChatMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphChatMessageWithDefaults() *MicrosoftGraphChatMessage {
	this := MicrosoftGraphChatMessage{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphChatMessage) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphChatMessage) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphChatMessage) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphChatMessage) SetId(v string) {
	o.Id = &v
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *MicrosoftGraphChatMessage) GetAttachments() []*AnyOfmicrosoftGraphChatMessageAttachment {
	if o == nil || o.Attachments == nil {
		var ret []*AnyOfmicrosoftGraphChatMessageAttachment
		return ret
	}
	return *o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphChatMessage) GetAttachmentsOk() (*[]*AnyOfmicrosoftGraphChatMessageAttachment, bool) {
	if o == nil || o.Attachments == nil {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *MicrosoftGraphChatMessage) HasAttachments() bool {
	if o != nil && o.Attachments != nil {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []*AnyOfmicrosoftGraphChatMessageAttachment and assigns it to the Attachments field.
func (o *MicrosoftGraphChatMessage) SetAttachments(v []*AnyOfmicrosoftGraphChatMessageAttachment) {
	o.Attachments = &v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *MicrosoftGraphChatMessage) GetBody() MicrosoftGraphItemBody {
	if o == nil || o.Body == nil {
		var ret MicrosoftGraphItemBody
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphChatMessage) GetBodyOk() (*MicrosoftGraphItemBody, bool) {
	if o == nil || o.Body == nil {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *MicrosoftGraphChatMessage) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given MicrosoftGraphItemBody and assigns it to the Body field.
func (o *MicrosoftGraphChatMessage) SetBody(v MicrosoftGraphItemBody) {
	o.Body = &v
}

// GetChannelIdentity returns the ChannelIdentity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphChatMessage) GetChannelIdentity() AnyOfmicrosoftGraphChannelIdentity {
	if o == nil  {
		var ret AnyOfmicrosoftGraphChannelIdentity
		return ret
	}
	return o.ChannelIdentity
}

// GetChannelIdentityOk returns a tuple with the ChannelIdentity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphChatMessage) GetChannelIdentityOk() (*AnyOfmicrosoftGraphChannelIdentity, bool) {
	if o == nil || o.ChannelIdentity == nil {
		return nil, false
	}
	return &o.ChannelIdentity, true
}

// HasChannelIdentity returns a boolean if a field has been set.
func (o *MicrosoftGraphChatMessage) HasChannelIdentity() bool {
	if o != nil && o.ChannelIdentity != nil {
		return true
	}

	return false
}

// SetChannelIdentity gets a reference to the given AnyOfmicrosoftGraphChannelIdentity and assigns it to the ChannelIdentity field.
func (o *MicrosoftGraphChatMessage) SetChannelIdentity(v AnyOfmicrosoftGraphChannelIdentity) {
	o.ChannelIdentity = v
}

// GetChatId returns the ChatId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphChatMessage) GetChatId() string {
	if o == nil || o.ChatId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ChatId.Get()
}

// GetChatIdOk returns a tuple with the ChatId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphChatMessage) GetChatIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ChatId.Get(), o.ChatId.IsSet()
}

// HasChatId returns a boolean if a field has been set.
func (o *MicrosoftGraphChatMessage) HasChatId() bool {
	if o != nil && o.ChatId.IsSet() {
		return true
	}

	return false
}

// SetChatId gets a reference to the given NullableString and assigns it to the ChatId field.
func (o *MicrosoftGraphChatMessage) SetChatId(v string) {
	o.ChatId.Set(&v)
}
// SetChatIdNil sets the value for ChatId to be an explicit nil
func (o *MicrosoftGraphChatMessage) SetChatIdNil() {
	o.ChatId.Set(nil)
}

// UnsetChatId ensures that no value is present for ChatId, not even an explicit nil
func (o *MicrosoftGraphChatMessage) UnsetChatId() {
	o.ChatId.Unset()
}

// GetCreatedDateTime returns the CreatedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphChatMessage) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime.Get()
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphChatMessage) GetCreatedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatedDateTime.Get(), o.CreatedDateTime.IsSet()
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphChatMessage) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime.IsSet() {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given NullableTime and assigns it to the CreatedDateTime field.
func (o *MicrosoftGraphChatMessage) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime.Set(&v)
}
// SetCreatedDateTimeNil sets the value for CreatedDateTime to be an explicit nil
func (o *MicrosoftGraphChatMessage) SetCreatedDateTimeNil() {
	o.CreatedDateTime.Set(nil)
}

// UnsetCreatedDateTime ensures that no value is present for CreatedDateTime, not even an explicit nil
func (o *MicrosoftGraphChatMessage) UnsetCreatedDateTime() {
	o.CreatedDateTime.Unset()
}

// GetDeletedDateTime returns the DeletedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphChatMessage) GetDeletedDateTime() time.Time {
	if o == nil || o.DeletedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.DeletedDateTime.Get()
}

// GetDeletedDateTimeOk returns a tuple with the DeletedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphChatMessage) GetDeletedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DeletedDateTime.Get(), o.DeletedDateTime.IsSet()
}

// HasDeletedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphChatMessage) HasDeletedDateTime() bool {
	if o != nil && o.DeletedDateTime.IsSet() {
		return true
	}

	return false
}

// SetDeletedDateTime gets a reference to the given NullableTime and assigns it to the DeletedDateTime field.
func (o *MicrosoftGraphChatMessage) SetDeletedDateTime(v time.Time) {
	o.DeletedDateTime.Set(&v)
}
// SetDeletedDateTimeNil sets the value for DeletedDateTime to be an explicit nil
func (o *MicrosoftGraphChatMessage) SetDeletedDateTimeNil() {
	o.DeletedDateTime.Set(nil)
}

// UnsetDeletedDateTime ensures that no value is present for DeletedDateTime, not even an explicit nil
func (o *MicrosoftGraphChatMessage) UnsetDeletedDateTime() {
	o.DeletedDateTime.Unset()
}

// GetEtag returns the Etag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphChatMessage) GetEtag() string {
	if o == nil || o.Etag.Get() == nil {
		var ret string
		return ret
	}
	return *o.Etag.Get()
}

// GetEtagOk returns a tuple with the Etag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphChatMessage) GetEtagOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Etag.Get(), o.Etag.IsSet()
}

// HasEtag returns a boolean if a field has been set.
func (o *MicrosoftGraphChatMessage) HasEtag() bool {
	if o != nil && o.Etag.IsSet() {
		return true
	}

	return false
}

// SetEtag gets a reference to the given NullableString and assigns it to the Etag field.
func (o *MicrosoftGraphChatMessage) SetEtag(v string) {
	o.Etag.Set(&v)
}
// SetEtagNil sets the value for Etag to be an explicit nil
func (o *MicrosoftGraphChatMessage) SetEtagNil() {
	o.Etag.Set(nil)
}

// UnsetEtag ensures that no value is present for Etag, not even an explicit nil
func (o *MicrosoftGraphChatMessage) UnsetEtag() {
	o.Etag.Unset()
}

// GetEventDetail returns the EventDetail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphChatMessage) GetEventDetail() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.EventDetail
}

// GetEventDetailOk returns a tuple with the EventDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphChatMessage) GetEventDetailOk() (*AnyOfobject, bool) {
	if o == nil || o.EventDetail == nil {
		return nil, false
	}
	return &o.EventDetail, true
}

// HasEventDetail returns a boolean if a field has been set.
func (o *MicrosoftGraphChatMessage) HasEventDetail() bool {
	if o != nil && o.EventDetail != nil {
		return true
	}

	return false
}

// SetEventDetail gets a reference to the given AnyOfobject and assigns it to the EventDetail field.
func (o *MicrosoftGraphChatMessage) SetEventDetail(v AnyOfobject) {
	o.EventDetail = v
}

// GetFrom returns the From field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphChatMessage) GetFrom() AnyOfmicrosoftGraphChatMessageFromIdentitySet {
	if o == nil  {
		var ret AnyOfmicrosoftGraphChatMessageFromIdentitySet
		return ret
	}
	return o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphChatMessage) GetFromOk() (*AnyOfmicrosoftGraphChatMessageFromIdentitySet, bool) {
	if o == nil || o.From == nil {
		return nil, false
	}
	return &o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *MicrosoftGraphChatMessage) HasFrom() bool {
	if o != nil && o.From != nil {
		return true
	}

	return false
}

// SetFrom gets a reference to the given AnyOfmicrosoftGraphChatMessageFromIdentitySet and assigns it to the From field.
func (o *MicrosoftGraphChatMessage) SetFrom(v AnyOfmicrosoftGraphChatMessageFromIdentitySet) {
	o.From = v
}

// GetImportance returns the Importance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphChatMessage) GetImportance() AnyOfmicrosoftGraphChatMessageImportance {
	if o == nil  {
		var ret AnyOfmicrosoftGraphChatMessageImportance
		return ret
	}
	return o.Importance
}

// GetImportanceOk returns a tuple with the Importance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphChatMessage) GetImportanceOk() (*AnyOfmicrosoftGraphChatMessageImportance, bool) {
	if o == nil || o.Importance == nil {
		return nil, false
	}
	return &o.Importance, true
}

// HasImportance returns a boolean if a field has been set.
func (o *MicrosoftGraphChatMessage) HasImportance() bool {
	if o != nil && o.Importance != nil {
		return true
	}

	return false
}

// SetImportance gets a reference to the given AnyOfmicrosoftGraphChatMessageImportance and assigns it to the Importance field.
func (o *MicrosoftGraphChatMessage) SetImportance(v AnyOfmicrosoftGraphChatMessageImportance) {
	o.Importance = v
}

// GetLastEditedDateTime returns the LastEditedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphChatMessage) GetLastEditedDateTime() time.Time {
	if o == nil || o.LastEditedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.LastEditedDateTime.Get()
}

// GetLastEditedDateTimeOk returns a tuple with the LastEditedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphChatMessage) GetLastEditedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastEditedDateTime.Get(), o.LastEditedDateTime.IsSet()
}

// HasLastEditedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphChatMessage) HasLastEditedDateTime() bool {
	if o != nil && o.LastEditedDateTime.IsSet() {
		return true
	}

	return false
}

// SetLastEditedDateTime gets a reference to the given NullableTime and assigns it to the LastEditedDateTime field.
func (o *MicrosoftGraphChatMessage) SetLastEditedDateTime(v time.Time) {
	o.LastEditedDateTime.Set(&v)
}
// SetLastEditedDateTimeNil sets the value for LastEditedDateTime to be an explicit nil
func (o *MicrosoftGraphChatMessage) SetLastEditedDateTimeNil() {
	o.LastEditedDateTime.Set(nil)
}

// UnsetLastEditedDateTime ensures that no value is present for LastEditedDateTime, not even an explicit nil
func (o *MicrosoftGraphChatMessage) UnsetLastEditedDateTime() {
	o.LastEditedDateTime.Unset()
}

// GetLastModifiedDateTime returns the LastModifiedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphChatMessage) GetLastModifiedDateTime() time.Time {
	if o == nil || o.LastModifiedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDateTime.Get()
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphChatMessage) GetLastModifiedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastModifiedDateTime.Get(), o.LastModifiedDateTime.IsSet()
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphChatMessage) HasLastModifiedDateTime() bool {
	if o != nil && o.LastModifiedDateTime.IsSet() {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given NullableTime and assigns it to the LastModifiedDateTime field.
func (o *MicrosoftGraphChatMessage) SetLastModifiedDateTime(v time.Time) {
	o.LastModifiedDateTime.Set(&v)
}
// SetLastModifiedDateTimeNil sets the value for LastModifiedDateTime to be an explicit nil
func (o *MicrosoftGraphChatMessage) SetLastModifiedDateTimeNil() {
	o.LastModifiedDateTime.Set(nil)
}

// UnsetLastModifiedDateTime ensures that no value is present for LastModifiedDateTime, not even an explicit nil
func (o *MicrosoftGraphChatMessage) UnsetLastModifiedDateTime() {
	o.LastModifiedDateTime.Unset()
}

// GetLocale returns the Locale field value if set, zero value otherwise.
func (o *MicrosoftGraphChatMessage) GetLocale() string {
	if o == nil || o.Locale == nil {
		var ret string
		return ret
	}
	return *o.Locale
}

// GetLocaleOk returns a tuple with the Locale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphChatMessage) GetLocaleOk() (*string, bool) {
	if o == nil || o.Locale == nil {
		return nil, false
	}
	return o.Locale, true
}

// HasLocale returns a boolean if a field has been set.
func (o *MicrosoftGraphChatMessage) HasLocale() bool {
	if o != nil && o.Locale != nil {
		return true
	}

	return false
}

// SetLocale gets a reference to the given string and assigns it to the Locale field.
func (o *MicrosoftGraphChatMessage) SetLocale(v string) {
	o.Locale = &v
}

// GetMentions returns the Mentions field value if set, zero value otherwise.
func (o *MicrosoftGraphChatMessage) GetMentions() []*AnyOfmicrosoftGraphChatMessageMention {
	if o == nil || o.Mentions == nil {
		var ret []*AnyOfmicrosoftGraphChatMessageMention
		return ret
	}
	return *o.Mentions
}

// GetMentionsOk returns a tuple with the Mentions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphChatMessage) GetMentionsOk() (*[]*AnyOfmicrosoftGraphChatMessageMention, bool) {
	if o == nil || o.Mentions == nil {
		return nil, false
	}
	return o.Mentions, true
}

// HasMentions returns a boolean if a field has been set.
func (o *MicrosoftGraphChatMessage) HasMentions() bool {
	if o != nil && o.Mentions != nil {
		return true
	}

	return false
}

// SetMentions gets a reference to the given []*AnyOfmicrosoftGraphChatMessageMention and assigns it to the Mentions field.
func (o *MicrosoftGraphChatMessage) SetMentions(v []*AnyOfmicrosoftGraphChatMessageMention) {
	o.Mentions = &v
}

// GetMessageType returns the MessageType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphChatMessage) GetMessageType() AnyOfmicrosoftGraphChatMessageType {
	if o == nil  {
		var ret AnyOfmicrosoftGraphChatMessageType
		return ret
	}
	return o.MessageType
}

// GetMessageTypeOk returns a tuple with the MessageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphChatMessage) GetMessageTypeOk() (*AnyOfmicrosoftGraphChatMessageType, bool) {
	if o == nil || o.MessageType == nil {
		return nil, false
	}
	return &o.MessageType, true
}

// HasMessageType returns a boolean if a field has been set.
func (o *MicrosoftGraphChatMessage) HasMessageType() bool {
	if o != nil && o.MessageType != nil {
		return true
	}

	return false
}

// SetMessageType gets a reference to the given AnyOfmicrosoftGraphChatMessageType and assigns it to the MessageType field.
func (o *MicrosoftGraphChatMessage) SetMessageType(v AnyOfmicrosoftGraphChatMessageType) {
	o.MessageType = v
}

// GetPolicyViolation returns the PolicyViolation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphChatMessage) GetPolicyViolation() AnyOfmicrosoftGraphChatMessagePolicyViolation {
	if o == nil  {
		var ret AnyOfmicrosoftGraphChatMessagePolicyViolation
		return ret
	}
	return o.PolicyViolation
}

// GetPolicyViolationOk returns a tuple with the PolicyViolation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphChatMessage) GetPolicyViolationOk() (*AnyOfmicrosoftGraphChatMessagePolicyViolation, bool) {
	if o == nil || o.PolicyViolation == nil {
		return nil, false
	}
	return &o.PolicyViolation, true
}

// HasPolicyViolation returns a boolean if a field has been set.
func (o *MicrosoftGraphChatMessage) HasPolicyViolation() bool {
	if o != nil && o.PolicyViolation != nil {
		return true
	}

	return false
}

// SetPolicyViolation gets a reference to the given AnyOfmicrosoftGraphChatMessagePolicyViolation and assigns it to the PolicyViolation field.
func (o *MicrosoftGraphChatMessage) SetPolicyViolation(v AnyOfmicrosoftGraphChatMessagePolicyViolation) {
	o.PolicyViolation = v
}

// GetReactions returns the Reactions field value if set, zero value otherwise.
func (o *MicrosoftGraphChatMessage) GetReactions() []*AnyOfmicrosoftGraphChatMessageReaction {
	if o == nil || o.Reactions == nil {
		var ret []*AnyOfmicrosoftGraphChatMessageReaction
		return ret
	}
	return *o.Reactions
}

// GetReactionsOk returns a tuple with the Reactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphChatMessage) GetReactionsOk() (*[]*AnyOfmicrosoftGraphChatMessageReaction, bool) {
	if o == nil || o.Reactions == nil {
		return nil, false
	}
	return o.Reactions, true
}

// HasReactions returns a boolean if a field has been set.
func (o *MicrosoftGraphChatMessage) HasReactions() bool {
	if o != nil && o.Reactions != nil {
		return true
	}

	return false
}

// SetReactions gets a reference to the given []*AnyOfmicrosoftGraphChatMessageReaction and assigns it to the Reactions field.
func (o *MicrosoftGraphChatMessage) SetReactions(v []*AnyOfmicrosoftGraphChatMessageReaction) {
	o.Reactions = &v
}

// GetReplyToId returns the ReplyToId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphChatMessage) GetReplyToId() string {
	if o == nil || o.ReplyToId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ReplyToId.Get()
}

// GetReplyToIdOk returns a tuple with the ReplyToId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphChatMessage) GetReplyToIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ReplyToId.Get(), o.ReplyToId.IsSet()
}

// HasReplyToId returns a boolean if a field has been set.
func (o *MicrosoftGraphChatMessage) HasReplyToId() bool {
	if o != nil && o.ReplyToId.IsSet() {
		return true
	}

	return false
}

// SetReplyToId gets a reference to the given NullableString and assigns it to the ReplyToId field.
func (o *MicrosoftGraphChatMessage) SetReplyToId(v string) {
	o.ReplyToId.Set(&v)
}
// SetReplyToIdNil sets the value for ReplyToId to be an explicit nil
func (o *MicrosoftGraphChatMessage) SetReplyToIdNil() {
	o.ReplyToId.Set(nil)
}

// UnsetReplyToId ensures that no value is present for ReplyToId, not even an explicit nil
func (o *MicrosoftGraphChatMessage) UnsetReplyToId() {
	o.ReplyToId.Unset()
}

// GetSubject returns the Subject field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphChatMessage) GetSubject() string {
	if o == nil || o.Subject.Get() == nil {
		var ret string
		return ret
	}
	return *o.Subject.Get()
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphChatMessage) GetSubjectOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Subject.Get(), o.Subject.IsSet()
}

// HasSubject returns a boolean if a field has been set.
func (o *MicrosoftGraphChatMessage) HasSubject() bool {
	if o != nil && o.Subject.IsSet() {
		return true
	}

	return false
}

// SetSubject gets a reference to the given NullableString and assigns it to the Subject field.
func (o *MicrosoftGraphChatMessage) SetSubject(v string) {
	o.Subject.Set(&v)
}
// SetSubjectNil sets the value for Subject to be an explicit nil
func (o *MicrosoftGraphChatMessage) SetSubjectNil() {
	o.Subject.Set(nil)
}

// UnsetSubject ensures that no value is present for Subject, not even an explicit nil
func (o *MicrosoftGraphChatMessage) UnsetSubject() {
	o.Subject.Unset()
}

// GetSummary returns the Summary field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphChatMessage) GetSummary() string {
	if o == nil || o.Summary.Get() == nil {
		var ret string
		return ret
	}
	return *o.Summary.Get()
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphChatMessage) GetSummaryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Summary.Get(), o.Summary.IsSet()
}

// HasSummary returns a boolean if a field has been set.
func (o *MicrosoftGraphChatMessage) HasSummary() bool {
	if o != nil && o.Summary.IsSet() {
		return true
	}

	return false
}

// SetSummary gets a reference to the given NullableString and assigns it to the Summary field.
func (o *MicrosoftGraphChatMessage) SetSummary(v string) {
	o.Summary.Set(&v)
}
// SetSummaryNil sets the value for Summary to be an explicit nil
func (o *MicrosoftGraphChatMessage) SetSummaryNil() {
	o.Summary.Set(nil)
}

// UnsetSummary ensures that no value is present for Summary, not even an explicit nil
func (o *MicrosoftGraphChatMessage) UnsetSummary() {
	o.Summary.Unset()
}

// GetWebUrl returns the WebUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphChatMessage) GetWebUrl() string {
	if o == nil || o.WebUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.WebUrl.Get()
}

// GetWebUrlOk returns a tuple with the WebUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphChatMessage) GetWebUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.WebUrl.Get(), o.WebUrl.IsSet()
}

// HasWebUrl returns a boolean if a field has been set.
func (o *MicrosoftGraphChatMessage) HasWebUrl() bool {
	if o != nil && o.WebUrl.IsSet() {
		return true
	}

	return false
}

// SetWebUrl gets a reference to the given NullableString and assigns it to the WebUrl field.
func (o *MicrosoftGraphChatMessage) SetWebUrl(v string) {
	o.WebUrl.Set(&v)
}
// SetWebUrlNil sets the value for WebUrl to be an explicit nil
func (o *MicrosoftGraphChatMessage) SetWebUrlNil() {
	o.WebUrl.Set(nil)
}

// UnsetWebUrl ensures that no value is present for WebUrl, not even an explicit nil
func (o *MicrosoftGraphChatMessage) UnsetWebUrl() {
	o.WebUrl.Unset()
}

// GetHostedContents returns the HostedContents field value if set, zero value otherwise.
func (o *MicrosoftGraphChatMessage) GetHostedContents() []MicrosoftGraphChatMessageHostedContent {
	if o == nil || o.HostedContents == nil {
		var ret []MicrosoftGraphChatMessageHostedContent
		return ret
	}
	return *o.HostedContents
}

// GetHostedContentsOk returns a tuple with the HostedContents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphChatMessage) GetHostedContentsOk() (*[]MicrosoftGraphChatMessageHostedContent, bool) {
	if o == nil || o.HostedContents == nil {
		return nil, false
	}
	return o.HostedContents, true
}

// HasHostedContents returns a boolean if a field has been set.
func (o *MicrosoftGraphChatMessage) HasHostedContents() bool {
	if o != nil && o.HostedContents != nil {
		return true
	}

	return false
}

// SetHostedContents gets a reference to the given []MicrosoftGraphChatMessageHostedContent and assigns it to the HostedContents field.
func (o *MicrosoftGraphChatMessage) SetHostedContents(v []MicrosoftGraphChatMessageHostedContent) {
	o.HostedContents = &v
}

// GetReplies returns the Replies field value if set, zero value otherwise.
func (o *MicrosoftGraphChatMessage) GetReplies() []MicrosoftGraphChatMessage {
	if o == nil || o.Replies == nil {
		var ret []MicrosoftGraphChatMessage
		return ret
	}
	return *o.Replies
}

// GetRepliesOk returns a tuple with the Replies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphChatMessage) GetRepliesOk() (*[]MicrosoftGraphChatMessage, bool) {
	if o == nil || o.Replies == nil {
		return nil, false
	}
	return o.Replies, true
}

// HasReplies returns a boolean if a field has been set.
func (o *MicrosoftGraphChatMessage) HasReplies() bool {
	if o != nil && o.Replies != nil {
		return true
	}

	return false
}

// SetReplies gets a reference to the given []MicrosoftGraphChatMessage and assigns it to the Replies field.
func (o *MicrosoftGraphChatMessage) SetReplies(v []MicrosoftGraphChatMessage) {
	o.Replies = &v
}

func (o MicrosoftGraphChatMessage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Attachments != nil {
		toSerialize["attachments"] = o.Attachments
	}
	if o.Body != nil {
		toSerialize["body"] = o.Body
	}
	if o.ChannelIdentity != nil {
		toSerialize["channelIdentity"] = o.ChannelIdentity
	}
	if o.ChatId.IsSet() {
		toSerialize["chatId"] = o.ChatId.Get()
	}
	if o.CreatedDateTime.IsSet() {
		toSerialize["createdDateTime"] = o.CreatedDateTime.Get()
	}
	if o.DeletedDateTime.IsSet() {
		toSerialize["deletedDateTime"] = o.DeletedDateTime.Get()
	}
	if o.Etag.IsSet() {
		toSerialize["etag"] = o.Etag.Get()
	}
	if o.EventDetail != nil {
		toSerialize["eventDetail"] = o.EventDetail
	}
	if o.From != nil {
		toSerialize["from"] = o.From
	}
	if o.Importance != nil {
		toSerialize["importance"] = o.Importance
	}
	if o.LastEditedDateTime.IsSet() {
		toSerialize["lastEditedDateTime"] = o.LastEditedDateTime.Get()
	}
	if o.LastModifiedDateTime.IsSet() {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime.Get()
	}
	if o.Locale != nil {
		toSerialize["locale"] = o.Locale
	}
	if o.Mentions != nil {
		toSerialize["mentions"] = o.Mentions
	}
	if o.MessageType != nil {
		toSerialize["messageType"] = o.MessageType
	}
	if o.PolicyViolation != nil {
		toSerialize["policyViolation"] = o.PolicyViolation
	}
	if o.Reactions != nil {
		toSerialize["reactions"] = o.Reactions
	}
	if o.ReplyToId.IsSet() {
		toSerialize["replyToId"] = o.ReplyToId.Get()
	}
	if o.Subject.IsSet() {
		toSerialize["subject"] = o.Subject.Get()
	}
	if o.Summary.IsSet() {
		toSerialize["summary"] = o.Summary.Get()
	}
	if o.WebUrl.IsSet() {
		toSerialize["webUrl"] = o.WebUrl.Get()
	}
	if o.HostedContents != nil {
		toSerialize["hostedContents"] = o.HostedContents
	}
	if o.Replies != nil {
		toSerialize["replies"] = o.Replies
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphChatMessage struct {
	value *MicrosoftGraphChatMessage
	isSet bool
}

func (v NullableMicrosoftGraphChatMessage) Get() *MicrosoftGraphChatMessage {
	return v.value
}

func (v *NullableMicrosoftGraphChatMessage) Set(val *MicrosoftGraphChatMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphChatMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphChatMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphChatMessage(val *MicrosoftGraphChatMessage) *NullableMicrosoftGraphChatMessage {
	return &NullableMicrosoftGraphChatMessage{value: val, isSet: true}
}

func (v NullableMicrosoftGraphChatMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphChatMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


