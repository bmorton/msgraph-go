/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"time"
)

// ScheduleChangeRequest struct for ScheduleChangeRequest
type ScheduleChangeRequest struct {
	AssignedTo AnyOfmicrosoftGraphScheduleChangeRequestActor `json:"assignedTo,omitempty"`
	ManagerActionDateTime NullableTime `json:"managerActionDateTime,omitempty"`
	ManagerActionMessage NullableString `json:"managerActionMessage,omitempty"`
	ManagerUserId NullableString `json:"managerUserId,omitempty"`
	SenderDateTime NullableTime `json:"senderDateTime,omitempty"`
	SenderMessage NullableString `json:"senderMessage,omitempty"`
	SenderUserId NullableString `json:"senderUserId,omitempty"`
	State AnyOfmicrosoftGraphScheduleChangeState `json:"state,omitempty"`
}

// NewScheduleChangeRequest instantiates a new ScheduleChangeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScheduleChangeRequest() *ScheduleChangeRequest {
	this := ScheduleChangeRequest{}
	return &this
}

// NewScheduleChangeRequestWithDefaults instantiates a new ScheduleChangeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScheduleChangeRequestWithDefaults() *ScheduleChangeRequest {
	this := ScheduleChangeRequest{}
	return &this
}

// GetAssignedTo returns the AssignedTo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ScheduleChangeRequest) GetAssignedTo() AnyOfmicrosoftGraphScheduleChangeRequestActor {
	if o == nil  {
		var ret AnyOfmicrosoftGraphScheduleChangeRequestActor
		return ret
	}
	return o.AssignedTo
}

// GetAssignedToOk returns a tuple with the AssignedTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ScheduleChangeRequest) GetAssignedToOk() (*AnyOfmicrosoftGraphScheduleChangeRequestActor, bool) {
	if o == nil || o.AssignedTo == nil {
		return nil, false
	}
	return &o.AssignedTo, true
}

// HasAssignedTo returns a boolean if a field has been set.
func (o *ScheduleChangeRequest) HasAssignedTo() bool {
	if o != nil && o.AssignedTo != nil {
		return true
	}

	return false
}

// SetAssignedTo gets a reference to the given AnyOfmicrosoftGraphScheduleChangeRequestActor and assigns it to the AssignedTo field.
func (o *ScheduleChangeRequest) SetAssignedTo(v AnyOfmicrosoftGraphScheduleChangeRequestActor) {
	o.AssignedTo = v
}

// GetManagerActionDateTime returns the ManagerActionDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ScheduleChangeRequest) GetManagerActionDateTime() time.Time {
	if o == nil || o.ManagerActionDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.ManagerActionDateTime.Get()
}

// GetManagerActionDateTimeOk returns a tuple with the ManagerActionDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ScheduleChangeRequest) GetManagerActionDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ManagerActionDateTime.Get(), o.ManagerActionDateTime.IsSet()
}

// HasManagerActionDateTime returns a boolean if a field has been set.
func (o *ScheduleChangeRequest) HasManagerActionDateTime() bool {
	if o != nil && o.ManagerActionDateTime.IsSet() {
		return true
	}

	return false
}

// SetManagerActionDateTime gets a reference to the given NullableTime and assigns it to the ManagerActionDateTime field.
func (o *ScheduleChangeRequest) SetManagerActionDateTime(v time.Time) {
	o.ManagerActionDateTime.Set(&v)
}
// SetManagerActionDateTimeNil sets the value for ManagerActionDateTime to be an explicit nil
func (o *ScheduleChangeRequest) SetManagerActionDateTimeNil() {
	o.ManagerActionDateTime.Set(nil)
}

// UnsetManagerActionDateTime ensures that no value is present for ManagerActionDateTime, not even an explicit nil
func (o *ScheduleChangeRequest) UnsetManagerActionDateTime() {
	o.ManagerActionDateTime.Unset()
}

// GetManagerActionMessage returns the ManagerActionMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ScheduleChangeRequest) GetManagerActionMessage() string {
	if o == nil || o.ManagerActionMessage.Get() == nil {
		var ret string
		return ret
	}
	return *o.ManagerActionMessage.Get()
}

// GetManagerActionMessageOk returns a tuple with the ManagerActionMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ScheduleChangeRequest) GetManagerActionMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ManagerActionMessage.Get(), o.ManagerActionMessage.IsSet()
}

// HasManagerActionMessage returns a boolean if a field has been set.
func (o *ScheduleChangeRequest) HasManagerActionMessage() bool {
	if o != nil && o.ManagerActionMessage.IsSet() {
		return true
	}

	return false
}

// SetManagerActionMessage gets a reference to the given NullableString and assigns it to the ManagerActionMessage field.
func (o *ScheduleChangeRequest) SetManagerActionMessage(v string) {
	o.ManagerActionMessage.Set(&v)
}
// SetManagerActionMessageNil sets the value for ManagerActionMessage to be an explicit nil
func (o *ScheduleChangeRequest) SetManagerActionMessageNil() {
	o.ManagerActionMessage.Set(nil)
}

// UnsetManagerActionMessage ensures that no value is present for ManagerActionMessage, not even an explicit nil
func (o *ScheduleChangeRequest) UnsetManagerActionMessage() {
	o.ManagerActionMessage.Unset()
}

// GetManagerUserId returns the ManagerUserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ScheduleChangeRequest) GetManagerUserId() string {
	if o == nil || o.ManagerUserId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ManagerUserId.Get()
}

// GetManagerUserIdOk returns a tuple with the ManagerUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ScheduleChangeRequest) GetManagerUserIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ManagerUserId.Get(), o.ManagerUserId.IsSet()
}

// HasManagerUserId returns a boolean if a field has been set.
func (o *ScheduleChangeRequest) HasManagerUserId() bool {
	if o != nil && o.ManagerUserId.IsSet() {
		return true
	}

	return false
}

// SetManagerUserId gets a reference to the given NullableString and assigns it to the ManagerUserId field.
func (o *ScheduleChangeRequest) SetManagerUserId(v string) {
	o.ManagerUserId.Set(&v)
}
// SetManagerUserIdNil sets the value for ManagerUserId to be an explicit nil
func (o *ScheduleChangeRequest) SetManagerUserIdNil() {
	o.ManagerUserId.Set(nil)
}

// UnsetManagerUserId ensures that no value is present for ManagerUserId, not even an explicit nil
func (o *ScheduleChangeRequest) UnsetManagerUserId() {
	o.ManagerUserId.Unset()
}

// GetSenderDateTime returns the SenderDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ScheduleChangeRequest) GetSenderDateTime() time.Time {
	if o == nil || o.SenderDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.SenderDateTime.Get()
}

// GetSenderDateTimeOk returns a tuple with the SenderDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ScheduleChangeRequest) GetSenderDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SenderDateTime.Get(), o.SenderDateTime.IsSet()
}

// HasSenderDateTime returns a boolean if a field has been set.
func (o *ScheduleChangeRequest) HasSenderDateTime() bool {
	if o != nil && o.SenderDateTime.IsSet() {
		return true
	}

	return false
}

// SetSenderDateTime gets a reference to the given NullableTime and assigns it to the SenderDateTime field.
func (o *ScheduleChangeRequest) SetSenderDateTime(v time.Time) {
	o.SenderDateTime.Set(&v)
}
// SetSenderDateTimeNil sets the value for SenderDateTime to be an explicit nil
func (o *ScheduleChangeRequest) SetSenderDateTimeNil() {
	o.SenderDateTime.Set(nil)
}

// UnsetSenderDateTime ensures that no value is present for SenderDateTime, not even an explicit nil
func (o *ScheduleChangeRequest) UnsetSenderDateTime() {
	o.SenderDateTime.Unset()
}

// GetSenderMessage returns the SenderMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ScheduleChangeRequest) GetSenderMessage() string {
	if o == nil || o.SenderMessage.Get() == nil {
		var ret string
		return ret
	}
	return *o.SenderMessage.Get()
}

// GetSenderMessageOk returns a tuple with the SenderMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ScheduleChangeRequest) GetSenderMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SenderMessage.Get(), o.SenderMessage.IsSet()
}

// HasSenderMessage returns a boolean if a field has been set.
func (o *ScheduleChangeRequest) HasSenderMessage() bool {
	if o != nil && o.SenderMessage.IsSet() {
		return true
	}

	return false
}

// SetSenderMessage gets a reference to the given NullableString and assigns it to the SenderMessage field.
func (o *ScheduleChangeRequest) SetSenderMessage(v string) {
	o.SenderMessage.Set(&v)
}
// SetSenderMessageNil sets the value for SenderMessage to be an explicit nil
func (o *ScheduleChangeRequest) SetSenderMessageNil() {
	o.SenderMessage.Set(nil)
}

// UnsetSenderMessage ensures that no value is present for SenderMessage, not even an explicit nil
func (o *ScheduleChangeRequest) UnsetSenderMessage() {
	o.SenderMessage.Unset()
}

// GetSenderUserId returns the SenderUserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ScheduleChangeRequest) GetSenderUserId() string {
	if o == nil || o.SenderUserId.Get() == nil {
		var ret string
		return ret
	}
	return *o.SenderUserId.Get()
}

// GetSenderUserIdOk returns a tuple with the SenderUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ScheduleChangeRequest) GetSenderUserIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SenderUserId.Get(), o.SenderUserId.IsSet()
}

// HasSenderUserId returns a boolean if a field has been set.
func (o *ScheduleChangeRequest) HasSenderUserId() bool {
	if o != nil && o.SenderUserId.IsSet() {
		return true
	}

	return false
}

// SetSenderUserId gets a reference to the given NullableString and assigns it to the SenderUserId field.
func (o *ScheduleChangeRequest) SetSenderUserId(v string) {
	o.SenderUserId.Set(&v)
}
// SetSenderUserIdNil sets the value for SenderUserId to be an explicit nil
func (o *ScheduleChangeRequest) SetSenderUserIdNil() {
	o.SenderUserId.Set(nil)
}

// UnsetSenderUserId ensures that no value is present for SenderUserId, not even an explicit nil
func (o *ScheduleChangeRequest) UnsetSenderUserId() {
	o.SenderUserId.Unset()
}

// GetState returns the State field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ScheduleChangeRequest) GetState() AnyOfmicrosoftGraphScheduleChangeState {
	if o == nil  {
		var ret AnyOfmicrosoftGraphScheduleChangeState
		return ret
	}
	return o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ScheduleChangeRequest) GetStateOk() (*AnyOfmicrosoftGraphScheduleChangeState, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return &o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ScheduleChangeRequest) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given AnyOfmicrosoftGraphScheduleChangeState and assigns it to the State field.
func (o *ScheduleChangeRequest) SetState(v AnyOfmicrosoftGraphScheduleChangeState) {
	o.State = v
}

func (o ScheduleChangeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AssignedTo != nil {
		toSerialize["assignedTo"] = o.AssignedTo
	}
	if o.ManagerActionDateTime.IsSet() {
		toSerialize["managerActionDateTime"] = o.ManagerActionDateTime.Get()
	}
	if o.ManagerActionMessage.IsSet() {
		toSerialize["managerActionMessage"] = o.ManagerActionMessage.Get()
	}
	if o.ManagerUserId.IsSet() {
		toSerialize["managerUserId"] = o.ManagerUserId.Get()
	}
	if o.SenderDateTime.IsSet() {
		toSerialize["senderDateTime"] = o.SenderDateTime.Get()
	}
	if o.SenderMessage.IsSet() {
		toSerialize["senderMessage"] = o.SenderMessage.Get()
	}
	if o.SenderUserId.IsSet() {
		toSerialize["senderUserId"] = o.SenderUserId.Get()
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableScheduleChangeRequest struct {
	value *ScheduleChangeRequest
	isSet bool
}

func (v NullableScheduleChangeRequest) Get() *ScheduleChangeRequest {
	return v.value
}

func (v *NullableScheduleChangeRequest) Set(val *ScheduleChangeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableScheduleChangeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableScheduleChangeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScheduleChangeRequest(val *ScheduleChangeRequest) *NullableScheduleChangeRequest {
	return &NullableScheduleChangeRequest{value: val, isSet: true}
}

func (v NullableScheduleChangeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScheduleChangeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


