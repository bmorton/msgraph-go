/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphSettingSource struct for MicrosoftGraphSettingSource
type MicrosoftGraphSettingSource struct {
	// Not yet documented
	DisplayName NullableString `json:"displayName,omitempty"`
	// Not yet documented
	Id NullableString `json:"id,omitempty"`
	// Not yet documented. Possible values are: deviceConfiguration, deviceIntent.
	SourceType AnyOfmicrosoftGraphSettingSourceType `json:"sourceType,omitempty"`
}

// NewMicrosoftGraphSettingSource instantiates a new MicrosoftGraphSettingSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphSettingSource() *MicrosoftGraphSettingSource {
	this := MicrosoftGraphSettingSource{}
	return &this
}

// NewMicrosoftGraphSettingSourceWithDefaults instantiates a new MicrosoftGraphSettingSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphSettingSourceWithDefaults() *MicrosoftGraphSettingSource {
	this := MicrosoftGraphSettingSource{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSettingSource) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSettingSource) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphSettingSource) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *MicrosoftGraphSettingSource) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *MicrosoftGraphSettingSource) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *MicrosoftGraphSettingSource) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSettingSource) GetId() string {
	if o == nil || o.Id.Get() == nil {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSettingSource) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphSettingSource) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *MicrosoftGraphSettingSource) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *MicrosoftGraphSettingSource) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *MicrosoftGraphSettingSource) UnsetId() {
	o.Id.Unset()
}

// GetSourceType returns the SourceType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphSettingSource) GetSourceType() AnyOfmicrosoftGraphSettingSourceType {
	if o == nil  {
		var ret AnyOfmicrosoftGraphSettingSourceType
		return ret
	}
	return o.SourceType
}

// GetSourceTypeOk returns a tuple with the SourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphSettingSource) GetSourceTypeOk() (*AnyOfmicrosoftGraphSettingSourceType, bool) {
	if o == nil || o.SourceType == nil {
		return nil, false
	}
	return &o.SourceType, true
}

// HasSourceType returns a boolean if a field has been set.
func (o *MicrosoftGraphSettingSource) HasSourceType() bool {
	if o != nil && o.SourceType != nil {
		return true
	}

	return false
}

// SetSourceType gets a reference to the given AnyOfmicrosoftGraphSettingSourceType and assigns it to the SourceType field.
func (o *MicrosoftGraphSettingSource) SetSourceType(v AnyOfmicrosoftGraphSettingSourceType) {
	o.SourceType = v
}

func (o MicrosoftGraphSettingSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.SourceType != nil {
		toSerialize["sourceType"] = o.SourceType
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphSettingSource struct {
	value *MicrosoftGraphSettingSource
	isSet bool
}

func (v NullableMicrosoftGraphSettingSource) Get() *MicrosoftGraphSettingSource {
	return v.value
}

func (v *NullableMicrosoftGraphSettingSource) Set(val *MicrosoftGraphSettingSource) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphSettingSource) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphSettingSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphSettingSource(val *MicrosoftGraphSettingSource) *NullableMicrosoftGraphSettingSource {
	return &NullableMicrosoftGraphSettingSource{value: val, isSet: true}
}

func (v NullableMicrosoftGraphSettingSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphSettingSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


