/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphOnlineMeetingRole the model 'MicrosoftGraphOnlineMeetingRole'
type MicrosoftGraphOnlineMeetingRole string

// List of microsoft.graph.onlineMeetingRole
const (
	ATTENDEE MicrosoftGraphOnlineMeetingRole = "attendee"
	PRESENTER MicrosoftGraphOnlineMeetingRole = "presenter"
	UNKNOWN_FUTURE_VALUE MicrosoftGraphOnlineMeetingRole = "unknownFutureValue"
	PRODUCER MicrosoftGraphOnlineMeetingRole = "producer"
)

// All allowed values of MicrosoftGraphOnlineMeetingRole enum
var AllowedMicrosoftGraphOnlineMeetingRoleEnumValues = []MicrosoftGraphOnlineMeetingRole{
	"attendee",
	"presenter",
	"unknownFutureValue",
	"producer",
}

func (v *MicrosoftGraphOnlineMeetingRole) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphOnlineMeetingRole(value)
	for _, existing := range AllowedMicrosoftGraphOnlineMeetingRoleEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphOnlineMeetingRole", value)
}

// NewMicrosoftGraphOnlineMeetingRoleFromValue returns a pointer to a valid MicrosoftGraphOnlineMeetingRole
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphOnlineMeetingRoleFromValue(v string) (*MicrosoftGraphOnlineMeetingRole, error) {
	ev := MicrosoftGraphOnlineMeetingRole(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphOnlineMeetingRole: valid values are %v", v, AllowedMicrosoftGraphOnlineMeetingRoleEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphOnlineMeetingRole) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphOnlineMeetingRoleEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.onlineMeetingRole value
func (v MicrosoftGraphOnlineMeetingRole) Ptr() *MicrosoftGraphOnlineMeetingRole {
	return &v
}

type NullableMicrosoftGraphOnlineMeetingRole struct {
	value *MicrosoftGraphOnlineMeetingRole
	isSet bool
}

func (v NullableMicrosoftGraphOnlineMeetingRole) Get() *MicrosoftGraphOnlineMeetingRole {
	return v.value
}

func (v *NullableMicrosoftGraphOnlineMeetingRole) Set(val *MicrosoftGraphOnlineMeetingRole) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphOnlineMeetingRole) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphOnlineMeetingRole) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphOnlineMeetingRole(val *MicrosoftGraphOnlineMeetingRole) *NullableMicrosoftGraphOnlineMeetingRole {
	return &NullableMicrosoftGraphOnlineMeetingRole{value: val, isSet: true}
}

func (v NullableMicrosoftGraphOnlineMeetingRole) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphOnlineMeetingRole) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

