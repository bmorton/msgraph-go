/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphCallRecordsDeviceInfo struct for MicrosoftGraphCallRecordsDeviceInfo
type MicrosoftGraphCallRecordsDeviceInfo struct {
	// Name of the capture device driver used by the media endpoint.
	CaptureDeviceDriver NullableString `json:"captureDeviceDriver,omitempty"`
	// Name of the capture device used by the media endpoint.
	CaptureDeviceName NullableString `json:"captureDeviceName,omitempty"`
	// Fraction of the call that the media endpoint detected the capture device was not working properly.
	CaptureNotFunctioningEventRatio AnyOfnumberstringstring `json:"captureNotFunctioningEventRatio,omitempty"`
	// Fraction of the call that the media endpoint detected the CPU resources available were insufficient and caused poor quality of the audio sent and received.
	CpuInsufficentEventRatio AnyOfnumberstringstring `json:"cpuInsufficentEventRatio,omitempty"`
	// Fraction of the call that the media endpoint detected clipping in the captured audio that caused poor quality of the audio being sent.
	DeviceClippingEventRatio AnyOfnumberstringstring `json:"deviceClippingEventRatio,omitempty"`
	// Fraction of the call that the media endpoint detected glitches or gaps in the audio played or captured that caused poor quality of the audio being sent or received.
	DeviceGlitchEventRatio AnyOfnumberstringstring `json:"deviceGlitchEventRatio,omitempty"`
	// Number of times during the call that the media endpoint detected howling or screeching audio.
	HowlingEventCount NullableInt32 `json:"howlingEventCount,omitempty"`
	// The root mean square (RMS) of the incoming signal of up to the first 30 seconds of the call.
	InitialSignalLevelRootMeanSquare AnyOfnumberstringstring `json:"initialSignalLevelRootMeanSquare,omitempty"`
	// Fraction of the call that the media endpoint detected low speech level that caused poor quality of the audio being sent.
	LowSpeechLevelEventRatio AnyOfnumberstringstring `json:"lowSpeechLevelEventRatio,omitempty"`
	// Fraction of the call that the media endpoint detected low speech to noise level that caused poor quality of the audio being sent.
	LowSpeechToNoiseEventRatio AnyOfnumberstringstring `json:"lowSpeechToNoiseEventRatio,omitempty"`
	// Glitches per 5 minute interval for the media endpoint's microphone.
	MicGlitchRate AnyOfnumberstringstring `json:"micGlitchRate,omitempty"`
	// Average energy level of received audio for audio classified as mono noise or left channel of stereo noise by the media endpoint.
	ReceivedNoiseLevel NullableInt32 `json:"receivedNoiseLevel,omitempty"`
	// Average energy level of received audio for audio classified as mono speech, or left channel of stereo speech by the media endpoint.
	ReceivedSignalLevel NullableInt32 `json:"receivedSignalLevel,omitempty"`
	// Name of the render device driver used by the media endpoint.
	RenderDeviceDriver NullableString `json:"renderDeviceDriver,omitempty"`
	// Name of the render device used by the media endpoint.
	RenderDeviceName NullableString `json:"renderDeviceName,omitempty"`
	// Fraction of the call that media endpoint detected device render is muted.
	RenderMuteEventRatio AnyOfnumberstringstring `json:"renderMuteEventRatio,omitempty"`
	// Fraction of the call that the media endpoint detected the render device was not working properly.
	RenderNotFunctioningEventRatio AnyOfnumberstringstring `json:"renderNotFunctioningEventRatio,omitempty"`
	// Fraction of the call that media endpoint detected device render volume is set to 0.
	RenderZeroVolumeEventRatio AnyOfnumberstringstring `json:"renderZeroVolumeEventRatio,omitempty"`
	// Average energy level of sent audio for audio classified as mono noise or left channel of stereo noise by the media endpoint.
	SentNoiseLevel NullableInt32 `json:"sentNoiseLevel,omitempty"`
	// Average energy level of sent audio for audio classified as mono speech, or left channel of stereo speech by the media endpoint.
	SentSignalLevel NullableInt32 `json:"sentSignalLevel,omitempty"`
	// Glitches per 5 minute internal for the media endpoint's loudspeaker.
	SpeakerGlitchRate AnyOfnumberstringstring `json:"speakerGlitchRate,omitempty"`
}

// NewMicrosoftGraphCallRecordsDeviceInfo instantiates a new MicrosoftGraphCallRecordsDeviceInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphCallRecordsDeviceInfo() *MicrosoftGraphCallRecordsDeviceInfo {
	this := MicrosoftGraphCallRecordsDeviceInfo{}
	return &this
}

// NewMicrosoftGraphCallRecordsDeviceInfoWithDefaults instantiates a new MicrosoftGraphCallRecordsDeviceInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphCallRecordsDeviceInfoWithDefaults() *MicrosoftGraphCallRecordsDeviceInfo {
	this := MicrosoftGraphCallRecordsDeviceInfo{}
	return &this
}

// GetCaptureDeviceDriver returns the CaptureDeviceDriver field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetCaptureDeviceDriver() string {
	if o == nil || o.CaptureDeviceDriver.Get() == nil {
		var ret string
		return ret
	}
	return *o.CaptureDeviceDriver.Get()
}

// GetCaptureDeviceDriverOk returns a tuple with the CaptureDeviceDriver field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetCaptureDeviceDriverOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CaptureDeviceDriver.Get(), o.CaptureDeviceDriver.IsSet()
}

// HasCaptureDeviceDriver returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsDeviceInfo) HasCaptureDeviceDriver() bool {
	if o != nil && o.CaptureDeviceDriver.IsSet() {
		return true
	}

	return false
}

// SetCaptureDeviceDriver gets a reference to the given NullableString and assigns it to the CaptureDeviceDriver field.
func (o *MicrosoftGraphCallRecordsDeviceInfo) SetCaptureDeviceDriver(v string) {
	o.CaptureDeviceDriver.Set(&v)
}
// SetCaptureDeviceDriverNil sets the value for CaptureDeviceDriver to be an explicit nil
func (o *MicrosoftGraphCallRecordsDeviceInfo) SetCaptureDeviceDriverNil() {
	o.CaptureDeviceDriver.Set(nil)
}

// UnsetCaptureDeviceDriver ensures that no value is present for CaptureDeviceDriver, not even an explicit nil
func (o *MicrosoftGraphCallRecordsDeviceInfo) UnsetCaptureDeviceDriver() {
	o.CaptureDeviceDriver.Unset()
}

// GetCaptureDeviceName returns the CaptureDeviceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetCaptureDeviceName() string {
	if o == nil || o.CaptureDeviceName.Get() == nil {
		var ret string
		return ret
	}
	return *o.CaptureDeviceName.Get()
}

// GetCaptureDeviceNameOk returns a tuple with the CaptureDeviceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetCaptureDeviceNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CaptureDeviceName.Get(), o.CaptureDeviceName.IsSet()
}

// HasCaptureDeviceName returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsDeviceInfo) HasCaptureDeviceName() bool {
	if o != nil && o.CaptureDeviceName.IsSet() {
		return true
	}

	return false
}

// SetCaptureDeviceName gets a reference to the given NullableString and assigns it to the CaptureDeviceName field.
func (o *MicrosoftGraphCallRecordsDeviceInfo) SetCaptureDeviceName(v string) {
	o.CaptureDeviceName.Set(&v)
}
// SetCaptureDeviceNameNil sets the value for CaptureDeviceName to be an explicit nil
func (o *MicrosoftGraphCallRecordsDeviceInfo) SetCaptureDeviceNameNil() {
	o.CaptureDeviceName.Set(nil)
}

// UnsetCaptureDeviceName ensures that no value is present for CaptureDeviceName, not even an explicit nil
func (o *MicrosoftGraphCallRecordsDeviceInfo) UnsetCaptureDeviceName() {
	o.CaptureDeviceName.Unset()
}

// GetCaptureNotFunctioningEventRatio returns the CaptureNotFunctioningEventRatio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetCaptureNotFunctioningEventRatio() AnyOfnumberstringstring {
	if o == nil  {
		var ret AnyOfnumberstringstring
		return ret
	}
	return o.CaptureNotFunctioningEventRatio
}

// GetCaptureNotFunctioningEventRatioOk returns a tuple with the CaptureNotFunctioningEventRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetCaptureNotFunctioningEventRatioOk() (*AnyOfnumberstringstring, bool) {
	if o == nil || o.CaptureNotFunctioningEventRatio == nil {
		return nil, false
	}
	return &o.CaptureNotFunctioningEventRatio, true
}

// HasCaptureNotFunctioningEventRatio returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsDeviceInfo) HasCaptureNotFunctioningEventRatio() bool {
	if o != nil && o.CaptureNotFunctioningEventRatio != nil {
		return true
	}

	return false
}

// SetCaptureNotFunctioningEventRatio gets a reference to the given AnyOfnumberstringstring and assigns it to the CaptureNotFunctioningEventRatio field.
func (o *MicrosoftGraphCallRecordsDeviceInfo) SetCaptureNotFunctioningEventRatio(v AnyOfnumberstringstring) {
	o.CaptureNotFunctioningEventRatio = v
}

// GetCpuInsufficentEventRatio returns the CpuInsufficentEventRatio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetCpuInsufficentEventRatio() AnyOfnumberstringstring {
	if o == nil  {
		var ret AnyOfnumberstringstring
		return ret
	}
	return o.CpuInsufficentEventRatio
}

// GetCpuInsufficentEventRatioOk returns a tuple with the CpuInsufficentEventRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetCpuInsufficentEventRatioOk() (*AnyOfnumberstringstring, bool) {
	if o == nil || o.CpuInsufficentEventRatio == nil {
		return nil, false
	}
	return &o.CpuInsufficentEventRatio, true
}

// HasCpuInsufficentEventRatio returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsDeviceInfo) HasCpuInsufficentEventRatio() bool {
	if o != nil && o.CpuInsufficentEventRatio != nil {
		return true
	}

	return false
}

// SetCpuInsufficentEventRatio gets a reference to the given AnyOfnumberstringstring and assigns it to the CpuInsufficentEventRatio field.
func (o *MicrosoftGraphCallRecordsDeviceInfo) SetCpuInsufficentEventRatio(v AnyOfnumberstringstring) {
	o.CpuInsufficentEventRatio = v
}

// GetDeviceClippingEventRatio returns the DeviceClippingEventRatio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetDeviceClippingEventRatio() AnyOfnumberstringstring {
	if o == nil  {
		var ret AnyOfnumberstringstring
		return ret
	}
	return o.DeviceClippingEventRatio
}

// GetDeviceClippingEventRatioOk returns a tuple with the DeviceClippingEventRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetDeviceClippingEventRatioOk() (*AnyOfnumberstringstring, bool) {
	if o == nil || o.DeviceClippingEventRatio == nil {
		return nil, false
	}
	return &o.DeviceClippingEventRatio, true
}

// HasDeviceClippingEventRatio returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsDeviceInfo) HasDeviceClippingEventRatio() bool {
	if o != nil && o.DeviceClippingEventRatio != nil {
		return true
	}

	return false
}

// SetDeviceClippingEventRatio gets a reference to the given AnyOfnumberstringstring and assigns it to the DeviceClippingEventRatio field.
func (o *MicrosoftGraphCallRecordsDeviceInfo) SetDeviceClippingEventRatio(v AnyOfnumberstringstring) {
	o.DeviceClippingEventRatio = v
}

// GetDeviceGlitchEventRatio returns the DeviceGlitchEventRatio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetDeviceGlitchEventRatio() AnyOfnumberstringstring {
	if o == nil  {
		var ret AnyOfnumberstringstring
		return ret
	}
	return o.DeviceGlitchEventRatio
}

// GetDeviceGlitchEventRatioOk returns a tuple with the DeviceGlitchEventRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetDeviceGlitchEventRatioOk() (*AnyOfnumberstringstring, bool) {
	if o == nil || o.DeviceGlitchEventRatio == nil {
		return nil, false
	}
	return &o.DeviceGlitchEventRatio, true
}

// HasDeviceGlitchEventRatio returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsDeviceInfo) HasDeviceGlitchEventRatio() bool {
	if o != nil && o.DeviceGlitchEventRatio != nil {
		return true
	}

	return false
}

// SetDeviceGlitchEventRatio gets a reference to the given AnyOfnumberstringstring and assigns it to the DeviceGlitchEventRatio field.
func (o *MicrosoftGraphCallRecordsDeviceInfo) SetDeviceGlitchEventRatio(v AnyOfnumberstringstring) {
	o.DeviceGlitchEventRatio = v
}

// GetHowlingEventCount returns the HowlingEventCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetHowlingEventCount() int32 {
	if o == nil || o.HowlingEventCount.Get() == nil {
		var ret int32
		return ret
	}
	return *o.HowlingEventCount.Get()
}

// GetHowlingEventCountOk returns a tuple with the HowlingEventCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetHowlingEventCountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HowlingEventCount.Get(), o.HowlingEventCount.IsSet()
}

// HasHowlingEventCount returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsDeviceInfo) HasHowlingEventCount() bool {
	if o != nil && o.HowlingEventCount.IsSet() {
		return true
	}

	return false
}

// SetHowlingEventCount gets a reference to the given NullableInt32 and assigns it to the HowlingEventCount field.
func (o *MicrosoftGraphCallRecordsDeviceInfo) SetHowlingEventCount(v int32) {
	o.HowlingEventCount.Set(&v)
}
// SetHowlingEventCountNil sets the value for HowlingEventCount to be an explicit nil
func (o *MicrosoftGraphCallRecordsDeviceInfo) SetHowlingEventCountNil() {
	o.HowlingEventCount.Set(nil)
}

// UnsetHowlingEventCount ensures that no value is present for HowlingEventCount, not even an explicit nil
func (o *MicrosoftGraphCallRecordsDeviceInfo) UnsetHowlingEventCount() {
	o.HowlingEventCount.Unset()
}

// GetInitialSignalLevelRootMeanSquare returns the InitialSignalLevelRootMeanSquare field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetInitialSignalLevelRootMeanSquare() AnyOfnumberstringstring {
	if o == nil  {
		var ret AnyOfnumberstringstring
		return ret
	}
	return o.InitialSignalLevelRootMeanSquare
}

// GetInitialSignalLevelRootMeanSquareOk returns a tuple with the InitialSignalLevelRootMeanSquare field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetInitialSignalLevelRootMeanSquareOk() (*AnyOfnumberstringstring, bool) {
	if o == nil || o.InitialSignalLevelRootMeanSquare == nil {
		return nil, false
	}
	return &o.InitialSignalLevelRootMeanSquare, true
}

// HasInitialSignalLevelRootMeanSquare returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsDeviceInfo) HasInitialSignalLevelRootMeanSquare() bool {
	if o != nil && o.InitialSignalLevelRootMeanSquare != nil {
		return true
	}

	return false
}

// SetInitialSignalLevelRootMeanSquare gets a reference to the given AnyOfnumberstringstring and assigns it to the InitialSignalLevelRootMeanSquare field.
func (o *MicrosoftGraphCallRecordsDeviceInfo) SetInitialSignalLevelRootMeanSquare(v AnyOfnumberstringstring) {
	o.InitialSignalLevelRootMeanSquare = v
}

// GetLowSpeechLevelEventRatio returns the LowSpeechLevelEventRatio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetLowSpeechLevelEventRatio() AnyOfnumberstringstring {
	if o == nil  {
		var ret AnyOfnumberstringstring
		return ret
	}
	return o.LowSpeechLevelEventRatio
}

// GetLowSpeechLevelEventRatioOk returns a tuple with the LowSpeechLevelEventRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetLowSpeechLevelEventRatioOk() (*AnyOfnumberstringstring, bool) {
	if o == nil || o.LowSpeechLevelEventRatio == nil {
		return nil, false
	}
	return &o.LowSpeechLevelEventRatio, true
}

// HasLowSpeechLevelEventRatio returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsDeviceInfo) HasLowSpeechLevelEventRatio() bool {
	if o != nil && o.LowSpeechLevelEventRatio != nil {
		return true
	}

	return false
}

// SetLowSpeechLevelEventRatio gets a reference to the given AnyOfnumberstringstring and assigns it to the LowSpeechLevelEventRatio field.
func (o *MicrosoftGraphCallRecordsDeviceInfo) SetLowSpeechLevelEventRatio(v AnyOfnumberstringstring) {
	o.LowSpeechLevelEventRatio = v
}

// GetLowSpeechToNoiseEventRatio returns the LowSpeechToNoiseEventRatio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetLowSpeechToNoiseEventRatio() AnyOfnumberstringstring {
	if o == nil  {
		var ret AnyOfnumberstringstring
		return ret
	}
	return o.LowSpeechToNoiseEventRatio
}

// GetLowSpeechToNoiseEventRatioOk returns a tuple with the LowSpeechToNoiseEventRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetLowSpeechToNoiseEventRatioOk() (*AnyOfnumberstringstring, bool) {
	if o == nil || o.LowSpeechToNoiseEventRatio == nil {
		return nil, false
	}
	return &o.LowSpeechToNoiseEventRatio, true
}

// HasLowSpeechToNoiseEventRatio returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsDeviceInfo) HasLowSpeechToNoiseEventRatio() bool {
	if o != nil && o.LowSpeechToNoiseEventRatio != nil {
		return true
	}

	return false
}

// SetLowSpeechToNoiseEventRatio gets a reference to the given AnyOfnumberstringstring and assigns it to the LowSpeechToNoiseEventRatio field.
func (o *MicrosoftGraphCallRecordsDeviceInfo) SetLowSpeechToNoiseEventRatio(v AnyOfnumberstringstring) {
	o.LowSpeechToNoiseEventRatio = v
}

// GetMicGlitchRate returns the MicGlitchRate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetMicGlitchRate() AnyOfnumberstringstring {
	if o == nil  {
		var ret AnyOfnumberstringstring
		return ret
	}
	return o.MicGlitchRate
}

// GetMicGlitchRateOk returns a tuple with the MicGlitchRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetMicGlitchRateOk() (*AnyOfnumberstringstring, bool) {
	if o == nil || o.MicGlitchRate == nil {
		return nil, false
	}
	return &o.MicGlitchRate, true
}

// HasMicGlitchRate returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsDeviceInfo) HasMicGlitchRate() bool {
	if o != nil && o.MicGlitchRate != nil {
		return true
	}

	return false
}

// SetMicGlitchRate gets a reference to the given AnyOfnumberstringstring and assigns it to the MicGlitchRate field.
func (o *MicrosoftGraphCallRecordsDeviceInfo) SetMicGlitchRate(v AnyOfnumberstringstring) {
	o.MicGlitchRate = v
}

// GetReceivedNoiseLevel returns the ReceivedNoiseLevel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetReceivedNoiseLevel() int32 {
	if o == nil || o.ReceivedNoiseLevel.Get() == nil {
		var ret int32
		return ret
	}
	return *o.ReceivedNoiseLevel.Get()
}

// GetReceivedNoiseLevelOk returns a tuple with the ReceivedNoiseLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetReceivedNoiseLevelOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ReceivedNoiseLevel.Get(), o.ReceivedNoiseLevel.IsSet()
}

// HasReceivedNoiseLevel returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsDeviceInfo) HasReceivedNoiseLevel() bool {
	if o != nil && o.ReceivedNoiseLevel.IsSet() {
		return true
	}

	return false
}

// SetReceivedNoiseLevel gets a reference to the given NullableInt32 and assigns it to the ReceivedNoiseLevel field.
func (o *MicrosoftGraphCallRecordsDeviceInfo) SetReceivedNoiseLevel(v int32) {
	o.ReceivedNoiseLevel.Set(&v)
}
// SetReceivedNoiseLevelNil sets the value for ReceivedNoiseLevel to be an explicit nil
func (o *MicrosoftGraphCallRecordsDeviceInfo) SetReceivedNoiseLevelNil() {
	o.ReceivedNoiseLevel.Set(nil)
}

// UnsetReceivedNoiseLevel ensures that no value is present for ReceivedNoiseLevel, not even an explicit nil
func (o *MicrosoftGraphCallRecordsDeviceInfo) UnsetReceivedNoiseLevel() {
	o.ReceivedNoiseLevel.Unset()
}

// GetReceivedSignalLevel returns the ReceivedSignalLevel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetReceivedSignalLevel() int32 {
	if o == nil || o.ReceivedSignalLevel.Get() == nil {
		var ret int32
		return ret
	}
	return *o.ReceivedSignalLevel.Get()
}

// GetReceivedSignalLevelOk returns a tuple with the ReceivedSignalLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetReceivedSignalLevelOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ReceivedSignalLevel.Get(), o.ReceivedSignalLevel.IsSet()
}

// HasReceivedSignalLevel returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsDeviceInfo) HasReceivedSignalLevel() bool {
	if o != nil && o.ReceivedSignalLevel.IsSet() {
		return true
	}

	return false
}

// SetReceivedSignalLevel gets a reference to the given NullableInt32 and assigns it to the ReceivedSignalLevel field.
func (o *MicrosoftGraphCallRecordsDeviceInfo) SetReceivedSignalLevel(v int32) {
	o.ReceivedSignalLevel.Set(&v)
}
// SetReceivedSignalLevelNil sets the value for ReceivedSignalLevel to be an explicit nil
func (o *MicrosoftGraphCallRecordsDeviceInfo) SetReceivedSignalLevelNil() {
	o.ReceivedSignalLevel.Set(nil)
}

// UnsetReceivedSignalLevel ensures that no value is present for ReceivedSignalLevel, not even an explicit nil
func (o *MicrosoftGraphCallRecordsDeviceInfo) UnsetReceivedSignalLevel() {
	o.ReceivedSignalLevel.Unset()
}

// GetRenderDeviceDriver returns the RenderDeviceDriver field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetRenderDeviceDriver() string {
	if o == nil || o.RenderDeviceDriver.Get() == nil {
		var ret string
		return ret
	}
	return *o.RenderDeviceDriver.Get()
}

// GetRenderDeviceDriverOk returns a tuple with the RenderDeviceDriver field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetRenderDeviceDriverOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RenderDeviceDriver.Get(), o.RenderDeviceDriver.IsSet()
}

// HasRenderDeviceDriver returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsDeviceInfo) HasRenderDeviceDriver() bool {
	if o != nil && o.RenderDeviceDriver.IsSet() {
		return true
	}

	return false
}

// SetRenderDeviceDriver gets a reference to the given NullableString and assigns it to the RenderDeviceDriver field.
func (o *MicrosoftGraphCallRecordsDeviceInfo) SetRenderDeviceDriver(v string) {
	o.RenderDeviceDriver.Set(&v)
}
// SetRenderDeviceDriverNil sets the value for RenderDeviceDriver to be an explicit nil
func (o *MicrosoftGraphCallRecordsDeviceInfo) SetRenderDeviceDriverNil() {
	o.RenderDeviceDriver.Set(nil)
}

// UnsetRenderDeviceDriver ensures that no value is present for RenderDeviceDriver, not even an explicit nil
func (o *MicrosoftGraphCallRecordsDeviceInfo) UnsetRenderDeviceDriver() {
	o.RenderDeviceDriver.Unset()
}

// GetRenderDeviceName returns the RenderDeviceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetRenderDeviceName() string {
	if o == nil || o.RenderDeviceName.Get() == nil {
		var ret string
		return ret
	}
	return *o.RenderDeviceName.Get()
}

// GetRenderDeviceNameOk returns a tuple with the RenderDeviceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetRenderDeviceNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RenderDeviceName.Get(), o.RenderDeviceName.IsSet()
}

// HasRenderDeviceName returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsDeviceInfo) HasRenderDeviceName() bool {
	if o != nil && o.RenderDeviceName.IsSet() {
		return true
	}

	return false
}

// SetRenderDeviceName gets a reference to the given NullableString and assigns it to the RenderDeviceName field.
func (o *MicrosoftGraphCallRecordsDeviceInfo) SetRenderDeviceName(v string) {
	o.RenderDeviceName.Set(&v)
}
// SetRenderDeviceNameNil sets the value for RenderDeviceName to be an explicit nil
func (o *MicrosoftGraphCallRecordsDeviceInfo) SetRenderDeviceNameNil() {
	o.RenderDeviceName.Set(nil)
}

// UnsetRenderDeviceName ensures that no value is present for RenderDeviceName, not even an explicit nil
func (o *MicrosoftGraphCallRecordsDeviceInfo) UnsetRenderDeviceName() {
	o.RenderDeviceName.Unset()
}

// GetRenderMuteEventRatio returns the RenderMuteEventRatio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetRenderMuteEventRatio() AnyOfnumberstringstring {
	if o == nil  {
		var ret AnyOfnumberstringstring
		return ret
	}
	return o.RenderMuteEventRatio
}

// GetRenderMuteEventRatioOk returns a tuple with the RenderMuteEventRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetRenderMuteEventRatioOk() (*AnyOfnumberstringstring, bool) {
	if o == nil || o.RenderMuteEventRatio == nil {
		return nil, false
	}
	return &o.RenderMuteEventRatio, true
}

// HasRenderMuteEventRatio returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsDeviceInfo) HasRenderMuteEventRatio() bool {
	if o != nil && o.RenderMuteEventRatio != nil {
		return true
	}

	return false
}

// SetRenderMuteEventRatio gets a reference to the given AnyOfnumberstringstring and assigns it to the RenderMuteEventRatio field.
func (o *MicrosoftGraphCallRecordsDeviceInfo) SetRenderMuteEventRatio(v AnyOfnumberstringstring) {
	o.RenderMuteEventRatio = v
}

// GetRenderNotFunctioningEventRatio returns the RenderNotFunctioningEventRatio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetRenderNotFunctioningEventRatio() AnyOfnumberstringstring {
	if o == nil  {
		var ret AnyOfnumberstringstring
		return ret
	}
	return o.RenderNotFunctioningEventRatio
}

// GetRenderNotFunctioningEventRatioOk returns a tuple with the RenderNotFunctioningEventRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetRenderNotFunctioningEventRatioOk() (*AnyOfnumberstringstring, bool) {
	if o == nil || o.RenderNotFunctioningEventRatio == nil {
		return nil, false
	}
	return &o.RenderNotFunctioningEventRatio, true
}

// HasRenderNotFunctioningEventRatio returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsDeviceInfo) HasRenderNotFunctioningEventRatio() bool {
	if o != nil && o.RenderNotFunctioningEventRatio != nil {
		return true
	}

	return false
}

// SetRenderNotFunctioningEventRatio gets a reference to the given AnyOfnumberstringstring and assigns it to the RenderNotFunctioningEventRatio field.
func (o *MicrosoftGraphCallRecordsDeviceInfo) SetRenderNotFunctioningEventRatio(v AnyOfnumberstringstring) {
	o.RenderNotFunctioningEventRatio = v
}

// GetRenderZeroVolumeEventRatio returns the RenderZeroVolumeEventRatio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetRenderZeroVolumeEventRatio() AnyOfnumberstringstring {
	if o == nil  {
		var ret AnyOfnumberstringstring
		return ret
	}
	return o.RenderZeroVolumeEventRatio
}

// GetRenderZeroVolumeEventRatioOk returns a tuple with the RenderZeroVolumeEventRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetRenderZeroVolumeEventRatioOk() (*AnyOfnumberstringstring, bool) {
	if o == nil || o.RenderZeroVolumeEventRatio == nil {
		return nil, false
	}
	return &o.RenderZeroVolumeEventRatio, true
}

// HasRenderZeroVolumeEventRatio returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsDeviceInfo) HasRenderZeroVolumeEventRatio() bool {
	if o != nil && o.RenderZeroVolumeEventRatio != nil {
		return true
	}

	return false
}

// SetRenderZeroVolumeEventRatio gets a reference to the given AnyOfnumberstringstring and assigns it to the RenderZeroVolumeEventRatio field.
func (o *MicrosoftGraphCallRecordsDeviceInfo) SetRenderZeroVolumeEventRatio(v AnyOfnumberstringstring) {
	o.RenderZeroVolumeEventRatio = v
}

// GetSentNoiseLevel returns the SentNoiseLevel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetSentNoiseLevel() int32 {
	if o == nil || o.SentNoiseLevel.Get() == nil {
		var ret int32
		return ret
	}
	return *o.SentNoiseLevel.Get()
}

// GetSentNoiseLevelOk returns a tuple with the SentNoiseLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetSentNoiseLevelOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SentNoiseLevel.Get(), o.SentNoiseLevel.IsSet()
}

// HasSentNoiseLevel returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsDeviceInfo) HasSentNoiseLevel() bool {
	if o != nil && o.SentNoiseLevel.IsSet() {
		return true
	}

	return false
}

// SetSentNoiseLevel gets a reference to the given NullableInt32 and assigns it to the SentNoiseLevel field.
func (o *MicrosoftGraphCallRecordsDeviceInfo) SetSentNoiseLevel(v int32) {
	o.SentNoiseLevel.Set(&v)
}
// SetSentNoiseLevelNil sets the value for SentNoiseLevel to be an explicit nil
func (o *MicrosoftGraphCallRecordsDeviceInfo) SetSentNoiseLevelNil() {
	o.SentNoiseLevel.Set(nil)
}

// UnsetSentNoiseLevel ensures that no value is present for SentNoiseLevel, not even an explicit nil
func (o *MicrosoftGraphCallRecordsDeviceInfo) UnsetSentNoiseLevel() {
	o.SentNoiseLevel.Unset()
}

// GetSentSignalLevel returns the SentSignalLevel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetSentSignalLevel() int32 {
	if o == nil || o.SentSignalLevel.Get() == nil {
		var ret int32
		return ret
	}
	return *o.SentSignalLevel.Get()
}

// GetSentSignalLevelOk returns a tuple with the SentSignalLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetSentSignalLevelOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SentSignalLevel.Get(), o.SentSignalLevel.IsSet()
}

// HasSentSignalLevel returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsDeviceInfo) HasSentSignalLevel() bool {
	if o != nil && o.SentSignalLevel.IsSet() {
		return true
	}

	return false
}

// SetSentSignalLevel gets a reference to the given NullableInt32 and assigns it to the SentSignalLevel field.
func (o *MicrosoftGraphCallRecordsDeviceInfo) SetSentSignalLevel(v int32) {
	o.SentSignalLevel.Set(&v)
}
// SetSentSignalLevelNil sets the value for SentSignalLevel to be an explicit nil
func (o *MicrosoftGraphCallRecordsDeviceInfo) SetSentSignalLevelNil() {
	o.SentSignalLevel.Set(nil)
}

// UnsetSentSignalLevel ensures that no value is present for SentSignalLevel, not even an explicit nil
func (o *MicrosoftGraphCallRecordsDeviceInfo) UnsetSentSignalLevel() {
	o.SentSignalLevel.Unset()
}

// GetSpeakerGlitchRate returns the SpeakerGlitchRate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetSpeakerGlitchRate() AnyOfnumberstringstring {
	if o == nil  {
		var ret AnyOfnumberstringstring
		return ret
	}
	return o.SpeakerGlitchRate
}

// GetSpeakerGlitchRateOk returns a tuple with the SpeakerGlitchRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphCallRecordsDeviceInfo) GetSpeakerGlitchRateOk() (*AnyOfnumberstringstring, bool) {
	if o == nil || o.SpeakerGlitchRate == nil {
		return nil, false
	}
	return &o.SpeakerGlitchRate, true
}

// HasSpeakerGlitchRate returns a boolean if a field has been set.
func (o *MicrosoftGraphCallRecordsDeviceInfo) HasSpeakerGlitchRate() bool {
	if o != nil && o.SpeakerGlitchRate != nil {
		return true
	}

	return false
}

// SetSpeakerGlitchRate gets a reference to the given AnyOfnumberstringstring and assigns it to the SpeakerGlitchRate field.
func (o *MicrosoftGraphCallRecordsDeviceInfo) SetSpeakerGlitchRate(v AnyOfnumberstringstring) {
	o.SpeakerGlitchRate = v
}

func (o MicrosoftGraphCallRecordsDeviceInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CaptureDeviceDriver.IsSet() {
		toSerialize["captureDeviceDriver"] = o.CaptureDeviceDriver.Get()
	}
	if o.CaptureDeviceName.IsSet() {
		toSerialize["captureDeviceName"] = o.CaptureDeviceName.Get()
	}
	if o.CaptureNotFunctioningEventRatio != nil {
		toSerialize["captureNotFunctioningEventRatio"] = o.CaptureNotFunctioningEventRatio
	}
	if o.CpuInsufficentEventRatio != nil {
		toSerialize["cpuInsufficentEventRatio"] = o.CpuInsufficentEventRatio
	}
	if o.DeviceClippingEventRatio != nil {
		toSerialize["deviceClippingEventRatio"] = o.DeviceClippingEventRatio
	}
	if o.DeviceGlitchEventRatio != nil {
		toSerialize["deviceGlitchEventRatio"] = o.DeviceGlitchEventRatio
	}
	if o.HowlingEventCount.IsSet() {
		toSerialize["howlingEventCount"] = o.HowlingEventCount.Get()
	}
	if o.InitialSignalLevelRootMeanSquare != nil {
		toSerialize["initialSignalLevelRootMeanSquare"] = o.InitialSignalLevelRootMeanSquare
	}
	if o.LowSpeechLevelEventRatio != nil {
		toSerialize["lowSpeechLevelEventRatio"] = o.LowSpeechLevelEventRatio
	}
	if o.LowSpeechToNoiseEventRatio != nil {
		toSerialize["lowSpeechToNoiseEventRatio"] = o.LowSpeechToNoiseEventRatio
	}
	if o.MicGlitchRate != nil {
		toSerialize["micGlitchRate"] = o.MicGlitchRate
	}
	if o.ReceivedNoiseLevel.IsSet() {
		toSerialize["receivedNoiseLevel"] = o.ReceivedNoiseLevel.Get()
	}
	if o.ReceivedSignalLevel.IsSet() {
		toSerialize["receivedSignalLevel"] = o.ReceivedSignalLevel.Get()
	}
	if o.RenderDeviceDriver.IsSet() {
		toSerialize["renderDeviceDriver"] = o.RenderDeviceDriver.Get()
	}
	if o.RenderDeviceName.IsSet() {
		toSerialize["renderDeviceName"] = o.RenderDeviceName.Get()
	}
	if o.RenderMuteEventRatio != nil {
		toSerialize["renderMuteEventRatio"] = o.RenderMuteEventRatio
	}
	if o.RenderNotFunctioningEventRatio != nil {
		toSerialize["renderNotFunctioningEventRatio"] = o.RenderNotFunctioningEventRatio
	}
	if o.RenderZeroVolumeEventRatio != nil {
		toSerialize["renderZeroVolumeEventRatio"] = o.RenderZeroVolumeEventRatio
	}
	if o.SentNoiseLevel.IsSet() {
		toSerialize["sentNoiseLevel"] = o.SentNoiseLevel.Get()
	}
	if o.SentSignalLevel.IsSet() {
		toSerialize["sentSignalLevel"] = o.SentSignalLevel.Get()
	}
	if o.SpeakerGlitchRate != nil {
		toSerialize["speakerGlitchRate"] = o.SpeakerGlitchRate
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphCallRecordsDeviceInfo struct {
	value *MicrosoftGraphCallRecordsDeviceInfo
	isSet bool
}

func (v NullableMicrosoftGraphCallRecordsDeviceInfo) Get() *MicrosoftGraphCallRecordsDeviceInfo {
	return v.value
}

func (v *NullableMicrosoftGraphCallRecordsDeviceInfo) Set(val *MicrosoftGraphCallRecordsDeviceInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphCallRecordsDeviceInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphCallRecordsDeviceInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphCallRecordsDeviceInfo(val *MicrosoftGraphCallRecordsDeviceInfo) *NullableMicrosoftGraphCallRecordsDeviceInfo {
	return &NullableMicrosoftGraphCallRecordsDeviceInfo{value: val, isSet: true}
}

func (v NullableMicrosoftGraphCallRecordsDeviceInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphCallRecordsDeviceInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


