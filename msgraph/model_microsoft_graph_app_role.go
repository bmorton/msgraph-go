/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphAppRole struct for MicrosoftGraphAppRole
type MicrosoftGraphAppRole struct {
	// Specifies whether this app role can be assigned to users and groups (by setting to ['User']), to other application's (by setting to ['Application'], or both (by setting to ['User', 'Application']). App roles supporting assignment to other applications' service principals are also known as application permissions. The 'Application' value is only supported for app roles defined on application entities.
	AllowedMemberTypes *[]string `json:"allowedMemberTypes,omitempty"`
	// The description for the app role. This is displayed when the app role is being assigned and, if the app role functions as an application permission, during  consent experiences.
	Description NullableString `json:"description,omitempty"`
	// Display name for the permission that appears in the app role assignment and consent experiences.
	DisplayName NullableString `json:"displayName,omitempty"`
	// Unique role identifier inside the appRoles collection. When creating a new app role, a new Guid identifier must be provided.
	Id *string `json:"id,omitempty"`
	// When creating or updating an app role, this must be set to true (which is the default). To delete a role, this must first be set to false.  At that point, in a subsequent call, this role may be removed.
	IsEnabled *bool `json:"isEnabled,omitempty"`
	// Specifies if the app role is defined on the application object or on the servicePrincipal entity. Must not be included in any POST or PATCH requests. Read-only.
	Origin NullableString `json:"origin,omitempty"`
	// Specifies the value to include in the roles claim in ID tokens and access tokens authenticating an assigned user or service principal. Must not exceed 120 characters in length. Allowed characters are : ! # $ % & ' ( ) * + , - . / : ;  =  ? @ [ ] ^ + _  {  } ~, as well as characters in the ranges 0-9, A-Z and a-z. Any other character, including the space character, are not allowed. May not begin with ..
	Value NullableString `json:"value,omitempty"`
}

// NewMicrosoftGraphAppRole instantiates a new MicrosoftGraphAppRole object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphAppRole() *MicrosoftGraphAppRole {
	this := MicrosoftGraphAppRole{}
	return &this
}

// NewMicrosoftGraphAppRoleWithDefaults instantiates a new MicrosoftGraphAppRole object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphAppRoleWithDefaults() *MicrosoftGraphAppRole {
	this := MicrosoftGraphAppRole{}
	return &this
}

// GetAllowedMemberTypes returns the AllowedMemberTypes field value if set, zero value otherwise.
func (o *MicrosoftGraphAppRole) GetAllowedMemberTypes() []string {
	if o == nil || o.AllowedMemberTypes == nil {
		var ret []string
		return ret
	}
	return *o.AllowedMemberTypes
}

// GetAllowedMemberTypesOk returns a tuple with the AllowedMemberTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAppRole) GetAllowedMemberTypesOk() (*[]string, bool) {
	if o == nil || o.AllowedMemberTypes == nil {
		return nil, false
	}
	return o.AllowedMemberTypes, true
}

// HasAllowedMemberTypes returns a boolean if a field has been set.
func (o *MicrosoftGraphAppRole) HasAllowedMemberTypes() bool {
	if o != nil && o.AllowedMemberTypes != nil {
		return true
	}

	return false
}

// SetAllowedMemberTypes gets a reference to the given []string and assigns it to the AllowedMemberTypes field.
func (o *MicrosoftGraphAppRole) SetAllowedMemberTypes(v []string) {
	o.AllowedMemberTypes = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAppRole) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAppRole) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *MicrosoftGraphAppRole) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *MicrosoftGraphAppRole) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *MicrosoftGraphAppRole) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *MicrosoftGraphAppRole) UnsetDescription() {
	o.Description.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAppRole) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAppRole) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphAppRole) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *MicrosoftGraphAppRole) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *MicrosoftGraphAppRole) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *MicrosoftGraphAppRole) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphAppRole) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAppRole) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphAppRole) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphAppRole) SetId(v string) {
	o.Id = &v
}

// GetIsEnabled returns the IsEnabled field value if set, zero value otherwise.
func (o *MicrosoftGraphAppRole) GetIsEnabled() bool {
	if o == nil || o.IsEnabled == nil {
		var ret bool
		return ret
	}
	return *o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAppRole) GetIsEnabledOk() (*bool, bool) {
	if o == nil || o.IsEnabled == nil {
		return nil, false
	}
	return o.IsEnabled, true
}

// HasIsEnabled returns a boolean if a field has been set.
func (o *MicrosoftGraphAppRole) HasIsEnabled() bool {
	if o != nil && o.IsEnabled != nil {
		return true
	}

	return false
}

// SetIsEnabled gets a reference to the given bool and assigns it to the IsEnabled field.
func (o *MicrosoftGraphAppRole) SetIsEnabled(v bool) {
	o.IsEnabled = &v
}

// GetOrigin returns the Origin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAppRole) GetOrigin() string {
	if o == nil || o.Origin.Get() == nil {
		var ret string
		return ret
	}
	return *o.Origin.Get()
}

// GetOriginOk returns a tuple with the Origin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAppRole) GetOriginOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Origin.Get(), o.Origin.IsSet()
}

// HasOrigin returns a boolean if a field has been set.
func (o *MicrosoftGraphAppRole) HasOrigin() bool {
	if o != nil && o.Origin.IsSet() {
		return true
	}

	return false
}

// SetOrigin gets a reference to the given NullableString and assigns it to the Origin field.
func (o *MicrosoftGraphAppRole) SetOrigin(v string) {
	o.Origin.Set(&v)
}
// SetOriginNil sets the value for Origin to be an explicit nil
func (o *MicrosoftGraphAppRole) SetOriginNil() {
	o.Origin.Set(nil)
}

// UnsetOrigin ensures that no value is present for Origin, not even an explicit nil
func (o *MicrosoftGraphAppRole) UnsetOrigin() {
	o.Origin.Unset()
}

// GetValue returns the Value field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAppRole) GetValue() string {
	if o == nil || o.Value.Get() == nil {
		var ret string
		return ret
	}
	return *o.Value.Get()
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAppRole) GetValueOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Value.Get(), o.Value.IsSet()
}

// HasValue returns a boolean if a field has been set.
func (o *MicrosoftGraphAppRole) HasValue() bool {
	if o != nil && o.Value.IsSet() {
		return true
	}

	return false
}

// SetValue gets a reference to the given NullableString and assigns it to the Value field.
func (o *MicrosoftGraphAppRole) SetValue(v string) {
	o.Value.Set(&v)
}
// SetValueNil sets the value for Value to be an explicit nil
func (o *MicrosoftGraphAppRole) SetValueNil() {
	o.Value.Set(nil)
}

// UnsetValue ensures that no value is present for Value, not even an explicit nil
func (o *MicrosoftGraphAppRole) UnsetValue() {
	o.Value.Unset()
}

func (o MicrosoftGraphAppRole) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowedMemberTypes != nil {
		toSerialize["allowedMemberTypes"] = o.AllowedMemberTypes
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IsEnabled != nil {
		toSerialize["isEnabled"] = o.IsEnabled
	}
	if o.Origin.IsSet() {
		toSerialize["origin"] = o.Origin.Get()
	}
	if o.Value.IsSet() {
		toSerialize["value"] = o.Value.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphAppRole struct {
	value *MicrosoftGraphAppRole
	isSet bool
}

func (v NullableMicrosoftGraphAppRole) Get() *MicrosoftGraphAppRole {
	return v.value
}

func (v *NullableMicrosoftGraphAppRole) Set(val *MicrosoftGraphAppRole) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphAppRole) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphAppRole) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphAppRole(val *MicrosoftGraphAppRole) *NullableMicrosoftGraphAppRole {
	return &NullableMicrosoftGraphAppRole{value: val, isSet: true}
}

func (v NullableMicrosoftGraphAppRole) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphAppRole) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


