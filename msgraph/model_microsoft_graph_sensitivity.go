/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphSensitivity the model 'MicrosoftGraphSensitivity'
type MicrosoftGraphSensitivity string

// List of microsoft.graph.sensitivity
const (
	NORMAL MicrosoftGraphSensitivity = "normal"
	PERSONAL MicrosoftGraphSensitivity = "personal"
	PRIVATE MicrosoftGraphSensitivity = "private"
	CONFIDENTIAL MicrosoftGraphSensitivity = "confidential"
)

// All allowed values of MicrosoftGraphSensitivity enum
var AllowedMicrosoftGraphSensitivityEnumValues = []MicrosoftGraphSensitivity{
	"normal",
	"personal",
	"private",
	"confidential",
}

func (v *MicrosoftGraphSensitivity) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphSensitivity(value)
	for _, existing := range AllowedMicrosoftGraphSensitivityEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphSensitivity", value)
}

// NewMicrosoftGraphSensitivityFromValue returns a pointer to a valid MicrosoftGraphSensitivity
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphSensitivityFromValue(v string) (*MicrosoftGraphSensitivity, error) {
	ev := MicrosoftGraphSensitivity(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphSensitivity: valid values are %v", v, AllowedMicrosoftGraphSensitivityEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphSensitivity) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphSensitivityEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.sensitivity value
func (v MicrosoftGraphSensitivity) Ptr() *MicrosoftGraphSensitivity {
	return &v
}

type NullableMicrosoftGraphSensitivity struct {
	value *MicrosoftGraphSensitivity
	isSet bool
}

func (v NullableMicrosoftGraphSensitivity) Get() *MicrosoftGraphSensitivity {
	return v.value
}

func (v *NullableMicrosoftGraphSensitivity) Set(val *MicrosoftGraphSensitivity) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphSensitivity) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphSensitivity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphSensitivity(val *MicrosoftGraphSensitivity) *NullableMicrosoftGraphSensitivity {
	return &NullableMicrosoftGraphSensitivity{value: val, isSet: true}
}

func (v NullableMicrosoftGraphSensitivity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphSensitivity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

