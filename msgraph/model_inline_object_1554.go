/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// InlineObject1554 struct for InlineObject1554
type InlineObject1554 struct {
	StartDate AnyOfobject `json:"startDate,omitempty"`
	Days AnyOfobject `json:"days,omitempty"`
	Holidays AnyOfobject `json:"holidays,omitempty"`
}

// NewInlineObject1554 instantiates a new InlineObject1554 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject1554() *InlineObject1554 {
	this := InlineObject1554{}
	return &this
}

// NewInlineObject1554WithDefaults instantiates a new InlineObject1554 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject1554WithDefaults() *InlineObject1554 {
	this := InlineObject1554{}
	return &this
}

// GetStartDate returns the StartDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1554) GetStartDate() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1554) GetStartDateOk() (*AnyOfobject, bool) {
	if o == nil || o.StartDate == nil {
		return nil, false
	}
	return &o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *InlineObject1554) HasStartDate() bool {
	if o != nil && o.StartDate != nil {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given AnyOfobject and assigns it to the StartDate field.
func (o *InlineObject1554) SetStartDate(v AnyOfobject) {
	o.StartDate = v
}

// GetDays returns the Days field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1554) GetDays() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Days
}

// GetDaysOk returns a tuple with the Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1554) GetDaysOk() (*AnyOfobject, bool) {
	if o == nil || o.Days == nil {
		return nil, false
	}
	return &o.Days, true
}

// HasDays returns a boolean if a field has been set.
func (o *InlineObject1554) HasDays() bool {
	if o != nil && o.Days != nil {
		return true
	}

	return false
}

// SetDays gets a reference to the given AnyOfobject and assigns it to the Days field.
func (o *InlineObject1554) SetDays(v AnyOfobject) {
	o.Days = v
}

// GetHolidays returns the Holidays field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1554) GetHolidays() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Holidays
}

// GetHolidaysOk returns a tuple with the Holidays field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1554) GetHolidaysOk() (*AnyOfobject, bool) {
	if o == nil || o.Holidays == nil {
		return nil, false
	}
	return &o.Holidays, true
}

// HasHolidays returns a boolean if a field has been set.
func (o *InlineObject1554) HasHolidays() bool {
	if o != nil && o.Holidays != nil {
		return true
	}

	return false
}

// SetHolidays gets a reference to the given AnyOfobject and assigns it to the Holidays field.
func (o *InlineObject1554) SetHolidays(v AnyOfobject) {
	o.Holidays = v
}

func (o InlineObject1554) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StartDate != nil {
		toSerialize["startDate"] = o.StartDate
	}
	if o.Days != nil {
		toSerialize["days"] = o.Days
	}
	if o.Holidays != nil {
		toSerialize["holidays"] = o.Holidays
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject1554 struct {
	value *InlineObject1554
	isSet bool
}

func (v NullableInlineObject1554) Get() *InlineObject1554 {
	return v.value
}

func (v *NullableInlineObject1554) Set(val *InlineObject1554) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject1554) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject1554) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject1554(val *InlineObject1554) *NullableInlineObject1554 {
	return &NullableInlineObject1554{value: val, isSet: true}
}

func (v NullableInlineObject1554) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject1554) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


