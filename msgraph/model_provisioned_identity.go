/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// ProvisionedIdentity struct for ProvisionedIdentity
type ProvisionedIdentity struct {
	// Details of the identity.
	Details AnyOfobject `json:"details,omitempty"`
	// Type of identity that has been provisioned, such as 'user' or 'group'.
	IdentityType NullableString `json:"identityType,omitempty"`
}

// NewProvisionedIdentity instantiates a new ProvisionedIdentity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProvisionedIdentity() *ProvisionedIdentity {
	this := ProvisionedIdentity{}
	return &this
}

// NewProvisionedIdentityWithDefaults instantiates a new ProvisionedIdentity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProvisionedIdentityWithDefaults() *ProvisionedIdentity {
	this := ProvisionedIdentity{}
	return &this
}

// GetDetails returns the Details field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisionedIdentity) GetDetails() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisionedIdentity) GetDetailsOk() (*AnyOfobject, bool) {
	if o == nil || o.Details == nil {
		return nil, false
	}
	return &o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *ProvisionedIdentity) HasDetails() bool {
	if o != nil && o.Details != nil {
		return true
	}

	return false
}

// SetDetails gets a reference to the given AnyOfobject and assigns it to the Details field.
func (o *ProvisionedIdentity) SetDetails(v AnyOfobject) {
	o.Details = v
}

// GetIdentityType returns the IdentityType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisionedIdentity) GetIdentityType() string {
	if o == nil || o.IdentityType.Get() == nil {
		var ret string
		return ret
	}
	return *o.IdentityType.Get()
}

// GetIdentityTypeOk returns a tuple with the IdentityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisionedIdentity) GetIdentityTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IdentityType.Get(), o.IdentityType.IsSet()
}

// HasIdentityType returns a boolean if a field has been set.
func (o *ProvisionedIdentity) HasIdentityType() bool {
	if o != nil && o.IdentityType.IsSet() {
		return true
	}

	return false
}

// SetIdentityType gets a reference to the given NullableString and assigns it to the IdentityType field.
func (o *ProvisionedIdentity) SetIdentityType(v string) {
	o.IdentityType.Set(&v)
}
// SetIdentityTypeNil sets the value for IdentityType to be an explicit nil
func (o *ProvisionedIdentity) SetIdentityTypeNil() {
	o.IdentityType.Set(nil)
}

// UnsetIdentityType ensures that no value is present for IdentityType, not even an explicit nil
func (o *ProvisionedIdentity) UnsetIdentityType() {
	o.IdentityType.Unset()
}

func (o ProvisionedIdentity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Details != nil {
		toSerialize["details"] = o.Details
	}
	if o.IdentityType.IsSet() {
		toSerialize["identityType"] = o.IdentityType.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableProvisionedIdentity struct {
	value *ProvisionedIdentity
	isSet bool
}

func (v NullableProvisionedIdentity) Get() *ProvisionedIdentity {
	return v.value
}

func (v *NullableProvisionedIdentity) Set(val *ProvisionedIdentity) {
	v.value = val
	v.isSet = true
}

func (v NullableProvisionedIdentity) IsSet() bool {
	return v.isSet
}

func (v *NullableProvisionedIdentity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProvisionedIdentity(val *ProvisionedIdentity) *NullableProvisionedIdentity {
	return &NullableProvisionedIdentity{value: val, isSet: true}
}

func (v NullableProvisionedIdentity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProvisionedIdentity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


