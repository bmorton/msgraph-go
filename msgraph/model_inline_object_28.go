/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject28 struct for InlineObject28
type InlineObject28 struct {
	Reason AnyOfmicrosoftGraphRejectReason `json:"reason,omitempty"`
	CallbackUri NullableString `json:"callbackUri,omitempty"`
}

// NewInlineObject28 instantiates a new InlineObject28 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject28() *InlineObject28 {
	this := InlineObject28{}
	return &this
}

// NewInlineObject28WithDefaults instantiates a new InlineObject28 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject28WithDefaults() *InlineObject28 {
	this := InlineObject28{}
	return &this
}

// GetReason returns the Reason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject28) GetReason() AnyOfmicrosoftGraphRejectReason {
	if o == nil  {
		var ret AnyOfmicrosoftGraphRejectReason
		return ret
	}
	return o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject28) GetReasonOk() (*AnyOfmicrosoftGraphRejectReason, bool) {
	if o == nil || o.Reason == nil {
		return nil, false
	}
	return &o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *InlineObject28) HasReason() bool {
	if o != nil && o.Reason != nil {
		return true
	}

	return false
}

// SetReason gets a reference to the given AnyOfmicrosoftGraphRejectReason and assigns it to the Reason field.
func (o *InlineObject28) SetReason(v AnyOfmicrosoftGraphRejectReason) {
	o.Reason = v
}

// GetCallbackUri returns the CallbackUri field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject28) GetCallbackUri() string {
	if o == nil || o.CallbackUri.Get() == nil {
		var ret string
		return ret
	}
	return *o.CallbackUri.Get()
}

// GetCallbackUriOk returns a tuple with the CallbackUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject28) GetCallbackUriOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CallbackUri.Get(), o.CallbackUri.IsSet()
}

// HasCallbackUri returns a boolean if a field has been set.
func (o *InlineObject28) HasCallbackUri() bool {
	if o != nil && o.CallbackUri.IsSet() {
		return true
	}

	return false
}

// SetCallbackUri gets a reference to the given NullableString and assigns it to the CallbackUri field.
func (o *InlineObject28) SetCallbackUri(v string) {
	o.CallbackUri.Set(&v)
}
// SetCallbackUriNil sets the value for CallbackUri to be an explicit nil
func (o *InlineObject28) SetCallbackUriNil() {
	o.CallbackUri.Set(nil)
}

// UnsetCallbackUri ensures that no value is present for CallbackUri, not even an explicit nil
func (o *InlineObject28) UnsetCallbackUri() {
	o.CallbackUri.Unset()
}

func (o InlineObject28) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Reason != nil {
		toSerialize["reason"] = o.Reason
	}
	if o.CallbackUri.IsSet() {
		toSerialize["callbackUri"] = o.CallbackUri.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject28 struct {
	value *InlineObject28
	isSet bool
}

func (v NullableInlineObject28) Get() *InlineObject28 {
	return v.value
}

func (v *NullableInlineObject28) Set(val *InlineObject28) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject28) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject28) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject28(val *InlineObject28) *NullableInlineObject28 {
	return &NullableInlineObject28{value: val, isSet: true}
}

func (v NullableInlineObject28) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject28) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


