/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphDriveItem struct for MicrosoftGraphDriveItem
type MicrosoftGraphDriveItem struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// Identity of the user, device, or application which created the item. Read-only.
	CreatedBy AnyOfmicrosoftGraphIdentitySet `json:"createdBy,omitempty"`
	// Date and time of item creation. Read-only.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// Provides a user-visible description of the item. Optional.
	Description NullableString `json:"description,omitempty"`
	// ETag for the item. Read-only.
	ETag NullableString `json:"eTag,omitempty"`
	// Identity of the user, device, and application which last modified the item. Read-only.
	LastModifiedBy AnyOfmicrosoftGraphIdentitySet `json:"lastModifiedBy,omitempty"`
	// Date and time the item was last modified. Read-only.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// The name of the item. Read-write.
	Name NullableString `json:"name,omitempty"`
	// Parent information, if the item has a parent. Read-write.
	ParentReference AnyOfmicrosoftGraphItemReference `json:"parentReference,omitempty"`
	// URL that displays the resource in the browser. Read-only.
	WebUrl NullableString `json:"webUrl,omitempty"`
	// Identity of the user who created the item. Read-only.
	CreatedByUser AnyOfmicrosoftGraphUser `json:"createdByUser,omitempty"`
	// Identity of the user who last modified the item. Read-only.
	LastModifiedByUser AnyOfmicrosoftGraphUser `json:"lastModifiedByUser,omitempty"`
	// Audio metadata, if the item is an audio file. Read-only.
	Audio AnyOfmicrosoftGraphAudio `json:"audio,omitempty"`
	Bundle AnyOfmicrosoftGraphBundle `json:"bundle,omitempty"`
	// The content stream, if the item represents a file.
	Content NullableString `json:"content,omitempty"`
	// An eTag for the content of the item. This eTag is not changed if only the metadata is changed. Note This property is not returned if the item is a folder. Read-only.
	CTag NullableString `json:"cTag,omitempty"`
	// Information about the deleted state of the item. Read-only.
	Deleted AnyOfmicrosoftGraphDeleted `json:"deleted,omitempty"`
	// File metadata, if the item is a file. Read-only.
	File AnyOfmicrosoftGraphFile `json:"file,omitempty"`
	// File system information on client. Read-write.
	FileSystemInfo AnyOfmicrosoftGraphFileSystemInfo `json:"fileSystemInfo,omitempty"`
	// Folder metadata, if the item is a folder. Read-only.
	Folder AnyOfmicrosoftGraphFolder `json:"folder,omitempty"`
	// Image metadata, if the item is an image. Read-only.
	Image AnyOfmicrosoftGraphImage `json:"image,omitempty"`
	// Location metadata, if the item has location data. Read-only.
	Location AnyOfmicrosoftGraphGeoCoordinates `json:"location,omitempty"`
	// Malware metadata, if the item was detected to contain malware. Read-only.
	Malware AnyOfmicrosoftGraphMalware `json:"malware,omitempty"`
	// If present, indicates that this item is a package instead of a folder or file. Packages are treated like files in some contexts and folders in others. Read-only.
	Package AnyOfmicrosoftGraphPackage `json:"package,omitempty"`
	// If present, indicates that one or more operations that might affect the state of the driveItem are pending completion. Read-only.
	PendingOperations AnyOfmicrosoftGraphPendingOperations `json:"pendingOperations,omitempty"`
	// Photo metadata, if the item is a photo. Read-only.
	Photo AnyOfmicrosoftGraphPhoto `json:"photo,omitempty"`
	// Provides information about the published or checked-out state of an item, in locations that support such actions. This property is not returned by default. Read-only.
	Publication AnyOfmicrosoftGraphPublicationFacet `json:"publication,omitempty"`
	// Remote item data, if the item is shared from a drive other than the one being accessed. Read-only.
	RemoteItem AnyOfmicrosoftGraphRemoteItem `json:"remoteItem,omitempty"`
	// If this property is non-null, it indicates that the driveItem is the top-most driveItem in the drive.
	Root AnyOfobject `json:"root,omitempty"`
	// Search metadata, if the item is from a search result. Read-only.
	SearchResult AnyOfmicrosoftGraphSearchResult `json:"searchResult,omitempty"`
	// Indicates that the item has been shared with others and provides information about the shared state of the item. Read-only.
	Shared AnyOfmicrosoftGraphShared `json:"shared,omitempty"`
	// Returns identifiers useful for SharePoint REST compatibility. Read-only.
	SharepointIds AnyOfmicrosoftGraphSharepointIds `json:"sharepointIds,omitempty"`
	// Size of the item in bytes. Read-only.
	Size NullableInt64 `json:"size,omitempty"`
	// If the current item is also available as a special folder, this facet is returned. Read-only.
	SpecialFolder AnyOfmicrosoftGraphSpecialFolder `json:"specialFolder,omitempty"`
	// Video metadata, if the item is a video. Read-only.
	Video AnyOfmicrosoftGraphVideo `json:"video,omitempty"`
	// WebDAV compatible URL for the item.
	WebDavUrl NullableString `json:"webDavUrl,omitempty"`
	// For files that are Excel spreadsheets, accesses the workbook API to work with the spreadsheet's contents. Nullable.
	Workbook AnyOfmicrosoftGraphWorkbook `json:"workbook,omitempty"`
	// Analytics about the view activities that took place on this item.
	Analytics AnyOfmicrosoftGraphItemAnalytics `json:"analytics,omitempty"`
	// Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable.
	Children *[]MicrosoftGraphDriveItem `json:"children,omitempty"`
	// For drives in SharePoint, the associated document library list item. Read-only. Nullable.
	ListItem AnyOfmicrosoftGraphListItem `json:"listItem,omitempty"`
	// The set of permissions for the item. Read-only. Nullable.
	Permissions *[]MicrosoftGraphPermission `json:"permissions,omitempty"`
	// The set of subscriptions on the item. Only supported on the root of a drive.
	Subscriptions *[]MicrosoftGraphSubscription `json:"subscriptions,omitempty"`
	// Collection containing [ThumbnailSet][] objects associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable.
	Thumbnails *[]MicrosoftGraphThumbnailSet `json:"thumbnails,omitempty"`
	// The list of previous versions of the item. For more info, see [getting previous versions][]. Read-only. Nullable.
	Versions *[]MicrosoftGraphDriveItemVersion `json:"versions,omitempty"`
}

// NewMicrosoftGraphDriveItem instantiates a new MicrosoftGraphDriveItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphDriveItem() *MicrosoftGraphDriveItem {
	this := MicrosoftGraphDriveItem{}
	return &this
}

// NewMicrosoftGraphDriveItemWithDefaults instantiates a new MicrosoftGraphDriveItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphDriveItemWithDefaults() *MicrosoftGraphDriveItem {
	this := MicrosoftGraphDriveItem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphDriveItem) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDriveItem) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphDriveItem) SetId(v string) {
	o.Id = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetCreatedBy() AnyOfmicrosoftGraphIdentitySet {
	if o == nil  {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret
	}
	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetCreatedByOk() (*AnyOfmicrosoftGraphIdentitySet, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given AnyOfmicrosoftGraphIdentitySet and assigns it to the CreatedBy field.
func (o *MicrosoftGraphDriveItem) SetCreatedBy(v AnyOfmicrosoftGraphIdentitySet) {
	o.CreatedBy = v
}

// GetCreatedDateTime returns the CreatedDateTime field value if set, zero value otherwise.
func (o *MicrosoftGraphDriveItem) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDriveItem) GetCreatedDateTimeOk() (*time.Time, bool) {
	if o == nil || o.CreatedDateTime == nil {
		return nil, false
	}
	return o.CreatedDateTime, true
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime != nil {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given time.Time and assigns it to the CreatedDateTime field.
func (o *MicrosoftGraphDriveItem) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *MicrosoftGraphDriveItem) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *MicrosoftGraphDriveItem) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *MicrosoftGraphDriveItem) UnsetDescription() {
	o.Description.Unset()
}

// GetETag returns the ETag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetETag() string {
	if o == nil || o.ETag.Get() == nil {
		var ret string
		return ret
	}
	return *o.ETag.Get()
}

// GetETagOk returns a tuple with the ETag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetETagOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ETag.Get(), o.ETag.IsSet()
}

// HasETag returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasETag() bool {
	if o != nil && o.ETag.IsSet() {
		return true
	}

	return false
}

// SetETag gets a reference to the given NullableString and assigns it to the ETag field.
func (o *MicrosoftGraphDriveItem) SetETag(v string) {
	o.ETag.Set(&v)
}
// SetETagNil sets the value for ETag to be an explicit nil
func (o *MicrosoftGraphDriveItem) SetETagNil() {
	o.ETag.Set(nil)
}

// UnsetETag ensures that no value is present for ETag, not even an explicit nil
func (o *MicrosoftGraphDriveItem) UnsetETag() {
	o.ETag.Unset()
}

// GetLastModifiedBy returns the LastModifiedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetLastModifiedBy() AnyOfmicrosoftGraphIdentitySet {
	if o == nil  {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret
	}
	return o.LastModifiedBy
}

// GetLastModifiedByOk returns a tuple with the LastModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetLastModifiedByOk() (*AnyOfmicrosoftGraphIdentitySet, bool) {
	if o == nil || o.LastModifiedBy == nil {
		return nil, false
	}
	return &o.LastModifiedBy, true
}

// HasLastModifiedBy returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasLastModifiedBy() bool {
	if o != nil && o.LastModifiedBy != nil {
		return true
	}

	return false
}

// SetLastModifiedBy gets a reference to the given AnyOfmicrosoftGraphIdentitySet and assigns it to the LastModifiedBy field.
func (o *MicrosoftGraphDriveItem) SetLastModifiedBy(v AnyOfmicrosoftGraphIdentitySet) {
	o.LastModifiedBy = v
}

// GetLastModifiedDateTime returns the LastModifiedDateTime field value if set, zero value otherwise.
func (o *MicrosoftGraphDriveItem) GetLastModifiedDateTime() time.Time {
	if o == nil || o.LastModifiedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDateTime
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDriveItem) GetLastModifiedDateTimeOk() (*time.Time, bool) {
	if o == nil || o.LastModifiedDateTime == nil {
		return nil, false
	}
	return o.LastModifiedDateTime, true
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasLastModifiedDateTime() bool {
	if o != nil && o.LastModifiedDateTime != nil {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given time.Time and assigns it to the LastModifiedDateTime field.
func (o *MicrosoftGraphDriveItem) SetLastModifiedDateTime(v time.Time) {
	o.LastModifiedDateTime = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *MicrosoftGraphDriveItem) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *MicrosoftGraphDriveItem) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *MicrosoftGraphDriveItem) UnsetName() {
	o.Name.Unset()
}

// GetParentReference returns the ParentReference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetParentReference() AnyOfmicrosoftGraphItemReference {
	if o == nil  {
		var ret AnyOfmicrosoftGraphItemReference
		return ret
	}
	return o.ParentReference
}

// GetParentReferenceOk returns a tuple with the ParentReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetParentReferenceOk() (*AnyOfmicrosoftGraphItemReference, bool) {
	if o == nil || o.ParentReference == nil {
		return nil, false
	}
	return &o.ParentReference, true
}

// HasParentReference returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasParentReference() bool {
	if o != nil && o.ParentReference != nil {
		return true
	}

	return false
}

// SetParentReference gets a reference to the given AnyOfmicrosoftGraphItemReference and assigns it to the ParentReference field.
func (o *MicrosoftGraphDriveItem) SetParentReference(v AnyOfmicrosoftGraphItemReference) {
	o.ParentReference = v
}

// GetWebUrl returns the WebUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetWebUrl() string {
	if o == nil || o.WebUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.WebUrl.Get()
}

// GetWebUrlOk returns a tuple with the WebUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetWebUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.WebUrl.Get(), o.WebUrl.IsSet()
}

// HasWebUrl returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasWebUrl() bool {
	if o != nil && o.WebUrl.IsSet() {
		return true
	}

	return false
}

// SetWebUrl gets a reference to the given NullableString and assigns it to the WebUrl field.
func (o *MicrosoftGraphDriveItem) SetWebUrl(v string) {
	o.WebUrl.Set(&v)
}
// SetWebUrlNil sets the value for WebUrl to be an explicit nil
func (o *MicrosoftGraphDriveItem) SetWebUrlNil() {
	o.WebUrl.Set(nil)
}

// UnsetWebUrl ensures that no value is present for WebUrl, not even an explicit nil
func (o *MicrosoftGraphDriveItem) UnsetWebUrl() {
	o.WebUrl.Unset()
}

// GetCreatedByUser returns the CreatedByUser field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetCreatedByUser() AnyOfmicrosoftGraphUser {
	if o == nil  {
		var ret AnyOfmicrosoftGraphUser
		return ret
	}
	return o.CreatedByUser
}

// GetCreatedByUserOk returns a tuple with the CreatedByUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetCreatedByUserOk() (*AnyOfmicrosoftGraphUser, bool) {
	if o == nil || o.CreatedByUser == nil {
		return nil, false
	}
	return &o.CreatedByUser, true
}

// HasCreatedByUser returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasCreatedByUser() bool {
	if o != nil && o.CreatedByUser != nil {
		return true
	}

	return false
}

// SetCreatedByUser gets a reference to the given AnyOfmicrosoftGraphUser and assigns it to the CreatedByUser field.
func (o *MicrosoftGraphDriveItem) SetCreatedByUser(v AnyOfmicrosoftGraphUser) {
	o.CreatedByUser = v
}

// GetLastModifiedByUser returns the LastModifiedByUser field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetLastModifiedByUser() AnyOfmicrosoftGraphUser {
	if o == nil  {
		var ret AnyOfmicrosoftGraphUser
		return ret
	}
	return o.LastModifiedByUser
}

// GetLastModifiedByUserOk returns a tuple with the LastModifiedByUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetLastModifiedByUserOk() (*AnyOfmicrosoftGraphUser, bool) {
	if o == nil || o.LastModifiedByUser == nil {
		return nil, false
	}
	return &o.LastModifiedByUser, true
}

// HasLastModifiedByUser returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasLastModifiedByUser() bool {
	if o != nil && o.LastModifiedByUser != nil {
		return true
	}

	return false
}

// SetLastModifiedByUser gets a reference to the given AnyOfmicrosoftGraphUser and assigns it to the LastModifiedByUser field.
func (o *MicrosoftGraphDriveItem) SetLastModifiedByUser(v AnyOfmicrosoftGraphUser) {
	o.LastModifiedByUser = v
}

// GetAudio returns the Audio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetAudio() AnyOfmicrosoftGraphAudio {
	if o == nil  {
		var ret AnyOfmicrosoftGraphAudio
		return ret
	}
	return o.Audio
}

// GetAudioOk returns a tuple with the Audio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetAudioOk() (*AnyOfmicrosoftGraphAudio, bool) {
	if o == nil || o.Audio == nil {
		return nil, false
	}
	return &o.Audio, true
}

// HasAudio returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasAudio() bool {
	if o != nil && o.Audio != nil {
		return true
	}

	return false
}

// SetAudio gets a reference to the given AnyOfmicrosoftGraphAudio and assigns it to the Audio field.
func (o *MicrosoftGraphDriveItem) SetAudio(v AnyOfmicrosoftGraphAudio) {
	o.Audio = v
}

// GetBundle returns the Bundle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetBundle() AnyOfmicrosoftGraphBundle {
	if o == nil  {
		var ret AnyOfmicrosoftGraphBundle
		return ret
	}
	return o.Bundle
}

// GetBundleOk returns a tuple with the Bundle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetBundleOk() (*AnyOfmicrosoftGraphBundle, bool) {
	if o == nil || o.Bundle == nil {
		return nil, false
	}
	return &o.Bundle, true
}

// HasBundle returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasBundle() bool {
	if o != nil && o.Bundle != nil {
		return true
	}

	return false
}

// SetBundle gets a reference to the given AnyOfmicrosoftGraphBundle and assigns it to the Bundle field.
func (o *MicrosoftGraphDriveItem) SetBundle(v AnyOfmicrosoftGraphBundle) {
	o.Bundle = v
}

// GetContent returns the Content field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetContent() string {
	if o == nil || o.Content.Get() == nil {
		var ret string
		return ret
	}
	return *o.Content.Get()
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetContentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Content.Get(), o.Content.IsSet()
}

// HasContent returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasContent() bool {
	if o != nil && o.Content.IsSet() {
		return true
	}

	return false
}

// SetContent gets a reference to the given NullableString and assigns it to the Content field.
func (o *MicrosoftGraphDriveItem) SetContent(v string) {
	o.Content.Set(&v)
}
// SetContentNil sets the value for Content to be an explicit nil
func (o *MicrosoftGraphDriveItem) SetContentNil() {
	o.Content.Set(nil)
}

// UnsetContent ensures that no value is present for Content, not even an explicit nil
func (o *MicrosoftGraphDriveItem) UnsetContent() {
	o.Content.Unset()
}

// GetCTag returns the CTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetCTag() string {
	if o == nil || o.CTag.Get() == nil {
		var ret string
		return ret
	}
	return *o.CTag.Get()
}

// GetCTagOk returns a tuple with the CTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetCTagOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CTag.Get(), o.CTag.IsSet()
}

// HasCTag returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasCTag() bool {
	if o != nil && o.CTag.IsSet() {
		return true
	}

	return false
}

// SetCTag gets a reference to the given NullableString and assigns it to the CTag field.
func (o *MicrosoftGraphDriveItem) SetCTag(v string) {
	o.CTag.Set(&v)
}
// SetCTagNil sets the value for CTag to be an explicit nil
func (o *MicrosoftGraphDriveItem) SetCTagNil() {
	o.CTag.Set(nil)
}

// UnsetCTag ensures that no value is present for CTag, not even an explicit nil
func (o *MicrosoftGraphDriveItem) UnsetCTag() {
	o.CTag.Unset()
}

// GetDeleted returns the Deleted field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetDeleted() AnyOfmicrosoftGraphDeleted {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDeleted
		return ret
	}
	return o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetDeletedOk() (*AnyOfmicrosoftGraphDeleted, bool) {
	if o == nil || o.Deleted == nil {
		return nil, false
	}
	return &o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasDeleted() bool {
	if o != nil && o.Deleted != nil {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given AnyOfmicrosoftGraphDeleted and assigns it to the Deleted field.
func (o *MicrosoftGraphDriveItem) SetDeleted(v AnyOfmicrosoftGraphDeleted) {
	o.Deleted = v
}

// GetFile returns the File field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetFile() AnyOfmicrosoftGraphFile {
	if o == nil  {
		var ret AnyOfmicrosoftGraphFile
		return ret
	}
	return o.File
}

// GetFileOk returns a tuple with the File field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetFileOk() (*AnyOfmicrosoftGraphFile, bool) {
	if o == nil || o.File == nil {
		return nil, false
	}
	return &o.File, true
}

// HasFile returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasFile() bool {
	if o != nil && o.File != nil {
		return true
	}

	return false
}

// SetFile gets a reference to the given AnyOfmicrosoftGraphFile and assigns it to the File field.
func (o *MicrosoftGraphDriveItem) SetFile(v AnyOfmicrosoftGraphFile) {
	o.File = v
}

// GetFileSystemInfo returns the FileSystemInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetFileSystemInfo() AnyOfmicrosoftGraphFileSystemInfo {
	if o == nil  {
		var ret AnyOfmicrosoftGraphFileSystemInfo
		return ret
	}
	return o.FileSystemInfo
}

// GetFileSystemInfoOk returns a tuple with the FileSystemInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetFileSystemInfoOk() (*AnyOfmicrosoftGraphFileSystemInfo, bool) {
	if o == nil || o.FileSystemInfo == nil {
		return nil, false
	}
	return &o.FileSystemInfo, true
}

// HasFileSystemInfo returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasFileSystemInfo() bool {
	if o != nil && o.FileSystemInfo != nil {
		return true
	}

	return false
}

// SetFileSystemInfo gets a reference to the given AnyOfmicrosoftGraphFileSystemInfo and assigns it to the FileSystemInfo field.
func (o *MicrosoftGraphDriveItem) SetFileSystemInfo(v AnyOfmicrosoftGraphFileSystemInfo) {
	o.FileSystemInfo = v
}

// GetFolder returns the Folder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetFolder() AnyOfmicrosoftGraphFolder {
	if o == nil  {
		var ret AnyOfmicrosoftGraphFolder
		return ret
	}
	return o.Folder
}

// GetFolderOk returns a tuple with the Folder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetFolderOk() (*AnyOfmicrosoftGraphFolder, bool) {
	if o == nil || o.Folder == nil {
		return nil, false
	}
	return &o.Folder, true
}

// HasFolder returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasFolder() bool {
	if o != nil && o.Folder != nil {
		return true
	}

	return false
}

// SetFolder gets a reference to the given AnyOfmicrosoftGraphFolder and assigns it to the Folder field.
func (o *MicrosoftGraphDriveItem) SetFolder(v AnyOfmicrosoftGraphFolder) {
	o.Folder = v
}

// GetImage returns the Image field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetImage() AnyOfmicrosoftGraphImage {
	if o == nil  {
		var ret AnyOfmicrosoftGraphImage
		return ret
	}
	return o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetImageOk() (*AnyOfmicrosoftGraphImage, bool) {
	if o == nil || o.Image == nil {
		return nil, false
	}
	return &o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasImage() bool {
	if o != nil && o.Image != nil {
		return true
	}

	return false
}

// SetImage gets a reference to the given AnyOfmicrosoftGraphImage and assigns it to the Image field.
func (o *MicrosoftGraphDriveItem) SetImage(v AnyOfmicrosoftGraphImage) {
	o.Image = v
}

// GetLocation returns the Location field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetLocation() AnyOfmicrosoftGraphGeoCoordinates {
	if o == nil  {
		var ret AnyOfmicrosoftGraphGeoCoordinates
		return ret
	}
	return o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetLocationOk() (*AnyOfmicrosoftGraphGeoCoordinates, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return &o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given AnyOfmicrosoftGraphGeoCoordinates and assigns it to the Location field.
func (o *MicrosoftGraphDriveItem) SetLocation(v AnyOfmicrosoftGraphGeoCoordinates) {
	o.Location = v
}

// GetMalware returns the Malware field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetMalware() AnyOfmicrosoftGraphMalware {
	if o == nil  {
		var ret AnyOfmicrosoftGraphMalware
		return ret
	}
	return o.Malware
}

// GetMalwareOk returns a tuple with the Malware field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetMalwareOk() (*AnyOfmicrosoftGraphMalware, bool) {
	if o == nil || o.Malware == nil {
		return nil, false
	}
	return &o.Malware, true
}

// HasMalware returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasMalware() bool {
	if o != nil && o.Malware != nil {
		return true
	}

	return false
}

// SetMalware gets a reference to the given AnyOfmicrosoftGraphMalware and assigns it to the Malware field.
func (o *MicrosoftGraphDriveItem) SetMalware(v AnyOfmicrosoftGraphMalware) {
	o.Malware = v
}

// GetPackage returns the Package field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetPackage() AnyOfmicrosoftGraphPackage {
	if o == nil  {
		var ret AnyOfmicrosoftGraphPackage
		return ret
	}
	return o.Package
}

// GetPackageOk returns a tuple with the Package field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetPackageOk() (*AnyOfmicrosoftGraphPackage, bool) {
	if o == nil || o.Package == nil {
		return nil, false
	}
	return &o.Package, true
}

// HasPackage returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasPackage() bool {
	if o != nil && o.Package != nil {
		return true
	}

	return false
}

// SetPackage gets a reference to the given AnyOfmicrosoftGraphPackage and assigns it to the Package field.
func (o *MicrosoftGraphDriveItem) SetPackage(v AnyOfmicrosoftGraphPackage) {
	o.Package = v
}

// GetPendingOperations returns the PendingOperations field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetPendingOperations() AnyOfmicrosoftGraphPendingOperations {
	if o == nil  {
		var ret AnyOfmicrosoftGraphPendingOperations
		return ret
	}
	return o.PendingOperations
}

// GetPendingOperationsOk returns a tuple with the PendingOperations field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetPendingOperationsOk() (*AnyOfmicrosoftGraphPendingOperations, bool) {
	if o == nil || o.PendingOperations == nil {
		return nil, false
	}
	return &o.PendingOperations, true
}

// HasPendingOperations returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasPendingOperations() bool {
	if o != nil && o.PendingOperations != nil {
		return true
	}

	return false
}

// SetPendingOperations gets a reference to the given AnyOfmicrosoftGraphPendingOperations and assigns it to the PendingOperations field.
func (o *MicrosoftGraphDriveItem) SetPendingOperations(v AnyOfmicrosoftGraphPendingOperations) {
	o.PendingOperations = v
}

// GetPhoto returns the Photo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetPhoto() AnyOfmicrosoftGraphPhoto {
	if o == nil  {
		var ret AnyOfmicrosoftGraphPhoto
		return ret
	}
	return o.Photo
}

// GetPhotoOk returns a tuple with the Photo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetPhotoOk() (*AnyOfmicrosoftGraphPhoto, bool) {
	if o == nil || o.Photo == nil {
		return nil, false
	}
	return &o.Photo, true
}

// HasPhoto returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasPhoto() bool {
	if o != nil && o.Photo != nil {
		return true
	}

	return false
}

// SetPhoto gets a reference to the given AnyOfmicrosoftGraphPhoto and assigns it to the Photo field.
func (o *MicrosoftGraphDriveItem) SetPhoto(v AnyOfmicrosoftGraphPhoto) {
	o.Photo = v
}

// GetPublication returns the Publication field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetPublication() AnyOfmicrosoftGraphPublicationFacet {
	if o == nil  {
		var ret AnyOfmicrosoftGraphPublicationFacet
		return ret
	}
	return o.Publication
}

// GetPublicationOk returns a tuple with the Publication field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetPublicationOk() (*AnyOfmicrosoftGraphPublicationFacet, bool) {
	if o == nil || o.Publication == nil {
		return nil, false
	}
	return &o.Publication, true
}

// HasPublication returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasPublication() bool {
	if o != nil && o.Publication != nil {
		return true
	}

	return false
}

// SetPublication gets a reference to the given AnyOfmicrosoftGraphPublicationFacet and assigns it to the Publication field.
func (o *MicrosoftGraphDriveItem) SetPublication(v AnyOfmicrosoftGraphPublicationFacet) {
	o.Publication = v
}

// GetRemoteItem returns the RemoteItem field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetRemoteItem() AnyOfmicrosoftGraphRemoteItem {
	if o == nil  {
		var ret AnyOfmicrosoftGraphRemoteItem
		return ret
	}
	return o.RemoteItem
}

// GetRemoteItemOk returns a tuple with the RemoteItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetRemoteItemOk() (*AnyOfmicrosoftGraphRemoteItem, bool) {
	if o == nil || o.RemoteItem == nil {
		return nil, false
	}
	return &o.RemoteItem, true
}

// HasRemoteItem returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasRemoteItem() bool {
	if o != nil && o.RemoteItem != nil {
		return true
	}

	return false
}

// SetRemoteItem gets a reference to the given AnyOfmicrosoftGraphRemoteItem and assigns it to the RemoteItem field.
func (o *MicrosoftGraphDriveItem) SetRemoteItem(v AnyOfmicrosoftGraphRemoteItem) {
	o.RemoteItem = v
}

// GetRoot returns the Root field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetRoot() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Root
}

// GetRootOk returns a tuple with the Root field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetRootOk() (*AnyOfobject, bool) {
	if o == nil || o.Root == nil {
		return nil, false
	}
	return &o.Root, true
}

// HasRoot returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasRoot() bool {
	if o != nil && o.Root != nil {
		return true
	}

	return false
}

// SetRoot gets a reference to the given AnyOfobject and assigns it to the Root field.
func (o *MicrosoftGraphDriveItem) SetRoot(v AnyOfobject) {
	o.Root = v
}

// GetSearchResult returns the SearchResult field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetSearchResult() AnyOfmicrosoftGraphSearchResult {
	if o == nil  {
		var ret AnyOfmicrosoftGraphSearchResult
		return ret
	}
	return o.SearchResult
}

// GetSearchResultOk returns a tuple with the SearchResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetSearchResultOk() (*AnyOfmicrosoftGraphSearchResult, bool) {
	if o == nil || o.SearchResult == nil {
		return nil, false
	}
	return &o.SearchResult, true
}

// HasSearchResult returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasSearchResult() bool {
	if o != nil && o.SearchResult != nil {
		return true
	}

	return false
}

// SetSearchResult gets a reference to the given AnyOfmicrosoftGraphSearchResult and assigns it to the SearchResult field.
func (o *MicrosoftGraphDriveItem) SetSearchResult(v AnyOfmicrosoftGraphSearchResult) {
	o.SearchResult = v
}

// GetShared returns the Shared field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetShared() AnyOfmicrosoftGraphShared {
	if o == nil  {
		var ret AnyOfmicrosoftGraphShared
		return ret
	}
	return o.Shared
}

// GetSharedOk returns a tuple with the Shared field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetSharedOk() (*AnyOfmicrosoftGraphShared, bool) {
	if o == nil || o.Shared == nil {
		return nil, false
	}
	return &o.Shared, true
}

// HasShared returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasShared() bool {
	if o != nil && o.Shared != nil {
		return true
	}

	return false
}

// SetShared gets a reference to the given AnyOfmicrosoftGraphShared and assigns it to the Shared field.
func (o *MicrosoftGraphDriveItem) SetShared(v AnyOfmicrosoftGraphShared) {
	o.Shared = v
}

// GetSharepointIds returns the SharepointIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetSharepointIds() AnyOfmicrosoftGraphSharepointIds {
	if o == nil  {
		var ret AnyOfmicrosoftGraphSharepointIds
		return ret
	}
	return o.SharepointIds
}

// GetSharepointIdsOk returns a tuple with the SharepointIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetSharepointIdsOk() (*AnyOfmicrosoftGraphSharepointIds, bool) {
	if o == nil || o.SharepointIds == nil {
		return nil, false
	}
	return &o.SharepointIds, true
}

// HasSharepointIds returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasSharepointIds() bool {
	if o != nil && o.SharepointIds != nil {
		return true
	}

	return false
}

// SetSharepointIds gets a reference to the given AnyOfmicrosoftGraphSharepointIds and assigns it to the SharepointIds field.
func (o *MicrosoftGraphDriveItem) SetSharepointIds(v AnyOfmicrosoftGraphSharepointIds) {
	o.SharepointIds = v
}

// GetSize returns the Size field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetSize() int64 {
	if o == nil || o.Size.Get() == nil {
		var ret int64
		return ret
	}
	return *o.Size.Get()
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetSizeOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Size.Get(), o.Size.IsSet()
}

// HasSize returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasSize() bool {
	if o != nil && o.Size.IsSet() {
		return true
	}

	return false
}

// SetSize gets a reference to the given NullableInt64 and assigns it to the Size field.
func (o *MicrosoftGraphDriveItem) SetSize(v int64) {
	o.Size.Set(&v)
}
// SetSizeNil sets the value for Size to be an explicit nil
func (o *MicrosoftGraphDriveItem) SetSizeNil() {
	o.Size.Set(nil)
}

// UnsetSize ensures that no value is present for Size, not even an explicit nil
func (o *MicrosoftGraphDriveItem) UnsetSize() {
	o.Size.Unset()
}

// GetSpecialFolder returns the SpecialFolder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetSpecialFolder() AnyOfmicrosoftGraphSpecialFolder {
	if o == nil  {
		var ret AnyOfmicrosoftGraphSpecialFolder
		return ret
	}
	return o.SpecialFolder
}

// GetSpecialFolderOk returns a tuple with the SpecialFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetSpecialFolderOk() (*AnyOfmicrosoftGraphSpecialFolder, bool) {
	if o == nil || o.SpecialFolder == nil {
		return nil, false
	}
	return &o.SpecialFolder, true
}

// HasSpecialFolder returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasSpecialFolder() bool {
	if o != nil && o.SpecialFolder != nil {
		return true
	}

	return false
}

// SetSpecialFolder gets a reference to the given AnyOfmicrosoftGraphSpecialFolder and assigns it to the SpecialFolder field.
func (o *MicrosoftGraphDriveItem) SetSpecialFolder(v AnyOfmicrosoftGraphSpecialFolder) {
	o.SpecialFolder = v
}

// GetVideo returns the Video field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetVideo() AnyOfmicrosoftGraphVideo {
	if o == nil  {
		var ret AnyOfmicrosoftGraphVideo
		return ret
	}
	return o.Video
}

// GetVideoOk returns a tuple with the Video field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetVideoOk() (*AnyOfmicrosoftGraphVideo, bool) {
	if o == nil || o.Video == nil {
		return nil, false
	}
	return &o.Video, true
}

// HasVideo returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasVideo() bool {
	if o != nil && o.Video != nil {
		return true
	}

	return false
}

// SetVideo gets a reference to the given AnyOfmicrosoftGraphVideo and assigns it to the Video field.
func (o *MicrosoftGraphDriveItem) SetVideo(v AnyOfmicrosoftGraphVideo) {
	o.Video = v
}

// GetWebDavUrl returns the WebDavUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetWebDavUrl() string {
	if o == nil || o.WebDavUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.WebDavUrl.Get()
}

// GetWebDavUrlOk returns a tuple with the WebDavUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetWebDavUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.WebDavUrl.Get(), o.WebDavUrl.IsSet()
}

// HasWebDavUrl returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasWebDavUrl() bool {
	if o != nil && o.WebDavUrl.IsSet() {
		return true
	}

	return false
}

// SetWebDavUrl gets a reference to the given NullableString and assigns it to the WebDavUrl field.
func (o *MicrosoftGraphDriveItem) SetWebDavUrl(v string) {
	o.WebDavUrl.Set(&v)
}
// SetWebDavUrlNil sets the value for WebDavUrl to be an explicit nil
func (o *MicrosoftGraphDriveItem) SetWebDavUrlNil() {
	o.WebDavUrl.Set(nil)
}

// UnsetWebDavUrl ensures that no value is present for WebDavUrl, not even an explicit nil
func (o *MicrosoftGraphDriveItem) UnsetWebDavUrl() {
	o.WebDavUrl.Unset()
}

// GetWorkbook returns the Workbook field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetWorkbook() AnyOfmicrosoftGraphWorkbook {
	if o == nil  {
		var ret AnyOfmicrosoftGraphWorkbook
		return ret
	}
	return o.Workbook
}

// GetWorkbookOk returns a tuple with the Workbook field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetWorkbookOk() (*AnyOfmicrosoftGraphWorkbook, bool) {
	if o == nil || o.Workbook == nil {
		return nil, false
	}
	return &o.Workbook, true
}

// HasWorkbook returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasWorkbook() bool {
	if o != nil && o.Workbook != nil {
		return true
	}

	return false
}

// SetWorkbook gets a reference to the given AnyOfmicrosoftGraphWorkbook and assigns it to the Workbook field.
func (o *MicrosoftGraphDriveItem) SetWorkbook(v AnyOfmicrosoftGraphWorkbook) {
	o.Workbook = v
}

// GetAnalytics returns the Analytics field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetAnalytics() AnyOfmicrosoftGraphItemAnalytics {
	if o == nil  {
		var ret AnyOfmicrosoftGraphItemAnalytics
		return ret
	}
	return o.Analytics
}

// GetAnalyticsOk returns a tuple with the Analytics field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetAnalyticsOk() (*AnyOfmicrosoftGraphItemAnalytics, bool) {
	if o == nil || o.Analytics == nil {
		return nil, false
	}
	return &o.Analytics, true
}

// HasAnalytics returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasAnalytics() bool {
	if o != nil && o.Analytics != nil {
		return true
	}

	return false
}

// SetAnalytics gets a reference to the given AnyOfmicrosoftGraphItemAnalytics and assigns it to the Analytics field.
func (o *MicrosoftGraphDriveItem) SetAnalytics(v AnyOfmicrosoftGraphItemAnalytics) {
	o.Analytics = v
}

// GetChildren returns the Children field value if set, zero value otherwise.
func (o *MicrosoftGraphDriveItem) GetChildren() []MicrosoftGraphDriveItem {
	if o == nil || o.Children == nil {
		var ret []MicrosoftGraphDriveItem
		return ret
	}
	return *o.Children
}

// GetChildrenOk returns a tuple with the Children field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDriveItem) GetChildrenOk() (*[]MicrosoftGraphDriveItem, bool) {
	if o == nil || o.Children == nil {
		return nil, false
	}
	return o.Children, true
}

// HasChildren returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasChildren() bool {
	if o != nil && o.Children != nil {
		return true
	}

	return false
}

// SetChildren gets a reference to the given []MicrosoftGraphDriveItem and assigns it to the Children field.
func (o *MicrosoftGraphDriveItem) SetChildren(v []MicrosoftGraphDriveItem) {
	o.Children = &v
}

// GetListItem returns the ListItem field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDriveItem) GetListItem() AnyOfmicrosoftGraphListItem {
	if o == nil  {
		var ret AnyOfmicrosoftGraphListItem
		return ret
	}
	return o.ListItem
}

// GetListItemOk returns a tuple with the ListItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDriveItem) GetListItemOk() (*AnyOfmicrosoftGraphListItem, bool) {
	if o == nil || o.ListItem == nil {
		return nil, false
	}
	return &o.ListItem, true
}

// HasListItem returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasListItem() bool {
	if o != nil && o.ListItem != nil {
		return true
	}

	return false
}

// SetListItem gets a reference to the given AnyOfmicrosoftGraphListItem and assigns it to the ListItem field.
func (o *MicrosoftGraphDriveItem) SetListItem(v AnyOfmicrosoftGraphListItem) {
	o.ListItem = v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *MicrosoftGraphDriveItem) GetPermissions() []MicrosoftGraphPermission {
	if o == nil || o.Permissions == nil {
		var ret []MicrosoftGraphPermission
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDriveItem) GetPermissionsOk() (*[]MicrosoftGraphPermission, bool) {
	if o == nil || o.Permissions == nil {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasPermissions() bool {
	if o != nil && o.Permissions != nil {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []MicrosoftGraphPermission and assigns it to the Permissions field.
func (o *MicrosoftGraphDriveItem) SetPermissions(v []MicrosoftGraphPermission) {
	o.Permissions = &v
}

// GetSubscriptions returns the Subscriptions field value if set, zero value otherwise.
func (o *MicrosoftGraphDriveItem) GetSubscriptions() []MicrosoftGraphSubscription {
	if o == nil || o.Subscriptions == nil {
		var ret []MicrosoftGraphSubscription
		return ret
	}
	return *o.Subscriptions
}

// GetSubscriptionsOk returns a tuple with the Subscriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDriveItem) GetSubscriptionsOk() (*[]MicrosoftGraphSubscription, bool) {
	if o == nil || o.Subscriptions == nil {
		return nil, false
	}
	return o.Subscriptions, true
}

// HasSubscriptions returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasSubscriptions() bool {
	if o != nil && o.Subscriptions != nil {
		return true
	}

	return false
}

// SetSubscriptions gets a reference to the given []MicrosoftGraphSubscription and assigns it to the Subscriptions field.
func (o *MicrosoftGraphDriveItem) SetSubscriptions(v []MicrosoftGraphSubscription) {
	o.Subscriptions = &v
}

// GetThumbnails returns the Thumbnails field value if set, zero value otherwise.
func (o *MicrosoftGraphDriveItem) GetThumbnails() []MicrosoftGraphThumbnailSet {
	if o == nil || o.Thumbnails == nil {
		var ret []MicrosoftGraphThumbnailSet
		return ret
	}
	return *o.Thumbnails
}

// GetThumbnailsOk returns a tuple with the Thumbnails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDriveItem) GetThumbnailsOk() (*[]MicrosoftGraphThumbnailSet, bool) {
	if o == nil || o.Thumbnails == nil {
		return nil, false
	}
	return o.Thumbnails, true
}

// HasThumbnails returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasThumbnails() bool {
	if o != nil && o.Thumbnails != nil {
		return true
	}

	return false
}

// SetThumbnails gets a reference to the given []MicrosoftGraphThumbnailSet and assigns it to the Thumbnails field.
func (o *MicrosoftGraphDriveItem) SetThumbnails(v []MicrosoftGraphThumbnailSet) {
	o.Thumbnails = &v
}

// GetVersions returns the Versions field value if set, zero value otherwise.
func (o *MicrosoftGraphDriveItem) GetVersions() []MicrosoftGraphDriveItemVersion {
	if o == nil || o.Versions == nil {
		var ret []MicrosoftGraphDriveItemVersion
		return ret
	}
	return *o.Versions
}

// GetVersionsOk returns a tuple with the Versions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDriveItem) GetVersionsOk() (*[]MicrosoftGraphDriveItemVersion, bool) {
	if o == nil || o.Versions == nil {
		return nil, false
	}
	return o.Versions, true
}

// HasVersions returns a boolean if a field has been set.
func (o *MicrosoftGraphDriveItem) HasVersions() bool {
	if o != nil && o.Versions != nil {
		return true
	}

	return false
}

// SetVersions gets a reference to the given []MicrosoftGraphDriveItemVersion and assigns it to the Versions field.
func (o *MicrosoftGraphDriveItem) SetVersions(v []MicrosoftGraphDriveItemVersion) {
	o.Versions = &v
}

func (o MicrosoftGraphDriveItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.CreatedDateTime != nil {
		toSerialize["createdDateTime"] = o.CreatedDateTime
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.ETag.IsSet() {
		toSerialize["eTag"] = o.ETag.Get()
	}
	if o.LastModifiedBy != nil {
		toSerialize["lastModifiedBy"] = o.LastModifiedBy
	}
	if o.LastModifiedDateTime != nil {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.ParentReference != nil {
		toSerialize["parentReference"] = o.ParentReference
	}
	if o.WebUrl.IsSet() {
		toSerialize["webUrl"] = o.WebUrl.Get()
	}
	if o.CreatedByUser != nil {
		toSerialize["createdByUser"] = o.CreatedByUser
	}
	if o.LastModifiedByUser != nil {
		toSerialize["lastModifiedByUser"] = o.LastModifiedByUser
	}
	if o.Audio != nil {
		toSerialize["audio"] = o.Audio
	}
	if o.Bundle != nil {
		toSerialize["bundle"] = o.Bundle
	}
	if o.Content.IsSet() {
		toSerialize["content"] = o.Content.Get()
	}
	if o.CTag.IsSet() {
		toSerialize["cTag"] = o.CTag.Get()
	}
	if o.Deleted != nil {
		toSerialize["deleted"] = o.Deleted
	}
	if o.File != nil {
		toSerialize["file"] = o.File
	}
	if o.FileSystemInfo != nil {
		toSerialize["fileSystemInfo"] = o.FileSystemInfo
	}
	if o.Folder != nil {
		toSerialize["folder"] = o.Folder
	}
	if o.Image != nil {
		toSerialize["image"] = o.Image
	}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.Malware != nil {
		toSerialize["malware"] = o.Malware
	}
	if o.Package != nil {
		toSerialize["package"] = o.Package
	}
	if o.PendingOperations != nil {
		toSerialize["pendingOperations"] = o.PendingOperations
	}
	if o.Photo != nil {
		toSerialize["photo"] = o.Photo
	}
	if o.Publication != nil {
		toSerialize["publication"] = o.Publication
	}
	if o.RemoteItem != nil {
		toSerialize["remoteItem"] = o.RemoteItem
	}
	if o.Root != nil {
		toSerialize["root"] = o.Root
	}
	if o.SearchResult != nil {
		toSerialize["searchResult"] = o.SearchResult
	}
	if o.Shared != nil {
		toSerialize["shared"] = o.Shared
	}
	if o.SharepointIds != nil {
		toSerialize["sharepointIds"] = o.SharepointIds
	}
	if o.Size.IsSet() {
		toSerialize["size"] = o.Size.Get()
	}
	if o.SpecialFolder != nil {
		toSerialize["specialFolder"] = o.SpecialFolder
	}
	if o.Video != nil {
		toSerialize["video"] = o.Video
	}
	if o.WebDavUrl.IsSet() {
		toSerialize["webDavUrl"] = o.WebDavUrl.Get()
	}
	if o.Workbook != nil {
		toSerialize["workbook"] = o.Workbook
	}
	if o.Analytics != nil {
		toSerialize["analytics"] = o.Analytics
	}
	if o.Children != nil {
		toSerialize["children"] = o.Children
	}
	if o.ListItem != nil {
		toSerialize["listItem"] = o.ListItem
	}
	if o.Permissions != nil {
		toSerialize["permissions"] = o.Permissions
	}
	if o.Subscriptions != nil {
		toSerialize["subscriptions"] = o.Subscriptions
	}
	if o.Thumbnails != nil {
		toSerialize["thumbnails"] = o.Thumbnails
	}
	if o.Versions != nil {
		toSerialize["versions"] = o.Versions
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphDriveItem struct {
	value *MicrosoftGraphDriveItem
	isSet bool
}

func (v NullableMicrosoftGraphDriveItem) Get() *MicrosoftGraphDriveItem {
	return v.value
}

func (v *NullableMicrosoftGraphDriveItem) Set(val *MicrosoftGraphDriveItem) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphDriveItem) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphDriveItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphDriveItem(val *MicrosoftGraphDriveItem) *NullableMicrosoftGraphDriveItem {
	return &NullableMicrosoftGraphDriveItem{value: val, isSet: true}
}

func (v NullableMicrosoftGraphDriveItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphDriveItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


