/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphMdmWindowsInformationProtectionPolicy struct for MicrosoftGraphMdmWindowsInformationProtectionPolicy
type MicrosoftGraphMdmWindowsInformationProtectionPolicy struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// The date and time the policy was created.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// The policy's description.
	Description NullableString `json:"description,omitempty"`
	// Policy display name.
	DisplayName *string `json:"displayName,omitempty"`
	// Last time the policy was modified.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// Version of the entity.
	Version NullableString `json:"version,omitempty"`
	// Specifies whether to allow Azure RMS encryption for WIP
	AzureRightsManagementServicesAllowed *bool `json:"azureRightsManagementServicesAllowed,omitempty"`
	// Specifies a recovery certificate that can be used for data recovery of encrypted files. This is the same as the data recovery agent(DRA) certificate for encrypting file system(EFS)
	DataRecoveryCertificate AnyOfmicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate `json:"dataRecoveryCertificate,omitempty"`
	// WIP enforcement level.See the Enum definition for supported values. Possible values are: noProtection, encryptAndAuditOnly, encryptAuditAndPrompt, encryptAuditAndBlock.
	EnforcementLevel AnyOfmicrosoftGraphWindowsInformationProtectionEnforcementLevel `json:"enforcementLevel,omitempty"`
	// Primary enterprise domain
	EnterpriseDomain NullableString `json:"enterpriseDomain,omitempty"`
	// This is the comma-separated list of internal proxy servers. For example, '157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59'. These proxies have been configured by the admin to connect to specific resources on the Internet. They are considered to be enterprise network locations. The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies
	EnterpriseInternalProxyServers *[]*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection `json:"enterpriseInternalProxyServers,omitempty"`
	// Sets the enterprise IP ranges that define the computers in the enterprise network. Data that comes from those computers will be considered part of the enterprise and protected. These locations will be considered a safe destination for enterprise data to be shared to
	EnterpriseIPRanges *[]*AnyOfmicrosoftGraphWindowsInformationProtectionIPRangeCollection `json:"enterpriseIPRanges,omitempty"`
	// Boolean value that tells the client to accept the configured list and not to use heuristics to attempt to find other subnets. Default is false
	EnterpriseIPRangesAreAuthoritative *bool `json:"enterpriseIPRangesAreAuthoritative,omitempty"`
	// This is the list of domains that comprise the boundaries of the enterprise. Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to
	EnterpriseNetworkDomainNames *[]*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection `json:"enterpriseNetworkDomainNames,omitempty"`
	// List of enterprise domains to be protected
	EnterpriseProtectedDomainNames *[]*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection `json:"enterpriseProtectedDomainNames,omitempty"`
	// Contains a list of Enterprise resource domains hosted in the cloud that need to be protected. Connections to these resources are considered enterprise data. If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80). A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy
	EnterpriseProxiedDomains *[]*AnyOfmicrosoftGraphWindowsInformationProtectionProxiedDomainCollection `json:"enterpriseProxiedDomains,omitempty"`
	// This is a list of proxy servers. Any server not on this list is considered non-enterprise
	EnterpriseProxyServers *[]*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection `json:"enterpriseProxyServers,omitempty"`
	// Boolean value that tells the client to accept the configured list of proxies and not try to detect other work proxies. Default is false
	EnterpriseProxyServersAreAuthoritative *bool `json:"enterpriseProxyServersAreAuthoritative,omitempty"`
	// Exempt applications can also access enterprise data, but the data handled by those applications are not protected. This is because some critical enterprise applications may have compatibility problems with encrypted data.
	ExemptApps *[]*AnyOfmicrosoftGraphWindowsInformationProtectionApp `json:"exemptApps,omitempty"`
	// Determines whether overlays are added to icons for WIP protected files in Explorer and enterprise only app tiles in the Start menu. Starting in Windows 10, version 1703 this setting also configures the visibility of the WIP icon in the title bar of a WIP-protected app
	IconsVisible *bool `json:"iconsVisible,omitempty"`
	// This switch is for the Windows Search Indexer, to allow or disallow indexing of items
	IndexingEncryptedStoresOrItemsBlocked *bool `json:"indexingEncryptedStoresOrItemsBlocked,omitempty"`
	// Indicates if the policy is deployed to any inclusion groups or not.
	IsAssigned *bool `json:"isAssigned,omitempty"`
	// List of domain names that can used for work or personal resource
	NeutralDomainResources *[]*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection `json:"neutralDomainResources,omitempty"`
	// Protected applications can access enterprise data and the data handled by those applications are protected with encryption
	ProtectedApps *[]*AnyOfmicrosoftGraphWindowsInformationProtectionApp `json:"protectedApps,omitempty"`
	// Specifies whether the protection under lock feature (also known as encrypt under pin) should be configured
	ProtectionUnderLockConfigRequired *bool `json:"protectionUnderLockConfigRequired,omitempty"`
	// This policy controls whether to revoke the WIP keys when a device unenrolls from the management service. If set to 1 (Don't revoke keys), the keys will not be revoked and the user will continue to have access to protected files after unenrollment. If the keys are not revoked, there will be no revoked file cleanup subsequently.
	RevokeOnUnenrollDisabled *bool `json:"revokeOnUnenrollDisabled,omitempty"`
	// TemplateID GUID to use for RMS encryption. The RMS template allows the IT admin to configure the details about who has access to RMS-protected file and how long they have access
	RightsManagementServicesTemplateId NullableString `json:"rightsManagementServicesTemplateId,omitempty"`
	// Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary
	SmbAutoEncryptedFileExtensions *[]*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection `json:"smbAutoEncryptedFileExtensions,omitempty"`
	// Navigation property to list of security groups targeted for policy.
	Assignments *[]MicrosoftGraphTargetedManagedAppPolicyAssignment `json:"assignments,omitempty"`
	// Another way to input exempt apps through xml files
	ExemptAppLockerFiles *[]MicrosoftGraphWindowsInformationProtectionAppLockerFile `json:"exemptAppLockerFiles,omitempty"`
	// Another way to input protected apps through xml files
	ProtectedAppLockerFiles *[]MicrosoftGraphWindowsInformationProtectionAppLockerFile `json:"protectedAppLockerFiles,omitempty"`
}

// NewMicrosoftGraphMdmWindowsInformationProtectionPolicy instantiates a new MicrosoftGraphMdmWindowsInformationProtectionPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphMdmWindowsInformationProtectionPolicy() *MicrosoftGraphMdmWindowsInformationProtectionPolicy {
	this := MicrosoftGraphMdmWindowsInformationProtectionPolicy{}
	return &this
}

// NewMicrosoftGraphMdmWindowsInformationProtectionPolicyWithDefaults instantiates a new MicrosoftGraphMdmWindowsInformationProtectionPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphMdmWindowsInformationProtectionPolicyWithDefaults() *MicrosoftGraphMdmWindowsInformationProtectionPolicy {
	this := MicrosoftGraphMdmWindowsInformationProtectionPolicy{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetId(v string) {
	o.Id = &v
}

// GetCreatedDateTime returns the CreatedDateTime field value if set, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetCreatedDateTimeOk() (*time.Time, bool) {
	if o == nil || o.CreatedDateTime == nil {
		return nil, false
	}
	return o.CreatedDateTime, true
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime != nil {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given time.Time and assigns it to the CreatedDateTime field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) UnsetDescription() {
	o.Description.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetLastModifiedDateTime returns the LastModifiedDateTime field value if set, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetLastModifiedDateTime() time.Time {
	if o == nil || o.LastModifiedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDateTime
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetLastModifiedDateTimeOk() (*time.Time, bool) {
	if o == nil || o.LastModifiedDateTime == nil {
		return nil, false
	}
	return o.LastModifiedDateTime, true
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasLastModifiedDateTime() bool {
	if o != nil && o.LastModifiedDateTime != nil {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given time.Time and assigns it to the LastModifiedDateTime field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetLastModifiedDateTime(v time.Time) {
	o.LastModifiedDateTime = &v
}

// GetVersion returns the Version field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetVersion() string {
	if o == nil || o.Version.Get() == nil {
		var ret string
		return ret
	}
	return *o.Version.Get()
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Version.Get(), o.Version.IsSet()
}

// HasVersion returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasVersion() bool {
	if o != nil && o.Version.IsSet() {
		return true
	}

	return false
}

// SetVersion gets a reference to the given NullableString and assigns it to the Version field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetVersion(v string) {
	o.Version.Set(&v)
}
// SetVersionNil sets the value for Version to be an explicit nil
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetVersionNil() {
	o.Version.Set(nil)
}

// UnsetVersion ensures that no value is present for Version, not even an explicit nil
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) UnsetVersion() {
	o.Version.Unset()
}

// GetAzureRightsManagementServicesAllowed returns the AzureRightsManagementServicesAllowed field value if set, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetAzureRightsManagementServicesAllowed() bool {
	if o == nil || o.AzureRightsManagementServicesAllowed == nil {
		var ret bool
		return ret
	}
	return *o.AzureRightsManagementServicesAllowed
}

// GetAzureRightsManagementServicesAllowedOk returns a tuple with the AzureRightsManagementServicesAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetAzureRightsManagementServicesAllowedOk() (*bool, bool) {
	if o == nil || o.AzureRightsManagementServicesAllowed == nil {
		return nil, false
	}
	return o.AzureRightsManagementServicesAllowed, true
}

// HasAzureRightsManagementServicesAllowed returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasAzureRightsManagementServicesAllowed() bool {
	if o != nil && o.AzureRightsManagementServicesAllowed != nil {
		return true
	}

	return false
}

// SetAzureRightsManagementServicesAllowed gets a reference to the given bool and assigns it to the AzureRightsManagementServicesAllowed field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetAzureRightsManagementServicesAllowed(v bool) {
	o.AzureRightsManagementServicesAllowed = &v
}

// GetDataRecoveryCertificate returns the DataRecoveryCertificate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetDataRecoveryCertificate() AnyOfmicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate {
	if o == nil  {
		var ret AnyOfmicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate
		return ret
	}
	return o.DataRecoveryCertificate
}

// GetDataRecoveryCertificateOk returns a tuple with the DataRecoveryCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetDataRecoveryCertificateOk() (*AnyOfmicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate, bool) {
	if o == nil || o.DataRecoveryCertificate == nil {
		return nil, false
	}
	return &o.DataRecoveryCertificate, true
}

// HasDataRecoveryCertificate returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasDataRecoveryCertificate() bool {
	if o != nil && o.DataRecoveryCertificate != nil {
		return true
	}

	return false
}

// SetDataRecoveryCertificate gets a reference to the given AnyOfmicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate and assigns it to the DataRecoveryCertificate field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetDataRecoveryCertificate(v AnyOfmicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate) {
	o.DataRecoveryCertificate = v
}

// GetEnforcementLevel returns the EnforcementLevel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnforcementLevel() AnyOfmicrosoftGraphWindowsInformationProtectionEnforcementLevel {
	if o == nil  {
		var ret AnyOfmicrosoftGraphWindowsInformationProtectionEnforcementLevel
		return ret
	}
	return o.EnforcementLevel
}

// GetEnforcementLevelOk returns a tuple with the EnforcementLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnforcementLevelOk() (*AnyOfmicrosoftGraphWindowsInformationProtectionEnforcementLevel, bool) {
	if o == nil || o.EnforcementLevel == nil {
		return nil, false
	}
	return &o.EnforcementLevel, true
}

// HasEnforcementLevel returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasEnforcementLevel() bool {
	if o != nil && o.EnforcementLevel != nil {
		return true
	}

	return false
}

// SetEnforcementLevel gets a reference to the given AnyOfmicrosoftGraphWindowsInformationProtectionEnforcementLevel and assigns it to the EnforcementLevel field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetEnforcementLevel(v AnyOfmicrosoftGraphWindowsInformationProtectionEnforcementLevel) {
	o.EnforcementLevel = v
}

// GetEnterpriseDomain returns the EnterpriseDomain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseDomain() string {
	if o == nil || o.EnterpriseDomain.Get() == nil {
		var ret string
		return ret
	}
	return *o.EnterpriseDomain.Get()
}

// GetEnterpriseDomainOk returns a tuple with the EnterpriseDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseDomainOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EnterpriseDomain.Get(), o.EnterpriseDomain.IsSet()
}

// HasEnterpriseDomain returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasEnterpriseDomain() bool {
	if o != nil && o.EnterpriseDomain.IsSet() {
		return true
	}

	return false
}

// SetEnterpriseDomain gets a reference to the given NullableString and assigns it to the EnterpriseDomain field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetEnterpriseDomain(v string) {
	o.EnterpriseDomain.Set(&v)
}
// SetEnterpriseDomainNil sets the value for EnterpriseDomain to be an explicit nil
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetEnterpriseDomainNil() {
	o.EnterpriseDomain.Set(nil)
}

// UnsetEnterpriseDomain ensures that no value is present for EnterpriseDomain, not even an explicit nil
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) UnsetEnterpriseDomain() {
	o.EnterpriseDomain.Unset()
}

// GetEnterpriseInternalProxyServers returns the EnterpriseInternalProxyServers field value if set, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseInternalProxyServers() []*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection {
	if o == nil || o.EnterpriseInternalProxyServers == nil {
		var ret []*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection
		return ret
	}
	return *o.EnterpriseInternalProxyServers
}

// GetEnterpriseInternalProxyServersOk returns a tuple with the EnterpriseInternalProxyServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseInternalProxyServersOk() (*[]*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection, bool) {
	if o == nil || o.EnterpriseInternalProxyServers == nil {
		return nil, false
	}
	return o.EnterpriseInternalProxyServers, true
}

// HasEnterpriseInternalProxyServers returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasEnterpriseInternalProxyServers() bool {
	if o != nil && o.EnterpriseInternalProxyServers != nil {
		return true
	}

	return false
}

// SetEnterpriseInternalProxyServers gets a reference to the given []*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection and assigns it to the EnterpriseInternalProxyServers field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetEnterpriseInternalProxyServers(v []*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection) {
	o.EnterpriseInternalProxyServers = &v
}

// GetEnterpriseIPRanges returns the EnterpriseIPRanges field value if set, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseIPRanges() []*AnyOfmicrosoftGraphWindowsInformationProtectionIPRangeCollection {
	if o == nil || o.EnterpriseIPRanges == nil {
		var ret []*AnyOfmicrosoftGraphWindowsInformationProtectionIPRangeCollection
		return ret
	}
	return *o.EnterpriseIPRanges
}

// GetEnterpriseIPRangesOk returns a tuple with the EnterpriseIPRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseIPRangesOk() (*[]*AnyOfmicrosoftGraphWindowsInformationProtectionIPRangeCollection, bool) {
	if o == nil || o.EnterpriseIPRanges == nil {
		return nil, false
	}
	return o.EnterpriseIPRanges, true
}

// HasEnterpriseIPRanges returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasEnterpriseIPRanges() bool {
	if o != nil && o.EnterpriseIPRanges != nil {
		return true
	}

	return false
}

// SetEnterpriseIPRanges gets a reference to the given []*AnyOfmicrosoftGraphWindowsInformationProtectionIPRangeCollection and assigns it to the EnterpriseIPRanges field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetEnterpriseIPRanges(v []*AnyOfmicrosoftGraphWindowsInformationProtectionIPRangeCollection) {
	o.EnterpriseIPRanges = &v
}

// GetEnterpriseIPRangesAreAuthoritative returns the EnterpriseIPRangesAreAuthoritative field value if set, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseIPRangesAreAuthoritative() bool {
	if o == nil || o.EnterpriseIPRangesAreAuthoritative == nil {
		var ret bool
		return ret
	}
	return *o.EnterpriseIPRangesAreAuthoritative
}

// GetEnterpriseIPRangesAreAuthoritativeOk returns a tuple with the EnterpriseIPRangesAreAuthoritative field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseIPRangesAreAuthoritativeOk() (*bool, bool) {
	if o == nil || o.EnterpriseIPRangesAreAuthoritative == nil {
		return nil, false
	}
	return o.EnterpriseIPRangesAreAuthoritative, true
}

// HasEnterpriseIPRangesAreAuthoritative returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasEnterpriseIPRangesAreAuthoritative() bool {
	if o != nil && o.EnterpriseIPRangesAreAuthoritative != nil {
		return true
	}

	return false
}

// SetEnterpriseIPRangesAreAuthoritative gets a reference to the given bool and assigns it to the EnterpriseIPRangesAreAuthoritative field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetEnterpriseIPRangesAreAuthoritative(v bool) {
	o.EnterpriseIPRangesAreAuthoritative = &v
}

// GetEnterpriseNetworkDomainNames returns the EnterpriseNetworkDomainNames field value if set, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseNetworkDomainNames() []*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection {
	if o == nil || o.EnterpriseNetworkDomainNames == nil {
		var ret []*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection
		return ret
	}
	return *o.EnterpriseNetworkDomainNames
}

// GetEnterpriseNetworkDomainNamesOk returns a tuple with the EnterpriseNetworkDomainNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseNetworkDomainNamesOk() (*[]*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection, bool) {
	if o == nil || o.EnterpriseNetworkDomainNames == nil {
		return nil, false
	}
	return o.EnterpriseNetworkDomainNames, true
}

// HasEnterpriseNetworkDomainNames returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasEnterpriseNetworkDomainNames() bool {
	if o != nil && o.EnterpriseNetworkDomainNames != nil {
		return true
	}

	return false
}

// SetEnterpriseNetworkDomainNames gets a reference to the given []*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection and assigns it to the EnterpriseNetworkDomainNames field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetEnterpriseNetworkDomainNames(v []*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection) {
	o.EnterpriseNetworkDomainNames = &v
}

// GetEnterpriseProtectedDomainNames returns the EnterpriseProtectedDomainNames field value if set, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseProtectedDomainNames() []*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection {
	if o == nil || o.EnterpriseProtectedDomainNames == nil {
		var ret []*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection
		return ret
	}
	return *o.EnterpriseProtectedDomainNames
}

// GetEnterpriseProtectedDomainNamesOk returns a tuple with the EnterpriseProtectedDomainNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseProtectedDomainNamesOk() (*[]*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection, bool) {
	if o == nil || o.EnterpriseProtectedDomainNames == nil {
		return nil, false
	}
	return o.EnterpriseProtectedDomainNames, true
}

// HasEnterpriseProtectedDomainNames returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasEnterpriseProtectedDomainNames() bool {
	if o != nil && o.EnterpriseProtectedDomainNames != nil {
		return true
	}

	return false
}

// SetEnterpriseProtectedDomainNames gets a reference to the given []*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection and assigns it to the EnterpriseProtectedDomainNames field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetEnterpriseProtectedDomainNames(v []*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection) {
	o.EnterpriseProtectedDomainNames = &v
}

// GetEnterpriseProxiedDomains returns the EnterpriseProxiedDomains field value if set, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseProxiedDomains() []*AnyOfmicrosoftGraphWindowsInformationProtectionProxiedDomainCollection {
	if o == nil || o.EnterpriseProxiedDomains == nil {
		var ret []*AnyOfmicrosoftGraphWindowsInformationProtectionProxiedDomainCollection
		return ret
	}
	return *o.EnterpriseProxiedDomains
}

// GetEnterpriseProxiedDomainsOk returns a tuple with the EnterpriseProxiedDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseProxiedDomainsOk() (*[]*AnyOfmicrosoftGraphWindowsInformationProtectionProxiedDomainCollection, bool) {
	if o == nil || o.EnterpriseProxiedDomains == nil {
		return nil, false
	}
	return o.EnterpriseProxiedDomains, true
}

// HasEnterpriseProxiedDomains returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasEnterpriseProxiedDomains() bool {
	if o != nil && o.EnterpriseProxiedDomains != nil {
		return true
	}

	return false
}

// SetEnterpriseProxiedDomains gets a reference to the given []*AnyOfmicrosoftGraphWindowsInformationProtectionProxiedDomainCollection and assigns it to the EnterpriseProxiedDomains field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetEnterpriseProxiedDomains(v []*AnyOfmicrosoftGraphWindowsInformationProtectionProxiedDomainCollection) {
	o.EnterpriseProxiedDomains = &v
}

// GetEnterpriseProxyServers returns the EnterpriseProxyServers field value if set, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseProxyServers() []*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection {
	if o == nil || o.EnterpriseProxyServers == nil {
		var ret []*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection
		return ret
	}
	return *o.EnterpriseProxyServers
}

// GetEnterpriseProxyServersOk returns a tuple with the EnterpriseProxyServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseProxyServersOk() (*[]*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection, bool) {
	if o == nil || o.EnterpriseProxyServers == nil {
		return nil, false
	}
	return o.EnterpriseProxyServers, true
}

// HasEnterpriseProxyServers returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasEnterpriseProxyServers() bool {
	if o != nil && o.EnterpriseProxyServers != nil {
		return true
	}

	return false
}

// SetEnterpriseProxyServers gets a reference to the given []*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection and assigns it to the EnterpriseProxyServers field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetEnterpriseProxyServers(v []*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection) {
	o.EnterpriseProxyServers = &v
}

// GetEnterpriseProxyServersAreAuthoritative returns the EnterpriseProxyServersAreAuthoritative field value if set, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseProxyServersAreAuthoritative() bool {
	if o == nil || o.EnterpriseProxyServersAreAuthoritative == nil {
		var ret bool
		return ret
	}
	return *o.EnterpriseProxyServersAreAuthoritative
}

// GetEnterpriseProxyServersAreAuthoritativeOk returns a tuple with the EnterpriseProxyServersAreAuthoritative field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseProxyServersAreAuthoritativeOk() (*bool, bool) {
	if o == nil || o.EnterpriseProxyServersAreAuthoritative == nil {
		return nil, false
	}
	return o.EnterpriseProxyServersAreAuthoritative, true
}

// HasEnterpriseProxyServersAreAuthoritative returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasEnterpriseProxyServersAreAuthoritative() bool {
	if o != nil && o.EnterpriseProxyServersAreAuthoritative != nil {
		return true
	}

	return false
}

// SetEnterpriseProxyServersAreAuthoritative gets a reference to the given bool and assigns it to the EnterpriseProxyServersAreAuthoritative field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetEnterpriseProxyServersAreAuthoritative(v bool) {
	o.EnterpriseProxyServersAreAuthoritative = &v
}

// GetExemptApps returns the ExemptApps field value if set, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetExemptApps() []*AnyOfmicrosoftGraphWindowsInformationProtectionApp {
	if o == nil || o.ExemptApps == nil {
		var ret []*AnyOfmicrosoftGraphWindowsInformationProtectionApp
		return ret
	}
	return *o.ExemptApps
}

// GetExemptAppsOk returns a tuple with the ExemptApps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetExemptAppsOk() (*[]*AnyOfmicrosoftGraphWindowsInformationProtectionApp, bool) {
	if o == nil || o.ExemptApps == nil {
		return nil, false
	}
	return o.ExemptApps, true
}

// HasExemptApps returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasExemptApps() bool {
	if o != nil && o.ExemptApps != nil {
		return true
	}

	return false
}

// SetExemptApps gets a reference to the given []*AnyOfmicrosoftGraphWindowsInformationProtectionApp and assigns it to the ExemptApps field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetExemptApps(v []*AnyOfmicrosoftGraphWindowsInformationProtectionApp) {
	o.ExemptApps = &v
}

// GetIconsVisible returns the IconsVisible field value if set, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetIconsVisible() bool {
	if o == nil || o.IconsVisible == nil {
		var ret bool
		return ret
	}
	return *o.IconsVisible
}

// GetIconsVisibleOk returns a tuple with the IconsVisible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetIconsVisibleOk() (*bool, bool) {
	if o == nil || o.IconsVisible == nil {
		return nil, false
	}
	return o.IconsVisible, true
}

// HasIconsVisible returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasIconsVisible() bool {
	if o != nil && o.IconsVisible != nil {
		return true
	}

	return false
}

// SetIconsVisible gets a reference to the given bool and assigns it to the IconsVisible field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetIconsVisible(v bool) {
	o.IconsVisible = &v
}

// GetIndexingEncryptedStoresOrItemsBlocked returns the IndexingEncryptedStoresOrItemsBlocked field value if set, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetIndexingEncryptedStoresOrItemsBlocked() bool {
	if o == nil || o.IndexingEncryptedStoresOrItemsBlocked == nil {
		var ret bool
		return ret
	}
	return *o.IndexingEncryptedStoresOrItemsBlocked
}

// GetIndexingEncryptedStoresOrItemsBlockedOk returns a tuple with the IndexingEncryptedStoresOrItemsBlocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetIndexingEncryptedStoresOrItemsBlockedOk() (*bool, bool) {
	if o == nil || o.IndexingEncryptedStoresOrItemsBlocked == nil {
		return nil, false
	}
	return o.IndexingEncryptedStoresOrItemsBlocked, true
}

// HasIndexingEncryptedStoresOrItemsBlocked returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasIndexingEncryptedStoresOrItemsBlocked() bool {
	if o != nil && o.IndexingEncryptedStoresOrItemsBlocked != nil {
		return true
	}

	return false
}

// SetIndexingEncryptedStoresOrItemsBlocked gets a reference to the given bool and assigns it to the IndexingEncryptedStoresOrItemsBlocked field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetIndexingEncryptedStoresOrItemsBlocked(v bool) {
	o.IndexingEncryptedStoresOrItemsBlocked = &v
}

// GetIsAssigned returns the IsAssigned field value if set, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetIsAssigned() bool {
	if o == nil || o.IsAssigned == nil {
		var ret bool
		return ret
	}
	return *o.IsAssigned
}

// GetIsAssignedOk returns a tuple with the IsAssigned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetIsAssignedOk() (*bool, bool) {
	if o == nil || o.IsAssigned == nil {
		return nil, false
	}
	return o.IsAssigned, true
}

// HasIsAssigned returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasIsAssigned() bool {
	if o != nil && o.IsAssigned != nil {
		return true
	}

	return false
}

// SetIsAssigned gets a reference to the given bool and assigns it to the IsAssigned field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetIsAssigned(v bool) {
	o.IsAssigned = &v
}

// GetNeutralDomainResources returns the NeutralDomainResources field value if set, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetNeutralDomainResources() []*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection {
	if o == nil || o.NeutralDomainResources == nil {
		var ret []*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection
		return ret
	}
	return *o.NeutralDomainResources
}

// GetNeutralDomainResourcesOk returns a tuple with the NeutralDomainResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetNeutralDomainResourcesOk() (*[]*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection, bool) {
	if o == nil || o.NeutralDomainResources == nil {
		return nil, false
	}
	return o.NeutralDomainResources, true
}

// HasNeutralDomainResources returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasNeutralDomainResources() bool {
	if o != nil && o.NeutralDomainResources != nil {
		return true
	}

	return false
}

// SetNeutralDomainResources gets a reference to the given []*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection and assigns it to the NeutralDomainResources field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetNeutralDomainResources(v []*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection) {
	o.NeutralDomainResources = &v
}

// GetProtectedApps returns the ProtectedApps field value if set, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetProtectedApps() []*AnyOfmicrosoftGraphWindowsInformationProtectionApp {
	if o == nil || o.ProtectedApps == nil {
		var ret []*AnyOfmicrosoftGraphWindowsInformationProtectionApp
		return ret
	}
	return *o.ProtectedApps
}

// GetProtectedAppsOk returns a tuple with the ProtectedApps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetProtectedAppsOk() (*[]*AnyOfmicrosoftGraphWindowsInformationProtectionApp, bool) {
	if o == nil || o.ProtectedApps == nil {
		return nil, false
	}
	return o.ProtectedApps, true
}

// HasProtectedApps returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasProtectedApps() bool {
	if o != nil && o.ProtectedApps != nil {
		return true
	}

	return false
}

// SetProtectedApps gets a reference to the given []*AnyOfmicrosoftGraphWindowsInformationProtectionApp and assigns it to the ProtectedApps field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetProtectedApps(v []*AnyOfmicrosoftGraphWindowsInformationProtectionApp) {
	o.ProtectedApps = &v
}

// GetProtectionUnderLockConfigRequired returns the ProtectionUnderLockConfigRequired field value if set, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetProtectionUnderLockConfigRequired() bool {
	if o == nil || o.ProtectionUnderLockConfigRequired == nil {
		var ret bool
		return ret
	}
	return *o.ProtectionUnderLockConfigRequired
}

// GetProtectionUnderLockConfigRequiredOk returns a tuple with the ProtectionUnderLockConfigRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetProtectionUnderLockConfigRequiredOk() (*bool, bool) {
	if o == nil || o.ProtectionUnderLockConfigRequired == nil {
		return nil, false
	}
	return o.ProtectionUnderLockConfigRequired, true
}

// HasProtectionUnderLockConfigRequired returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasProtectionUnderLockConfigRequired() bool {
	if o != nil && o.ProtectionUnderLockConfigRequired != nil {
		return true
	}

	return false
}

// SetProtectionUnderLockConfigRequired gets a reference to the given bool and assigns it to the ProtectionUnderLockConfigRequired field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetProtectionUnderLockConfigRequired(v bool) {
	o.ProtectionUnderLockConfigRequired = &v
}

// GetRevokeOnUnenrollDisabled returns the RevokeOnUnenrollDisabled field value if set, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetRevokeOnUnenrollDisabled() bool {
	if o == nil || o.RevokeOnUnenrollDisabled == nil {
		var ret bool
		return ret
	}
	return *o.RevokeOnUnenrollDisabled
}

// GetRevokeOnUnenrollDisabledOk returns a tuple with the RevokeOnUnenrollDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetRevokeOnUnenrollDisabledOk() (*bool, bool) {
	if o == nil || o.RevokeOnUnenrollDisabled == nil {
		return nil, false
	}
	return o.RevokeOnUnenrollDisabled, true
}

// HasRevokeOnUnenrollDisabled returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasRevokeOnUnenrollDisabled() bool {
	if o != nil && o.RevokeOnUnenrollDisabled != nil {
		return true
	}

	return false
}

// SetRevokeOnUnenrollDisabled gets a reference to the given bool and assigns it to the RevokeOnUnenrollDisabled field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetRevokeOnUnenrollDisabled(v bool) {
	o.RevokeOnUnenrollDisabled = &v
}

// GetRightsManagementServicesTemplateId returns the RightsManagementServicesTemplateId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetRightsManagementServicesTemplateId() string {
	if o == nil || o.RightsManagementServicesTemplateId.Get() == nil {
		var ret string
		return ret
	}
	return *o.RightsManagementServicesTemplateId.Get()
}

// GetRightsManagementServicesTemplateIdOk returns a tuple with the RightsManagementServicesTemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetRightsManagementServicesTemplateIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RightsManagementServicesTemplateId.Get(), o.RightsManagementServicesTemplateId.IsSet()
}

// HasRightsManagementServicesTemplateId returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasRightsManagementServicesTemplateId() bool {
	if o != nil && o.RightsManagementServicesTemplateId.IsSet() {
		return true
	}

	return false
}

// SetRightsManagementServicesTemplateId gets a reference to the given NullableString and assigns it to the RightsManagementServicesTemplateId field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetRightsManagementServicesTemplateId(v string) {
	o.RightsManagementServicesTemplateId.Set(&v)
}
// SetRightsManagementServicesTemplateIdNil sets the value for RightsManagementServicesTemplateId to be an explicit nil
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetRightsManagementServicesTemplateIdNil() {
	o.RightsManagementServicesTemplateId.Set(nil)
}

// UnsetRightsManagementServicesTemplateId ensures that no value is present for RightsManagementServicesTemplateId, not even an explicit nil
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) UnsetRightsManagementServicesTemplateId() {
	o.RightsManagementServicesTemplateId.Unset()
}

// GetSmbAutoEncryptedFileExtensions returns the SmbAutoEncryptedFileExtensions field value if set, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetSmbAutoEncryptedFileExtensions() []*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection {
	if o == nil || o.SmbAutoEncryptedFileExtensions == nil {
		var ret []*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection
		return ret
	}
	return *o.SmbAutoEncryptedFileExtensions
}

// GetSmbAutoEncryptedFileExtensionsOk returns a tuple with the SmbAutoEncryptedFileExtensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetSmbAutoEncryptedFileExtensionsOk() (*[]*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection, bool) {
	if o == nil || o.SmbAutoEncryptedFileExtensions == nil {
		return nil, false
	}
	return o.SmbAutoEncryptedFileExtensions, true
}

// HasSmbAutoEncryptedFileExtensions returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasSmbAutoEncryptedFileExtensions() bool {
	if o != nil && o.SmbAutoEncryptedFileExtensions != nil {
		return true
	}

	return false
}

// SetSmbAutoEncryptedFileExtensions gets a reference to the given []*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection and assigns it to the SmbAutoEncryptedFileExtensions field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetSmbAutoEncryptedFileExtensions(v []*AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection) {
	o.SmbAutoEncryptedFileExtensions = &v
}

// GetAssignments returns the Assignments field value if set, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetAssignments() []MicrosoftGraphTargetedManagedAppPolicyAssignment {
	if o == nil || o.Assignments == nil {
		var ret []MicrosoftGraphTargetedManagedAppPolicyAssignment
		return ret
	}
	return *o.Assignments
}

// GetAssignmentsOk returns a tuple with the Assignments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetAssignmentsOk() (*[]MicrosoftGraphTargetedManagedAppPolicyAssignment, bool) {
	if o == nil || o.Assignments == nil {
		return nil, false
	}
	return o.Assignments, true
}

// HasAssignments returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasAssignments() bool {
	if o != nil && o.Assignments != nil {
		return true
	}

	return false
}

// SetAssignments gets a reference to the given []MicrosoftGraphTargetedManagedAppPolicyAssignment and assigns it to the Assignments field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetAssignments(v []MicrosoftGraphTargetedManagedAppPolicyAssignment) {
	o.Assignments = &v
}

// GetExemptAppLockerFiles returns the ExemptAppLockerFiles field value if set, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetExemptAppLockerFiles() []MicrosoftGraphWindowsInformationProtectionAppLockerFile {
	if o == nil || o.ExemptAppLockerFiles == nil {
		var ret []MicrosoftGraphWindowsInformationProtectionAppLockerFile
		return ret
	}
	return *o.ExemptAppLockerFiles
}

// GetExemptAppLockerFilesOk returns a tuple with the ExemptAppLockerFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetExemptAppLockerFilesOk() (*[]MicrosoftGraphWindowsInformationProtectionAppLockerFile, bool) {
	if o == nil || o.ExemptAppLockerFiles == nil {
		return nil, false
	}
	return o.ExemptAppLockerFiles, true
}

// HasExemptAppLockerFiles returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasExemptAppLockerFiles() bool {
	if o != nil && o.ExemptAppLockerFiles != nil {
		return true
	}

	return false
}

// SetExemptAppLockerFiles gets a reference to the given []MicrosoftGraphWindowsInformationProtectionAppLockerFile and assigns it to the ExemptAppLockerFiles field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetExemptAppLockerFiles(v []MicrosoftGraphWindowsInformationProtectionAppLockerFile) {
	o.ExemptAppLockerFiles = &v
}

// GetProtectedAppLockerFiles returns the ProtectedAppLockerFiles field value if set, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetProtectedAppLockerFiles() []MicrosoftGraphWindowsInformationProtectionAppLockerFile {
	if o == nil || o.ProtectedAppLockerFiles == nil {
		var ret []MicrosoftGraphWindowsInformationProtectionAppLockerFile
		return ret
	}
	return *o.ProtectedAppLockerFiles
}

// GetProtectedAppLockerFilesOk returns a tuple with the ProtectedAppLockerFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetProtectedAppLockerFilesOk() (*[]MicrosoftGraphWindowsInformationProtectionAppLockerFile, bool) {
	if o == nil || o.ProtectedAppLockerFiles == nil {
		return nil, false
	}
	return o.ProtectedAppLockerFiles, true
}

// HasProtectedAppLockerFiles returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasProtectedAppLockerFiles() bool {
	if o != nil && o.ProtectedAppLockerFiles != nil {
		return true
	}

	return false
}

// SetProtectedAppLockerFiles gets a reference to the given []MicrosoftGraphWindowsInformationProtectionAppLockerFile and assigns it to the ProtectedAppLockerFiles field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetProtectedAppLockerFiles(v []MicrosoftGraphWindowsInformationProtectionAppLockerFile) {
	o.ProtectedAppLockerFiles = &v
}

func (o MicrosoftGraphMdmWindowsInformationProtectionPolicy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.CreatedDateTime != nil {
		toSerialize["createdDateTime"] = o.CreatedDateTime
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.LastModifiedDateTime != nil {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime
	}
	if o.Version.IsSet() {
		toSerialize["version"] = o.Version.Get()
	}
	if o.AzureRightsManagementServicesAllowed != nil {
		toSerialize["azureRightsManagementServicesAllowed"] = o.AzureRightsManagementServicesAllowed
	}
	if o.DataRecoveryCertificate != nil {
		toSerialize["dataRecoveryCertificate"] = o.DataRecoveryCertificate
	}
	if o.EnforcementLevel != nil {
		toSerialize["enforcementLevel"] = o.EnforcementLevel
	}
	if o.EnterpriseDomain.IsSet() {
		toSerialize["enterpriseDomain"] = o.EnterpriseDomain.Get()
	}
	if o.EnterpriseInternalProxyServers != nil {
		toSerialize["enterpriseInternalProxyServers"] = o.EnterpriseInternalProxyServers
	}
	if o.EnterpriseIPRanges != nil {
		toSerialize["enterpriseIPRanges"] = o.EnterpriseIPRanges
	}
	if o.EnterpriseIPRangesAreAuthoritative != nil {
		toSerialize["enterpriseIPRangesAreAuthoritative"] = o.EnterpriseIPRangesAreAuthoritative
	}
	if o.EnterpriseNetworkDomainNames != nil {
		toSerialize["enterpriseNetworkDomainNames"] = o.EnterpriseNetworkDomainNames
	}
	if o.EnterpriseProtectedDomainNames != nil {
		toSerialize["enterpriseProtectedDomainNames"] = o.EnterpriseProtectedDomainNames
	}
	if o.EnterpriseProxiedDomains != nil {
		toSerialize["enterpriseProxiedDomains"] = o.EnterpriseProxiedDomains
	}
	if o.EnterpriseProxyServers != nil {
		toSerialize["enterpriseProxyServers"] = o.EnterpriseProxyServers
	}
	if o.EnterpriseProxyServersAreAuthoritative != nil {
		toSerialize["enterpriseProxyServersAreAuthoritative"] = o.EnterpriseProxyServersAreAuthoritative
	}
	if o.ExemptApps != nil {
		toSerialize["exemptApps"] = o.ExemptApps
	}
	if o.IconsVisible != nil {
		toSerialize["iconsVisible"] = o.IconsVisible
	}
	if o.IndexingEncryptedStoresOrItemsBlocked != nil {
		toSerialize["indexingEncryptedStoresOrItemsBlocked"] = o.IndexingEncryptedStoresOrItemsBlocked
	}
	if o.IsAssigned != nil {
		toSerialize["isAssigned"] = o.IsAssigned
	}
	if o.NeutralDomainResources != nil {
		toSerialize["neutralDomainResources"] = o.NeutralDomainResources
	}
	if o.ProtectedApps != nil {
		toSerialize["protectedApps"] = o.ProtectedApps
	}
	if o.ProtectionUnderLockConfigRequired != nil {
		toSerialize["protectionUnderLockConfigRequired"] = o.ProtectionUnderLockConfigRequired
	}
	if o.RevokeOnUnenrollDisabled != nil {
		toSerialize["revokeOnUnenrollDisabled"] = o.RevokeOnUnenrollDisabled
	}
	if o.RightsManagementServicesTemplateId.IsSet() {
		toSerialize["rightsManagementServicesTemplateId"] = o.RightsManagementServicesTemplateId.Get()
	}
	if o.SmbAutoEncryptedFileExtensions != nil {
		toSerialize["smbAutoEncryptedFileExtensions"] = o.SmbAutoEncryptedFileExtensions
	}
	if o.Assignments != nil {
		toSerialize["assignments"] = o.Assignments
	}
	if o.ExemptAppLockerFiles != nil {
		toSerialize["exemptAppLockerFiles"] = o.ExemptAppLockerFiles
	}
	if o.ProtectedAppLockerFiles != nil {
		toSerialize["protectedAppLockerFiles"] = o.ProtectedAppLockerFiles
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphMdmWindowsInformationProtectionPolicy struct {
	value *MicrosoftGraphMdmWindowsInformationProtectionPolicy
	isSet bool
}

func (v NullableMicrosoftGraphMdmWindowsInformationProtectionPolicy) Get() *MicrosoftGraphMdmWindowsInformationProtectionPolicy {
	return v.value
}

func (v *NullableMicrosoftGraphMdmWindowsInformationProtectionPolicy) Set(val *MicrosoftGraphMdmWindowsInformationProtectionPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphMdmWindowsInformationProtectionPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphMdmWindowsInformationProtectionPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphMdmWindowsInformationProtectionPolicy(val *MicrosoftGraphMdmWindowsInformationProtectionPolicy) *NullableMicrosoftGraphMdmWindowsInformationProtectionPolicy {
	return &NullableMicrosoftGraphMdmWindowsInformationProtectionPolicy{value: val, isSet: true}
}

func (v NullableMicrosoftGraphMdmWindowsInformationProtectionPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphMdmWindowsInformationProtectionPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


