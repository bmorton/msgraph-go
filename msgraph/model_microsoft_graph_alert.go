/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphAlert struct for MicrosoftGraphAlert
type MicrosoftGraphAlert struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// Name or alias of the activity group (attacker) this alert is attributed to.
	ActivityGroupName NullableString `json:"activityGroupName,omitempty"`
	AlertDetections *[]*AnyOfmicrosoftGraphAlertDetection `json:"alertDetections,omitempty"`
	// Name of the analyst the alert is assigned to for triage, investigation, or remediation (supports update).
	AssignedTo NullableString `json:"assignedTo,omitempty"`
	// Azure subscription ID, present if this alert is related to an Azure resource.
	AzureSubscriptionId NullableString `json:"azureSubscriptionId,omitempty"`
	// Azure Active Directory tenant ID. Required.
	AzureTenantId *string `json:"azureTenantId,omitempty"`
	// Category of the alert (for example, credentialTheft, ransomware, etc.).
	Category NullableString `json:"category,omitempty"`
	// Time at which the alert was closed. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z (supports update).
	ClosedDateTime NullableTime `json:"closedDateTime,omitempty"`
	// Security-related stateful information generated by the provider about the cloud application/s related to this alert.
	CloudAppStates *[]*AnyOfmicrosoftGraphCloudAppSecurityState `json:"cloudAppStates,omitempty"`
	// Customer-provided comments on alert (for customer alert management) (supports update).
	Comments *[]*string `json:"comments,omitempty"`
	// Confidence of the detection logic (percentage between 1-100).
	Confidence NullableInt32 `json:"confidence,omitempty"`
	// Time at which the alert was created by the alert provider. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Required.
	CreatedDateTime NullableTime `json:"createdDateTime,omitempty"`
	// Alert description.
	Description NullableString `json:"description,omitempty"`
	// Set of alerts related to this alert entity (each alert is pushed to the SIEM as a separate record).
	DetectionIds *[]*string `json:"detectionIds,omitempty"`
	// Time at which the event(s) that served as the trigger(s) to generate the alert occurred. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Required.
	EventDateTime NullableTime `json:"eventDateTime,omitempty"`
	// Analyst feedback on the alert. Possible values are: unknown, truePositive, falsePositive, benignPositive. (supports update)
	Feedback AnyOfmicrosoftGraphAlertFeedback `json:"feedback,omitempty"`
	// Security-related stateful information generated by the provider about the file(s) related to this alert.
	FileStates *[]*AnyOfmicrosoftGraphFileSecurityState `json:"fileStates,omitempty"`
	// A collection of alertHistoryStates comprising an audit log of all updates made to an alert.
	HistoryStates *[]*AnyOfmicrosoftGraphAlertHistoryState `json:"historyStates,omitempty"`
	// Security-related stateful information generated by the provider about the host(s) related to this alert.
	HostStates *[]*AnyOfmicrosoftGraphHostSecurityState `json:"hostStates,omitempty"`
	// IDs of incidents related to current alert.
	IncidentIds *[]*string `json:"incidentIds,omitempty"`
	InvestigationSecurityStates *[]*AnyOfmicrosoftGraphInvestigationSecurityState `json:"investigationSecurityStates,omitempty"`
	LastEventDateTime NullableTime `json:"lastEventDateTime,omitempty"`
	// Time at which the alert entity was last modified. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
	LastModifiedDateTime NullableTime `json:"lastModifiedDateTime,omitempty"`
	// Threat Intelligence pertaining to malware related to this alert.
	MalwareStates *[]*AnyOfmicrosoftGraphMalwareState `json:"malwareStates,omitempty"`
	MessageSecurityStates *[]*AnyOfmicrosoftGraphMessageSecurityState `json:"messageSecurityStates,omitempty"`
	// Security-related stateful information generated by the provider about the network connection(s) related to this alert.
	NetworkConnections *[]*AnyOfmicrosoftGraphNetworkConnection `json:"networkConnections,omitempty"`
	// Security-related stateful information generated by the provider about the process or processes related to this alert.
	Processes *[]*AnyOfmicrosoftGraphProcess `json:"processes,omitempty"`
	// Vendor/provider recommended action(s) to take as a result of the alert (for example, isolate machine, enforce2FA, reimage host).
	RecommendedActions *[]*string `json:"recommendedActions,omitempty"`
	// Security-related stateful information generated by the provider about the registry keys related to this alert.
	RegistryKeyStates *[]*AnyOfmicrosoftGraphRegistryKeyState `json:"registryKeyStates,omitempty"`
	// Resources related to current alert. For example, for some alerts this can have the Azure Resource value.
	SecurityResources *[]*AnyOfmicrosoftGraphSecurityResource `json:"securityResources,omitempty"`
	// Alert severity - set by vendor/provider. Possible values are: unknown, informational, low, medium, high. Required.
	Severity AnyOfmicrosoftGraphAlertSeverity `json:"severity,omitempty"`
	// Hyperlinks (URIs) to the source material related to the alert, for example, provider's user interface for alerts or log search, etc.
	SourceMaterials *[]*string `json:"sourceMaterials,omitempty"`
	// Alert lifecycle status (stage). Possible values are: unknown, newAlert, inProgress, resolved. (supports update). Required.
	Status AnyOfmicrosoftGraphAlertStatus `json:"status,omitempty"`
	// User-definable labels that can be applied to an alert and can serve as filter conditions (for example 'HVA', 'SAW', etc.) (supports update).
	Tags *[]*string `json:"tags,omitempty"`
	// Alert title. Required.
	Title NullableString `json:"title,omitempty"`
	// Security-related information about the specific properties that triggered the alert (properties appearing in the alert). Alerts might contain information about multiple users, hosts, files, ip addresses. This field indicates which properties triggered the alert generation.
	Triggers *[]*AnyOfmicrosoftGraphAlertTrigger `json:"triggers,omitempty"`
	UriClickSecurityStates *[]*AnyOfmicrosoftGraphUriClickSecurityState `json:"uriClickSecurityStates,omitempty"`
	// Security-related stateful information generated by the provider about the user accounts related to this alert.
	UserStates *[]*AnyOfmicrosoftGraphUserSecurityState `json:"userStates,omitempty"`
	// Complex type containing details about the security product/service vendor, provider, and subprovider (for example, vendor=Microsoft; provider=Windows Defender ATP; subProvider=AppLocker). Required.
	VendorInformation AnyOfmicrosoftGraphSecurityVendorInformation `json:"vendorInformation,omitempty"`
	// Threat intelligence pertaining to one or more vulnerabilities related to this alert.
	VulnerabilityStates *[]*AnyOfmicrosoftGraphVulnerabilityState `json:"vulnerabilityStates,omitempty"`
}

// NewMicrosoftGraphAlert instantiates a new MicrosoftGraphAlert object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphAlert() *MicrosoftGraphAlert {
	this := MicrosoftGraphAlert{}
	return &this
}

// NewMicrosoftGraphAlertWithDefaults instantiates a new MicrosoftGraphAlert object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphAlertWithDefaults() *MicrosoftGraphAlert {
	this := MicrosoftGraphAlert{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphAlert) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphAlert) SetId(v string) {
	o.Id = &v
}

// GetActivityGroupName returns the ActivityGroupName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAlert) GetActivityGroupName() string {
	if o == nil || o.ActivityGroupName.Get() == nil {
		var ret string
		return ret
	}
	return *o.ActivityGroupName.Get()
}

// GetActivityGroupNameOk returns a tuple with the ActivityGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAlert) GetActivityGroupNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ActivityGroupName.Get(), o.ActivityGroupName.IsSet()
}

// HasActivityGroupName returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasActivityGroupName() bool {
	if o != nil && o.ActivityGroupName.IsSet() {
		return true
	}

	return false
}

// SetActivityGroupName gets a reference to the given NullableString and assigns it to the ActivityGroupName field.
func (o *MicrosoftGraphAlert) SetActivityGroupName(v string) {
	o.ActivityGroupName.Set(&v)
}
// SetActivityGroupNameNil sets the value for ActivityGroupName to be an explicit nil
func (o *MicrosoftGraphAlert) SetActivityGroupNameNil() {
	o.ActivityGroupName.Set(nil)
}

// UnsetActivityGroupName ensures that no value is present for ActivityGroupName, not even an explicit nil
func (o *MicrosoftGraphAlert) UnsetActivityGroupName() {
	o.ActivityGroupName.Unset()
}

// GetAlertDetections returns the AlertDetections field value if set, zero value otherwise.
func (o *MicrosoftGraphAlert) GetAlertDetections() []*AnyOfmicrosoftGraphAlertDetection {
	if o == nil || o.AlertDetections == nil {
		var ret []*AnyOfmicrosoftGraphAlertDetection
		return ret
	}
	return *o.AlertDetections
}

// GetAlertDetectionsOk returns a tuple with the AlertDetections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetAlertDetectionsOk() (*[]*AnyOfmicrosoftGraphAlertDetection, bool) {
	if o == nil || o.AlertDetections == nil {
		return nil, false
	}
	return o.AlertDetections, true
}

// HasAlertDetections returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasAlertDetections() bool {
	if o != nil && o.AlertDetections != nil {
		return true
	}

	return false
}

// SetAlertDetections gets a reference to the given []*AnyOfmicrosoftGraphAlertDetection and assigns it to the AlertDetections field.
func (o *MicrosoftGraphAlert) SetAlertDetections(v []*AnyOfmicrosoftGraphAlertDetection) {
	o.AlertDetections = &v
}

// GetAssignedTo returns the AssignedTo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAlert) GetAssignedTo() string {
	if o == nil || o.AssignedTo.Get() == nil {
		var ret string
		return ret
	}
	return *o.AssignedTo.Get()
}

// GetAssignedToOk returns a tuple with the AssignedTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAlert) GetAssignedToOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AssignedTo.Get(), o.AssignedTo.IsSet()
}

// HasAssignedTo returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasAssignedTo() bool {
	if o != nil && o.AssignedTo.IsSet() {
		return true
	}

	return false
}

// SetAssignedTo gets a reference to the given NullableString and assigns it to the AssignedTo field.
func (o *MicrosoftGraphAlert) SetAssignedTo(v string) {
	o.AssignedTo.Set(&v)
}
// SetAssignedToNil sets the value for AssignedTo to be an explicit nil
func (o *MicrosoftGraphAlert) SetAssignedToNil() {
	o.AssignedTo.Set(nil)
}

// UnsetAssignedTo ensures that no value is present for AssignedTo, not even an explicit nil
func (o *MicrosoftGraphAlert) UnsetAssignedTo() {
	o.AssignedTo.Unset()
}

// GetAzureSubscriptionId returns the AzureSubscriptionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAlert) GetAzureSubscriptionId() string {
	if o == nil || o.AzureSubscriptionId.Get() == nil {
		var ret string
		return ret
	}
	return *o.AzureSubscriptionId.Get()
}

// GetAzureSubscriptionIdOk returns a tuple with the AzureSubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAlert) GetAzureSubscriptionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AzureSubscriptionId.Get(), o.AzureSubscriptionId.IsSet()
}

// HasAzureSubscriptionId returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasAzureSubscriptionId() bool {
	if o != nil && o.AzureSubscriptionId.IsSet() {
		return true
	}

	return false
}

// SetAzureSubscriptionId gets a reference to the given NullableString and assigns it to the AzureSubscriptionId field.
func (o *MicrosoftGraphAlert) SetAzureSubscriptionId(v string) {
	o.AzureSubscriptionId.Set(&v)
}
// SetAzureSubscriptionIdNil sets the value for AzureSubscriptionId to be an explicit nil
func (o *MicrosoftGraphAlert) SetAzureSubscriptionIdNil() {
	o.AzureSubscriptionId.Set(nil)
}

// UnsetAzureSubscriptionId ensures that no value is present for AzureSubscriptionId, not even an explicit nil
func (o *MicrosoftGraphAlert) UnsetAzureSubscriptionId() {
	o.AzureSubscriptionId.Unset()
}

// GetAzureTenantId returns the AzureTenantId field value if set, zero value otherwise.
func (o *MicrosoftGraphAlert) GetAzureTenantId() string {
	if o == nil || o.AzureTenantId == nil {
		var ret string
		return ret
	}
	return *o.AzureTenantId
}

// GetAzureTenantIdOk returns a tuple with the AzureTenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetAzureTenantIdOk() (*string, bool) {
	if o == nil || o.AzureTenantId == nil {
		return nil, false
	}
	return o.AzureTenantId, true
}

// HasAzureTenantId returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasAzureTenantId() bool {
	if o != nil && o.AzureTenantId != nil {
		return true
	}

	return false
}

// SetAzureTenantId gets a reference to the given string and assigns it to the AzureTenantId field.
func (o *MicrosoftGraphAlert) SetAzureTenantId(v string) {
	o.AzureTenantId = &v
}

// GetCategory returns the Category field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAlert) GetCategory() string {
	if o == nil || o.Category.Get() == nil {
		var ret string
		return ret
	}
	return *o.Category.Get()
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAlert) GetCategoryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Category.Get(), o.Category.IsSet()
}

// HasCategory returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasCategory() bool {
	if o != nil && o.Category.IsSet() {
		return true
	}

	return false
}

// SetCategory gets a reference to the given NullableString and assigns it to the Category field.
func (o *MicrosoftGraphAlert) SetCategory(v string) {
	o.Category.Set(&v)
}
// SetCategoryNil sets the value for Category to be an explicit nil
func (o *MicrosoftGraphAlert) SetCategoryNil() {
	o.Category.Set(nil)
}

// UnsetCategory ensures that no value is present for Category, not even an explicit nil
func (o *MicrosoftGraphAlert) UnsetCategory() {
	o.Category.Unset()
}

// GetClosedDateTime returns the ClosedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAlert) GetClosedDateTime() time.Time {
	if o == nil || o.ClosedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.ClosedDateTime.Get()
}

// GetClosedDateTimeOk returns a tuple with the ClosedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAlert) GetClosedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClosedDateTime.Get(), o.ClosedDateTime.IsSet()
}

// HasClosedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasClosedDateTime() bool {
	if o != nil && o.ClosedDateTime.IsSet() {
		return true
	}

	return false
}

// SetClosedDateTime gets a reference to the given NullableTime and assigns it to the ClosedDateTime field.
func (o *MicrosoftGraphAlert) SetClosedDateTime(v time.Time) {
	o.ClosedDateTime.Set(&v)
}
// SetClosedDateTimeNil sets the value for ClosedDateTime to be an explicit nil
func (o *MicrosoftGraphAlert) SetClosedDateTimeNil() {
	o.ClosedDateTime.Set(nil)
}

// UnsetClosedDateTime ensures that no value is present for ClosedDateTime, not even an explicit nil
func (o *MicrosoftGraphAlert) UnsetClosedDateTime() {
	o.ClosedDateTime.Unset()
}

// GetCloudAppStates returns the CloudAppStates field value if set, zero value otherwise.
func (o *MicrosoftGraphAlert) GetCloudAppStates() []*AnyOfmicrosoftGraphCloudAppSecurityState {
	if o == nil || o.CloudAppStates == nil {
		var ret []*AnyOfmicrosoftGraphCloudAppSecurityState
		return ret
	}
	return *o.CloudAppStates
}

// GetCloudAppStatesOk returns a tuple with the CloudAppStates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetCloudAppStatesOk() (*[]*AnyOfmicrosoftGraphCloudAppSecurityState, bool) {
	if o == nil || o.CloudAppStates == nil {
		return nil, false
	}
	return o.CloudAppStates, true
}

// HasCloudAppStates returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasCloudAppStates() bool {
	if o != nil && o.CloudAppStates != nil {
		return true
	}

	return false
}

// SetCloudAppStates gets a reference to the given []*AnyOfmicrosoftGraphCloudAppSecurityState and assigns it to the CloudAppStates field.
func (o *MicrosoftGraphAlert) SetCloudAppStates(v []*AnyOfmicrosoftGraphCloudAppSecurityState) {
	o.CloudAppStates = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *MicrosoftGraphAlert) GetComments() []*string {
	if o == nil || o.Comments == nil {
		var ret []*string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetCommentsOk() (*[]*string, bool) {
	if o == nil || o.Comments == nil {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasComments() bool {
	if o != nil && o.Comments != nil {
		return true
	}

	return false
}

// SetComments gets a reference to the given []*string and assigns it to the Comments field.
func (o *MicrosoftGraphAlert) SetComments(v []*string) {
	o.Comments = &v
}

// GetConfidence returns the Confidence field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAlert) GetConfidence() int32 {
	if o == nil || o.Confidence.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Confidence.Get()
}

// GetConfidenceOk returns a tuple with the Confidence field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAlert) GetConfidenceOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Confidence.Get(), o.Confidence.IsSet()
}

// HasConfidence returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasConfidence() bool {
	if o != nil && o.Confidence.IsSet() {
		return true
	}

	return false
}

// SetConfidence gets a reference to the given NullableInt32 and assigns it to the Confidence field.
func (o *MicrosoftGraphAlert) SetConfidence(v int32) {
	o.Confidence.Set(&v)
}
// SetConfidenceNil sets the value for Confidence to be an explicit nil
func (o *MicrosoftGraphAlert) SetConfidenceNil() {
	o.Confidence.Set(nil)
}

// UnsetConfidence ensures that no value is present for Confidence, not even an explicit nil
func (o *MicrosoftGraphAlert) UnsetConfidence() {
	o.Confidence.Unset()
}

// GetCreatedDateTime returns the CreatedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAlert) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime.Get()
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAlert) GetCreatedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatedDateTime.Get(), o.CreatedDateTime.IsSet()
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime.IsSet() {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given NullableTime and assigns it to the CreatedDateTime field.
func (o *MicrosoftGraphAlert) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime.Set(&v)
}
// SetCreatedDateTimeNil sets the value for CreatedDateTime to be an explicit nil
func (o *MicrosoftGraphAlert) SetCreatedDateTimeNil() {
	o.CreatedDateTime.Set(nil)
}

// UnsetCreatedDateTime ensures that no value is present for CreatedDateTime, not even an explicit nil
func (o *MicrosoftGraphAlert) UnsetCreatedDateTime() {
	o.CreatedDateTime.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAlert) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAlert) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *MicrosoftGraphAlert) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *MicrosoftGraphAlert) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *MicrosoftGraphAlert) UnsetDescription() {
	o.Description.Unset()
}

// GetDetectionIds returns the DetectionIds field value if set, zero value otherwise.
func (o *MicrosoftGraphAlert) GetDetectionIds() []*string {
	if o == nil || o.DetectionIds == nil {
		var ret []*string
		return ret
	}
	return *o.DetectionIds
}

// GetDetectionIdsOk returns a tuple with the DetectionIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetDetectionIdsOk() (*[]*string, bool) {
	if o == nil || o.DetectionIds == nil {
		return nil, false
	}
	return o.DetectionIds, true
}

// HasDetectionIds returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasDetectionIds() bool {
	if o != nil && o.DetectionIds != nil {
		return true
	}

	return false
}

// SetDetectionIds gets a reference to the given []*string and assigns it to the DetectionIds field.
func (o *MicrosoftGraphAlert) SetDetectionIds(v []*string) {
	o.DetectionIds = &v
}

// GetEventDateTime returns the EventDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAlert) GetEventDateTime() time.Time {
	if o == nil || o.EventDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.EventDateTime.Get()
}

// GetEventDateTimeOk returns a tuple with the EventDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAlert) GetEventDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EventDateTime.Get(), o.EventDateTime.IsSet()
}

// HasEventDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasEventDateTime() bool {
	if o != nil && o.EventDateTime.IsSet() {
		return true
	}

	return false
}

// SetEventDateTime gets a reference to the given NullableTime and assigns it to the EventDateTime field.
func (o *MicrosoftGraphAlert) SetEventDateTime(v time.Time) {
	o.EventDateTime.Set(&v)
}
// SetEventDateTimeNil sets the value for EventDateTime to be an explicit nil
func (o *MicrosoftGraphAlert) SetEventDateTimeNil() {
	o.EventDateTime.Set(nil)
}

// UnsetEventDateTime ensures that no value is present for EventDateTime, not even an explicit nil
func (o *MicrosoftGraphAlert) UnsetEventDateTime() {
	o.EventDateTime.Unset()
}

// GetFeedback returns the Feedback field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAlert) GetFeedback() AnyOfmicrosoftGraphAlertFeedback {
	if o == nil  {
		var ret AnyOfmicrosoftGraphAlertFeedback
		return ret
	}
	return o.Feedback
}

// GetFeedbackOk returns a tuple with the Feedback field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAlert) GetFeedbackOk() (*AnyOfmicrosoftGraphAlertFeedback, bool) {
	if o == nil || o.Feedback == nil {
		return nil, false
	}
	return &o.Feedback, true
}

// HasFeedback returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasFeedback() bool {
	if o != nil && o.Feedback != nil {
		return true
	}

	return false
}

// SetFeedback gets a reference to the given AnyOfmicrosoftGraphAlertFeedback and assigns it to the Feedback field.
func (o *MicrosoftGraphAlert) SetFeedback(v AnyOfmicrosoftGraphAlertFeedback) {
	o.Feedback = v
}

// GetFileStates returns the FileStates field value if set, zero value otherwise.
func (o *MicrosoftGraphAlert) GetFileStates() []*AnyOfmicrosoftGraphFileSecurityState {
	if o == nil || o.FileStates == nil {
		var ret []*AnyOfmicrosoftGraphFileSecurityState
		return ret
	}
	return *o.FileStates
}

// GetFileStatesOk returns a tuple with the FileStates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetFileStatesOk() (*[]*AnyOfmicrosoftGraphFileSecurityState, bool) {
	if o == nil || o.FileStates == nil {
		return nil, false
	}
	return o.FileStates, true
}

// HasFileStates returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasFileStates() bool {
	if o != nil && o.FileStates != nil {
		return true
	}

	return false
}

// SetFileStates gets a reference to the given []*AnyOfmicrosoftGraphFileSecurityState and assigns it to the FileStates field.
func (o *MicrosoftGraphAlert) SetFileStates(v []*AnyOfmicrosoftGraphFileSecurityState) {
	o.FileStates = &v
}

// GetHistoryStates returns the HistoryStates field value if set, zero value otherwise.
func (o *MicrosoftGraphAlert) GetHistoryStates() []*AnyOfmicrosoftGraphAlertHistoryState {
	if o == nil || o.HistoryStates == nil {
		var ret []*AnyOfmicrosoftGraphAlertHistoryState
		return ret
	}
	return *o.HistoryStates
}

// GetHistoryStatesOk returns a tuple with the HistoryStates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetHistoryStatesOk() (*[]*AnyOfmicrosoftGraphAlertHistoryState, bool) {
	if o == nil || o.HistoryStates == nil {
		return nil, false
	}
	return o.HistoryStates, true
}

// HasHistoryStates returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasHistoryStates() bool {
	if o != nil && o.HistoryStates != nil {
		return true
	}

	return false
}

// SetHistoryStates gets a reference to the given []*AnyOfmicrosoftGraphAlertHistoryState and assigns it to the HistoryStates field.
func (o *MicrosoftGraphAlert) SetHistoryStates(v []*AnyOfmicrosoftGraphAlertHistoryState) {
	o.HistoryStates = &v
}

// GetHostStates returns the HostStates field value if set, zero value otherwise.
func (o *MicrosoftGraphAlert) GetHostStates() []*AnyOfmicrosoftGraphHostSecurityState {
	if o == nil || o.HostStates == nil {
		var ret []*AnyOfmicrosoftGraphHostSecurityState
		return ret
	}
	return *o.HostStates
}

// GetHostStatesOk returns a tuple with the HostStates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetHostStatesOk() (*[]*AnyOfmicrosoftGraphHostSecurityState, bool) {
	if o == nil || o.HostStates == nil {
		return nil, false
	}
	return o.HostStates, true
}

// HasHostStates returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasHostStates() bool {
	if o != nil && o.HostStates != nil {
		return true
	}

	return false
}

// SetHostStates gets a reference to the given []*AnyOfmicrosoftGraphHostSecurityState and assigns it to the HostStates field.
func (o *MicrosoftGraphAlert) SetHostStates(v []*AnyOfmicrosoftGraphHostSecurityState) {
	o.HostStates = &v
}

// GetIncidentIds returns the IncidentIds field value if set, zero value otherwise.
func (o *MicrosoftGraphAlert) GetIncidentIds() []*string {
	if o == nil || o.IncidentIds == nil {
		var ret []*string
		return ret
	}
	return *o.IncidentIds
}

// GetIncidentIdsOk returns a tuple with the IncidentIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetIncidentIdsOk() (*[]*string, bool) {
	if o == nil || o.IncidentIds == nil {
		return nil, false
	}
	return o.IncidentIds, true
}

// HasIncidentIds returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasIncidentIds() bool {
	if o != nil && o.IncidentIds != nil {
		return true
	}

	return false
}

// SetIncidentIds gets a reference to the given []*string and assigns it to the IncidentIds field.
func (o *MicrosoftGraphAlert) SetIncidentIds(v []*string) {
	o.IncidentIds = &v
}

// GetInvestigationSecurityStates returns the InvestigationSecurityStates field value if set, zero value otherwise.
func (o *MicrosoftGraphAlert) GetInvestigationSecurityStates() []*AnyOfmicrosoftGraphInvestigationSecurityState {
	if o == nil || o.InvestigationSecurityStates == nil {
		var ret []*AnyOfmicrosoftGraphInvestigationSecurityState
		return ret
	}
	return *o.InvestigationSecurityStates
}

// GetInvestigationSecurityStatesOk returns a tuple with the InvestigationSecurityStates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetInvestigationSecurityStatesOk() (*[]*AnyOfmicrosoftGraphInvestigationSecurityState, bool) {
	if o == nil || o.InvestigationSecurityStates == nil {
		return nil, false
	}
	return o.InvestigationSecurityStates, true
}

// HasInvestigationSecurityStates returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasInvestigationSecurityStates() bool {
	if o != nil && o.InvestigationSecurityStates != nil {
		return true
	}

	return false
}

// SetInvestigationSecurityStates gets a reference to the given []*AnyOfmicrosoftGraphInvestigationSecurityState and assigns it to the InvestigationSecurityStates field.
func (o *MicrosoftGraphAlert) SetInvestigationSecurityStates(v []*AnyOfmicrosoftGraphInvestigationSecurityState) {
	o.InvestigationSecurityStates = &v
}

// GetLastEventDateTime returns the LastEventDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAlert) GetLastEventDateTime() time.Time {
	if o == nil || o.LastEventDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.LastEventDateTime.Get()
}

// GetLastEventDateTimeOk returns a tuple with the LastEventDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAlert) GetLastEventDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastEventDateTime.Get(), o.LastEventDateTime.IsSet()
}

// HasLastEventDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasLastEventDateTime() bool {
	if o != nil && o.LastEventDateTime.IsSet() {
		return true
	}

	return false
}

// SetLastEventDateTime gets a reference to the given NullableTime and assigns it to the LastEventDateTime field.
func (o *MicrosoftGraphAlert) SetLastEventDateTime(v time.Time) {
	o.LastEventDateTime.Set(&v)
}
// SetLastEventDateTimeNil sets the value for LastEventDateTime to be an explicit nil
func (o *MicrosoftGraphAlert) SetLastEventDateTimeNil() {
	o.LastEventDateTime.Set(nil)
}

// UnsetLastEventDateTime ensures that no value is present for LastEventDateTime, not even an explicit nil
func (o *MicrosoftGraphAlert) UnsetLastEventDateTime() {
	o.LastEventDateTime.Unset()
}

// GetLastModifiedDateTime returns the LastModifiedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAlert) GetLastModifiedDateTime() time.Time {
	if o == nil || o.LastModifiedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDateTime.Get()
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAlert) GetLastModifiedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastModifiedDateTime.Get(), o.LastModifiedDateTime.IsSet()
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasLastModifiedDateTime() bool {
	if o != nil && o.LastModifiedDateTime.IsSet() {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given NullableTime and assigns it to the LastModifiedDateTime field.
func (o *MicrosoftGraphAlert) SetLastModifiedDateTime(v time.Time) {
	o.LastModifiedDateTime.Set(&v)
}
// SetLastModifiedDateTimeNil sets the value for LastModifiedDateTime to be an explicit nil
func (o *MicrosoftGraphAlert) SetLastModifiedDateTimeNil() {
	o.LastModifiedDateTime.Set(nil)
}

// UnsetLastModifiedDateTime ensures that no value is present for LastModifiedDateTime, not even an explicit nil
func (o *MicrosoftGraphAlert) UnsetLastModifiedDateTime() {
	o.LastModifiedDateTime.Unset()
}

// GetMalwareStates returns the MalwareStates field value if set, zero value otherwise.
func (o *MicrosoftGraphAlert) GetMalwareStates() []*AnyOfmicrosoftGraphMalwareState {
	if o == nil || o.MalwareStates == nil {
		var ret []*AnyOfmicrosoftGraphMalwareState
		return ret
	}
	return *o.MalwareStates
}

// GetMalwareStatesOk returns a tuple with the MalwareStates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetMalwareStatesOk() (*[]*AnyOfmicrosoftGraphMalwareState, bool) {
	if o == nil || o.MalwareStates == nil {
		return nil, false
	}
	return o.MalwareStates, true
}

// HasMalwareStates returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasMalwareStates() bool {
	if o != nil && o.MalwareStates != nil {
		return true
	}

	return false
}

// SetMalwareStates gets a reference to the given []*AnyOfmicrosoftGraphMalwareState and assigns it to the MalwareStates field.
func (o *MicrosoftGraphAlert) SetMalwareStates(v []*AnyOfmicrosoftGraphMalwareState) {
	o.MalwareStates = &v
}

// GetMessageSecurityStates returns the MessageSecurityStates field value if set, zero value otherwise.
func (o *MicrosoftGraphAlert) GetMessageSecurityStates() []*AnyOfmicrosoftGraphMessageSecurityState {
	if o == nil || o.MessageSecurityStates == nil {
		var ret []*AnyOfmicrosoftGraphMessageSecurityState
		return ret
	}
	return *o.MessageSecurityStates
}

// GetMessageSecurityStatesOk returns a tuple with the MessageSecurityStates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetMessageSecurityStatesOk() (*[]*AnyOfmicrosoftGraphMessageSecurityState, bool) {
	if o == nil || o.MessageSecurityStates == nil {
		return nil, false
	}
	return o.MessageSecurityStates, true
}

// HasMessageSecurityStates returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasMessageSecurityStates() bool {
	if o != nil && o.MessageSecurityStates != nil {
		return true
	}

	return false
}

// SetMessageSecurityStates gets a reference to the given []*AnyOfmicrosoftGraphMessageSecurityState and assigns it to the MessageSecurityStates field.
func (o *MicrosoftGraphAlert) SetMessageSecurityStates(v []*AnyOfmicrosoftGraphMessageSecurityState) {
	o.MessageSecurityStates = &v
}

// GetNetworkConnections returns the NetworkConnections field value if set, zero value otherwise.
func (o *MicrosoftGraphAlert) GetNetworkConnections() []*AnyOfmicrosoftGraphNetworkConnection {
	if o == nil || o.NetworkConnections == nil {
		var ret []*AnyOfmicrosoftGraphNetworkConnection
		return ret
	}
	return *o.NetworkConnections
}

// GetNetworkConnectionsOk returns a tuple with the NetworkConnections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetNetworkConnectionsOk() (*[]*AnyOfmicrosoftGraphNetworkConnection, bool) {
	if o == nil || o.NetworkConnections == nil {
		return nil, false
	}
	return o.NetworkConnections, true
}

// HasNetworkConnections returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasNetworkConnections() bool {
	if o != nil && o.NetworkConnections != nil {
		return true
	}

	return false
}

// SetNetworkConnections gets a reference to the given []*AnyOfmicrosoftGraphNetworkConnection and assigns it to the NetworkConnections field.
func (o *MicrosoftGraphAlert) SetNetworkConnections(v []*AnyOfmicrosoftGraphNetworkConnection) {
	o.NetworkConnections = &v
}

// GetProcesses returns the Processes field value if set, zero value otherwise.
func (o *MicrosoftGraphAlert) GetProcesses() []*AnyOfmicrosoftGraphProcess {
	if o == nil || o.Processes == nil {
		var ret []*AnyOfmicrosoftGraphProcess
		return ret
	}
	return *o.Processes
}

// GetProcessesOk returns a tuple with the Processes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetProcessesOk() (*[]*AnyOfmicrosoftGraphProcess, bool) {
	if o == nil || o.Processes == nil {
		return nil, false
	}
	return o.Processes, true
}

// HasProcesses returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasProcesses() bool {
	if o != nil && o.Processes != nil {
		return true
	}

	return false
}

// SetProcesses gets a reference to the given []*AnyOfmicrosoftGraphProcess and assigns it to the Processes field.
func (o *MicrosoftGraphAlert) SetProcesses(v []*AnyOfmicrosoftGraphProcess) {
	o.Processes = &v
}

// GetRecommendedActions returns the RecommendedActions field value if set, zero value otherwise.
func (o *MicrosoftGraphAlert) GetRecommendedActions() []*string {
	if o == nil || o.RecommendedActions == nil {
		var ret []*string
		return ret
	}
	return *o.RecommendedActions
}

// GetRecommendedActionsOk returns a tuple with the RecommendedActions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetRecommendedActionsOk() (*[]*string, bool) {
	if o == nil || o.RecommendedActions == nil {
		return nil, false
	}
	return o.RecommendedActions, true
}

// HasRecommendedActions returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasRecommendedActions() bool {
	if o != nil && o.RecommendedActions != nil {
		return true
	}

	return false
}

// SetRecommendedActions gets a reference to the given []*string and assigns it to the RecommendedActions field.
func (o *MicrosoftGraphAlert) SetRecommendedActions(v []*string) {
	o.RecommendedActions = &v
}

// GetRegistryKeyStates returns the RegistryKeyStates field value if set, zero value otherwise.
func (o *MicrosoftGraphAlert) GetRegistryKeyStates() []*AnyOfmicrosoftGraphRegistryKeyState {
	if o == nil || o.RegistryKeyStates == nil {
		var ret []*AnyOfmicrosoftGraphRegistryKeyState
		return ret
	}
	return *o.RegistryKeyStates
}

// GetRegistryKeyStatesOk returns a tuple with the RegistryKeyStates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetRegistryKeyStatesOk() (*[]*AnyOfmicrosoftGraphRegistryKeyState, bool) {
	if o == nil || o.RegistryKeyStates == nil {
		return nil, false
	}
	return o.RegistryKeyStates, true
}

// HasRegistryKeyStates returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasRegistryKeyStates() bool {
	if o != nil && o.RegistryKeyStates != nil {
		return true
	}

	return false
}

// SetRegistryKeyStates gets a reference to the given []*AnyOfmicrosoftGraphRegistryKeyState and assigns it to the RegistryKeyStates field.
func (o *MicrosoftGraphAlert) SetRegistryKeyStates(v []*AnyOfmicrosoftGraphRegistryKeyState) {
	o.RegistryKeyStates = &v
}

// GetSecurityResources returns the SecurityResources field value if set, zero value otherwise.
func (o *MicrosoftGraphAlert) GetSecurityResources() []*AnyOfmicrosoftGraphSecurityResource {
	if o == nil || o.SecurityResources == nil {
		var ret []*AnyOfmicrosoftGraphSecurityResource
		return ret
	}
	return *o.SecurityResources
}

// GetSecurityResourcesOk returns a tuple with the SecurityResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetSecurityResourcesOk() (*[]*AnyOfmicrosoftGraphSecurityResource, bool) {
	if o == nil || o.SecurityResources == nil {
		return nil, false
	}
	return o.SecurityResources, true
}

// HasSecurityResources returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasSecurityResources() bool {
	if o != nil && o.SecurityResources != nil {
		return true
	}

	return false
}

// SetSecurityResources gets a reference to the given []*AnyOfmicrosoftGraphSecurityResource and assigns it to the SecurityResources field.
func (o *MicrosoftGraphAlert) SetSecurityResources(v []*AnyOfmicrosoftGraphSecurityResource) {
	o.SecurityResources = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAlert) GetSeverity() AnyOfmicrosoftGraphAlertSeverity {
	if o == nil  {
		var ret AnyOfmicrosoftGraphAlertSeverity
		return ret
	}
	return o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAlert) GetSeverityOk() (*AnyOfmicrosoftGraphAlertSeverity, bool) {
	if o == nil || o.Severity == nil {
		return nil, false
	}
	return &o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasSeverity() bool {
	if o != nil && o.Severity != nil {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given AnyOfmicrosoftGraphAlertSeverity and assigns it to the Severity field.
func (o *MicrosoftGraphAlert) SetSeverity(v AnyOfmicrosoftGraphAlertSeverity) {
	o.Severity = v
}

// GetSourceMaterials returns the SourceMaterials field value if set, zero value otherwise.
func (o *MicrosoftGraphAlert) GetSourceMaterials() []*string {
	if o == nil || o.SourceMaterials == nil {
		var ret []*string
		return ret
	}
	return *o.SourceMaterials
}

// GetSourceMaterialsOk returns a tuple with the SourceMaterials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetSourceMaterialsOk() (*[]*string, bool) {
	if o == nil || o.SourceMaterials == nil {
		return nil, false
	}
	return o.SourceMaterials, true
}

// HasSourceMaterials returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasSourceMaterials() bool {
	if o != nil && o.SourceMaterials != nil {
		return true
	}

	return false
}

// SetSourceMaterials gets a reference to the given []*string and assigns it to the SourceMaterials field.
func (o *MicrosoftGraphAlert) SetSourceMaterials(v []*string) {
	o.SourceMaterials = &v
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAlert) GetStatus() AnyOfmicrosoftGraphAlertStatus {
	if o == nil  {
		var ret AnyOfmicrosoftGraphAlertStatus
		return ret
	}
	return o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAlert) GetStatusOk() (*AnyOfmicrosoftGraphAlertStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return &o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given AnyOfmicrosoftGraphAlertStatus and assigns it to the Status field.
func (o *MicrosoftGraphAlert) SetStatus(v AnyOfmicrosoftGraphAlertStatus) {
	o.Status = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *MicrosoftGraphAlert) GetTags() []*string {
	if o == nil || o.Tags == nil {
		var ret []*string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetTagsOk() (*[]*string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []*string and assigns it to the Tags field.
func (o *MicrosoftGraphAlert) SetTags(v []*string) {
	o.Tags = &v
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAlert) GetTitle() string {
	if o == nil || o.Title.Get() == nil {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAlert) GetTitleOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *MicrosoftGraphAlert) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *MicrosoftGraphAlert) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *MicrosoftGraphAlert) UnsetTitle() {
	o.Title.Unset()
}

// GetTriggers returns the Triggers field value if set, zero value otherwise.
func (o *MicrosoftGraphAlert) GetTriggers() []*AnyOfmicrosoftGraphAlertTrigger {
	if o == nil || o.Triggers == nil {
		var ret []*AnyOfmicrosoftGraphAlertTrigger
		return ret
	}
	return *o.Triggers
}

// GetTriggersOk returns a tuple with the Triggers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetTriggersOk() (*[]*AnyOfmicrosoftGraphAlertTrigger, bool) {
	if o == nil || o.Triggers == nil {
		return nil, false
	}
	return o.Triggers, true
}

// HasTriggers returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasTriggers() bool {
	if o != nil && o.Triggers != nil {
		return true
	}

	return false
}

// SetTriggers gets a reference to the given []*AnyOfmicrosoftGraphAlertTrigger and assigns it to the Triggers field.
func (o *MicrosoftGraphAlert) SetTriggers(v []*AnyOfmicrosoftGraphAlertTrigger) {
	o.Triggers = &v
}

// GetUriClickSecurityStates returns the UriClickSecurityStates field value if set, zero value otherwise.
func (o *MicrosoftGraphAlert) GetUriClickSecurityStates() []*AnyOfmicrosoftGraphUriClickSecurityState {
	if o == nil || o.UriClickSecurityStates == nil {
		var ret []*AnyOfmicrosoftGraphUriClickSecurityState
		return ret
	}
	return *o.UriClickSecurityStates
}

// GetUriClickSecurityStatesOk returns a tuple with the UriClickSecurityStates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetUriClickSecurityStatesOk() (*[]*AnyOfmicrosoftGraphUriClickSecurityState, bool) {
	if o == nil || o.UriClickSecurityStates == nil {
		return nil, false
	}
	return o.UriClickSecurityStates, true
}

// HasUriClickSecurityStates returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasUriClickSecurityStates() bool {
	if o != nil && o.UriClickSecurityStates != nil {
		return true
	}

	return false
}

// SetUriClickSecurityStates gets a reference to the given []*AnyOfmicrosoftGraphUriClickSecurityState and assigns it to the UriClickSecurityStates field.
func (o *MicrosoftGraphAlert) SetUriClickSecurityStates(v []*AnyOfmicrosoftGraphUriClickSecurityState) {
	o.UriClickSecurityStates = &v
}

// GetUserStates returns the UserStates field value if set, zero value otherwise.
func (o *MicrosoftGraphAlert) GetUserStates() []*AnyOfmicrosoftGraphUserSecurityState {
	if o == nil || o.UserStates == nil {
		var ret []*AnyOfmicrosoftGraphUserSecurityState
		return ret
	}
	return *o.UserStates
}

// GetUserStatesOk returns a tuple with the UserStates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetUserStatesOk() (*[]*AnyOfmicrosoftGraphUserSecurityState, bool) {
	if o == nil || o.UserStates == nil {
		return nil, false
	}
	return o.UserStates, true
}

// HasUserStates returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasUserStates() bool {
	if o != nil && o.UserStates != nil {
		return true
	}

	return false
}

// SetUserStates gets a reference to the given []*AnyOfmicrosoftGraphUserSecurityState and assigns it to the UserStates field.
func (o *MicrosoftGraphAlert) SetUserStates(v []*AnyOfmicrosoftGraphUserSecurityState) {
	o.UserStates = &v
}

// GetVendorInformation returns the VendorInformation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAlert) GetVendorInformation() AnyOfmicrosoftGraphSecurityVendorInformation {
	if o == nil  {
		var ret AnyOfmicrosoftGraphSecurityVendorInformation
		return ret
	}
	return o.VendorInformation
}

// GetVendorInformationOk returns a tuple with the VendorInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAlert) GetVendorInformationOk() (*AnyOfmicrosoftGraphSecurityVendorInformation, bool) {
	if o == nil || o.VendorInformation == nil {
		return nil, false
	}
	return &o.VendorInformation, true
}

// HasVendorInformation returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasVendorInformation() bool {
	if o != nil && o.VendorInformation != nil {
		return true
	}

	return false
}

// SetVendorInformation gets a reference to the given AnyOfmicrosoftGraphSecurityVendorInformation and assigns it to the VendorInformation field.
func (o *MicrosoftGraphAlert) SetVendorInformation(v AnyOfmicrosoftGraphSecurityVendorInformation) {
	o.VendorInformation = v
}

// GetVulnerabilityStates returns the VulnerabilityStates field value if set, zero value otherwise.
func (o *MicrosoftGraphAlert) GetVulnerabilityStates() []*AnyOfmicrosoftGraphVulnerabilityState {
	if o == nil || o.VulnerabilityStates == nil {
		var ret []*AnyOfmicrosoftGraphVulnerabilityState
		return ret
	}
	return *o.VulnerabilityStates
}

// GetVulnerabilityStatesOk returns a tuple with the VulnerabilityStates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetVulnerabilityStatesOk() (*[]*AnyOfmicrosoftGraphVulnerabilityState, bool) {
	if o == nil || o.VulnerabilityStates == nil {
		return nil, false
	}
	return o.VulnerabilityStates, true
}

// HasVulnerabilityStates returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasVulnerabilityStates() bool {
	if o != nil && o.VulnerabilityStates != nil {
		return true
	}

	return false
}

// SetVulnerabilityStates gets a reference to the given []*AnyOfmicrosoftGraphVulnerabilityState and assigns it to the VulnerabilityStates field.
func (o *MicrosoftGraphAlert) SetVulnerabilityStates(v []*AnyOfmicrosoftGraphVulnerabilityState) {
	o.VulnerabilityStates = &v
}

func (o MicrosoftGraphAlert) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ActivityGroupName.IsSet() {
		toSerialize["activityGroupName"] = o.ActivityGroupName.Get()
	}
	if o.AlertDetections != nil {
		toSerialize["alertDetections"] = o.AlertDetections
	}
	if o.AssignedTo.IsSet() {
		toSerialize["assignedTo"] = o.AssignedTo.Get()
	}
	if o.AzureSubscriptionId.IsSet() {
		toSerialize["azureSubscriptionId"] = o.AzureSubscriptionId.Get()
	}
	if o.AzureTenantId != nil {
		toSerialize["azureTenantId"] = o.AzureTenantId
	}
	if o.Category.IsSet() {
		toSerialize["category"] = o.Category.Get()
	}
	if o.ClosedDateTime.IsSet() {
		toSerialize["closedDateTime"] = o.ClosedDateTime.Get()
	}
	if o.CloudAppStates != nil {
		toSerialize["cloudAppStates"] = o.CloudAppStates
	}
	if o.Comments != nil {
		toSerialize["comments"] = o.Comments
	}
	if o.Confidence.IsSet() {
		toSerialize["confidence"] = o.Confidence.Get()
	}
	if o.CreatedDateTime.IsSet() {
		toSerialize["createdDateTime"] = o.CreatedDateTime.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.DetectionIds != nil {
		toSerialize["detectionIds"] = o.DetectionIds
	}
	if o.EventDateTime.IsSet() {
		toSerialize["eventDateTime"] = o.EventDateTime.Get()
	}
	if o.Feedback != nil {
		toSerialize["feedback"] = o.Feedback
	}
	if o.FileStates != nil {
		toSerialize["fileStates"] = o.FileStates
	}
	if o.HistoryStates != nil {
		toSerialize["historyStates"] = o.HistoryStates
	}
	if o.HostStates != nil {
		toSerialize["hostStates"] = o.HostStates
	}
	if o.IncidentIds != nil {
		toSerialize["incidentIds"] = o.IncidentIds
	}
	if o.InvestigationSecurityStates != nil {
		toSerialize["investigationSecurityStates"] = o.InvestigationSecurityStates
	}
	if o.LastEventDateTime.IsSet() {
		toSerialize["lastEventDateTime"] = o.LastEventDateTime.Get()
	}
	if o.LastModifiedDateTime.IsSet() {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime.Get()
	}
	if o.MalwareStates != nil {
		toSerialize["malwareStates"] = o.MalwareStates
	}
	if o.MessageSecurityStates != nil {
		toSerialize["messageSecurityStates"] = o.MessageSecurityStates
	}
	if o.NetworkConnections != nil {
		toSerialize["networkConnections"] = o.NetworkConnections
	}
	if o.Processes != nil {
		toSerialize["processes"] = o.Processes
	}
	if o.RecommendedActions != nil {
		toSerialize["recommendedActions"] = o.RecommendedActions
	}
	if o.RegistryKeyStates != nil {
		toSerialize["registryKeyStates"] = o.RegistryKeyStates
	}
	if o.SecurityResources != nil {
		toSerialize["securityResources"] = o.SecurityResources
	}
	if o.Severity != nil {
		toSerialize["severity"] = o.Severity
	}
	if o.SourceMaterials != nil {
		toSerialize["sourceMaterials"] = o.SourceMaterials
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.Triggers != nil {
		toSerialize["triggers"] = o.Triggers
	}
	if o.UriClickSecurityStates != nil {
		toSerialize["uriClickSecurityStates"] = o.UriClickSecurityStates
	}
	if o.UserStates != nil {
		toSerialize["userStates"] = o.UserStates
	}
	if o.VendorInformation != nil {
		toSerialize["vendorInformation"] = o.VendorInformation
	}
	if o.VulnerabilityStates != nil {
		toSerialize["vulnerabilityStates"] = o.VulnerabilityStates
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphAlert struct {
	value *MicrosoftGraphAlert
	isSet bool
}

func (v NullableMicrosoftGraphAlert) Get() *MicrosoftGraphAlert {
	return v.value
}

func (v *NullableMicrosoftGraphAlert) Set(val *MicrosoftGraphAlert) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphAlert) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphAlert) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphAlert(val *MicrosoftGraphAlert) *NullableMicrosoftGraphAlert {
	return &NullableMicrosoftGraphAlert{value: val, isSet: true}
}

func (v NullableMicrosoftGraphAlert) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphAlert) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


