/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphAssignedLabel struct for MicrosoftGraphAssignedLabel
type MicrosoftGraphAssignedLabel struct {
	// The display name of the label. Read-only.
	DisplayName NullableString `json:"displayName,omitempty"`
	// The unique identifier of the label.
	LabelId NullableString `json:"labelId,omitempty"`
}

// NewMicrosoftGraphAssignedLabel instantiates a new MicrosoftGraphAssignedLabel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphAssignedLabel() *MicrosoftGraphAssignedLabel {
	this := MicrosoftGraphAssignedLabel{}
	return &this
}

// NewMicrosoftGraphAssignedLabelWithDefaults instantiates a new MicrosoftGraphAssignedLabel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphAssignedLabelWithDefaults() *MicrosoftGraphAssignedLabel {
	this := MicrosoftGraphAssignedLabel{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAssignedLabel) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAssignedLabel) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphAssignedLabel) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *MicrosoftGraphAssignedLabel) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *MicrosoftGraphAssignedLabel) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *MicrosoftGraphAssignedLabel) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetLabelId returns the LabelId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphAssignedLabel) GetLabelId() string {
	if o == nil || o.LabelId.Get() == nil {
		var ret string
		return ret
	}
	return *o.LabelId.Get()
}

// GetLabelIdOk returns a tuple with the LabelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphAssignedLabel) GetLabelIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LabelId.Get(), o.LabelId.IsSet()
}

// HasLabelId returns a boolean if a field has been set.
func (o *MicrosoftGraphAssignedLabel) HasLabelId() bool {
	if o != nil && o.LabelId.IsSet() {
		return true
	}

	return false
}

// SetLabelId gets a reference to the given NullableString and assigns it to the LabelId field.
func (o *MicrosoftGraphAssignedLabel) SetLabelId(v string) {
	o.LabelId.Set(&v)
}
// SetLabelIdNil sets the value for LabelId to be an explicit nil
func (o *MicrosoftGraphAssignedLabel) SetLabelIdNil() {
	o.LabelId.Set(nil)
}

// UnsetLabelId ensures that no value is present for LabelId, not even an explicit nil
func (o *MicrosoftGraphAssignedLabel) UnsetLabelId() {
	o.LabelId.Unset()
}

func (o MicrosoftGraphAssignedLabel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.LabelId.IsSet() {
		toSerialize["labelId"] = o.LabelId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphAssignedLabel struct {
	value *MicrosoftGraphAssignedLabel
	isSet bool
}

func (v NullableMicrosoftGraphAssignedLabel) Get() *MicrosoftGraphAssignedLabel {
	return v.value
}

func (v *NullableMicrosoftGraphAssignedLabel) Set(val *MicrosoftGraphAssignedLabel) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphAssignedLabel) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphAssignedLabel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphAssignedLabel(val *MicrosoftGraphAssignedLabel) *NullableMicrosoftGraphAssignedLabel {
	return &NullableMicrosoftGraphAssignedLabel{value: val, isSet: true}
}

func (v NullableMicrosoftGraphAssignedLabel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphAssignedLabel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


