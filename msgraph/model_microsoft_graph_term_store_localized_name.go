/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphTermStoreLocalizedName struct for MicrosoftGraphTermStoreLocalizedName
type MicrosoftGraphTermStoreLocalizedName struct {
	// The language tag for the label.
	LanguageTag NullableString `json:"languageTag,omitempty"`
	// The name in the localized language.
	Name NullableString `json:"name,omitempty"`
}

// NewMicrosoftGraphTermStoreLocalizedName instantiates a new MicrosoftGraphTermStoreLocalizedName object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphTermStoreLocalizedName() *MicrosoftGraphTermStoreLocalizedName {
	this := MicrosoftGraphTermStoreLocalizedName{}
	return &this
}

// NewMicrosoftGraphTermStoreLocalizedNameWithDefaults instantiates a new MicrosoftGraphTermStoreLocalizedName object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphTermStoreLocalizedNameWithDefaults() *MicrosoftGraphTermStoreLocalizedName {
	this := MicrosoftGraphTermStoreLocalizedName{}
	return &this
}

// GetLanguageTag returns the LanguageTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTermStoreLocalizedName) GetLanguageTag() string {
	if o == nil || o.LanguageTag.Get() == nil {
		var ret string
		return ret
	}
	return *o.LanguageTag.Get()
}

// GetLanguageTagOk returns a tuple with the LanguageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTermStoreLocalizedName) GetLanguageTagOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LanguageTag.Get(), o.LanguageTag.IsSet()
}

// HasLanguageTag returns a boolean if a field has been set.
func (o *MicrosoftGraphTermStoreLocalizedName) HasLanguageTag() bool {
	if o != nil && o.LanguageTag.IsSet() {
		return true
	}

	return false
}

// SetLanguageTag gets a reference to the given NullableString and assigns it to the LanguageTag field.
func (o *MicrosoftGraphTermStoreLocalizedName) SetLanguageTag(v string) {
	o.LanguageTag.Set(&v)
}
// SetLanguageTagNil sets the value for LanguageTag to be an explicit nil
func (o *MicrosoftGraphTermStoreLocalizedName) SetLanguageTagNil() {
	o.LanguageTag.Set(nil)
}

// UnsetLanguageTag ensures that no value is present for LanguageTag, not even an explicit nil
func (o *MicrosoftGraphTermStoreLocalizedName) UnsetLanguageTag() {
	o.LanguageTag.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphTermStoreLocalizedName) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphTermStoreLocalizedName) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *MicrosoftGraphTermStoreLocalizedName) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *MicrosoftGraphTermStoreLocalizedName) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *MicrosoftGraphTermStoreLocalizedName) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *MicrosoftGraphTermStoreLocalizedName) UnsetName() {
	o.Name.Unset()
}

func (o MicrosoftGraphTermStoreLocalizedName) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LanguageTag.IsSet() {
		toSerialize["languageTag"] = o.LanguageTag.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphTermStoreLocalizedName struct {
	value *MicrosoftGraphTermStoreLocalizedName
	isSet bool
}

func (v NullableMicrosoftGraphTermStoreLocalizedName) Get() *MicrosoftGraphTermStoreLocalizedName {
	return v.value
}

func (v *NullableMicrosoftGraphTermStoreLocalizedName) Set(val *MicrosoftGraphTermStoreLocalizedName) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphTermStoreLocalizedName) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphTermStoreLocalizedName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphTermStoreLocalizedName(val *MicrosoftGraphTermStoreLocalizedName) *NullableMicrosoftGraphTermStoreLocalizedName {
	return &NullableMicrosoftGraphTermStoreLocalizedName{value: val, isSet: true}
}

func (v NullableMicrosoftGraphTermStoreLocalizedName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphTermStoreLocalizedName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


