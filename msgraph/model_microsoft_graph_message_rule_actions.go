/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphMessageRuleActions struct for MicrosoftGraphMessageRuleActions
type MicrosoftGraphMessageRuleActions struct {
	// A list of categories to be assigned to a message.
	AssignCategories *[]*string `json:"assignCategories,omitempty"`
	// The ID of a folder that a message is to be copied to.
	CopyToFolder NullableString `json:"copyToFolder,omitempty"`
	// Indicates whether a message should be moved to the Deleted Items folder.
	Delete NullableBool `json:"delete,omitempty"`
	// The email addresses of the recipients to which a message should be forwarded as an attachment.
	ForwardAsAttachmentTo *[]*AnyOfmicrosoftGraphRecipient `json:"forwardAsAttachmentTo,omitempty"`
	// The email addresses of the recipients to which a message should be forwarded.
	ForwardTo *[]*AnyOfmicrosoftGraphRecipient `json:"forwardTo,omitempty"`
	// Indicates whether a message should be marked as read.
	MarkAsRead NullableBool `json:"markAsRead,omitempty"`
	// Sets the importance of the message, which can be: low, normal, high.
	MarkImportance AnyOfmicrosoftGraphImportance `json:"markImportance,omitempty"`
	// The ID of the folder that a message will be moved to.
	MoveToFolder NullableString `json:"moveToFolder,omitempty"`
	// Indicates whether a message should be permanently deleted and not saved to the Deleted Items folder.
	PermanentDelete NullableBool `json:"permanentDelete,omitempty"`
	// The email addresses to which a message should be redirected.
	RedirectTo *[]*AnyOfmicrosoftGraphRecipient `json:"redirectTo,omitempty"`
	// Indicates whether subsequent rules should be evaluated.
	StopProcessingRules NullableBool `json:"stopProcessingRules,omitempty"`
}

// NewMicrosoftGraphMessageRuleActions instantiates a new MicrosoftGraphMessageRuleActions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphMessageRuleActions() *MicrosoftGraphMessageRuleActions {
	this := MicrosoftGraphMessageRuleActions{}
	return &this
}

// NewMicrosoftGraphMessageRuleActionsWithDefaults instantiates a new MicrosoftGraphMessageRuleActions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphMessageRuleActionsWithDefaults() *MicrosoftGraphMessageRuleActions {
	this := MicrosoftGraphMessageRuleActions{}
	return &this
}

// GetAssignCategories returns the AssignCategories field value if set, zero value otherwise.
func (o *MicrosoftGraphMessageRuleActions) GetAssignCategories() []*string {
	if o == nil || o.AssignCategories == nil {
		var ret []*string
		return ret
	}
	return *o.AssignCategories
}

// GetAssignCategoriesOk returns a tuple with the AssignCategories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRuleActions) GetAssignCategoriesOk() (*[]*string, bool) {
	if o == nil || o.AssignCategories == nil {
		return nil, false
	}
	return o.AssignCategories, true
}

// HasAssignCategories returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRuleActions) HasAssignCategories() bool {
	if o != nil && o.AssignCategories != nil {
		return true
	}

	return false
}

// SetAssignCategories gets a reference to the given []*string and assigns it to the AssignCategories field.
func (o *MicrosoftGraphMessageRuleActions) SetAssignCategories(v []*string) {
	o.AssignCategories = &v
}

// GetCopyToFolder returns the CopyToFolder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMessageRuleActions) GetCopyToFolder() string {
	if o == nil || o.CopyToFolder.Get() == nil {
		var ret string
		return ret
	}
	return *o.CopyToFolder.Get()
}

// GetCopyToFolderOk returns a tuple with the CopyToFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMessageRuleActions) GetCopyToFolderOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CopyToFolder.Get(), o.CopyToFolder.IsSet()
}

// HasCopyToFolder returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRuleActions) HasCopyToFolder() bool {
	if o != nil && o.CopyToFolder.IsSet() {
		return true
	}

	return false
}

// SetCopyToFolder gets a reference to the given NullableString and assigns it to the CopyToFolder field.
func (o *MicrosoftGraphMessageRuleActions) SetCopyToFolder(v string) {
	o.CopyToFolder.Set(&v)
}
// SetCopyToFolderNil sets the value for CopyToFolder to be an explicit nil
func (o *MicrosoftGraphMessageRuleActions) SetCopyToFolderNil() {
	o.CopyToFolder.Set(nil)
}

// UnsetCopyToFolder ensures that no value is present for CopyToFolder, not even an explicit nil
func (o *MicrosoftGraphMessageRuleActions) UnsetCopyToFolder() {
	o.CopyToFolder.Unset()
}

// GetDelete returns the Delete field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMessageRuleActions) GetDelete() bool {
	if o == nil || o.Delete.Get() == nil {
		var ret bool
		return ret
	}
	return *o.Delete.Get()
}

// GetDeleteOk returns a tuple with the Delete field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMessageRuleActions) GetDeleteOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Delete.Get(), o.Delete.IsSet()
}

// HasDelete returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRuleActions) HasDelete() bool {
	if o != nil && o.Delete.IsSet() {
		return true
	}

	return false
}

// SetDelete gets a reference to the given NullableBool and assigns it to the Delete field.
func (o *MicrosoftGraphMessageRuleActions) SetDelete(v bool) {
	o.Delete.Set(&v)
}
// SetDeleteNil sets the value for Delete to be an explicit nil
func (o *MicrosoftGraphMessageRuleActions) SetDeleteNil() {
	o.Delete.Set(nil)
}

// UnsetDelete ensures that no value is present for Delete, not even an explicit nil
func (o *MicrosoftGraphMessageRuleActions) UnsetDelete() {
	o.Delete.Unset()
}

// GetForwardAsAttachmentTo returns the ForwardAsAttachmentTo field value if set, zero value otherwise.
func (o *MicrosoftGraphMessageRuleActions) GetForwardAsAttachmentTo() []*AnyOfmicrosoftGraphRecipient {
	if o == nil || o.ForwardAsAttachmentTo == nil {
		var ret []*AnyOfmicrosoftGraphRecipient
		return ret
	}
	return *o.ForwardAsAttachmentTo
}

// GetForwardAsAttachmentToOk returns a tuple with the ForwardAsAttachmentTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRuleActions) GetForwardAsAttachmentToOk() (*[]*AnyOfmicrosoftGraphRecipient, bool) {
	if o == nil || o.ForwardAsAttachmentTo == nil {
		return nil, false
	}
	return o.ForwardAsAttachmentTo, true
}

// HasForwardAsAttachmentTo returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRuleActions) HasForwardAsAttachmentTo() bool {
	if o != nil && o.ForwardAsAttachmentTo != nil {
		return true
	}

	return false
}

// SetForwardAsAttachmentTo gets a reference to the given []*AnyOfmicrosoftGraphRecipient and assigns it to the ForwardAsAttachmentTo field.
func (o *MicrosoftGraphMessageRuleActions) SetForwardAsAttachmentTo(v []*AnyOfmicrosoftGraphRecipient) {
	o.ForwardAsAttachmentTo = &v
}

// GetForwardTo returns the ForwardTo field value if set, zero value otherwise.
func (o *MicrosoftGraphMessageRuleActions) GetForwardTo() []*AnyOfmicrosoftGraphRecipient {
	if o == nil || o.ForwardTo == nil {
		var ret []*AnyOfmicrosoftGraphRecipient
		return ret
	}
	return *o.ForwardTo
}

// GetForwardToOk returns a tuple with the ForwardTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRuleActions) GetForwardToOk() (*[]*AnyOfmicrosoftGraphRecipient, bool) {
	if o == nil || o.ForwardTo == nil {
		return nil, false
	}
	return o.ForwardTo, true
}

// HasForwardTo returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRuleActions) HasForwardTo() bool {
	if o != nil && o.ForwardTo != nil {
		return true
	}

	return false
}

// SetForwardTo gets a reference to the given []*AnyOfmicrosoftGraphRecipient and assigns it to the ForwardTo field.
func (o *MicrosoftGraphMessageRuleActions) SetForwardTo(v []*AnyOfmicrosoftGraphRecipient) {
	o.ForwardTo = &v
}

// GetMarkAsRead returns the MarkAsRead field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMessageRuleActions) GetMarkAsRead() bool {
	if o == nil || o.MarkAsRead.Get() == nil {
		var ret bool
		return ret
	}
	return *o.MarkAsRead.Get()
}

// GetMarkAsReadOk returns a tuple with the MarkAsRead field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMessageRuleActions) GetMarkAsReadOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MarkAsRead.Get(), o.MarkAsRead.IsSet()
}

// HasMarkAsRead returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRuleActions) HasMarkAsRead() bool {
	if o != nil && o.MarkAsRead.IsSet() {
		return true
	}

	return false
}

// SetMarkAsRead gets a reference to the given NullableBool and assigns it to the MarkAsRead field.
func (o *MicrosoftGraphMessageRuleActions) SetMarkAsRead(v bool) {
	o.MarkAsRead.Set(&v)
}
// SetMarkAsReadNil sets the value for MarkAsRead to be an explicit nil
func (o *MicrosoftGraphMessageRuleActions) SetMarkAsReadNil() {
	o.MarkAsRead.Set(nil)
}

// UnsetMarkAsRead ensures that no value is present for MarkAsRead, not even an explicit nil
func (o *MicrosoftGraphMessageRuleActions) UnsetMarkAsRead() {
	o.MarkAsRead.Unset()
}

// GetMarkImportance returns the MarkImportance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMessageRuleActions) GetMarkImportance() AnyOfmicrosoftGraphImportance {
	if o == nil  {
		var ret AnyOfmicrosoftGraphImportance
		return ret
	}
	return o.MarkImportance
}

// GetMarkImportanceOk returns a tuple with the MarkImportance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMessageRuleActions) GetMarkImportanceOk() (*AnyOfmicrosoftGraphImportance, bool) {
	if o == nil || o.MarkImportance == nil {
		return nil, false
	}
	return &o.MarkImportance, true
}

// HasMarkImportance returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRuleActions) HasMarkImportance() bool {
	if o != nil && o.MarkImportance != nil {
		return true
	}

	return false
}

// SetMarkImportance gets a reference to the given AnyOfmicrosoftGraphImportance and assigns it to the MarkImportance field.
func (o *MicrosoftGraphMessageRuleActions) SetMarkImportance(v AnyOfmicrosoftGraphImportance) {
	o.MarkImportance = v
}

// GetMoveToFolder returns the MoveToFolder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMessageRuleActions) GetMoveToFolder() string {
	if o == nil || o.MoveToFolder.Get() == nil {
		var ret string
		return ret
	}
	return *o.MoveToFolder.Get()
}

// GetMoveToFolderOk returns a tuple with the MoveToFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMessageRuleActions) GetMoveToFolderOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MoveToFolder.Get(), o.MoveToFolder.IsSet()
}

// HasMoveToFolder returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRuleActions) HasMoveToFolder() bool {
	if o != nil && o.MoveToFolder.IsSet() {
		return true
	}

	return false
}

// SetMoveToFolder gets a reference to the given NullableString and assigns it to the MoveToFolder field.
func (o *MicrosoftGraphMessageRuleActions) SetMoveToFolder(v string) {
	o.MoveToFolder.Set(&v)
}
// SetMoveToFolderNil sets the value for MoveToFolder to be an explicit nil
func (o *MicrosoftGraphMessageRuleActions) SetMoveToFolderNil() {
	o.MoveToFolder.Set(nil)
}

// UnsetMoveToFolder ensures that no value is present for MoveToFolder, not even an explicit nil
func (o *MicrosoftGraphMessageRuleActions) UnsetMoveToFolder() {
	o.MoveToFolder.Unset()
}

// GetPermanentDelete returns the PermanentDelete field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMessageRuleActions) GetPermanentDelete() bool {
	if o == nil || o.PermanentDelete.Get() == nil {
		var ret bool
		return ret
	}
	return *o.PermanentDelete.Get()
}

// GetPermanentDeleteOk returns a tuple with the PermanentDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMessageRuleActions) GetPermanentDeleteOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PermanentDelete.Get(), o.PermanentDelete.IsSet()
}

// HasPermanentDelete returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRuleActions) HasPermanentDelete() bool {
	if o != nil && o.PermanentDelete.IsSet() {
		return true
	}

	return false
}

// SetPermanentDelete gets a reference to the given NullableBool and assigns it to the PermanentDelete field.
func (o *MicrosoftGraphMessageRuleActions) SetPermanentDelete(v bool) {
	o.PermanentDelete.Set(&v)
}
// SetPermanentDeleteNil sets the value for PermanentDelete to be an explicit nil
func (o *MicrosoftGraphMessageRuleActions) SetPermanentDeleteNil() {
	o.PermanentDelete.Set(nil)
}

// UnsetPermanentDelete ensures that no value is present for PermanentDelete, not even an explicit nil
func (o *MicrosoftGraphMessageRuleActions) UnsetPermanentDelete() {
	o.PermanentDelete.Unset()
}

// GetRedirectTo returns the RedirectTo field value if set, zero value otherwise.
func (o *MicrosoftGraphMessageRuleActions) GetRedirectTo() []*AnyOfmicrosoftGraphRecipient {
	if o == nil || o.RedirectTo == nil {
		var ret []*AnyOfmicrosoftGraphRecipient
		return ret
	}
	return *o.RedirectTo
}

// GetRedirectToOk returns a tuple with the RedirectTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRuleActions) GetRedirectToOk() (*[]*AnyOfmicrosoftGraphRecipient, bool) {
	if o == nil || o.RedirectTo == nil {
		return nil, false
	}
	return o.RedirectTo, true
}

// HasRedirectTo returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRuleActions) HasRedirectTo() bool {
	if o != nil && o.RedirectTo != nil {
		return true
	}

	return false
}

// SetRedirectTo gets a reference to the given []*AnyOfmicrosoftGraphRecipient and assigns it to the RedirectTo field.
func (o *MicrosoftGraphMessageRuleActions) SetRedirectTo(v []*AnyOfmicrosoftGraphRecipient) {
	o.RedirectTo = &v
}

// GetStopProcessingRules returns the StopProcessingRules field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphMessageRuleActions) GetStopProcessingRules() bool {
	if o == nil || o.StopProcessingRules.Get() == nil {
		var ret bool
		return ret
	}
	return *o.StopProcessingRules.Get()
}

// GetStopProcessingRulesOk returns a tuple with the StopProcessingRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphMessageRuleActions) GetStopProcessingRulesOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StopProcessingRules.Get(), o.StopProcessingRules.IsSet()
}

// HasStopProcessingRules returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRuleActions) HasStopProcessingRules() bool {
	if o != nil && o.StopProcessingRules.IsSet() {
		return true
	}

	return false
}

// SetStopProcessingRules gets a reference to the given NullableBool and assigns it to the StopProcessingRules field.
func (o *MicrosoftGraphMessageRuleActions) SetStopProcessingRules(v bool) {
	o.StopProcessingRules.Set(&v)
}
// SetStopProcessingRulesNil sets the value for StopProcessingRules to be an explicit nil
func (o *MicrosoftGraphMessageRuleActions) SetStopProcessingRulesNil() {
	o.StopProcessingRules.Set(nil)
}

// UnsetStopProcessingRules ensures that no value is present for StopProcessingRules, not even an explicit nil
func (o *MicrosoftGraphMessageRuleActions) UnsetStopProcessingRules() {
	o.StopProcessingRules.Unset()
}

func (o MicrosoftGraphMessageRuleActions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AssignCategories != nil {
		toSerialize["assignCategories"] = o.AssignCategories
	}
	if o.CopyToFolder.IsSet() {
		toSerialize["copyToFolder"] = o.CopyToFolder.Get()
	}
	if o.Delete.IsSet() {
		toSerialize["delete"] = o.Delete.Get()
	}
	if o.ForwardAsAttachmentTo != nil {
		toSerialize["forwardAsAttachmentTo"] = o.ForwardAsAttachmentTo
	}
	if o.ForwardTo != nil {
		toSerialize["forwardTo"] = o.ForwardTo
	}
	if o.MarkAsRead.IsSet() {
		toSerialize["markAsRead"] = o.MarkAsRead.Get()
	}
	if o.MarkImportance != nil {
		toSerialize["markImportance"] = o.MarkImportance
	}
	if o.MoveToFolder.IsSet() {
		toSerialize["moveToFolder"] = o.MoveToFolder.Get()
	}
	if o.PermanentDelete.IsSet() {
		toSerialize["permanentDelete"] = o.PermanentDelete.Get()
	}
	if o.RedirectTo != nil {
		toSerialize["redirectTo"] = o.RedirectTo
	}
	if o.StopProcessingRules.IsSet() {
		toSerialize["stopProcessingRules"] = o.StopProcessingRules.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphMessageRuleActions struct {
	value *MicrosoftGraphMessageRuleActions
	isSet bool
}

func (v NullableMicrosoftGraphMessageRuleActions) Get() *MicrosoftGraphMessageRuleActions {
	return v.value
}

func (v *NullableMicrosoftGraphMessageRuleActions) Set(val *MicrosoftGraphMessageRuleActions) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphMessageRuleActions) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphMessageRuleActions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphMessageRuleActions(val *MicrosoftGraphMessageRuleActions) *NullableMicrosoftGraphMessageRuleActions {
	return &NullableMicrosoftGraphMessageRuleActions{value: val, isSet: true}
}

func (v NullableMicrosoftGraphMessageRuleActions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphMessageRuleActions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


