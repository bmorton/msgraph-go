/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PrintUsageByUser struct for PrintUsageByUser
type PrintUsageByUser struct {
	// The UPN of the user represented by these statistics.
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
}

// NewPrintUsageByUser instantiates a new PrintUsageByUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrintUsageByUser() *PrintUsageByUser {
	this := PrintUsageByUser{}
	return &this
}

// NewPrintUsageByUserWithDefaults instantiates a new PrintUsageByUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrintUsageByUserWithDefaults() *PrintUsageByUser {
	this := PrintUsageByUser{}
	return &this
}

// GetUserPrincipalName returns the UserPrincipalName field value if set, zero value otherwise.
func (o *PrintUsageByUser) GetUserPrincipalName() string {
	if o == nil || o.UserPrincipalName == nil {
		var ret string
		return ret
	}
	return *o.UserPrincipalName
}

// GetUserPrincipalNameOk returns a tuple with the UserPrincipalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrintUsageByUser) GetUserPrincipalNameOk() (*string, bool) {
	if o == nil || o.UserPrincipalName == nil {
		return nil, false
	}
	return o.UserPrincipalName, true
}

// HasUserPrincipalName returns a boolean if a field has been set.
func (o *PrintUsageByUser) HasUserPrincipalName() bool {
	if o != nil && o.UserPrincipalName != nil {
		return true
	}

	return false
}

// SetUserPrincipalName gets a reference to the given string and assigns it to the UserPrincipalName field.
func (o *PrintUsageByUser) SetUserPrincipalName(v string) {
	o.UserPrincipalName = &v
}

func (o PrintUsageByUser) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UserPrincipalName != nil {
		toSerialize["userPrincipalName"] = o.UserPrincipalName
	}
	return json.Marshal(toSerialize)
}

type NullablePrintUsageByUser struct {
	value *PrintUsageByUser
	isSet bool
}

func (v NullablePrintUsageByUser) Get() *PrintUsageByUser {
	return v.value
}

func (v *NullablePrintUsageByUser) Set(val *PrintUsageByUser) {
	v.value = val
	v.isSet = true
}

func (v NullablePrintUsageByUser) IsSet() bool {
	return v.isSet
}

func (v *NullablePrintUsageByUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrintUsageByUser(val *PrintUsageByUser) *NullablePrintUsageByUser {
	return &NullablePrintUsageByUser{value: val, isSet: true}
}

func (v NullablePrintUsageByUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrintUsageByUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


