/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphModality the model 'MicrosoftGraphModality'
type MicrosoftGraphModality string

// List of microsoft.graph.modality
const (
	AUDIO MicrosoftGraphModality = "audio"
	VIDEO MicrosoftGraphModality = "video"
	VIDEO_BASED_SCREEN_SHARING MicrosoftGraphModality = "videoBasedScreenSharing"
	DATA MicrosoftGraphModality = "data"
	UNKNOWN_FUTURE_VALUE MicrosoftGraphModality = "unknownFutureValue"
)

// All allowed values of MicrosoftGraphModality enum
var AllowedMicrosoftGraphModalityEnumValues = []MicrosoftGraphModality{
	"audio",
	"video",
	"videoBasedScreenSharing",
	"data",
	"unknownFutureValue",
}

func (v *MicrosoftGraphModality) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphModality(value)
	for _, existing := range AllowedMicrosoftGraphModalityEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphModality", value)
}

// NewMicrosoftGraphModalityFromValue returns a pointer to a valid MicrosoftGraphModality
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphModalityFromValue(v string) (*MicrosoftGraphModality, error) {
	ev := MicrosoftGraphModality(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphModality: valid values are %v", v, AllowedMicrosoftGraphModalityEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphModality) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphModalityEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.modality value
func (v MicrosoftGraphModality) Ptr() *MicrosoftGraphModality {
	return &v
}

type NullableMicrosoftGraphModality struct {
	value *MicrosoftGraphModality
	isSet bool
}

func (v NullableMicrosoftGraphModality) Get() *MicrosoftGraphModality {
	return v.value
}

func (v *NullableMicrosoftGraphModality) Set(val *MicrosoftGraphModality) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphModality) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphModality) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphModality(val *MicrosoftGraphModality) *NullableMicrosoftGraphModality {
	return &NullableMicrosoftGraphModality{value: val, isSet: true}
}

func (v NullableMicrosoftGraphModality) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphModality) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

