/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// InlineObject1403 struct for InlineObject1403
type InlineObject1403 struct {
	Rate AnyOfobject `json:"rate,omitempty"`
	Per AnyOfobject `json:"per,omitempty"`
	Nper AnyOfobject `json:"nper,omitempty"`
	Pv AnyOfobject `json:"pv,omitempty"`
}

// NewInlineObject1403 instantiates a new InlineObject1403 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject1403() *InlineObject1403 {
	this := InlineObject1403{}
	return &this
}

// NewInlineObject1403WithDefaults instantiates a new InlineObject1403 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject1403WithDefaults() *InlineObject1403 {
	this := InlineObject1403{}
	return &this
}

// GetRate returns the Rate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1403) GetRate() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Rate
}

// GetRateOk returns a tuple with the Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1403) GetRateOk() (*AnyOfobject, bool) {
	if o == nil || o.Rate == nil {
		return nil, false
	}
	return &o.Rate, true
}

// HasRate returns a boolean if a field has been set.
func (o *InlineObject1403) HasRate() bool {
	if o != nil && o.Rate != nil {
		return true
	}

	return false
}

// SetRate gets a reference to the given AnyOfobject and assigns it to the Rate field.
func (o *InlineObject1403) SetRate(v AnyOfobject) {
	o.Rate = v
}

// GetPer returns the Per field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1403) GetPer() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Per
}

// GetPerOk returns a tuple with the Per field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1403) GetPerOk() (*AnyOfobject, bool) {
	if o == nil || o.Per == nil {
		return nil, false
	}
	return &o.Per, true
}

// HasPer returns a boolean if a field has been set.
func (o *InlineObject1403) HasPer() bool {
	if o != nil && o.Per != nil {
		return true
	}

	return false
}

// SetPer gets a reference to the given AnyOfobject and assigns it to the Per field.
func (o *InlineObject1403) SetPer(v AnyOfobject) {
	o.Per = v
}

// GetNper returns the Nper field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1403) GetNper() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Nper
}

// GetNperOk returns a tuple with the Nper field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1403) GetNperOk() (*AnyOfobject, bool) {
	if o == nil || o.Nper == nil {
		return nil, false
	}
	return &o.Nper, true
}

// HasNper returns a boolean if a field has been set.
func (o *InlineObject1403) HasNper() bool {
	if o != nil && o.Nper != nil {
		return true
	}

	return false
}

// SetNper gets a reference to the given AnyOfobject and assigns it to the Nper field.
func (o *InlineObject1403) SetNper(v AnyOfobject) {
	o.Nper = v
}

// GetPv returns the Pv field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1403) GetPv() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Pv
}

// GetPvOk returns a tuple with the Pv field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1403) GetPvOk() (*AnyOfobject, bool) {
	if o == nil || o.Pv == nil {
		return nil, false
	}
	return &o.Pv, true
}

// HasPv returns a boolean if a field has been set.
func (o *InlineObject1403) HasPv() bool {
	if o != nil && o.Pv != nil {
		return true
	}

	return false
}

// SetPv gets a reference to the given AnyOfobject and assigns it to the Pv field.
func (o *InlineObject1403) SetPv(v AnyOfobject) {
	o.Pv = v
}

func (o InlineObject1403) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Rate != nil {
		toSerialize["rate"] = o.Rate
	}
	if o.Per != nil {
		toSerialize["per"] = o.Per
	}
	if o.Nper != nil {
		toSerialize["nper"] = o.Nper
	}
	if o.Pv != nil {
		toSerialize["pv"] = o.Pv
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject1403 struct {
	value *InlineObject1403
	isSet bool
}

func (v NullableInlineObject1403) Get() *InlineObject1403 {
	return v.value
}

func (v *NullableInlineObject1403) Set(val *InlineObject1403) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject1403) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject1403) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject1403(val *InlineObject1403) *NullableInlineObject1403 {
	return &NullableInlineObject1403{value: val, isSet: true}
}

func (v NullableInlineObject1403) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject1403) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


