/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
	"time"
)

// TelecomExpenseManagementPartner telecomExpenseManagementPartner resources represent the metadata and status of a given TEM service. Once your organization has onboarded with a partner, the partner can be enabled or disabled to switch TEM functionality on or off.
type TelecomExpenseManagementPartner struct {
	// Whether the partner's AAD app has been authorized to access Intune.
	AppAuthorized *bool `json:"appAuthorized,omitempty"`
	// Display name of the TEM partner.
	DisplayName NullableString `json:"displayName,omitempty"`
	// Whether Intune's connection to the TEM service is currently enabled or disabled.
	Enabled *bool `json:"enabled,omitempty"`
	// Timestamp of the last request sent to Intune by the TEM partner.
	LastConnectionDateTime *time.Time `json:"lastConnectionDateTime,omitempty"`
	// URL of the TEM partner's administrative control panel, where an administrator can configure their TEM service.
	Url NullableString `json:"url,omitempty"`
}

// NewTelecomExpenseManagementPartner instantiates a new TelecomExpenseManagementPartner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTelecomExpenseManagementPartner() *TelecomExpenseManagementPartner {
	this := TelecomExpenseManagementPartner{}
	return &this
}

// NewTelecomExpenseManagementPartnerWithDefaults instantiates a new TelecomExpenseManagementPartner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTelecomExpenseManagementPartnerWithDefaults() *TelecomExpenseManagementPartner {
	this := TelecomExpenseManagementPartner{}
	return &this
}

// GetAppAuthorized returns the AppAuthorized field value if set, zero value otherwise.
func (o *TelecomExpenseManagementPartner) GetAppAuthorized() bool {
	if o == nil || o.AppAuthorized == nil {
		var ret bool
		return ret
	}
	return *o.AppAuthorized
}

// GetAppAuthorizedOk returns a tuple with the AppAuthorized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TelecomExpenseManagementPartner) GetAppAuthorizedOk() (*bool, bool) {
	if o == nil || o.AppAuthorized == nil {
		return nil, false
	}
	return o.AppAuthorized, true
}

// HasAppAuthorized returns a boolean if a field has been set.
func (o *TelecomExpenseManagementPartner) HasAppAuthorized() bool {
	if o != nil && o.AppAuthorized != nil {
		return true
	}

	return false
}

// SetAppAuthorized gets a reference to the given bool and assigns it to the AppAuthorized field.
func (o *TelecomExpenseManagementPartner) SetAppAuthorized(v bool) {
	o.AppAuthorized = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TelecomExpenseManagementPartner) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TelecomExpenseManagementPartner) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *TelecomExpenseManagementPartner) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *TelecomExpenseManagementPartner) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *TelecomExpenseManagementPartner) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *TelecomExpenseManagementPartner) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *TelecomExpenseManagementPartner) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TelecomExpenseManagementPartner) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *TelecomExpenseManagementPartner) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *TelecomExpenseManagementPartner) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetLastConnectionDateTime returns the LastConnectionDateTime field value if set, zero value otherwise.
func (o *TelecomExpenseManagementPartner) GetLastConnectionDateTime() time.Time {
	if o == nil || o.LastConnectionDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastConnectionDateTime
}

// GetLastConnectionDateTimeOk returns a tuple with the LastConnectionDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TelecomExpenseManagementPartner) GetLastConnectionDateTimeOk() (*time.Time, bool) {
	if o == nil || o.LastConnectionDateTime == nil {
		return nil, false
	}
	return o.LastConnectionDateTime, true
}

// HasLastConnectionDateTime returns a boolean if a field has been set.
func (o *TelecomExpenseManagementPartner) HasLastConnectionDateTime() bool {
	if o != nil && o.LastConnectionDateTime != nil {
		return true
	}

	return false
}

// SetLastConnectionDateTime gets a reference to the given time.Time and assigns it to the LastConnectionDateTime field.
func (o *TelecomExpenseManagementPartner) SetLastConnectionDateTime(v time.Time) {
	o.LastConnectionDateTime = &v
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TelecomExpenseManagementPartner) GetUrl() string {
	if o == nil || o.Url.Get() == nil {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TelecomExpenseManagementPartner) GetUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *TelecomExpenseManagementPartner) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *TelecomExpenseManagementPartner) SetUrl(v string) {
	o.Url.Set(&v)
}
// SetUrlNil sets the value for Url to be an explicit nil
func (o *TelecomExpenseManagementPartner) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *TelecomExpenseManagementPartner) UnsetUrl() {
	o.Url.Unset()
}

func (o TelecomExpenseManagementPartner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AppAuthorized != nil {
		toSerialize["appAuthorized"] = o.AppAuthorized
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.LastConnectionDateTime != nil {
		toSerialize["lastConnectionDateTime"] = o.LastConnectionDateTime
	}
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableTelecomExpenseManagementPartner struct {
	value *TelecomExpenseManagementPartner
	isSet bool
}

func (v NullableTelecomExpenseManagementPartner) Get() *TelecomExpenseManagementPartner {
	return v.value
}

func (v *NullableTelecomExpenseManagementPartner) Set(val *TelecomExpenseManagementPartner) {
	v.value = val
	v.isSet = true
}

func (v NullableTelecomExpenseManagementPartner) IsSet() bool {
	return v.isSet
}

func (v *NullableTelecomExpenseManagementPartner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTelecomExpenseManagementPartner(val *TelecomExpenseManagementPartner) *NullableTelecomExpenseManagementPartner {
	return &NullableTelecomExpenseManagementPartner{value: val, isSet: true}
}

func (v NullableTelecomExpenseManagementPartner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTelecomExpenseManagementPartner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


