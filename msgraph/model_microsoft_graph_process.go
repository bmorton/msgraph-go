/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphProcess struct for MicrosoftGraphProcess
type MicrosoftGraphProcess struct {
	// User account identifier (user account context the process ran under) for example, AccountName, SID, and so on.
	AccountName NullableString `json:"accountName,omitempty"`
	// The full process invocation commandline including all parameters.
	CommandLine NullableString `json:"commandLine,omitempty"`
	// Time at which the process was started. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
	CreatedDateTime NullableTime `json:"createdDateTime,omitempty"`
	// Complex type containing file hashes (cryptographic and location-sensitive).
	FileHash AnyOfmicrosoftGraphFileHash `json:"fileHash,omitempty"`
	// The integrity level of the process. Possible values are: unknown, untrusted, low, medium, high, system.
	IntegrityLevel AnyOfmicrosoftGraphProcessIntegrityLevel `json:"integrityLevel,omitempty"`
	// True if the process is elevated.
	IsElevated NullableBool `json:"isElevated,omitempty"`
	// The name of the process' Image file.
	Name NullableString `json:"name,omitempty"`
	// DateTime at which the parent process was started. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
	ParentProcessCreatedDateTime NullableTime `json:"parentProcessCreatedDateTime,omitempty"`
	// The Process ID (PID) of the parent process.
	ParentProcessId NullableInt32 `json:"parentProcessId,omitempty"`
	// The name of the image file of the parent process.
	ParentProcessName NullableString `json:"parentProcessName,omitempty"`
	// Full path, including filename.
	Path NullableString `json:"path,omitempty"`
	// The Process ID (PID) of the process.
	ProcessId NullableInt32 `json:"processId,omitempty"`
}

// NewMicrosoftGraphProcess instantiates a new MicrosoftGraphProcess object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphProcess() *MicrosoftGraphProcess {
	this := MicrosoftGraphProcess{}
	return &this
}

// NewMicrosoftGraphProcessWithDefaults instantiates a new MicrosoftGraphProcess object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphProcessWithDefaults() *MicrosoftGraphProcess {
	this := MicrosoftGraphProcess{}
	return &this
}

// GetAccountName returns the AccountName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphProcess) GetAccountName() string {
	if o == nil || o.AccountName.Get() == nil {
		var ret string
		return ret
	}
	return *o.AccountName.Get()
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphProcess) GetAccountNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AccountName.Get(), o.AccountName.IsSet()
}

// HasAccountName returns a boolean if a field has been set.
func (o *MicrosoftGraphProcess) HasAccountName() bool {
	if o != nil && o.AccountName.IsSet() {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given NullableString and assigns it to the AccountName field.
func (o *MicrosoftGraphProcess) SetAccountName(v string) {
	o.AccountName.Set(&v)
}
// SetAccountNameNil sets the value for AccountName to be an explicit nil
func (o *MicrosoftGraphProcess) SetAccountNameNil() {
	o.AccountName.Set(nil)
}

// UnsetAccountName ensures that no value is present for AccountName, not even an explicit nil
func (o *MicrosoftGraphProcess) UnsetAccountName() {
	o.AccountName.Unset()
}

// GetCommandLine returns the CommandLine field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphProcess) GetCommandLine() string {
	if o == nil || o.CommandLine.Get() == nil {
		var ret string
		return ret
	}
	return *o.CommandLine.Get()
}

// GetCommandLineOk returns a tuple with the CommandLine field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphProcess) GetCommandLineOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CommandLine.Get(), o.CommandLine.IsSet()
}

// HasCommandLine returns a boolean if a field has been set.
func (o *MicrosoftGraphProcess) HasCommandLine() bool {
	if o != nil && o.CommandLine.IsSet() {
		return true
	}

	return false
}

// SetCommandLine gets a reference to the given NullableString and assigns it to the CommandLine field.
func (o *MicrosoftGraphProcess) SetCommandLine(v string) {
	o.CommandLine.Set(&v)
}
// SetCommandLineNil sets the value for CommandLine to be an explicit nil
func (o *MicrosoftGraphProcess) SetCommandLineNil() {
	o.CommandLine.Set(nil)
}

// UnsetCommandLine ensures that no value is present for CommandLine, not even an explicit nil
func (o *MicrosoftGraphProcess) UnsetCommandLine() {
	o.CommandLine.Unset()
}

// GetCreatedDateTime returns the CreatedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphProcess) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime.Get()
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphProcess) GetCreatedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatedDateTime.Get(), o.CreatedDateTime.IsSet()
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphProcess) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime.IsSet() {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given NullableTime and assigns it to the CreatedDateTime field.
func (o *MicrosoftGraphProcess) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime.Set(&v)
}
// SetCreatedDateTimeNil sets the value for CreatedDateTime to be an explicit nil
func (o *MicrosoftGraphProcess) SetCreatedDateTimeNil() {
	o.CreatedDateTime.Set(nil)
}

// UnsetCreatedDateTime ensures that no value is present for CreatedDateTime, not even an explicit nil
func (o *MicrosoftGraphProcess) UnsetCreatedDateTime() {
	o.CreatedDateTime.Unset()
}

// GetFileHash returns the FileHash field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphProcess) GetFileHash() AnyOfmicrosoftGraphFileHash {
	if o == nil  {
		var ret AnyOfmicrosoftGraphFileHash
		return ret
	}
	return o.FileHash
}

// GetFileHashOk returns a tuple with the FileHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphProcess) GetFileHashOk() (*AnyOfmicrosoftGraphFileHash, bool) {
	if o == nil || o.FileHash == nil {
		return nil, false
	}
	return &o.FileHash, true
}

// HasFileHash returns a boolean if a field has been set.
func (o *MicrosoftGraphProcess) HasFileHash() bool {
	if o != nil && o.FileHash != nil {
		return true
	}

	return false
}

// SetFileHash gets a reference to the given AnyOfmicrosoftGraphFileHash and assigns it to the FileHash field.
func (o *MicrosoftGraphProcess) SetFileHash(v AnyOfmicrosoftGraphFileHash) {
	o.FileHash = v
}

// GetIntegrityLevel returns the IntegrityLevel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphProcess) GetIntegrityLevel() AnyOfmicrosoftGraphProcessIntegrityLevel {
	if o == nil  {
		var ret AnyOfmicrosoftGraphProcessIntegrityLevel
		return ret
	}
	return o.IntegrityLevel
}

// GetIntegrityLevelOk returns a tuple with the IntegrityLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphProcess) GetIntegrityLevelOk() (*AnyOfmicrosoftGraphProcessIntegrityLevel, bool) {
	if o == nil || o.IntegrityLevel == nil {
		return nil, false
	}
	return &o.IntegrityLevel, true
}

// HasIntegrityLevel returns a boolean if a field has been set.
func (o *MicrosoftGraphProcess) HasIntegrityLevel() bool {
	if o != nil && o.IntegrityLevel != nil {
		return true
	}

	return false
}

// SetIntegrityLevel gets a reference to the given AnyOfmicrosoftGraphProcessIntegrityLevel and assigns it to the IntegrityLevel field.
func (o *MicrosoftGraphProcess) SetIntegrityLevel(v AnyOfmicrosoftGraphProcessIntegrityLevel) {
	o.IntegrityLevel = v
}

// GetIsElevated returns the IsElevated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphProcess) GetIsElevated() bool {
	if o == nil || o.IsElevated.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsElevated.Get()
}

// GetIsElevatedOk returns a tuple with the IsElevated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphProcess) GetIsElevatedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsElevated.Get(), o.IsElevated.IsSet()
}

// HasIsElevated returns a boolean if a field has been set.
func (o *MicrosoftGraphProcess) HasIsElevated() bool {
	if o != nil && o.IsElevated.IsSet() {
		return true
	}

	return false
}

// SetIsElevated gets a reference to the given NullableBool and assigns it to the IsElevated field.
func (o *MicrosoftGraphProcess) SetIsElevated(v bool) {
	o.IsElevated.Set(&v)
}
// SetIsElevatedNil sets the value for IsElevated to be an explicit nil
func (o *MicrosoftGraphProcess) SetIsElevatedNil() {
	o.IsElevated.Set(nil)
}

// UnsetIsElevated ensures that no value is present for IsElevated, not even an explicit nil
func (o *MicrosoftGraphProcess) UnsetIsElevated() {
	o.IsElevated.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphProcess) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphProcess) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *MicrosoftGraphProcess) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *MicrosoftGraphProcess) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *MicrosoftGraphProcess) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *MicrosoftGraphProcess) UnsetName() {
	o.Name.Unset()
}

// GetParentProcessCreatedDateTime returns the ParentProcessCreatedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphProcess) GetParentProcessCreatedDateTime() time.Time {
	if o == nil || o.ParentProcessCreatedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.ParentProcessCreatedDateTime.Get()
}

// GetParentProcessCreatedDateTimeOk returns a tuple with the ParentProcessCreatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphProcess) GetParentProcessCreatedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ParentProcessCreatedDateTime.Get(), o.ParentProcessCreatedDateTime.IsSet()
}

// HasParentProcessCreatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphProcess) HasParentProcessCreatedDateTime() bool {
	if o != nil && o.ParentProcessCreatedDateTime.IsSet() {
		return true
	}

	return false
}

// SetParentProcessCreatedDateTime gets a reference to the given NullableTime and assigns it to the ParentProcessCreatedDateTime field.
func (o *MicrosoftGraphProcess) SetParentProcessCreatedDateTime(v time.Time) {
	o.ParentProcessCreatedDateTime.Set(&v)
}
// SetParentProcessCreatedDateTimeNil sets the value for ParentProcessCreatedDateTime to be an explicit nil
func (o *MicrosoftGraphProcess) SetParentProcessCreatedDateTimeNil() {
	o.ParentProcessCreatedDateTime.Set(nil)
}

// UnsetParentProcessCreatedDateTime ensures that no value is present for ParentProcessCreatedDateTime, not even an explicit nil
func (o *MicrosoftGraphProcess) UnsetParentProcessCreatedDateTime() {
	o.ParentProcessCreatedDateTime.Unset()
}

// GetParentProcessId returns the ParentProcessId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphProcess) GetParentProcessId() int32 {
	if o == nil || o.ParentProcessId.Get() == nil {
		var ret int32
		return ret
	}
	return *o.ParentProcessId.Get()
}

// GetParentProcessIdOk returns a tuple with the ParentProcessId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphProcess) GetParentProcessIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ParentProcessId.Get(), o.ParentProcessId.IsSet()
}

// HasParentProcessId returns a boolean if a field has been set.
func (o *MicrosoftGraphProcess) HasParentProcessId() bool {
	if o != nil && o.ParentProcessId.IsSet() {
		return true
	}

	return false
}

// SetParentProcessId gets a reference to the given NullableInt32 and assigns it to the ParentProcessId field.
func (o *MicrosoftGraphProcess) SetParentProcessId(v int32) {
	o.ParentProcessId.Set(&v)
}
// SetParentProcessIdNil sets the value for ParentProcessId to be an explicit nil
func (o *MicrosoftGraphProcess) SetParentProcessIdNil() {
	o.ParentProcessId.Set(nil)
}

// UnsetParentProcessId ensures that no value is present for ParentProcessId, not even an explicit nil
func (o *MicrosoftGraphProcess) UnsetParentProcessId() {
	o.ParentProcessId.Unset()
}

// GetParentProcessName returns the ParentProcessName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphProcess) GetParentProcessName() string {
	if o == nil || o.ParentProcessName.Get() == nil {
		var ret string
		return ret
	}
	return *o.ParentProcessName.Get()
}

// GetParentProcessNameOk returns a tuple with the ParentProcessName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphProcess) GetParentProcessNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ParentProcessName.Get(), o.ParentProcessName.IsSet()
}

// HasParentProcessName returns a boolean if a field has been set.
func (o *MicrosoftGraphProcess) HasParentProcessName() bool {
	if o != nil && o.ParentProcessName.IsSet() {
		return true
	}

	return false
}

// SetParentProcessName gets a reference to the given NullableString and assigns it to the ParentProcessName field.
func (o *MicrosoftGraphProcess) SetParentProcessName(v string) {
	o.ParentProcessName.Set(&v)
}
// SetParentProcessNameNil sets the value for ParentProcessName to be an explicit nil
func (o *MicrosoftGraphProcess) SetParentProcessNameNil() {
	o.ParentProcessName.Set(nil)
}

// UnsetParentProcessName ensures that no value is present for ParentProcessName, not even an explicit nil
func (o *MicrosoftGraphProcess) UnsetParentProcessName() {
	o.ParentProcessName.Unset()
}

// GetPath returns the Path field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphProcess) GetPath() string {
	if o == nil || o.Path.Get() == nil {
		var ret string
		return ret
	}
	return *o.Path.Get()
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphProcess) GetPathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Path.Get(), o.Path.IsSet()
}

// HasPath returns a boolean if a field has been set.
func (o *MicrosoftGraphProcess) HasPath() bool {
	if o != nil && o.Path.IsSet() {
		return true
	}

	return false
}

// SetPath gets a reference to the given NullableString and assigns it to the Path field.
func (o *MicrosoftGraphProcess) SetPath(v string) {
	o.Path.Set(&v)
}
// SetPathNil sets the value for Path to be an explicit nil
func (o *MicrosoftGraphProcess) SetPathNil() {
	o.Path.Set(nil)
}

// UnsetPath ensures that no value is present for Path, not even an explicit nil
func (o *MicrosoftGraphProcess) UnsetPath() {
	o.Path.Unset()
}

// GetProcessId returns the ProcessId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphProcess) GetProcessId() int32 {
	if o == nil || o.ProcessId.Get() == nil {
		var ret int32
		return ret
	}
	return *o.ProcessId.Get()
}

// GetProcessIdOk returns a tuple with the ProcessId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphProcess) GetProcessIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProcessId.Get(), o.ProcessId.IsSet()
}

// HasProcessId returns a boolean if a field has been set.
func (o *MicrosoftGraphProcess) HasProcessId() bool {
	if o != nil && o.ProcessId.IsSet() {
		return true
	}

	return false
}

// SetProcessId gets a reference to the given NullableInt32 and assigns it to the ProcessId field.
func (o *MicrosoftGraphProcess) SetProcessId(v int32) {
	o.ProcessId.Set(&v)
}
// SetProcessIdNil sets the value for ProcessId to be an explicit nil
func (o *MicrosoftGraphProcess) SetProcessIdNil() {
	o.ProcessId.Set(nil)
}

// UnsetProcessId ensures that no value is present for ProcessId, not even an explicit nil
func (o *MicrosoftGraphProcess) UnsetProcessId() {
	o.ProcessId.Unset()
}

func (o MicrosoftGraphProcess) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountName.IsSet() {
		toSerialize["accountName"] = o.AccountName.Get()
	}
	if o.CommandLine.IsSet() {
		toSerialize["commandLine"] = o.CommandLine.Get()
	}
	if o.CreatedDateTime.IsSet() {
		toSerialize["createdDateTime"] = o.CreatedDateTime.Get()
	}
	if o.FileHash != nil {
		toSerialize["fileHash"] = o.FileHash
	}
	if o.IntegrityLevel != nil {
		toSerialize["integrityLevel"] = o.IntegrityLevel
	}
	if o.IsElevated.IsSet() {
		toSerialize["isElevated"] = o.IsElevated.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.ParentProcessCreatedDateTime.IsSet() {
		toSerialize["parentProcessCreatedDateTime"] = o.ParentProcessCreatedDateTime.Get()
	}
	if o.ParentProcessId.IsSet() {
		toSerialize["parentProcessId"] = o.ParentProcessId.Get()
	}
	if o.ParentProcessName.IsSet() {
		toSerialize["parentProcessName"] = o.ParentProcessName.Get()
	}
	if o.Path.IsSet() {
		toSerialize["path"] = o.Path.Get()
	}
	if o.ProcessId.IsSet() {
		toSerialize["processId"] = o.ProcessId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphProcess struct {
	value *MicrosoftGraphProcess
	isSet bool
}

func (v NullableMicrosoftGraphProcess) Get() *MicrosoftGraphProcess {
	return v.value
}

func (v *NullableMicrosoftGraphProcess) Set(val *MicrosoftGraphProcess) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphProcess) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphProcess) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphProcess(val *MicrosoftGraphProcess) *NullableMicrosoftGraphProcess {
	return &NullableMicrosoftGraphProcess{value: val, isSet: true}
}

func (v NullableMicrosoftGraphProcess) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphProcess) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


