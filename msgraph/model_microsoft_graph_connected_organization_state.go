/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphConnectedOrganizationState the model 'MicrosoftGraphConnectedOrganizationState'
type MicrosoftGraphConnectedOrganizationState string

// List of microsoft.graph.connectedOrganizationState
const (
	CONFIGURED MicrosoftGraphConnectedOrganizationState = "configured"
	PROPOSED MicrosoftGraphConnectedOrganizationState = "proposed"
	UNKNOWN_FUTURE_VALUE MicrosoftGraphConnectedOrganizationState = "unknownFutureValue"
)

// All allowed values of MicrosoftGraphConnectedOrganizationState enum
var AllowedMicrosoftGraphConnectedOrganizationStateEnumValues = []MicrosoftGraphConnectedOrganizationState{
	"configured",
	"proposed",
	"unknownFutureValue",
}

func (v *MicrosoftGraphConnectedOrganizationState) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphConnectedOrganizationState(value)
	for _, existing := range AllowedMicrosoftGraphConnectedOrganizationStateEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphConnectedOrganizationState", value)
}

// NewMicrosoftGraphConnectedOrganizationStateFromValue returns a pointer to a valid MicrosoftGraphConnectedOrganizationState
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphConnectedOrganizationStateFromValue(v string) (*MicrosoftGraphConnectedOrganizationState, error) {
	ev := MicrosoftGraphConnectedOrganizationState(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphConnectedOrganizationState: valid values are %v", v, AllowedMicrosoftGraphConnectedOrganizationStateEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphConnectedOrganizationState) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphConnectedOrganizationStateEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.connectedOrganizationState value
func (v MicrosoftGraphConnectedOrganizationState) Ptr() *MicrosoftGraphConnectedOrganizationState {
	return &v
}

type NullableMicrosoftGraphConnectedOrganizationState struct {
	value *MicrosoftGraphConnectedOrganizationState
	isSet bool
}

func (v NullableMicrosoftGraphConnectedOrganizationState) Get() *MicrosoftGraphConnectedOrganizationState {
	return v.value
}

func (v *NullableMicrosoftGraphConnectedOrganizationState) Set(val *MicrosoftGraphConnectedOrganizationState) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphConnectedOrganizationState) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphConnectedOrganizationState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphConnectedOrganizationState(val *MicrosoftGraphConnectedOrganizationState) *NullableMicrosoftGraphConnectedOrganizationState {
	return &NullableMicrosoftGraphConnectedOrganizationState{value: val, isSet: true}
}

func (v NullableMicrosoftGraphConnectedOrganizationState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphConnectedOrganizationState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

