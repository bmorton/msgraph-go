/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PermissionGrantConditionSet struct for PermissionGrantConditionSet
type PermissionGrantConditionSet struct {
	// A list of appId values for the client applications to match with, or a list with the single value all to match any client application. Default is the single value all.
	ClientApplicationIds *[]*string `json:"clientApplicationIds,omitempty"`
	// A list of Microsoft Partner Network (MPN) IDs for verified publishers of the client application, or a list with the single value all to match with client apps from any publisher. Default is the single value all.
	ClientApplicationPublisherIds *[]*string `json:"clientApplicationPublisherIds,omitempty"`
	// Set to true to only match on client applications with a verified publisher. Set to false to match on any client app, even if it does not have a verified publisher. Default is false.
	ClientApplicationsFromVerifiedPublisherOnly NullableBool `json:"clientApplicationsFromVerifiedPublisherOnly,omitempty"`
	// A list of Azure Active Directory tenant IDs in which the client application is registered, or a list with the single value all to match with client apps registered in any tenant. Default is the single value all.
	ClientApplicationTenantIds *[]*string `json:"clientApplicationTenantIds,omitempty"`
	// The permission classification for the permission being granted, or all to match with any permission classification (including permissions which are not classified). Default is all.
	PermissionClassification NullableString `json:"permissionClassification,omitempty"`
	// The list of id values for the specific permissions to match with, or a list with the single value all to match with any permission. The id of delegated permissions can be found in the oauth2PermissionScopes property of the API's **servicePrincipal** object. The id of application permissions can be found in the appRoles property of the API's **servicePrincipal** object. The id of resource-specific application permissions can be found in the resourceSpecificApplicationPermissions property of the API's **servicePrincipal** object. Default is the single value all.
	Permissions *[]*string `json:"permissions,omitempty"`
	// The permission type of the permission being granted. Possible values: application for application permissions (e.g. app roles), or delegated for delegated permissions. The value delegatedUserConsentable indicates delegated permissions which have not been configured by the API publisher to require admin consentâ€”this value may be used in built-in permission grant policies, but cannot be used in custom permission grant policies. Required.
	PermissionType AnyOfmicrosoftGraphPermissionType `json:"permissionType,omitempty"`
	// The appId of the resource application (e.g. the API) for which a permission is being granted, or any to match with any resource application or API. Default is any.
	ResourceApplication NullableString `json:"resourceApplication,omitempty"`
}

// NewPermissionGrantConditionSet instantiates a new PermissionGrantConditionSet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPermissionGrantConditionSet() *PermissionGrantConditionSet {
	this := PermissionGrantConditionSet{}
	return &this
}

// NewPermissionGrantConditionSetWithDefaults instantiates a new PermissionGrantConditionSet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPermissionGrantConditionSetWithDefaults() *PermissionGrantConditionSet {
	this := PermissionGrantConditionSet{}
	return &this
}

// GetClientApplicationIds returns the ClientApplicationIds field value if set, zero value otherwise.
func (o *PermissionGrantConditionSet) GetClientApplicationIds() []*string {
	if o == nil || o.ClientApplicationIds == nil {
		var ret []*string
		return ret
	}
	return *o.ClientApplicationIds
}

// GetClientApplicationIdsOk returns a tuple with the ClientApplicationIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PermissionGrantConditionSet) GetClientApplicationIdsOk() (*[]*string, bool) {
	if o == nil || o.ClientApplicationIds == nil {
		return nil, false
	}
	return o.ClientApplicationIds, true
}

// HasClientApplicationIds returns a boolean if a field has been set.
func (o *PermissionGrantConditionSet) HasClientApplicationIds() bool {
	if o != nil && o.ClientApplicationIds != nil {
		return true
	}

	return false
}

// SetClientApplicationIds gets a reference to the given []*string and assigns it to the ClientApplicationIds field.
func (o *PermissionGrantConditionSet) SetClientApplicationIds(v []*string) {
	o.ClientApplicationIds = &v
}

// GetClientApplicationPublisherIds returns the ClientApplicationPublisherIds field value if set, zero value otherwise.
func (o *PermissionGrantConditionSet) GetClientApplicationPublisherIds() []*string {
	if o == nil || o.ClientApplicationPublisherIds == nil {
		var ret []*string
		return ret
	}
	return *o.ClientApplicationPublisherIds
}

// GetClientApplicationPublisherIdsOk returns a tuple with the ClientApplicationPublisherIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PermissionGrantConditionSet) GetClientApplicationPublisherIdsOk() (*[]*string, bool) {
	if o == nil || o.ClientApplicationPublisherIds == nil {
		return nil, false
	}
	return o.ClientApplicationPublisherIds, true
}

// HasClientApplicationPublisherIds returns a boolean if a field has been set.
func (o *PermissionGrantConditionSet) HasClientApplicationPublisherIds() bool {
	if o != nil && o.ClientApplicationPublisherIds != nil {
		return true
	}

	return false
}

// SetClientApplicationPublisherIds gets a reference to the given []*string and assigns it to the ClientApplicationPublisherIds field.
func (o *PermissionGrantConditionSet) SetClientApplicationPublisherIds(v []*string) {
	o.ClientApplicationPublisherIds = &v
}

// GetClientApplicationsFromVerifiedPublisherOnly returns the ClientApplicationsFromVerifiedPublisherOnly field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PermissionGrantConditionSet) GetClientApplicationsFromVerifiedPublisherOnly() bool {
	if o == nil || o.ClientApplicationsFromVerifiedPublisherOnly.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ClientApplicationsFromVerifiedPublisherOnly.Get()
}

// GetClientApplicationsFromVerifiedPublisherOnlyOk returns a tuple with the ClientApplicationsFromVerifiedPublisherOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PermissionGrantConditionSet) GetClientApplicationsFromVerifiedPublisherOnlyOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClientApplicationsFromVerifiedPublisherOnly.Get(), o.ClientApplicationsFromVerifiedPublisherOnly.IsSet()
}

// HasClientApplicationsFromVerifiedPublisherOnly returns a boolean if a field has been set.
func (o *PermissionGrantConditionSet) HasClientApplicationsFromVerifiedPublisherOnly() bool {
	if o != nil && o.ClientApplicationsFromVerifiedPublisherOnly.IsSet() {
		return true
	}

	return false
}

// SetClientApplicationsFromVerifiedPublisherOnly gets a reference to the given NullableBool and assigns it to the ClientApplicationsFromVerifiedPublisherOnly field.
func (o *PermissionGrantConditionSet) SetClientApplicationsFromVerifiedPublisherOnly(v bool) {
	o.ClientApplicationsFromVerifiedPublisherOnly.Set(&v)
}
// SetClientApplicationsFromVerifiedPublisherOnlyNil sets the value for ClientApplicationsFromVerifiedPublisherOnly to be an explicit nil
func (o *PermissionGrantConditionSet) SetClientApplicationsFromVerifiedPublisherOnlyNil() {
	o.ClientApplicationsFromVerifiedPublisherOnly.Set(nil)
}

// UnsetClientApplicationsFromVerifiedPublisherOnly ensures that no value is present for ClientApplicationsFromVerifiedPublisherOnly, not even an explicit nil
func (o *PermissionGrantConditionSet) UnsetClientApplicationsFromVerifiedPublisherOnly() {
	o.ClientApplicationsFromVerifiedPublisherOnly.Unset()
}

// GetClientApplicationTenantIds returns the ClientApplicationTenantIds field value if set, zero value otherwise.
func (o *PermissionGrantConditionSet) GetClientApplicationTenantIds() []*string {
	if o == nil || o.ClientApplicationTenantIds == nil {
		var ret []*string
		return ret
	}
	return *o.ClientApplicationTenantIds
}

// GetClientApplicationTenantIdsOk returns a tuple with the ClientApplicationTenantIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PermissionGrantConditionSet) GetClientApplicationTenantIdsOk() (*[]*string, bool) {
	if o == nil || o.ClientApplicationTenantIds == nil {
		return nil, false
	}
	return o.ClientApplicationTenantIds, true
}

// HasClientApplicationTenantIds returns a boolean if a field has been set.
func (o *PermissionGrantConditionSet) HasClientApplicationTenantIds() bool {
	if o != nil && o.ClientApplicationTenantIds != nil {
		return true
	}

	return false
}

// SetClientApplicationTenantIds gets a reference to the given []*string and assigns it to the ClientApplicationTenantIds field.
func (o *PermissionGrantConditionSet) SetClientApplicationTenantIds(v []*string) {
	o.ClientApplicationTenantIds = &v
}

// GetPermissionClassification returns the PermissionClassification field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PermissionGrantConditionSet) GetPermissionClassification() string {
	if o == nil || o.PermissionClassification.Get() == nil {
		var ret string
		return ret
	}
	return *o.PermissionClassification.Get()
}

// GetPermissionClassificationOk returns a tuple with the PermissionClassification field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PermissionGrantConditionSet) GetPermissionClassificationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PermissionClassification.Get(), o.PermissionClassification.IsSet()
}

// HasPermissionClassification returns a boolean if a field has been set.
func (o *PermissionGrantConditionSet) HasPermissionClassification() bool {
	if o != nil && o.PermissionClassification.IsSet() {
		return true
	}

	return false
}

// SetPermissionClassification gets a reference to the given NullableString and assigns it to the PermissionClassification field.
func (o *PermissionGrantConditionSet) SetPermissionClassification(v string) {
	o.PermissionClassification.Set(&v)
}
// SetPermissionClassificationNil sets the value for PermissionClassification to be an explicit nil
func (o *PermissionGrantConditionSet) SetPermissionClassificationNil() {
	o.PermissionClassification.Set(nil)
}

// UnsetPermissionClassification ensures that no value is present for PermissionClassification, not even an explicit nil
func (o *PermissionGrantConditionSet) UnsetPermissionClassification() {
	o.PermissionClassification.Unset()
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *PermissionGrantConditionSet) GetPermissions() []*string {
	if o == nil || o.Permissions == nil {
		var ret []*string
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PermissionGrantConditionSet) GetPermissionsOk() (*[]*string, bool) {
	if o == nil || o.Permissions == nil {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *PermissionGrantConditionSet) HasPermissions() bool {
	if o != nil && o.Permissions != nil {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []*string and assigns it to the Permissions field.
func (o *PermissionGrantConditionSet) SetPermissions(v []*string) {
	o.Permissions = &v
}

// GetPermissionType returns the PermissionType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PermissionGrantConditionSet) GetPermissionType() AnyOfmicrosoftGraphPermissionType {
	if o == nil  {
		var ret AnyOfmicrosoftGraphPermissionType
		return ret
	}
	return o.PermissionType
}

// GetPermissionTypeOk returns a tuple with the PermissionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PermissionGrantConditionSet) GetPermissionTypeOk() (*AnyOfmicrosoftGraphPermissionType, bool) {
	if o == nil || o.PermissionType == nil {
		return nil, false
	}
	return &o.PermissionType, true
}

// HasPermissionType returns a boolean if a field has been set.
func (o *PermissionGrantConditionSet) HasPermissionType() bool {
	if o != nil && o.PermissionType != nil {
		return true
	}

	return false
}

// SetPermissionType gets a reference to the given AnyOfmicrosoftGraphPermissionType and assigns it to the PermissionType field.
func (o *PermissionGrantConditionSet) SetPermissionType(v AnyOfmicrosoftGraphPermissionType) {
	o.PermissionType = v
}

// GetResourceApplication returns the ResourceApplication field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PermissionGrantConditionSet) GetResourceApplication() string {
	if o == nil || o.ResourceApplication.Get() == nil {
		var ret string
		return ret
	}
	return *o.ResourceApplication.Get()
}

// GetResourceApplicationOk returns a tuple with the ResourceApplication field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PermissionGrantConditionSet) GetResourceApplicationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ResourceApplication.Get(), o.ResourceApplication.IsSet()
}

// HasResourceApplication returns a boolean if a field has been set.
func (o *PermissionGrantConditionSet) HasResourceApplication() bool {
	if o != nil && o.ResourceApplication.IsSet() {
		return true
	}

	return false
}

// SetResourceApplication gets a reference to the given NullableString and assigns it to the ResourceApplication field.
func (o *PermissionGrantConditionSet) SetResourceApplication(v string) {
	o.ResourceApplication.Set(&v)
}
// SetResourceApplicationNil sets the value for ResourceApplication to be an explicit nil
func (o *PermissionGrantConditionSet) SetResourceApplicationNil() {
	o.ResourceApplication.Set(nil)
}

// UnsetResourceApplication ensures that no value is present for ResourceApplication, not even an explicit nil
func (o *PermissionGrantConditionSet) UnsetResourceApplication() {
	o.ResourceApplication.Unset()
}

func (o PermissionGrantConditionSet) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientApplicationIds != nil {
		toSerialize["clientApplicationIds"] = o.ClientApplicationIds
	}
	if o.ClientApplicationPublisherIds != nil {
		toSerialize["clientApplicationPublisherIds"] = o.ClientApplicationPublisherIds
	}
	if o.ClientApplicationsFromVerifiedPublisherOnly.IsSet() {
		toSerialize["clientApplicationsFromVerifiedPublisherOnly"] = o.ClientApplicationsFromVerifiedPublisherOnly.Get()
	}
	if o.ClientApplicationTenantIds != nil {
		toSerialize["clientApplicationTenantIds"] = o.ClientApplicationTenantIds
	}
	if o.PermissionClassification.IsSet() {
		toSerialize["permissionClassification"] = o.PermissionClassification.Get()
	}
	if o.Permissions != nil {
		toSerialize["permissions"] = o.Permissions
	}
	if o.PermissionType != nil {
		toSerialize["permissionType"] = o.PermissionType
	}
	if o.ResourceApplication.IsSet() {
		toSerialize["resourceApplication"] = o.ResourceApplication.Get()
	}
	return json.Marshal(toSerialize)
}

type NullablePermissionGrantConditionSet struct {
	value *PermissionGrantConditionSet
	isSet bool
}

func (v NullablePermissionGrantConditionSet) Get() *PermissionGrantConditionSet {
	return v.value
}

func (v *NullablePermissionGrantConditionSet) Set(val *PermissionGrantConditionSet) {
	v.value = val
	v.isSet = true
}

func (v NullablePermissionGrantConditionSet) IsSet() bool {
	return v.isSet
}

func (v *NullablePermissionGrantConditionSet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePermissionGrantConditionSet(val *PermissionGrantConditionSet) *NullablePermissionGrantConditionSet {
	return &NullablePermissionGrantConditionSet{value: val, isSet: true}
}

func (v NullablePermissionGrantConditionSet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePermissionGrantConditionSet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


