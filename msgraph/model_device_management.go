/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// DeviceManagement Singleton entity that acts as a container for all device management functionality.
type DeviceManagement struct {
	// Intune Account Id for given tenant
	IntuneAccountId *string `json:"intuneAccountId,omitempty"`
	// Account level settings.
	Settings AnyOfmicrosoftGraphDeviceManagementSettings `json:"settings,omitempty"`
	// intuneBrand contains data which is used in customizing the appearance of the Company Portal applications as well as the end user web portal.
	IntuneBrand AnyOfmicrosoftGraphIntuneBrand `json:"intuneBrand,omitempty"`
	// Tenant mobile device management subscription state. Possible values are: pending, active, warning, disabled, deleted, blocked, lockedOut.
	SubscriptionState AnyOfmicrosoftGraphDeviceManagementSubscriptionState `json:"subscriptionState,omitempty"`
	// The terms and conditions associated with device management of the company.
	TermsAndConditions *[]MicrosoftGraphTermsAndConditions `json:"termsAndConditions,omitempty"`
	// The device compliance policies.
	DeviceCompliancePolicies *[]MicrosoftGraphDeviceCompliancePolicy `json:"deviceCompliancePolicies,omitempty"`
	// The device compliance state summary for this account.
	DeviceCompliancePolicyDeviceStateSummary AnyOfmicrosoftGraphDeviceCompliancePolicyDeviceStateSummary `json:"deviceCompliancePolicyDeviceStateSummary,omitempty"`
	// The summary states of compliance policy settings for this account.
	DeviceCompliancePolicySettingStateSummaries *[]MicrosoftGraphDeviceCompliancePolicySettingStateSummary `json:"deviceCompliancePolicySettingStateSummaries,omitempty"`
	// The device configuration device state summary for this account.
	DeviceConfigurationDeviceStateSummaries AnyOfmicrosoftGraphDeviceConfigurationDeviceStateSummary `json:"deviceConfigurationDeviceStateSummaries,omitempty"`
	// The device configurations.
	DeviceConfigurations *[]MicrosoftGraphDeviceConfiguration `json:"deviceConfigurations,omitempty"`
	// The IOS software update installation statuses for this account.
	IosUpdateStatuses *[]MicrosoftGraphIosUpdateDeviceStatus `json:"iosUpdateStatuses,omitempty"`
	// The software update status summary.
	SoftwareUpdateStatusSummary AnyOfmicrosoftGraphSoftwareUpdateStatusSummary `json:"softwareUpdateStatusSummary,omitempty"`
	// The list of Compliance Management Partners configured by the tenant.
	ComplianceManagementPartners *[]MicrosoftGraphComplianceManagementPartner `json:"complianceManagementPartners,omitempty"`
	// The Exchange on premises conditional access settings. On premises conditional access will require devices to be both enrolled and compliant for mail access
	ConditionalAccessSettings AnyOfmicrosoftGraphOnPremisesConditionalAccessSettings `json:"conditionalAccessSettings,omitempty"`
	// The list of device categories with the tenant.
	DeviceCategories *[]MicrosoftGraphDeviceCategory `json:"deviceCategories,omitempty"`
	// The list of device enrollment configurations
	DeviceEnrollmentConfigurations *[]MicrosoftGraphDeviceEnrollmentConfiguration `json:"deviceEnrollmentConfigurations,omitempty"`
	// The list of Device Management Partners configured by the tenant.
	DeviceManagementPartners *[]MicrosoftGraphDeviceManagementPartner `json:"deviceManagementPartners,omitempty"`
	// The list of Exchange Connectors configured by the tenant.
	ExchangeConnectors *[]MicrosoftGraphDeviceManagementExchangeConnector `json:"exchangeConnectors,omitempty"`
	// The list of Mobile threat Defense connectors configured by the tenant.
	MobileThreatDefenseConnectors *[]MicrosoftGraphMobileThreatDefenseConnector `json:"mobileThreatDefenseConnectors,omitempty"`
	// Apple push notification certificate.
	ApplePushNotificationCertificate AnyOfmicrosoftGraphApplePushNotificationCertificate `json:"applePushNotificationCertificate,omitempty"`
	// The list of detected apps associated with a device.
	DetectedApps *[]MicrosoftGraphDetectedApp `json:"detectedApps,omitempty"`
	// Device overview
	ManagedDeviceOverview AnyOfmicrosoftGraphManagedDeviceOverview `json:"managedDeviceOverview,omitempty"`
	// The list of managed devices.
	ManagedDevices *[]MicrosoftGraphManagedDevice `json:"managedDevices,omitempty"`
	// Collection of imported Windows autopilot devices.
	ImportedWindowsAutopilotDeviceIdentities *[]MicrosoftGraphImportedWindowsAutopilotDeviceIdentity `json:"importedWindowsAutopilotDeviceIdentities,omitempty"`
	// The Windows autopilot device identities contained collection.
	WindowsAutopilotDeviceIdentities *[]MicrosoftGraphWindowsAutopilotDeviceIdentity `json:"windowsAutopilotDeviceIdentities,omitempty"`
	// The Notification Message Templates.
	NotificationMessageTemplates *[]MicrosoftGraphNotificationMessageTemplate `json:"notificationMessageTemplates,omitempty"`
	// The Resource Operations.
	ResourceOperations *[]MicrosoftGraphResourceOperation `json:"resourceOperations,omitempty"`
	// The Role Assignments.
	RoleAssignments *[]MicrosoftGraphDeviceAndAppManagementRoleAssignment `json:"roleAssignments,omitempty"`
	// The Role Definitions.
	RoleDefinitions *[]MicrosoftGraphRoleDefinition `json:"roleDefinitions,omitempty"`
	// The remote assist partners.
	RemoteAssistancePartners *[]MicrosoftGraphRemoteAssistancePartner `json:"remoteAssistancePartners,omitempty"`
	// Reports singleton
	Reports AnyOfmicrosoftGraphDeviceManagementReports `json:"reports,omitempty"`
	// The telecom expense management partners.
	TelecomExpenseManagementPartners *[]MicrosoftGraphTelecomExpenseManagementPartner `json:"telecomExpenseManagementPartners,omitempty"`
	// The list of troubleshooting events for the tenant.
	TroubleshootingEvents *[]MicrosoftGraphDeviceManagementTroubleshootingEvent `json:"troubleshootingEvents,omitempty"`
	// The windows information protection app learning summaries.
	WindowsInformationProtectionAppLearningSummaries *[]MicrosoftGraphWindowsInformationProtectionAppLearningSummary `json:"windowsInformationProtectionAppLearningSummaries,omitempty"`
	// The windows information protection network learning summaries.
	WindowsInformationProtectionNetworkLearningSummaries *[]MicrosoftGraphWindowsInformationProtectionNetworkLearningSummary `json:"windowsInformationProtectionNetworkLearningSummaries,omitempty"`
}

// NewDeviceManagement instantiates a new DeviceManagement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceManagement() *DeviceManagement {
	this := DeviceManagement{}
	return &this
}

// NewDeviceManagementWithDefaults instantiates a new DeviceManagement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceManagementWithDefaults() *DeviceManagement {
	this := DeviceManagement{}
	return &this
}

// GetIntuneAccountId returns the IntuneAccountId field value if set, zero value otherwise.
func (o *DeviceManagement) GetIntuneAccountId() string {
	if o == nil || o.IntuneAccountId == nil {
		var ret string
		return ret
	}
	return *o.IntuneAccountId
}

// GetIntuneAccountIdOk returns a tuple with the IntuneAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceManagement) GetIntuneAccountIdOk() (*string, bool) {
	if o == nil || o.IntuneAccountId == nil {
		return nil, false
	}
	return o.IntuneAccountId, true
}

// HasIntuneAccountId returns a boolean if a field has been set.
func (o *DeviceManagement) HasIntuneAccountId() bool {
	if o != nil && o.IntuneAccountId != nil {
		return true
	}

	return false
}

// SetIntuneAccountId gets a reference to the given string and assigns it to the IntuneAccountId field.
func (o *DeviceManagement) SetIntuneAccountId(v string) {
	o.IntuneAccountId = &v
}

// GetSettings returns the Settings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeviceManagement) GetSettings() AnyOfmicrosoftGraphDeviceManagementSettings {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDeviceManagementSettings
		return ret
	}
	return o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeviceManagement) GetSettingsOk() (*AnyOfmicrosoftGraphDeviceManagementSettings, bool) {
	if o == nil || o.Settings == nil {
		return nil, false
	}
	return &o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *DeviceManagement) HasSettings() bool {
	if o != nil && o.Settings != nil {
		return true
	}

	return false
}

// SetSettings gets a reference to the given AnyOfmicrosoftGraphDeviceManagementSettings and assigns it to the Settings field.
func (o *DeviceManagement) SetSettings(v AnyOfmicrosoftGraphDeviceManagementSettings) {
	o.Settings = v
}

// GetIntuneBrand returns the IntuneBrand field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeviceManagement) GetIntuneBrand() AnyOfmicrosoftGraphIntuneBrand {
	if o == nil  {
		var ret AnyOfmicrosoftGraphIntuneBrand
		return ret
	}
	return o.IntuneBrand
}

// GetIntuneBrandOk returns a tuple with the IntuneBrand field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeviceManagement) GetIntuneBrandOk() (*AnyOfmicrosoftGraphIntuneBrand, bool) {
	if o == nil || o.IntuneBrand == nil {
		return nil, false
	}
	return &o.IntuneBrand, true
}

// HasIntuneBrand returns a boolean if a field has been set.
func (o *DeviceManagement) HasIntuneBrand() bool {
	if o != nil && o.IntuneBrand != nil {
		return true
	}

	return false
}

// SetIntuneBrand gets a reference to the given AnyOfmicrosoftGraphIntuneBrand and assigns it to the IntuneBrand field.
func (o *DeviceManagement) SetIntuneBrand(v AnyOfmicrosoftGraphIntuneBrand) {
	o.IntuneBrand = v
}

// GetSubscriptionState returns the SubscriptionState field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeviceManagement) GetSubscriptionState() AnyOfmicrosoftGraphDeviceManagementSubscriptionState {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDeviceManagementSubscriptionState
		return ret
	}
	return o.SubscriptionState
}

// GetSubscriptionStateOk returns a tuple with the SubscriptionState field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeviceManagement) GetSubscriptionStateOk() (*AnyOfmicrosoftGraphDeviceManagementSubscriptionState, bool) {
	if o == nil || o.SubscriptionState == nil {
		return nil, false
	}
	return &o.SubscriptionState, true
}

// HasSubscriptionState returns a boolean if a field has been set.
func (o *DeviceManagement) HasSubscriptionState() bool {
	if o != nil && o.SubscriptionState != nil {
		return true
	}

	return false
}

// SetSubscriptionState gets a reference to the given AnyOfmicrosoftGraphDeviceManagementSubscriptionState and assigns it to the SubscriptionState field.
func (o *DeviceManagement) SetSubscriptionState(v AnyOfmicrosoftGraphDeviceManagementSubscriptionState) {
	o.SubscriptionState = v
}

// GetTermsAndConditions returns the TermsAndConditions field value if set, zero value otherwise.
func (o *DeviceManagement) GetTermsAndConditions() []MicrosoftGraphTermsAndConditions {
	if o == nil || o.TermsAndConditions == nil {
		var ret []MicrosoftGraphTermsAndConditions
		return ret
	}
	return *o.TermsAndConditions
}

// GetTermsAndConditionsOk returns a tuple with the TermsAndConditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceManagement) GetTermsAndConditionsOk() (*[]MicrosoftGraphTermsAndConditions, bool) {
	if o == nil || o.TermsAndConditions == nil {
		return nil, false
	}
	return o.TermsAndConditions, true
}

// HasTermsAndConditions returns a boolean if a field has been set.
func (o *DeviceManagement) HasTermsAndConditions() bool {
	if o != nil && o.TermsAndConditions != nil {
		return true
	}

	return false
}

// SetTermsAndConditions gets a reference to the given []MicrosoftGraphTermsAndConditions and assigns it to the TermsAndConditions field.
func (o *DeviceManagement) SetTermsAndConditions(v []MicrosoftGraphTermsAndConditions) {
	o.TermsAndConditions = &v
}

// GetDeviceCompliancePolicies returns the DeviceCompliancePolicies field value if set, zero value otherwise.
func (o *DeviceManagement) GetDeviceCompliancePolicies() []MicrosoftGraphDeviceCompliancePolicy {
	if o == nil || o.DeviceCompliancePolicies == nil {
		var ret []MicrosoftGraphDeviceCompliancePolicy
		return ret
	}
	return *o.DeviceCompliancePolicies
}

// GetDeviceCompliancePoliciesOk returns a tuple with the DeviceCompliancePolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceManagement) GetDeviceCompliancePoliciesOk() (*[]MicrosoftGraphDeviceCompliancePolicy, bool) {
	if o == nil || o.DeviceCompliancePolicies == nil {
		return nil, false
	}
	return o.DeviceCompliancePolicies, true
}

// HasDeviceCompliancePolicies returns a boolean if a field has been set.
func (o *DeviceManagement) HasDeviceCompliancePolicies() bool {
	if o != nil && o.DeviceCompliancePolicies != nil {
		return true
	}

	return false
}

// SetDeviceCompliancePolicies gets a reference to the given []MicrosoftGraphDeviceCompliancePolicy and assigns it to the DeviceCompliancePolicies field.
func (o *DeviceManagement) SetDeviceCompliancePolicies(v []MicrosoftGraphDeviceCompliancePolicy) {
	o.DeviceCompliancePolicies = &v
}

// GetDeviceCompliancePolicyDeviceStateSummary returns the DeviceCompliancePolicyDeviceStateSummary field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeviceManagement) GetDeviceCompliancePolicyDeviceStateSummary() AnyOfmicrosoftGraphDeviceCompliancePolicyDeviceStateSummary {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDeviceCompliancePolicyDeviceStateSummary
		return ret
	}
	return o.DeviceCompliancePolicyDeviceStateSummary
}

// GetDeviceCompliancePolicyDeviceStateSummaryOk returns a tuple with the DeviceCompliancePolicyDeviceStateSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeviceManagement) GetDeviceCompliancePolicyDeviceStateSummaryOk() (*AnyOfmicrosoftGraphDeviceCompliancePolicyDeviceStateSummary, bool) {
	if o == nil || o.DeviceCompliancePolicyDeviceStateSummary == nil {
		return nil, false
	}
	return &o.DeviceCompliancePolicyDeviceStateSummary, true
}

// HasDeviceCompliancePolicyDeviceStateSummary returns a boolean if a field has been set.
func (o *DeviceManagement) HasDeviceCompliancePolicyDeviceStateSummary() bool {
	if o != nil && o.DeviceCompliancePolicyDeviceStateSummary != nil {
		return true
	}

	return false
}

// SetDeviceCompliancePolicyDeviceStateSummary gets a reference to the given AnyOfmicrosoftGraphDeviceCompliancePolicyDeviceStateSummary and assigns it to the DeviceCompliancePolicyDeviceStateSummary field.
func (o *DeviceManagement) SetDeviceCompliancePolicyDeviceStateSummary(v AnyOfmicrosoftGraphDeviceCompliancePolicyDeviceStateSummary) {
	o.DeviceCompliancePolicyDeviceStateSummary = v
}

// GetDeviceCompliancePolicySettingStateSummaries returns the DeviceCompliancePolicySettingStateSummaries field value if set, zero value otherwise.
func (o *DeviceManagement) GetDeviceCompliancePolicySettingStateSummaries() []MicrosoftGraphDeviceCompliancePolicySettingStateSummary {
	if o == nil || o.DeviceCompliancePolicySettingStateSummaries == nil {
		var ret []MicrosoftGraphDeviceCompliancePolicySettingStateSummary
		return ret
	}
	return *o.DeviceCompliancePolicySettingStateSummaries
}

// GetDeviceCompliancePolicySettingStateSummariesOk returns a tuple with the DeviceCompliancePolicySettingStateSummaries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceManagement) GetDeviceCompliancePolicySettingStateSummariesOk() (*[]MicrosoftGraphDeviceCompliancePolicySettingStateSummary, bool) {
	if o == nil || o.DeviceCompliancePolicySettingStateSummaries == nil {
		return nil, false
	}
	return o.DeviceCompliancePolicySettingStateSummaries, true
}

// HasDeviceCompliancePolicySettingStateSummaries returns a boolean if a field has been set.
func (o *DeviceManagement) HasDeviceCompliancePolicySettingStateSummaries() bool {
	if o != nil && o.DeviceCompliancePolicySettingStateSummaries != nil {
		return true
	}

	return false
}

// SetDeviceCompliancePolicySettingStateSummaries gets a reference to the given []MicrosoftGraphDeviceCompliancePolicySettingStateSummary and assigns it to the DeviceCompliancePolicySettingStateSummaries field.
func (o *DeviceManagement) SetDeviceCompliancePolicySettingStateSummaries(v []MicrosoftGraphDeviceCompliancePolicySettingStateSummary) {
	o.DeviceCompliancePolicySettingStateSummaries = &v
}

// GetDeviceConfigurationDeviceStateSummaries returns the DeviceConfigurationDeviceStateSummaries field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeviceManagement) GetDeviceConfigurationDeviceStateSummaries() AnyOfmicrosoftGraphDeviceConfigurationDeviceStateSummary {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDeviceConfigurationDeviceStateSummary
		return ret
	}
	return o.DeviceConfigurationDeviceStateSummaries
}

// GetDeviceConfigurationDeviceStateSummariesOk returns a tuple with the DeviceConfigurationDeviceStateSummaries field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeviceManagement) GetDeviceConfigurationDeviceStateSummariesOk() (*AnyOfmicrosoftGraphDeviceConfigurationDeviceStateSummary, bool) {
	if o == nil || o.DeviceConfigurationDeviceStateSummaries == nil {
		return nil, false
	}
	return &o.DeviceConfigurationDeviceStateSummaries, true
}

// HasDeviceConfigurationDeviceStateSummaries returns a boolean if a field has been set.
func (o *DeviceManagement) HasDeviceConfigurationDeviceStateSummaries() bool {
	if o != nil && o.DeviceConfigurationDeviceStateSummaries != nil {
		return true
	}

	return false
}

// SetDeviceConfigurationDeviceStateSummaries gets a reference to the given AnyOfmicrosoftGraphDeviceConfigurationDeviceStateSummary and assigns it to the DeviceConfigurationDeviceStateSummaries field.
func (o *DeviceManagement) SetDeviceConfigurationDeviceStateSummaries(v AnyOfmicrosoftGraphDeviceConfigurationDeviceStateSummary) {
	o.DeviceConfigurationDeviceStateSummaries = v
}

// GetDeviceConfigurations returns the DeviceConfigurations field value if set, zero value otherwise.
func (o *DeviceManagement) GetDeviceConfigurations() []MicrosoftGraphDeviceConfiguration {
	if o == nil || o.DeviceConfigurations == nil {
		var ret []MicrosoftGraphDeviceConfiguration
		return ret
	}
	return *o.DeviceConfigurations
}

// GetDeviceConfigurationsOk returns a tuple with the DeviceConfigurations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceManagement) GetDeviceConfigurationsOk() (*[]MicrosoftGraphDeviceConfiguration, bool) {
	if o == nil || o.DeviceConfigurations == nil {
		return nil, false
	}
	return o.DeviceConfigurations, true
}

// HasDeviceConfigurations returns a boolean if a field has been set.
func (o *DeviceManagement) HasDeviceConfigurations() bool {
	if o != nil && o.DeviceConfigurations != nil {
		return true
	}

	return false
}

// SetDeviceConfigurations gets a reference to the given []MicrosoftGraphDeviceConfiguration and assigns it to the DeviceConfigurations field.
func (o *DeviceManagement) SetDeviceConfigurations(v []MicrosoftGraphDeviceConfiguration) {
	o.DeviceConfigurations = &v
}

// GetIosUpdateStatuses returns the IosUpdateStatuses field value if set, zero value otherwise.
func (o *DeviceManagement) GetIosUpdateStatuses() []MicrosoftGraphIosUpdateDeviceStatus {
	if o == nil || o.IosUpdateStatuses == nil {
		var ret []MicrosoftGraphIosUpdateDeviceStatus
		return ret
	}
	return *o.IosUpdateStatuses
}

// GetIosUpdateStatusesOk returns a tuple with the IosUpdateStatuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceManagement) GetIosUpdateStatusesOk() (*[]MicrosoftGraphIosUpdateDeviceStatus, bool) {
	if o == nil || o.IosUpdateStatuses == nil {
		return nil, false
	}
	return o.IosUpdateStatuses, true
}

// HasIosUpdateStatuses returns a boolean if a field has been set.
func (o *DeviceManagement) HasIosUpdateStatuses() bool {
	if o != nil && o.IosUpdateStatuses != nil {
		return true
	}

	return false
}

// SetIosUpdateStatuses gets a reference to the given []MicrosoftGraphIosUpdateDeviceStatus and assigns it to the IosUpdateStatuses field.
func (o *DeviceManagement) SetIosUpdateStatuses(v []MicrosoftGraphIosUpdateDeviceStatus) {
	o.IosUpdateStatuses = &v
}

// GetSoftwareUpdateStatusSummary returns the SoftwareUpdateStatusSummary field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeviceManagement) GetSoftwareUpdateStatusSummary() AnyOfmicrosoftGraphSoftwareUpdateStatusSummary {
	if o == nil  {
		var ret AnyOfmicrosoftGraphSoftwareUpdateStatusSummary
		return ret
	}
	return o.SoftwareUpdateStatusSummary
}

// GetSoftwareUpdateStatusSummaryOk returns a tuple with the SoftwareUpdateStatusSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeviceManagement) GetSoftwareUpdateStatusSummaryOk() (*AnyOfmicrosoftGraphSoftwareUpdateStatusSummary, bool) {
	if o == nil || o.SoftwareUpdateStatusSummary == nil {
		return nil, false
	}
	return &o.SoftwareUpdateStatusSummary, true
}

// HasSoftwareUpdateStatusSummary returns a boolean if a field has been set.
func (o *DeviceManagement) HasSoftwareUpdateStatusSummary() bool {
	if o != nil && o.SoftwareUpdateStatusSummary != nil {
		return true
	}

	return false
}

// SetSoftwareUpdateStatusSummary gets a reference to the given AnyOfmicrosoftGraphSoftwareUpdateStatusSummary and assigns it to the SoftwareUpdateStatusSummary field.
func (o *DeviceManagement) SetSoftwareUpdateStatusSummary(v AnyOfmicrosoftGraphSoftwareUpdateStatusSummary) {
	o.SoftwareUpdateStatusSummary = v
}

// GetComplianceManagementPartners returns the ComplianceManagementPartners field value if set, zero value otherwise.
func (o *DeviceManagement) GetComplianceManagementPartners() []MicrosoftGraphComplianceManagementPartner {
	if o == nil || o.ComplianceManagementPartners == nil {
		var ret []MicrosoftGraphComplianceManagementPartner
		return ret
	}
	return *o.ComplianceManagementPartners
}

// GetComplianceManagementPartnersOk returns a tuple with the ComplianceManagementPartners field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceManagement) GetComplianceManagementPartnersOk() (*[]MicrosoftGraphComplianceManagementPartner, bool) {
	if o == nil || o.ComplianceManagementPartners == nil {
		return nil, false
	}
	return o.ComplianceManagementPartners, true
}

// HasComplianceManagementPartners returns a boolean if a field has been set.
func (o *DeviceManagement) HasComplianceManagementPartners() bool {
	if o != nil && o.ComplianceManagementPartners != nil {
		return true
	}

	return false
}

// SetComplianceManagementPartners gets a reference to the given []MicrosoftGraphComplianceManagementPartner and assigns it to the ComplianceManagementPartners field.
func (o *DeviceManagement) SetComplianceManagementPartners(v []MicrosoftGraphComplianceManagementPartner) {
	o.ComplianceManagementPartners = &v
}

// GetConditionalAccessSettings returns the ConditionalAccessSettings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeviceManagement) GetConditionalAccessSettings() AnyOfmicrosoftGraphOnPremisesConditionalAccessSettings {
	if o == nil  {
		var ret AnyOfmicrosoftGraphOnPremisesConditionalAccessSettings
		return ret
	}
	return o.ConditionalAccessSettings
}

// GetConditionalAccessSettingsOk returns a tuple with the ConditionalAccessSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeviceManagement) GetConditionalAccessSettingsOk() (*AnyOfmicrosoftGraphOnPremisesConditionalAccessSettings, bool) {
	if o == nil || o.ConditionalAccessSettings == nil {
		return nil, false
	}
	return &o.ConditionalAccessSettings, true
}

// HasConditionalAccessSettings returns a boolean if a field has been set.
func (o *DeviceManagement) HasConditionalAccessSettings() bool {
	if o != nil && o.ConditionalAccessSettings != nil {
		return true
	}

	return false
}

// SetConditionalAccessSettings gets a reference to the given AnyOfmicrosoftGraphOnPremisesConditionalAccessSettings and assigns it to the ConditionalAccessSettings field.
func (o *DeviceManagement) SetConditionalAccessSettings(v AnyOfmicrosoftGraphOnPremisesConditionalAccessSettings) {
	o.ConditionalAccessSettings = v
}

// GetDeviceCategories returns the DeviceCategories field value if set, zero value otherwise.
func (o *DeviceManagement) GetDeviceCategories() []MicrosoftGraphDeviceCategory {
	if o == nil || o.DeviceCategories == nil {
		var ret []MicrosoftGraphDeviceCategory
		return ret
	}
	return *o.DeviceCategories
}

// GetDeviceCategoriesOk returns a tuple with the DeviceCategories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceManagement) GetDeviceCategoriesOk() (*[]MicrosoftGraphDeviceCategory, bool) {
	if o == nil || o.DeviceCategories == nil {
		return nil, false
	}
	return o.DeviceCategories, true
}

// HasDeviceCategories returns a boolean if a field has been set.
func (o *DeviceManagement) HasDeviceCategories() bool {
	if o != nil && o.DeviceCategories != nil {
		return true
	}

	return false
}

// SetDeviceCategories gets a reference to the given []MicrosoftGraphDeviceCategory and assigns it to the DeviceCategories field.
func (o *DeviceManagement) SetDeviceCategories(v []MicrosoftGraphDeviceCategory) {
	o.DeviceCategories = &v
}

// GetDeviceEnrollmentConfigurations returns the DeviceEnrollmentConfigurations field value if set, zero value otherwise.
func (o *DeviceManagement) GetDeviceEnrollmentConfigurations() []MicrosoftGraphDeviceEnrollmentConfiguration {
	if o == nil || o.DeviceEnrollmentConfigurations == nil {
		var ret []MicrosoftGraphDeviceEnrollmentConfiguration
		return ret
	}
	return *o.DeviceEnrollmentConfigurations
}

// GetDeviceEnrollmentConfigurationsOk returns a tuple with the DeviceEnrollmentConfigurations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceManagement) GetDeviceEnrollmentConfigurationsOk() (*[]MicrosoftGraphDeviceEnrollmentConfiguration, bool) {
	if o == nil || o.DeviceEnrollmentConfigurations == nil {
		return nil, false
	}
	return o.DeviceEnrollmentConfigurations, true
}

// HasDeviceEnrollmentConfigurations returns a boolean if a field has been set.
func (o *DeviceManagement) HasDeviceEnrollmentConfigurations() bool {
	if o != nil && o.DeviceEnrollmentConfigurations != nil {
		return true
	}

	return false
}

// SetDeviceEnrollmentConfigurations gets a reference to the given []MicrosoftGraphDeviceEnrollmentConfiguration and assigns it to the DeviceEnrollmentConfigurations field.
func (o *DeviceManagement) SetDeviceEnrollmentConfigurations(v []MicrosoftGraphDeviceEnrollmentConfiguration) {
	o.DeviceEnrollmentConfigurations = &v
}

// GetDeviceManagementPartners returns the DeviceManagementPartners field value if set, zero value otherwise.
func (o *DeviceManagement) GetDeviceManagementPartners() []MicrosoftGraphDeviceManagementPartner {
	if o == nil || o.DeviceManagementPartners == nil {
		var ret []MicrosoftGraphDeviceManagementPartner
		return ret
	}
	return *o.DeviceManagementPartners
}

// GetDeviceManagementPartnersOk returns a tuple with the DeviceManagementPartners field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceManagement) GetDeviceManagementPartnersOk() (*[]MicrosoftGraphDeviceManagementPartner, bool) {
	if o == nil || o.DeviceManagementPartners == nil {
		return nil, false
	}
	return o.DeviceManagementPartners, true
}

// HasDeviceManagementPartners returns a boolean if a field has been set.
func (o *DeviceManagement) HasDeviceManagementPartners() bool {
	if o != nil && o.DeviceManagementPartners != nil {
		return true
	}

	return false
}

// SetDeviceManagementPartners gets a reference to the given []MicrosoftGraphDeviceManagementPartner and assigns it to the DeviceManagementPartners field.
func (o *DeviceManagement) SetDeviceManagementPartners(v []MicrosoftGraphDeviceManagementPartner) {
	o.DeviceManagementPartners = &v
}

// GetExchangeConnectors returns the ExchangeConnectors field value if set, zero value otherwise.
func (o *DeviceManagement) GetExchangeConnectors() []MicrosoftGraphDeviceManagementExchangeConnector {
	if o == nil || o.ExchangeConnectors == nil {
		var ret []MicrosoftGraphDeviceManagementExchangeConnector
		return ret
	}
	return *o.ExchangeConnectors
}

// GetExchangeConnectorsOk returns a tuple with the ExchangeConnectors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceManagement) GetExchangeConnectorsOk() (*[]MicrosoftGraphDeviceManagementExchangeConnector, bool) {
	if o == nil || o.ExchangeConnectors == nil {
		return nil, false
	}
	return o.ExchangeConnectors, true
}

// HasExchangeConnectors returns a boolean if a field has been set.
func (o *DeviceManagement) HasExchangeConnectors() bool {
	if o != nil && o.ExchangeConnectors != nil {
		return true
	}

	return false
}

// SetExchangeConnectors gets a reference to the given []MicrosoftGraphDeviceManagementExchangeConnector and assigns it to the ExchangeConnectors field.
func (o *DeviceManagement) SetExchangeConnectors(v []MicrosoftGraphDeviceManagementExchangeConnector) {
	o.ExchangeConnectors = &v
}

// GetMobileThreatDefenseConnectors returns the MobileThreatDefenseConnectors field value if set, zero value otherwise.
func (o *DeviceManagement) GetMobileThreatDefenseConnectors() []MicrosoftGraphMobileThreatDefenseConnector {
	if o == nil || o.MobileThreatDefenseConnectors == nil {
		var ret []MicrosoftGraphMobileThreatDefenseConnector
		return ret
	}
	return *o.MobileThreatDefenseConnectors
}

// GetMobileThreatDefenseConnectorsOk returns a tuple with the MobileThreatDefenseConnectors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceManagement) GetMobileThreatDefenseConnectorsOk() (*[]MicrosoftGraphMobileThreatDefenseConnector, bool) {
	if o == nil || o.MobileThreatDefenseConnectors == nil {
		return nil, false
	}
	return o.MobileThreatDefenseConnectors, true
}

// HasMobileThreatDefenseConnectors returns a boolean if a field has been set.
func (o *DeviceManagement) HasMobileThreatDefenseConnectors() bool {
	if o != nil && o.MobileThreatDefenseConnectors != nil {
		return true
	}

	return false
}

// SetMobileThreatDefenseConnectors gets a reference to the given []MicrosoftGraphMobileThreatDefenseConnector and assigns it to the MobileThreatDefenseConnectors field.
func (o *DeviceManagement) SetMobileThreatDefenseConnectors(v []MicrosoftGraphMobileThreatDefenseConnector) {
	o.MobileThreatDefenseConnectors = &v
}

// GetApplePushNotificationCertificate returns the ApplePushNotificationCertificate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeviceManagement) GetApplePushNotificationCertificate() AnyOfmicrosoftGraphApplePushNotificationCertificate {
	if o == nil  {
		var ret AnyOfmicrosoftGraphApplePushNotificationCertificate
		return ret
	}
	return o.ApplePushNotificationCertificate
}

// GetApplePushNotificationCertificateOk returns a tuple with the ApplePushNotificationCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeviceManagement) GetApplePushNotificationCertificateOk() (*AnyOfmicrosoftGraphApplePushNotificationCertificate, bool) {
	if o == nil || o.ApplePushNotificationCertificate == nil {
		return nil, false
	}
	return &o.ApplePushNotificationCertificate, true
}

// HasApplePushNotificationCertificate returns a boolean if a field has been set.
func (o *DeviceManagement) HasApplePushNotificationCertificate() bool {
	if o != nil && o.ApplePushNotificationCertificate != nil {
		return true
	}

	return false
}

// SetApplePushNotificationCertificate gets a reference to the given AnyOfmicrosoftGraphApplePushNotificationCertificate and assigns it to the ApplePushNotificationCertificate field.
func (o *DeviceManagement) SetApplePushNotificationCertificate(v AnyOfmicrosoftGraphApplePushNotificationCertificate) {
	o.ApplePushNotificationCertificate = v
}

// GetDetectedApps returns the DetectedApps field value if set, zero value otherwise.
func (o *DeviceManagement) GetDetectedApps() []MicrosoftGraphDetectedApp {
	if o == nil || o.DetectedApps == nil {
		var ret []MicrosoftGraphDetectedApp
		return ret
	}
	return *o.DetectedApps
}

// GetDetectedAppsOk returns a tuple with the DetectedApps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceManagement) GetDetectedAppsOk() (*[]MicrosoftGraphDetectedApp, bool) {
	if o == nil || o.DetectedApps == nil {
		return nil, false
	}
	return o.DetectedApps, true
}

// HasDetectedApps returns a boolean if a field has been set.
func (o *DeviceManagement) HasDetectedApps() bool {
	if o != nil && o.DetectedApps != nil {
		return true
	}

	return false
}

// SetDetectedApps gets a reference to the given []MicrosoftGraphDetectedApp and assigns it to the DetectedApps field.
func (o *DeviceManagement) SetDetectedApps(v []MicrosoftGraphDetectedApp) {
	o.DetectedApps = &v
}

// GetManagedDeviceOverview returns the ManagedDeviceOverview field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeviceManagement) GetManagedDeviceOverview() AnyOfmicrosoftGraphManagedDeviceOverview {
	if o == nil  {
		var ret AnyOfmicrosoftGraphManagedDeviceOverview
		return ret
	}
	return o.ManagedDeviceOverview
}

// GetManagedDeviceOverviewOk returns a tuple with the ManagedDeviceOverview field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeviceManagement) GetManagedDeviceOverviewOk() (*AnyOfmicrosoftGraphManagedDeviceOverview, bool) {
	if o == nil || o.ManagedDeviceOverview == nil {
		return nil, false
	}
	return &o.ManagedDeviceOverview, true
}

// HasManagedDeviceOverview returns a boolean if a field has been set.
func (o *DeviceManagement) HasManagedDeviceOverview() bool {
	if o != nil && o.ManagedDeviceOverview != nil {
		return true
	}

	return false
}

// SetManagedDeviceOverview gets a reference to the given AnyOfmicrosoftGraphManagedDeviceOverview and assigns it to the ManagedDeviceOverview field.
func (o *DeviceManagement) SetManagedDeviceOverview(v AnyOfmicrosoftGraphManagedDeviceOverview) {
	o.ManagedDeviceOverview = v
}

// GetManagedDevices returns the ManagedDevices field value if set, zero value otherwise.
func (o *DeviceManagement) GetManagedDevices() []MicrosoftGraphManagedDevice {
	if o == nil || o.ManagedDevices == nil {
		var ret []MicrosoftGraphManagedDevice
		return ret
	}
	return *o.ManagedDevices
}

// GetManagedDevicesOk returns a tuple with the ManagedDevices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceManagement) GetManagedDevicesOk() (*[]MicrosoftGraphManagedDevice, bool) {
	if o == nil || o.ManagedDevices == nil {
		return nil, false
	}
	return o.ManagedDevices, true
}

// HasManagedDevices returns a boolean if a field has been set.
func (o *DeviceManagement) HasManagedDevices() bool {
	if o != nil && o.ManagedDevices != nil {
		return true
	}

	return false
}

// SetManagedDevices gets a reference to the given []MicrosoftGraphManagedDevice and assigns it to the ManagedDevices field.
func (o *DeviceManagement) SetManagedDevices(v []MicrosoftGraphManagedDevice) {
	o.ManagedDevices = &v
}

// GetImportedWindowsAutopilotDeviceIdentities returns the ImportedWindowsAutopilotDeviceIdentities field value if set, zero value otherwise.
func (o *DeviceManagement) GetImportedWindowsAutopilotDeviceIdentities() []MicrosoftGraphImportedWindowsAutopilotDeviceIdentity {
	if o == nil || o.ImportedWindowsAutopilotDeviceIdentities == nil {
		var ret []MicrosoftGraphImportedWindowsAutopilotDeviceIdentity
		return ret
	}
	return *o.ImportedWindowsAutopilotDeviceIdentities
}

// GetImportedWindowsAutopilotDeviceIdentitiesOk returns a tuple with the ImportedWindowsAutopilotDeviceIdentities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceManagement) GetImportedWindowsAutopilotDeviceIdentitiesOk() (*[]MicrosoftGraphImportedWindowsAutopilotDeviceIdentity, bool) {
	if o == nil || o.ImportedWindowsAutopilotDeviceIdentities == nil {
		return nil, false
	}
	return o.ImportedWindowsAutopilotDeviceIdentities, true
}

// HasImportedWindowsAutopilotDeviceIdentities returns a boolean if a field has been set.
func (o *DeviceManagement) HasImportedWindowsAutopilotDeviceIdentities() bool {
	if o != nil && o.ImportedWindowsAutopilotDeviceIdentities != nil {
		return true
	}

	return false
}

// SetImportedWindowsAutopilotDeviceIdentities gets a reference to the given []MicrosoftGraphImportedWindowsAutopilotDeviceIdentity and assigns it to the ImportedWindowsAutopilotDeviceIdentities field.
func (o *DeviceManagement) SetImportedWindowsAutopilotDeviceIdentities(v []MicrosoftGraphImportedWindowsAutopilotDeviceIdentity) {
	o.ImportedWindowsAutopilotDeviceIdentities = &v
}

// GetWindowsAutopilotDeviceIdentities returns the WindowsAutopilotDeviceIdentities field value if set, zero value otherwise.
func (o *DeviceManagement) GetWindowsAutopilotDeviceIdentities() []MicrosoftGraphWindowsAutopilotDeviceIdentity {
	if o == nil || o.WindowsAutopilotDeviceIdentities == nil {
		var ret []MicrosoftGraphWindowsAutopilotDeviceIdentity
		return ret
	}
	return *o.WindowsAutopilotDeviceIdentities
}

// GetWindowsAutopilotDeviceIdentitiesOk returns a tuple with the WindowsAutopilotDeviceIdentities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceManagement) GetWindowsAutopilotDeviceIdentitiesOk() (*[]MicrosoftGraphWindowsAutopilotDeviceIdentity, bool) {
	if o == nil || o.WindowsAutopilotDeviceIdentities == nil {
		return nil, false
	}
	return o.WindowsAutopilotDeviceIdentities, true
}

// HasWindowsAutopilotDeviceIdentities returns a boolean if a field has been set.
func (o *DeviceManagement) HasWindowsAutopilotDeviceIdentities() bool {
	if o != nil && o.WindowsAutopilotDeviceIdentities != nil {
		return true
	}

	return false
}

// SetWindowsAutopilotDeviceIdentities gets a reference to the given []MicrosoftGraphWindowsAutopilotDeviceIdentity and assigns it to the WindowsAutopilotDeviceIdentities field.
func (o *DeviceManagement) SetWindowsAutopilotDeviceIdentities(v []MicrosoftGraphWindowsAutopilotDeviceIdentity) {
	o.WindowsAutopilotDeviceIdentities = &v
}

// GetNotificationMessageTemplates returns the NotificationMessageTemplates field value if set, zero value otherwise.
func (o *DeviceManagement) GetNotificationMessageTemplates() []MicrosoftGraphNotificationMessageTemplate {
	if o == nil || o.NotificationMessageTemplates == nil {
		var ret []MicrosoftGraphNotificationMessageTemplate
		return ret
	}
	return *o.NotificationMessageTemplates
}

// GetNotificationMessageTemplatesOk returns a tuple with the NotificationMessageTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceManagement) GetNotificationMessageTemplatesOk() (*[]MicrosoftGraphNotificationMessageTemplate, bool) {
	if o == nil || o.NotificationMessageTemplates == nil {
		return nil, false
	}
	return o.NotificationMessageTemplates, true
}

// HasNotificationMessageTemplates returns a boolean if a field has been set.
func (o *DeviceManagement) HasNotificationMessageTemplates() bool {
	if o != nil && o.NotificationMessageTemplates != nil {
		return true
	}

	return false
}

// SetNotificationMessageTemplates gets a reference to the given []MicrosoftGraphNotificationMessageTemplate and assigns it to the NotificationMessageTemplates field.
func (o *DeviceManagement) SetNotificationMessageTemplates(v []MicrosoftGraphNotificationMessageTemplate) {
	o.NotificationMessageTemplates = &v
}

// GetResourceOperations returns the ResourceOperations field value if set, zero value otherwise.
func (o *DeviceManagement) GetResourceOperations() []MicrosoftGraphResourceOperation {
	if o == nil || o.ResourceOperations == nil {
		var ret []MicrosoftGraphResourceOperation
		return ret
	}
	return *o.ResourceOperations
}

// GetResourceOperationsOk returns a tuple with the ResourceOperations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceManagement) GetResourceOperationsOk() (*[]MicrosoftGraphResourceOperation, bool) {
	if o == nil || o.ResourceOperations == nil {
		return nil, false
	}
	return o.ResourceOperations, true
}

// HasResourceOperations returns a boolean if a field has been set.
func (o *DeviceManagement) HasResourceOperations() bool {
	if o != nil && o.ResourceOperations != nil {
		return true
	}

	return false
}

// SetResourceOperations gets a reference to the given []MicrosoftGraphResourceOperation and assigns it to the ResourceOperations field.
func (o *DeviceManagement) SetResourceOperations(v []MicrosoftGraphResourceOperation) {
	o.ResourceOperations = &v
}

// GetRoleAssignments returns the RoleAssignments field value if set, zero value otherwise.
func (o *DeviceManagement) GetRoleAssignments() []MicrosoftGraphDeviceAndAppManagementRoleAssignment {
	if o == nil || o.RoleAssignments == nil {
		var ret []MicrosoftGraphDeviceAndAppManagementRoleAssignment
		return ret
	}
	return *o.RoleAssignments
}

// GetRoleAssignmentsOk returns a tuple with the RoleAssignments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceManagement) GetRoleAssignmentsOk() (*[]MicrosoftGraphDeviceAndAppManagementRoleAssignment, bool) {
	if o == nil || o.RoleAssignments == nil {
		return nil, false
	}
	return o.RoleAssignments, true
}

// HasRoleAssignments returns a boolean if a field has been set.
func (o *DeviceManagement) HasRoleAssignments() bool {
	if o != nil && o.RoleAssignments != nil {
		return true
	}

	return false
}

// SetRoleAssignments gets a reference to the given []MicrosoftGraphDeviceAndAppManagementRoleAssignment and assigns it to the RoleAssignments field.
func (o *DeviceManagement) SetRoleAssignments(v []MicrosoftGraphDeviceAndAppManagementRoleAssignment) {
	o.RoleAssignments = &v
}

// GetRoleDefinitions returns the RoleDefinitions field value if set, zero value otherwise.
func (o *DeviceManagement) GetRoleDefinitions() []MicrosoftGraphRoleDefinition {
	if o == nil || o.RoleDefinitions == nil {
		var ret []MicrosoftGraphRoleDefinition
		return ret
	}
	return *o.RoleDefinitions
}

// GetRoleDefinitionsOk returns a tuple with the RoleDefinitions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceManagement) GetRoleDefinitionsOk() (*[]MicrosoftGraphRoleDefinition, bool) {
	if o == nil || o.RoleDefinitions == nil {
		return nil, false
	}
	return o.RoleDefinitions, true
}

// HasRoleDefinitions returns a boolean if a field has been set.
func (o *DeviceManagement) HasRoleDefinitions() bool {
	if o != nil && o.RoleDefinitions != nil {
		return true
	}

	return false
}

// SetRoleDefinitions gets a reference to the given []MicrosoftGraphRoleDefinition and assigns it to the RoleDefinitions field.
func (o *DeviceManagement) SetRoleDefinitions(v []MicrosoftGraphRoleDefinition) {
	o.RoleDefinitions = &v
}

// GetRemoteAssistancePartners returns the RemoteAssistancePartners field value if set, zero value otherwise.
func (o *DeviceManagement) GetRemoteAssistancePartners() []MicrosoftGraphRemoteAssistancePartner {
	if o == nil || o.RemoteAssistancePartners == nil {
		var ret []MicrosoftGraphRemoteAssistancePartner
		return ret
	}
	return *o.RemoteAssistancePartners
}

// GetRemoteAssistancePartnersOk returns a tuple with the RemoteAssistancePartners field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceManagement) GetRemoteAssistancePartnersOk() (*[]MicrosoftGraphRemoteAssistancePartner, bool) {
	if o == nil || o.RemoteAssistancePartners == nil {
		return nil, false
	}
	return o.RemoteAssistancePartners, true
}

// HasRemoteAssistancePartners returns a boolean if a field has been set.
func (o *DeviceManagement) HasRemoteAssistancePartners() bool {
	if o != nil && o.RemoteAssistancePartners != nil {
		return true
	}

	return false
}

// SetRemoteAssistancePartners gets a reference to the given []MicrosoftGraphRemoteAssistancePartner and assigns it to the RemoteAssistancePartners field.
func (o *DeviceManagement) SetRemoteAssistancePartners(v []MicrosoftGraphRemoteAssistancePartner) {
	o.RemoteAssistancePartners = &v
}

// GetReports returns the Reports field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeviceManagement) GetReports() AnyOfmicrosoftGraphDeviceManagementReports {
	if o == nil  {
		var ret AnyOfmicrosoftGraphDeviceManagementReports
		return ret
	}
	return o.Reports
}

// GetReportsOk returns a tuple with the Reports field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeviceManagement) GetReportsOk() (*AnyOfmicrosoftGraphDeviceManagementReports, bool) {
	if o == nil || o.Reports == nil {
		return nil, false
	}
	return &o.Reports, true
}

// HasReports returns a boolean if a field has been set.
func (o *DeviceManagement) HasReports() bool {
	if o != nil && o.Reports != nil {
		return true
	}

	return false
}

// SetReports gets a reference to the given AnyOfmicrosoftGraphDeviceManagementReports and assigns it to the Reports field.
func (o *DeviceManagement) SetReports(v AnyOfmicrosoftGraphDeviceManagementReports) {
	o.Reports = v
}

// GetTelecomExpenseManagementPartners returns the TelecomExpenseManagementPartners field value if set, zero value otherwise.
func (o *DeviceManagement) GetTelecomExpenseManagementPartners() []MicrosoftGraphTelecomExpenseManagementPartner {
	if o == nil || o.TelecomExpenseManagementPartners == nil {
		var ret []MicrosoftGraphTelecomExpenseManagementPartner
		return ret
	}
	return *o.TelecomExpenseManagementPartners
}

// GetTelecomExpenseManagementPartnersOk returns a tuple with the TelecomExpenseManagementPartners field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceManagement) GetTelecomExpenseManagementPartnersOk() (*[]MicrosoftGraphTelecomExpenseManagementPartner, bool) {
	if o == nil || o.TelecomExpenseManagementPartners == nil {
		return nil, false
	}
	return o.TelecomExpenseManagementPartners, true
}

// HasTelecomExpenseManagementPartners returns a boolean if a field has been set.
func (o *DeviceManagement) HasTelecomExpenseManagementPartners() bool {
	if o != nil && o.TelecomExpenseManagementPartners != nil {
		return true
	}

	return false
}

// SetTelecomExpenseManagementPartners gets a reference to the given []MicrosoftGraphTelecomExpenseManagementPartner and assigns it to the TelecomExpenseManagementPartners field.
func (o *DeviceManagement) SetTelecomExpenseManagementPartners(v []MicrosoftGraphTelecomExpenseManagementPartner) {
	o.TelecomExpenseManagementPartners = &v
}

// GetTroubleshootingEvents returns the TroubleshootingEvents field value if set, zero value otherwise.
func (o *DeviceManagement) GetTroubleshootingEvents() []MicrosoftGraphDeviceManagementTroubleshootingEvent {
	if o == nil || o.TroubleshootingEvents == nil {
		var ret []MicrosoftGraphDeviceManagementTroubleshootingEvent
		return ret
	}
	return *o.TroubleshootingEvents
}

// GetTroubleshootingEventsOk returns a tuple with the TroubleshootingEvents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceManagement) GetTroubleshootingEventsOk() (*[]MicrosoftGraphDeviceManagementTroubleshootingEvent, bool) {
	if o == nil || o.TroubleshootingEvents == nil {
		return nil, false
	}
	return o.TroubleshootingEvents, true
}

// HasTroubleshootingEvents returns a boolean if a field has been set.
func (o *DeviceManagement) HasTroubleshootingEvents() bool {
	if o != nil && o.TroubleshootingEvents != nil {
		return true
	}

	return false
}

// SetTroubleshootingEvents gets a reference to the given []MicrosoftGraphDeviceManagementTroubleshootingEvent and assigns it to the TroubleshootingEvents field.
func (o *DeviceManagement) SetTroubleshootingEvents(v []MicrosoftGraphDeviceManagementTroubleshootingEvent) {
	o.TroubleshootingEvents = &v
}

// GetWindowsInformationProtectionAppLearningSummaries returns the WindowsInformationProtectionAppLearningSummaries field value if set, zero value otherwise.
func (o *DeviceManagement) GetWindowsInformationProtectionAppLearningSummaries() []MicrosoftGraphWindowsInformationProtectionAppLearningSummary {
	if o == nil || o.WindowsInformationProtectionAppLearningSummaries == nil {
		var ret []MicrosoftGraphWindowsInformationProtectionAppLearningSummary
		return ret
	}
	return *o.WindowsInformationProtectionAppLearningSummaries
}

// GetWindowsInformationProtectionAppLearningSummariesOk returns a tuple with the WindowsInformationProtectionAppLearningSummaries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceManagement) GetWindowsInformationProtectionAppLearningSummariesOk() (*[]MicrosoftGraphWindowsInformationProtectionAppLearningSummary, bool) {
	if o == nil || o.WindowsInformationProtectionAppLearningSummaries == nil {
		return nil, false
	}
	return o.WindowsInformationProtectionAppLearningSummaries, true
}

// HasWindowsInformationProtectionAppLearningSummaries returns a boolean if a field has been set.
func (o *DeviceManagement) HasWindowsInformationProtectionAppLearningSummaries() bool {
	if o != nil && o.WindowsInformationProtectionAppLearningSummaries != nil {
		return true
	}

	return false
}

// SetWindowsInformationProtectionAppLearningSummaries gets a reference to the given []MicrosoftGraphWindowsInformationProtectionAppLearningSummary and assigns it to the WindowsInformationProtectionAppLearningSummaries field.
func (o *DeviceManagement) SetWindowsInformationProtectionAppLearningSummaries(v []MicrosoftGraphWindowsInformationProtectionAppLearningSummary) {
	o.WindowsInformationProtectionAppLearningSummaries = &v
}

// GetWindowsInformationProtectionNetworkLearningSummaries returns the WindowsInformationProtectionNetworkLearningSummaries field value if set, zero value otherwise.
func (o *DeviceManagement) GetWindowsInformationProtectionNetworkLearningSummaries() []MicrosoftGraphWindowsInformationProtectionNetworkLearningSummary {
	if o == nil || o.WindowsInformationProtectionNetworkLearningSummaries == nil {
		var ret []MicrosoftGraphWindowsInformationProtectionNetworkLearningSummary
		return ret
	}
	return *o.WindowsInformationProtectionNetworkLearningSummaries
}

// GetWindowsInformationProtectionNetworkLearningSummariesOk returns a tuple with the WindowsInformationProtectionNetworkLearningSummaries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceManagement) GetWindowsInformationProtectionNetworkLearningSummariesOk() (*[]MicrosoftGraphWindowsInformationProtectionNetworkLearningSummary, bool) {
	if o == nil || o.WindowsInformationProtectionNetworkLearningSummaries == nil {
		return nil, false
	}
	return o.WindowsInformationProtectionNetworkLearningSummaries, true
}

// HasWindowsInformationProtectionNetworkLearningSummaries returns a boolean if a field has been set.
func (o *DeviceManagement) HasWindowsInformationProtectionNetworkLearningSummaries() bool {
	if o != nil && o.WindowsInformationProtectionNetworkLearningSummaries != nil {
		return true
	}

	return false
}

// SetWindowsInformationProtectionNetworkLearningSummaries gets a reference to the given []MicrosoftGraphWindowsInformationProtectionNetworkLearningSummary and assigns it to the WindowsInformationProtectionNetworkLearningSummaries field.
func (o *DeviceManagement) SetWindowsInformationProtectionNetworkLearningSummaries(v []MicrosoftGraphWindowsInformationProtectionNetworkLearningSummary) {
	o.WindowsInformationProtectionNetworkLearningSummaries = &v
}

func (o DeviceManagement) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IntuneAccountId != nil {
		toSerialize["intuneAccountId"] = o.IntuneAccountId
	}
	if o.Settings != nil {
		toSerialize["settings"] = o.Settings
	}
	if o.IntuneBrand != nil {
		toSerialize["intuneBrand"] = o.IntuneBrand
	}
	if o.SubscriptionState != nil {
		toSerialize["subscriptionState"] = o.SubscriptionState
	}
	if o.TermsAndConditions != nil {
		toSerialize["termsAndConditions"] = o.TermsAndConditions
	}
	if o.DeviceCompliancePolicies != nil {
		toSerialize["deviceCompliancePolicies"] = o.DeviceCompliancePolicies
	}
	if o.DeviceCompliancePolicyDeviceStateSummary != nil {
		toSerialize["deviceCompliancePolicyDeviceStateSummary"] = o.DeviceCompliancePolicyDeviceStateSummary
	}
	if o.DeviceCompliancePolicySettingStateSummaries != nil {
		toSerialize["deviceCompliancePolicySettingStateSummaries"] = o.DeviceCompliancePolicySettingStateSummaries
	}
	if o.DeviceConfigurationDeviceStateSummaries != nil {
		toSerialize["deviceConfigurationDeviceStateSummaries"] = o.DeviceConfigurationDeviceStateSummaries
	}
	if o.DeviceConfigurations != nil {
		toSerialize["deviceConfigurations"] = o.DeviceConfigurations
	}
	if o.IosUpdateStatuses != nil {
		toSerialize["iosUpdateStatuses"] = o.IosUpdateStatuses
	}
	if o.SoftwareUpdateStatusSummary != nil {
		toSerialize["softwareUpdateStatusSummary"] = o.SoftwareUpdateStatusSummary
	}
	if o.ComplianceManagementPartners != nil {
		toSerialize["complianceManagementPartners"] = o.ComplianceManagementPartners
	}
	if o.ConditionalAccessSettings != nil {
		toSerialize["conditionalAccessSettings"] = o.ConditionalAccessSettings
	}
	if o.DeviceCategories != nil {
		toSerialize["deviceCategories"] = o.DeviceCategories
	}
	if o.DeviceEnrollmentConfigurations != nil {
		toSerialize["deviceEnrollmentConfigurations"] = o.DeviceEnrollmentConfigurations
	}
	if o.DeviceManagementPartners != nil {
		toSerialize["deviceManagementPartners"] = o.DeviceManagementPartners
	}
	if o.ExchangeConnectors != nil {
		toSerialize["exchangeConnectors"] = o.ExchangeConnectors
	}
	if o.MobileThreatDefenseConnectors != nil {
		toSerialize["mobileThreatDefenseConnectors"] = o.MobileThreatDefenseConnectors
	}
	if o.ApplePushNotificationCertificate != nil {
		toSerialize["applePushNotificationCertificate"] = o.ApplePushNotificationCertificate
	}
	if o.DetectedApps != nil {
		toSerialize["detectedApps"] = o.DetectedApps
	}
	if o.ManagedDeviceOverview != nil {
		toSerialize["managedDeviceOverview"] = o.ManagedDeviceOverview
	}
	if o.ManagedDevices != nil {
		toSerialize["managedDevices"] = o.ManagedDevices
	}
	if o.ImportedWindowsAutopilotDeviceIdentities != nil {
		toSerialize["importedWindowsAutopilotDeviceIdentities"] = o.ImportedWindowsAutopilotDeviceIdentities
	}
	if o.WindowsAutopilotDeviceIdentities != nil {
		toSerialize["windowsAutopilotDeviceIdentities"] = o.WindowsAutopilotDeviceIdentities
	}
	if o.NotificationMessageTemplates != nil {
		toSerialize["notificationMessageTemplates"] = o.NotificationMessageTemplates
	}
	if o.ResourceOperations != nil {
		toSerialize["resourceOperations"] = o.ResourceOperations
	}
	if o.RoleAssignments != nil {
		toSerialize["roleAssignments"] = o.RoleAssignments
	}
	if o.RoleDefinitions != nil {
		toSerialize["roleDefinitions"] = o.RoleDefinitions
	}
	if o.RemoteAssistancePartners != nil {
		toSerialize["remoteAssistancePartners"] = o.RemoteAssistancePartners
	}
	if o.Reports != nil {
		toSerialize["reports"] = o.Reports
	}
	if o.TelecomExpenseManagementPartners != nil {
		toSerialize["telecomExpenseManagementPartners"] = o.TelecomExpenseManagementPartners
	}
	if o.TroubleshootingEvents != nil {
		toSerialize["troubleshootingEvents"] = o.TroubleshootingEvents
	}
	if o.WindowsInformationProtectionAppLearningSummaries != nil {
		toSerialize["windowsInformationProtectionAppLearningSummaries"] = o.WindowsInformationProtectionAppLearningSummaries
	}
	if o.WindowsInformationProtectionNetworkLearningSummaries != nil {
		toSerialize["windowsInformationProtectionNetworkLearningSummaries"] = o.WindowsInformationProtectionNetworkLearningSummaries
	}
	return json.Marshal(toSerialize)
}

type NullableDeviceManagement struct {
	value *DeviceManagement
	isSet bool
}

func (v NullableDeviceManagement) Get() *DeviceManagement {
	return v.value
}

func (v *NullableDeviceManagement) Set(val *DeviceManagement) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceManagement) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceManagement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceManagement(val *DeviceManagement) *NullableDeviceManagement {
	return &NullableDeviceManagement{value: val, isSet: true}
}

func (v NullableDeviceManagement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceManagement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


