/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphDateTimeTimeZone struct for MicrosoftGraphDateTimeTimeZone
type MicrosoftGraphDateTimeTimeZone struct {
	// A single point of time in a combined date and time representation ({date}T{time}; for example, 2017-08-29T04:00:00.0000000).
	DateTime *string `json:"dateTime,omitempty"`
	// Represents a time zone, for example, 'Pacific Standard Time'. See below for more possible values.
	TimeZone NullableString `json:"timeZone,omitempty"`
}

// NewMicrosoftGraphDateTimeTimeZone instantiates a new MicrosoftGraphDateTimeTimeZone object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphDateTimeTimeZone() *MicrosoftGraphDateTimeTimeZone {
	this := MicrosoftGraphDateTimeTimeZone{}
	return &this
}

// NewMicrosoftGraphDateTimeTimeZoneWithDefaults instantiates a new MicrosoftGraphDateTimeTimeZone object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphDateTimeTimeZoneWithDefaults() *MicrosoftGraphDateTimeTimeZone {
	this := MicrosoftGraphDateTimeTimeZone{}
	return &this
}

// GetDateTime returns the DateTime field value if set, zero value otherwise.
func (o *MicrosoftGraphDateTimeTimeZone) GetDateTime() string {
	if o == nil || o.DateTime == nil {
		var ret string
		return ret
	}
	return *o.DateTime
}

// GetDateTimeOk returns a tuple with the DateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDateTimeTimeZone) GetDateTimeOk() (*string, bool) {
	if o == nil || o.DateTime == nil {
		return nil, false
	}
	return o.DateTime, true
}

// HasDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphDateTimeTimeZone) HasDateTime() bool {
	if o != nil && o.DateTime != nil {
		return true
	}

	return false
}

// SetDateTime gets a reference to the given string and assigns it to the DateTime field.
func (o *MicrosoftGraphDateTimeTimeZone) SetDateTime(v string) {
	o.DateTime = &v
}

// GetTimeZone returns the TimeZone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphDateTimeTimeZone) GetTimeZone() string {
	if o == nil || o.TimeZone.Get() == nil {
		var ret string
		return ret
	}
	return *o.TimeZone.Get()
}

// GetTimeZoneOk returns a tuple with the TimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphDateTimeTimeZone) GetTimeZoneOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TimeZone.Get(), o.TimeZone.IsSet()
}

// HasTimeZone returns a boolean if a field has been set.
func (o *MicrosoftGraphDateTimeTimeZone) HasTimeZone() bool {
	if o != nil && o.TimeZone.IsSet() {
		return true
	}

	return false
}

// SetTimeZone gets a reference to the given NullableString and assigns it to the TimeZone field.
func (o *MicrosoftGraphDateTimeTimeZone) SetTimeZone(v string) {
	o.TimeZone.Set(&v)
}
// SetTimeZoneNil sets the value for TimeZone to be an explicit nil
func (o *MicrosoftGraphDateTimeTimeZone) SetTimeZoneNil() {
	o.TimeZone.Set(nil)
}

// UnsetTimeZone ensures that no value is present for TimeZone, not even an explicit nil
func (o *MicrosoftGraphDateTimeTimeZone) UnsetTimeZone() {
	o.TimeZone.Unset()
}

func (o MicrosoftGraphDateTimeTimeZone) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DateTime != nil {
		toSerialize["dateTime"] = o.DateTime
	}
	if o.TimeZone.IsSet() {
		toSerialize["timeZone"] = o.TimeZone.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphDateTimeTimeZone struct {
	value *MicrosoftGraphDateTimeTimeZone
	isSet bool
}

func (v NullableMicrosoftGraphDateTimeTimeZone) Get() *MicrosoftGraphDateTimeTimeZone {
	return v.value
}

func (v *NullableMicrosoftGraphDateTimeTimeZone) Set(val *MicrosoftGraphDateTimeTimeZone) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphDateTimeTimeZone) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphDateTimeTimeZone) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphDateTimeTimeZone(val *MicrosoftGraphDateTimeTimeZone) *NullableMicrosoftGraphDateTimeTimeZone {
	return &NullableMicrosoftGraphDateTimeTimeZone{value: val, isSet: true}
}

func (v NullableMicrosoftGraphDateTimeTimeZone) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphDateTimeTimeZone) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


