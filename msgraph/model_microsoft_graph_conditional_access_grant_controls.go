/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// MicrosoftGraphConditionalAccessGrantControls struct for MicrosoftGraphConditionalAccessGrantControls
type MicrosoftGraphConditionalAccessGrantControls struct {
	// List of values of built-in controls required by the policy. Possible values: block, mfa, compliantDevice, domainJoinedDevice, approvedApplication, compliantApplication, passwordChange, unknownFutureValue.
	BuiltInControls *[]AnyOfmicrosoftGraphConditionalAccessGrantControl `json:"builtInControls,omitempty"`
	// List of custom controls IDs required by the policy. For more information, see Custom controls.
	CustomAuthenticationFactors *[]string `json:"customAuthenticationFactors,omitempty"`
	// Defines the relationship of the grant controls. Possible values: AND, OR.
	Operator NullableString `json:"operator,omitempty"`
	// List of terms of use IDs required by the policy.
	TermsOfUse *[]string `json:"termsOfUse,omitempty"`
}

// NewMicrosoftGraphConditionalAccessGrantControls instantiates a new MicrosoftGraphConditionalAccessGrantControls object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphConditionalAccessGrantControls() *MicrosoftGraphConditionalAccessGrantControls {
	this := MicrosoftGraphConditionalAccessGrantControls{}
	return &this
}

// NewMicrosoftGraphConditionalAccessGrantControlsWithDefaults instantiates a new MicrosoftGraphConditionalAccessGrantControls object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphConditionalAccessGrantControlsWithDefaults() *MicrosoftGraphConditionalAccessGrantControls {
	this := MicrosoftGraphConditionalAccessGrantControls{}
	return &this
}

// GetBuiltInControls returns the BuiltInControls field value if set, zero value otherwise.
func (o *MicrosoftGraphConditionalAccessGrantControls) GetBuiltInControls() []AnyOfmicrosoftGraphConditionalAccessGrantControl {
	if o == nil || o.BuiltInControls == nil {
		var ret []AnyOfmicrosoftGraphConditionalAccessGrantControl
		return ret
	}
	return *o.BuiltInControls
}

// GetBuiltInControlsOk returns a tuple with the BuiltInControls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphConditionalAccessGrantControls) GetBuiltInControlsOk() (*[]AnyOfmicrosoftGraphConditionalAccessGrantControl, bool) {
	if o == nil || o.BuiltInControls == nil {
		return nil, false
	}
	return o.BuiltInControls, true
}

// HasBuiltInControls returns a boolean if a field has been set.
func (o *MicrosoftGraphConditionalAccessGrantControls) HasBuiltInControls() bool {
	if o != nil && o.BuiltInControls != nil {
		return true
	}

	return false
}

// SetBuiltInControls gets a reference to the given []AnyOfmicrosoftGraphConditionalAccessGrantControl and assigns it to the BuiltInControls field.
func (o *MicrosoftGraphConditionalAccessGrantControls) SetBuiltInControls(v []AnyOfmicrosoftGraphConditionalAccessGrantControl) {
	o.BuiltInControls = &v
}

// GetCustomAuthenticationFactors returns the CustomAuthenticationFactors field value if set, zero value otherwise.
func (o *MicrosoftGraphConditionalAccessGrantControls) GetCustomAuthenticationFactors() []string {
	if o == nil || o.CustomAuthenticationFactors == nil {
		var ret []string
		return ret
	}
	return *o.CustomAuthenticationFactors
}

// GetCustomAuthenticationFactorsOk returns a tuple with the CustomAuthenticationFactors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphConditionalAccessGrantControls) GetCustomAuthenticationFactorsOk() (*[]string, bool) {
	if o == nil || o.CustomAuthenticationFactors == nil {
		return nil, false
	}
	return o.CustomAuthenticationFactors, true
}

// HasCustomAuthenticationFactors returns a boolean if a field has been set.
func (o *MicrosoftGraphConditionalAccessGrantControls) HasCustomAuthenticationFactors() bool {
	if o != nil && o.CustomAuthenticationFactors != nil {
		return true
	}

	return false
}

// SetCustomAuthenticationFactors gets a reference to the given []string and assigns it to the CustomAuthenticationFactors field.
func (o *MicrosoftGraphConditionalAccessGrantControls) SetCustomAuthenticationFactors(v []string) {
	o.CustomAuthenticationFactors = &v
}

// GetOperator returns the Operator field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphConditionalAccessGrantControls) GetOperator() string {
	if o == nil || o.Operator.Get() == nil {
		var ret string
		return ret
	}
	return *o.Operator.Get()
}

// GetOperatorOk returns a tuple with the Operator field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphConditionalAccessGrantControls) GetOperatorOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Operator.Get(), o.Operator.IsSet()
}

// HasOperator returns a boolean if a field has been set.
func (o *MicrosoftGraphConditionalAccessGrantControls) HasOperator() bool {
	if o != nil && o.Operator.IsSet() {
		return true
	}

	return false
}

// SetOperator gets a reference to the given NullableString and assigns it to the Operator field.
func (o *MicrosoftGraphConditionalAccessGrantControls) SetOperator(v string) {
	o.Operator.Set(&v)
}
// SetOperatorNil sets the value for Operator to be an explicit nil
func (o *MicrosoftGraphConditionalAccessGrantControls) SetOperatorNil() {
	o.Operator.Set(nil)
}

// UnsetOperator ensures that no value is present for Operator, not even an explicit nil
func (o *MicrosoftGraphConditionalAccessGrantControls) UnsetOperator() {
	o.Operator.Unset()
}

// GetTermsOfUse returns the TermsOfUse field value if set, zero value otherwise.
func (o *MicrosoftGraphConditionalAccessGrantControls) GetTermsOfUse() []string {
	if o == nil || o.TermsOfUse == nil {
		var ret []string
		return ret
	}
	return *o.TermsOfUse
}

// GetTermsOfUseOk returns a tuple with the TermsOfUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphConditionalAccessGrantControls) GetTermsOfUseOk() (*[]string, bool) {
	if o == nil || o.TermsOfUse == nil {
		return nil, false
	}
	return o.TermsOfUse, true
}

// HasTermsOfUse returns a boolean if a field has been set.
func (o *MicrosoftGraphConditionalAccessGrantControls) HasTermsOfUse() bool {
	if o != nil && o.TermsOfUse != nil {
		return true
	}

	return false
}

// SetTermsOfUse gets a reference to the given []string and assigns it to the TermsOfUse field.
func (o *MicrosoftGraphConditionalAccessGrantControls) SetTermsOfUse(v []string) {
	o.TermsOfUse = &v
}

func (o MicrosoftGraphConditionalAccessGrantControls) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BuiltInControls != nil {
		toSerialize["builtInControls"] = o.BuiltInControls
	}
	if o.CustomAuthenticationFactors != nil {
		toSerialize["customAuthenticationFactors"] = o.CustomAuthenticationFactors
	}
	if o.Operator.IsSet() {
		toSerialize["operator"] = o.Operator.Get()
	}
	if o.TermsOfUse != nil {
		toSerialize["termsOfUse"] = o.TermsOfUse
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphConditionalAccessGrantControls struct {
	value *MicrosoftGraphConditionalAccessGrantControls
	isSet bool
}

func (v NullableMicrosoftGraphConditionalAccessGrantControls) Get() *MicrosoftGraphConditionalAccessGrantControls {
	return v.value
}

func (v *NullableMicrosoftGraphConditionalAccessGrantControls) Set(val *MicrosoftGraphConditionalAccessGrantControls) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphConditionalAccessGrantControls) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphConditionalAccessGrantControls) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphConditionalAccessGrantControls(val *MicrosoftGraphConditionalAccessGrantControls) *NullableMicrosoftGraphConditionalAccessGrantControls {
	return &NullableMicrosoftGraphConditionalAccessGrantControls{value: val, isSet: true}
}

func (v NullableMicrosoftGraphConditionalAccessGrantControls) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphConditionalAccessGrantControls) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


