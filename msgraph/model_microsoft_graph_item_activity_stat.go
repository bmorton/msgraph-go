/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// MicrosoftGraphItemActivityStat struct for MicrosoftGraphItemActivityStat
type MicrosoftGraphItemActivityStat struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// Statistics about the access actions in this interval. Read-only.
	Access AnyOfmicrosoftGraphItemActionStat `json:"access,omitempty"`
	// Statistics about the create actions in this interval. Read-only.
	Create AnyOfmicrosoftGraphItemActionStat `json:"create,omitempty"`
	// Statistics about the delete actions in this interval. Read-only.
	Delete AnyOfmicrosoftGraphItemActionStat `json:"delete,omitempty"`
	// Statistics about the edit actions in this interval. Read-only.
	Edit AnyOfmicrosoftGraphItemActionStat `json:"edit,omitempty"`
	// When the interval ends. Read-only.
	EndDateTime NullableTime `json:"endDateTime,omitempty"`
	// Indicates that the statistics in this interval are based on incomplete data. Read-only.
	IncompleteData AnyOfmicrosoftGraphIncompleteData `json:"incompleteData,omitempty"`
	// Indicates whether the item is 'trending.' Read-only.
	IsTrending NullableBool `json:"isTrending,omitempty"`
	// Statistics about the move actions in this interval. Read-only.
	Move AnyOfmicrosoftGraphItemActionStat `json:"move,omitempty"`
	// When the interval starts. Read-only.
	StartDateTime NullableTime `json:"startDateTime,omitempty"`
	// Exposes the itemActivities represented in this itemActivityStat resource.
	Activities *[]MicrosoftGraphItemActivity `json:"activities,omitempty"`
}

// NewMicrosoftGraphItemActivityStat instantiates a new MicrosoftGraphItemActivityStat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphItemActivityStat() *MicrosoftGraphItemActivityStat {
	this := MicrosoftGraphItemActivityStat{}
	return &this
}

// NewMicrosoftGraphItemActivityStatWithDefaults instantiates a new MicrosoftGraphItemActivityStat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphItemActivityStatWithDefaults() *MicrosoftGraphItemActivityStat {
	this := MicrosoftGraphItemActivityStat{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphItemActivityStat) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphItemActivityStat) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphItemActivityStat) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphItemActivityStat) SetId(v string) {
	o.Id = &v
}

// GetAccess returns the Access field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphItemActivityStat) GetAccess() AnyOfmicrosoftGraphItemActionStat {
	if o == nil  {
		var ret AnyOfmicrosoftGraphItemActionStat
		return ret
	}
	return o.Access
}

// GetAccessOk returns a tuple with the Access field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphItemActivityStat) GetAccessOk() (*AnyOfmicrosoftGraphItemActionStat, bool) {
	if o == nil || o.Access == nil {
		return nil, false
	}
	return &o.Access, true
}

// HasAccess returns a boolean if a field has been set.
func (o *MicrosoftGraphItemActivityStat) HasAccess() bool {
	if o != nil && o.Access != nil {
		return true
	}

	return false
}

// SetAccess gets a reference to the given AnyOfmicrosoftGraphItemActionStat and assigns it to the Access field.
func (o *MicrosoftGraphItemActivityStat) SetAccess(v AnyOfmicrosoftGraphItemActionStat) {
	o.Access = v
}

// GetCreate returns the Create field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphItemActivityStat) GetCreate() AnyOfmicrosoftGraphItemActionStat {
	if o == nil  {
		var ret AnyOfmicrosoftGraphItemActionStat
		return ret
	}
	return o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphItemActivityStat) GetCreateOk() (*AnyOfmicrosoftGraphItemActionStat, bool) {
	if o == nil || o.Create == nil {
		return nil, false
	}
	return &o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *MicrosoftGraphItemActivityStat) HasCreate() bool {
	if o != nil && o.Create != nil {
		return true
	}

	return false
}

// SetCreate gets a reference to the given AnyOfmicrosoftGraphItemActionStat and assigns it to the Create field.
func (o *MicrosoftGraphItemActivityStat) SetCreate(v AnyOfmicrosoftGraphItemActionStat) {
	o.Create = v
}

// GetDelete returns the Delete field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphItemActivityStat) GetDelete() AnyOfmicrosoftGraphItemActionStat {
	if o == nil  {
		var ret AnyOfmicrosoftGraphItemActionStat
		return ret
	}
	return o.Delete
}

// GetDeleteOk returns a tuple with the Delete field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphItemActivityStat) GetDeleteOk() (*AnyOfmicrosoftGraphItemActionStat, bool) {
	if o == nil || o.Delete == nil {
		return nil, false
	}
	return &o.Delete, true
}

// HasDelete returns a boolean if a field has been set.
func (o *MicrosoftGraphItemActivityStat) HasDelete() bool {
	if o != nil && o.Delete != nil {
		return true
	}

	return false
}

// SetDelete gets a reference to the given AnyOfmicrosoftGraphItemActionStat and assigns it to the Delete field.
func (o *MicrosoftGraphItemActivityStat) SetDelete(v AnyOfmicrosoftGraphItemActionStat) {
	o.Delete = v
}

// GetEdit returns the Edit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphItemActivityStat) GetEdit() AnyOfmicrosoftGraphItemActionStat {
	if o == nil  {
		var ret AnyOfmicrosoftGraphItemActionStat
		return ret
	}
	return o.Edit
}

// GetEditOk returns a tuple with the Edit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphItemActivityStat) GetEditOk() (*AnyOfmicrosoftGraphItemActionStat, bool) {
	if o == nil || o.Edit == nil {
		return nil, false
	}
	return &o.Edit, true
}

// HasEdit returns a boolean if a field has been set.
func (o *MicrosoftGraphItemActivityStat) HasEdit() bool {
	if o != nil && o.Edit != nil {
		return true
	}

	return false
}

// SetEdit gets a reference to the given AnyOfmicrosoftGraphItemActionStat and assigns it to the Edit field.
func (o *MicrosoftGraphItemActivityStat) SetEdit(v AnyOfmicrosoftGraphItemActionStat) {
	o.Edit = v
}

// GetEndDateTime returns the EndDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphItemActivityStat) GetEndDateTime() time.Time {
	if o == nil || o.EndDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.EndDateTime.Get()
}

// GetEndDateTimeOk returns a tuple with the EndDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphItemActivityStat) GetEndDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EndDateTime.Get(), o.EndDateTime.IsSet()
}

// HasEndDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphItemActivityStat) HasEndDateTime() bool {
	if o != nil && o.EndDateTime.IsSet() {
		return true
	}

	return false
}

// SetEndDateTime gets a reference to the given NullableTime and assigns it to the EndDateTime field.
func (o *MicrosoftGraphItemActivityStat) SetEndDateTime(v time.Time) {
	o.EndDateTime.Set(&v)
}
// SetEndDateTimeNil sets the value for EndDateTime to be an explicit nil
func (o *MicrosoftGraphItemActivityStat) SetEndDateTimeNil() {
	o.EndDateTime.Set(nil)
}

// UnsetEndDateTime ensures that no value is present for EndDateTime, not even an explicit nil
func (o *MicrosoftGraphItemActivityStat) UnsetEndDateTime() {
	o.EndDateTime.Unset()
}

// GetIncompleteData returns the IncompleteData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphItemActivityStat) GetIncompleteData() AnyOfmicrosoftGraphIncompleteData {
	if o == nil  {
		var ret AnyOfmicrosoftGraphIncompleteData
		return ret
	}
	return o.IncompleteData
}

// GetIncompleteDataOk returns a tuple with the IncompleteData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphItemActivityStat) GetIncompleteDataOk() (*AnyOfmicrosoftGraphIncompleteData, bool) {
	if o == nil || o.IncompleteData == nil {
		return nil, false
	}
	return &o.IncompleteData, true
}

// HasIncompleteData returns a boolean if a field has been set.
func (o *MicrosoftGraphItemActivityStat) HasIncompleteData() bool {
	if o != nil && o.IncompleteData != nil {
		return true
	}

	return false
}

// SetIncompleteData gets a reference to the given AnyOfmicrosoftGraphIncompleteData and assigns it to the IncompleteData field.
func (o *MicrosoftGraphItemActivityStat) SetIncompleteData(v AnyOfmicrosoftGraphIncompleteData) {
	o.IncompleteData = v
}

// GetIsTrending returns the IsTrending field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphItemActivityStat) GetIsTrending() bool {
	if o == nil || o.IsTrending.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsTrending.Get()
}

// GetIsTrendingOk returns a tuple with the IsTrending field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphItemActivityStat) GetIsTrendingOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsTrending.Get(), o.IsTrending.IsSet()
}

// HasIsTrending returns a boolean if a field has been set.
func (o *MicrosoftGraphItemActivityStat) HasIsTrending() bool {
	if o != nil && o.IsTrending.IsSet() {
		return true
	}

	return false
}

// SetIsTrending gets a reference to the given NullableBool and assigns it to the IsTrending field.
func (o *MicrosoftGraphItemActivityStat) SetIsTrending(v bool) {
	o.IsTrending.Set(&v)
}
// SetIsTrendingNil sets the value for IsTrending to be an explicit nil
func (o *MicrosoftGraphItemActivityStat) SetIsTrendingNil() {
	o.IsTrending.Set(nil)
}

// UnsetIsTrending ensures that no value is present for IsTrending, not even an explicit nil
func (o *MicrosoftGraphItemActivityStat) UnsetIsTrending() {
	o.IsTrending.Unset()
}

// GetMove returns the Move field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphItemActivityStat) GetMove() AnyOfmicrosoftGraphItemActionStat {
	if o == nil  {
		var ret AnyOfmicrosoftGraphItemActionStat
		return ret
	}
	return o.Move
}

// GetMoveOk returns a tuple with the Move field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphItemActivityStat) GetMoveOk() (*AnyOfmicrosoftGraphItemActionStat, bool) {
	if o == nil || o.Move == nil {
		return nil, false
	}
	return &o.Move, true
}

// HasMove returns a boolean if a field has been set.
func (o *MicrosoftGraphItemActivityStat) HasMove() bool {
	if o != nil && o.Move != nil {
		return true
	}

	return false
}

// SetMove gets a reference to the given AnyOfmicrosoftGraphItemActionStat and assigns it to the Move field.
func (o *MicrosoftGraphItemActivityStat) SetMove(v AnyOfmicrosoftGraphItemActionStat) {
	o.Move = v
}

// GetStartDateTime returns the StartDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphItemActivityStat) GetStartDateTime() time.Time {
	if o == nil || o.StartDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.StartDateTime.Get()
}

// GetStartDateTimeOk returns a tuple with the StartDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphItemActivityStat) GetStartDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StartDateTime.Get(), o.StartDateTime.IsSet()
}

// HasStartDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphItemActivityStat) HasStartDateTime() bool {
	if o != nil && o.StartDateTime.IsSet() {
		return true
	}

	return false
}

// SetStartDateTime gets a reference to the given NullableTime and assigns it to the StartDateTime field.
func (o *MicrosoftGraphItemActivityStat) SetStartDateTime(v time.Time) {
	o.StartDateTime.Set(&v)
}
// SetStartDateTimeNil sets the value for StartDateTime to be an explicit nil
func (o *MicrosoftGraphItemActivityStat) SetStartDateTimeNil() {
	o.StartDateTime.Set(nil)
}

// UnsetStartDateTime ensures that no value is present for StartDateTime, not even an explicit nil
func (o *MicrosoftGraphItemActivityStat) UnsetStartDateTime() {
	o.StartDateTime.Unset()
}

// GetActivities returns the Activities field value if set, zero value otherwise.
func (o *MicrosoftGraphItemActivityStat) GetActivities() []MicrosoftGraphItemActivity {
	if o == nil || o.Activities == nil {
		var ret []MicrosoftGraphItemActivity
		return ret
	}
	return *o.Activities
}

// GetActivitiesOk returns a tuple with the Activities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphItemActivityStat) GetActivitiesOk() (*[]MicrosoftGraphItemActivity, bool) {
	if o == nil || o.Activities == nil {
		return nil, false
	}
	return o.Activities, true
}

// HasActivities returns a boolean if a field has been set.
func (o *MicrosoftGraphItemActivityStat) HasActivities() bool {
	if o != nil && o.Activities != nil {
		return true
	}

	return false
}

// SetActivities gets a reference to the given []MicrosoftGraphItemActivity and assigns it to the Activities field.
func (o *MicrosoftGraphItemActivityStat) SetActivities(v []MicrosoftGraphItemActivity) {
	o.Activities = &v
}

func (o MicrosoftGraphItemActivityStat) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Access != nil {
		toSerialize["access"] = o.Access
	}
	if o.Create != nil {
		toSerialize["create"] = o.Create
	}
	if o.Delete != nil {
		toSerialize["delete"] = o.Delete
	}
	if o.Edit != nil {
		toSerialize["edit"] = o.Edit
	}
	if o.EndDateTime.IsSet() {
		toSerialize["endDateTime"] = o.EndDateTime.Get()
	}
	if o.IncompleteData != nil {
		toSerialize["incompleteData"] = o.IncompleteData
	}
	if o.IsTrending.IsSet() {
		toSerialize["isTrending"] = o.IsTrending.Get()
	}
	if o.Move != nil {
		toSerialize["move"] = o.Move
	}
	if o.StartDateTime.IsSet() {
		toSerialize["startDateTime"] = o.StartDateTime.Get()
	}
	if o.Activities != nil {
		toSerialize["activities"] = o.Activities
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphItemActivityStat struct {
	value *MicrosoftGraphItemActivityStat
	isSet bool
}

func (v NullableMicrosoftGraphItemActivityStat) Get() *MicrosoftGraphItemActivityStat {
	return v.value
}

func (v *NullableMicrosoftGraphItemActivityStat) Set(val *MicrosoftGraphItemActivityStat) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphItemActivityStat) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphItemActivityStat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphItemActivityStat(val *MicrosoftGraphItemActivityStat) *NullableMicrosoftGraphItemActivityStat {
	return &NullableMicrosoftGraphItemActivityStat{value: val, isSet: true}
}

func (v NullableMicrosoftGraphItemActivityStat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphItemActivityStat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


