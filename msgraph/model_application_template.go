/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// ApplicationTemplate struct for ApplicationTemplate
type ApplicationTemplate struct {
	// The list of categories for the application. Supported values can be: Collaboration, Business Management, Consumer, Content management, CRM, Data services, Developer services, E-commerce, Education, ERP, Finance, Health, Human resources, IT infrastructure, Mail, Management, Marketing, Media, Productivity, Project management, Telecommunications, Tools, Travel, and Web design & hosting.
	Categories *[]*string `json:"categories,omitempty"`
	// A description of the application.
	Description NullableString `json:"description,omitempty"`
	// The name of the application.
	DisplayName NullableString `json:"displayName,omitempty"`
	// The home page URL of the application.
	HomePageUrl NullableString `json:"homePageUrl,omitempty"`
	// The URL to get the logo for this application.
	LogoUrl NullableString `json:"logoUrl,omitempty"`
	// The name of the publisher for this application.
	Publisher NullableString `json:"publisher,omitempty"`
	// The list of provisioning modes supported by this application. The only valid value is sync.
	SupportedProvisioningTypes *[]*string `json:"supportedProvisioningTypes,omitempty"`
	// The list of single sign-on modes supported by this application. The supported values are oidc, password, saml, and notSupported.
	SupportedSingleSignOnModes *[]*string `json:"supportedSingleSignOnModes,omitempty"`
}

// NewApplicationTemplate instantiates a new ApplicationTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationTemplate() *ApplicationTemplate {
	this := ApplicationTemplate{}
	return &this
}

// NewApplicationTemplateWithDefaults instantiates a new ApplicationTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationTemplateWithDefaults() *ApplicationTemplate {
	this := ApplicationTemplate{}
	return &this
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *ApplicationTemplate) GetCategories() []*string {
	if o == nil || o.Categories == nil {
		var ret []*string
		return ret
	}
	return *o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationTemplate) GetCategoriesOk() (*[]*string, bool) {
	if o == nil || o.Categories == nil {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *ApplicationTemplate) HasCategories() bool {
	if o != nil && o.Categories != nil {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []*string and assigns it to the Categories field.
func (o *ApplicationTemplate) SetCategories(v []*string) {
	o.Categories = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationTemplate) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationTemplate) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *ApplicationTemplate) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *ApplicationTemplate) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *ApplicationTemplate) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *ApplicationTemplate) UnsetDescription() {
	o.Description.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationTemplate) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationTemplate) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ApplicationTemplate) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *ApplicationTemplate) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *ApplicationTemplate) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *ApplicationTemplate) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetHomePageUrl returns the HomePageUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationTemplate) GetHomePageUrl() string {
	if o == nil || o.HomePageUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.HomePageUrl.Get()
}

// GetHomePageUrlOk returns a tuple with the HomePageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationTemplate) GetHomePageUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HomePageUrl.Get(), o.HomePageUrl.IsSet()
}

// HasHomePageUrl returns a boolean if a field has been set.
func (o *ApplicationTemplate) HasHomePageUrl() bool {
	if o != nil && o.HomePageUrl.IsSet() {
		return true
	}

	return false
}

// SetHomePageUrl gets a reference to the given NullableString and assigns it to the HomePageUrl field.
func (o *ApplicationTemplate) SetHomePageUrl(v string) {
	o.HomePageUrl.Set(&v)
}
// SetHomePageUrlNil sets the value for HomePageUrl to be an explicit nil
func (o *ApplicationTemplate) SetHomePageUrlNil() {
	o.HomePageUrl.Set(nil)
}

// UnsetHomePageUrl ensures that no value is present for HomePageUrl, not even an explicit nil
func (o *ApplicationTemplate) UnsetHomePageUrl() {
	o.HomePageUrl.Unset()
}

// GetLogoUrl returns the LogoUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationTemplate) GetLogoUrl() string {
	if o == nil || o.LogoUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.LogoUrl.Get()
}

// GetLogoUrlOk returns a tuple with the LogoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationTemplate) GetLogoUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LogoUrl.Get(), o.LogoUrl.IsSet()
}

// HasLogoUrl returns a boolean if a field has been set.
func (o *ApplicationTemplate) HasLogoUrl() bool {
	if o != nil && o.LogoUrl.IsSet() {
		return true
	}

	return false
}

// SetLogoUrl gets a reference to the given NullableString and assigns it to the LogoUrl field.
func (o *ApplicationTemplate) SetLogoUrl(v string) {
	o.LogoUrl.Set(&v)
}
// SetLogoUrlNil sets the value for LogoUrl to be an explicit nil
func (o *ApplicationTemplate) SetLogoUrlNil() {
	o.LogoUrl.Set(nil)
}

// UnsetLogoUrl ensures that no value is present for LogoUrl, not even an explicit nil
func (o *ApplicationTemplate) UnsetLogoUrl() {
	o.LogoUrl.Unset()
}

// GetPublisher returns the Publisher field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationTemplate) GetPublisher() string {
	if o == nil || o.Publisher.Get() == nil {
		var ret string
		return ret
	}
	return *o.Publisher.Get()
}

// GetPublisherOk returns a tuple with the Publisher field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationTemplate) GetPublisherOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Publisher.Get(), o.Publisher.IsSet()
}

// HasPublisher returns a boolean if a field has been set.
func (o *ApplicationTemplate) HasPublisher() bool {
	if o != nil && o.Publisher.IsSet() {
		return true
	}

	return false
}

// SetPublisher gets a reference to the given NullableString and assigns it to the Publisher field.
func (o *ApplicationTemplate) SetPublisher(v string) {
	o.Publisher.Set(&v)
}
// SetPublisherNil sets the value for Publisher to be an explicit nil
func (o *ApplicationTemplate) SetPublisherNil() {
	o.Publisher.Set(nil)
}

// UnsetPublisher ensures that no value is present for Publisher, not even an explicit nil
func (o *ApplicationTemplate) UnsetPublisher() {
	o.Publisher.Unset()
}

// GetSupportedProvisioningTypes returns the SupportedProvisioningTypes field value if set, zero value otherwise.
func (o *ApplicationTemplate) GetSupportedProvisioningTypes() []*string {
	if o == nil || o.SupportedProvisioningTypes == nil {
		var ret []*string
		return ret
	}
	return *o.SupportedProvisioningTypes
}

// GetSupportedProvisioningTypesOk returns a tuple with the SupportedProvisioningTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationTemplate) GetSupportedProvisioningTypesOk() (*[]*string, bool) {
	if o == nil || o.SupportedProvisioningTypes == nil {
		return nil, false
	}
	return o.SupportedProvisioningTypes, true
}

// HasSupportedProvisioningTypes returns a boolean if a field has been set.
func (o *ApplicationTemplate) HasSupportedProvisioningTypes() bool {
	if o != nil && o.SupportedProvisioningTypes != nil {
		return true
	}

	return false
}

// SetSupportedProvisioningTypes gets a reference to the given []*string and assigns it to the SupportedProvisioningTypes field.
func (o *ApplicationTemplate) SetSupportedProvisioningTypes(v []*string) {
	o.SupportedProvisioningTypes = &v
}

// GetSupportedSingleSignOnModes returns the SupportedSingleSignOnModes field value if set, zero value otherwise.
func (o *ApplicationTemplate) GetSupportedSingleSignOnModes() []*string {
	if o == nil || o.SupportedSingleSignOnModes == nil {
		var ret []*string
		return ret
	}
	return *o.SupportedSingleSignOnModes
}

// GetSupportedSingleSignOnModesOk returns a tuple with the SupportedSingleSignOnModes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationTemplate) GetSupportedSingleSignOnModesOk() (*[]*string, bool) {
	if o == nil || o.SupportedSingleSignOnModes == nil {
		return nil, false
	}
	return o.SupportedSingleSignOnModes, true
}

// HasSupportedSingleSignOnModes returns a boolean if a field has been set.
func (o *ApplicationTemplate) HasSupportedSingleSignOnModes() bool {
	if o != nil && o.SupportedSingleSignOnModes != nil {
		return true
	}

	return false
}

// SetSupportedSingleSignOnModes gets a reference to the given []*string and assigns it to the SupportedSingleSignOnModes field.
func (o *ApplicationTemplate) SetSupportedSingleSignOnModes(v []*string) {
	o.SupportedSingleSignOnModes = &v
}

func (o ApplicationTemplate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Categories != nil {
		toSerialize["categories"] = o.Categories
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.HomePageUrl.IsSet() {
		toSerialize["homePageUrl"] = o.HomePageUrl.Get()
	}
	if o.LogoUrl.IsSet() {
		toSerialize["logoUrl"] = o.LogoUrl.Get()
	}
	if o.Publisher.IsSet() {
		toSerialize["publisher"] = o.Publisher.Get()
	}
	if o.SupportedProvisioningTypes != nil {
		toSerialize["supportedProvisioningTypes"] = o.SupportedProvisioningTypes
	}
	if o.SupportedSingleSignOnModes != nil {
		toSerialize["supportedSingleSignOnModes"] = o.SupportedSingleSignOnModes
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationTemplate struct {
	value *ApplicationTemplate
	isSet bool
}

func (v NullableApplicationTemplate) Get() *ApplicationTemplate {
	return v.value
}

func (v *NullableApplicationTemplate) Set(val *ApplicationTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationTemplate(val *ApplicationTemplate) *NullableApplicationTemplate {
	return &NullableApplicationTemplate{value: val, isSet: true}
}

func (v NullableApplicationTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


