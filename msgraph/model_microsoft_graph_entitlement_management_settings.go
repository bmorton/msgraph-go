/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MicrosoftGraphEntitlementManagementSettings struct for MicrosoftGraphEntitlementManagementSettings
type MicrosoftGraphEntitlementManagementSettings struct {
	// Read-only.
	Id *string `json:"id,omitempty"`
	// If externalUserLifecycleAction is blockSignInAndDelete, the duration, typically a number of days, after an external user is blocked from sign in before their account is deleted.
	DurationUntilExternalUserDeletedAfterBlocked NullableString `json:"durationUntilExternalUserDeletedAfterBlocked,omitempty"`
	// Automatic action that the service should take when an external user's last access package assignment is removed. The possible values are: none, blockSignIn, blockSignInAndDelete, unknownFutureValue.
	ExternalUserLifecycleAction AnyOfmicrosoftGraphAccessPackageExternalUserLifecycleAction `json:"externalUserLifecycleAction,omitempty"`
}

// NewMicrosoftGraphEntitlementManagementSettings instantiates a new MicrosoftGraphEntitlementManagementSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftGraphEntitlementManagementSettings() *MicrosoftGraphEntitlementManagementSettings {
	this := MicrosoftGraphEntitlementManagementSettings{}
	return &this
}

// NewMicrosoftGraphEntitlementManagementSettingsWithDefaults instantiates a new MicrosoftGraphEntitlementManagementSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftGraphEntitlementManagementSettingsWithDefaults() *MicrosoftGraphEntitlementManagementSettings {
	this := MicrosoftGraphEntitlementManagementSettings{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftGraphEntitlementManagementSettings) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEntitlementManagementSettings) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphEntitlementManagementSettings) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphEntitlementManagementSettings) SetId(v string) {
	o.Id = &v
}

// GetDurationUntilExternalUserDeletedAfterBlocked returns the DurationUntilExternalUserDeletedAfterBlocked field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEntitlementManagementSettings) GetDurationUntilExternalUserDeletedAfterBlocked() string {
	if o == nil || o.DurationUntilExternalUserDeletedAfterBlocked.Get() == nil {
		var ret string
		return ret
	}
	return *o.DurationUntilExternalUserDeletedAfterBlocked.Get()
}

// GetDurationUntilExternalUserDeletedAfterBlockedOk returns a tuple with the DurationUntilExternalUserDeletedAfterBlocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEntitlementManagementSettings) GetDurationUntilExternalUserDeletedAfterBlockedOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DurationUntilExternalUserDeletedAfterBlocked.Get(), o.DurationUntilExternalUserDeletedAfterBlocked.IsSet()
}

// HasDurationUntilExternalUserDeletedAfterBlocked returns a boolean if a field has been set.
func (o *MicrosoftGraphEntitlementManagementSettings) HasDurationUntilExternalUserDeletedAfterBlocked() bool {
	if o != nil && o.DurationUntilExternalUserDeletedAfterBlocked.IsSet() {
		return true
	}

	return false
}

// SetDurationUntilExternalUserDeletedAfterBlocked gets a reference to the given NullableString and assigns it to the DurationUntilExternalUserDeletedAfterBlocked field.
func (o *MicrosoftGraphEntitlementManagementSettings) SetDurationUntilExternalUserDeletedAfterBlocked(v string) {
	o.DurationUntilExternalUserDeletedAfterBlocked.Set(&v)
}
// SetDurationUntilExternalUserDeletedAfterBlockedNil sets the value for DurationUntilExternalUserDeletedAfterBlocked to be an explicit nil
func (o *MicrosoftGraphEntitlementManagementSettings) SetDurationUntilExternalUserDeletedAfterBlockedNil() {
	o.DurationUntilExternalUserDeletedAfterBlocked.Set(nil)
}

// UnsetDurationUntilExternalUserDeletedAfterBlocked ensures that no value is present for DurationUntilExternalUserDeletedAfterBlocked, not even an explicit nil
func (o *MicrosoftGraphEntitlementManagementSettings) UnsetDurationUntilExternalUserDeletedAfterBlocked() {
	o.DurationUntilExternalUserDeletedAfterBlocked.Unset()
}

// GetExternalUserLifecycleAction returns the ExternalUserLifecycleAction field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MicrosoftGraphEntitlementManagementSettings) GetExternalUserLifecycleAction() AnyOfmicrosoftGraphAccessPackageExternalUserLifecycleAction {
	if o == nil  {
		var ret AnyOfmicrosoftGraphAccessPackageExternalUserLifecycleAction
		return ret
	}
	return o.ExternalUserLifecycleAction
}

// GetExternalUserLifecycleActionOk returns a tuple with the ExternalUserLifecycleAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MicrosoftGraphEntitlementManagementSettings) GetExternalUserLifecycleActionOk() (*AnyOfmicrosoftGraphAccessPackageExternalUserLifecycleAction, bool) {
	if o == nil || o.ExternalUserLifecycleAction == nil {
		return nil, false
	}
	return &o.ExternalUserLifecycleAction, true
}

// HasExternalUserLifecycleAction returns a boolean if a field has been set.
func (o *MicrosoftGraphEntitlementManagementSettings) HasExternalUserLifecycleAction() bool {
	if o != nil && o.ExternalUserLifecycleAction != nil {
		return true
	}

	return false
}

// SetExternalUserLifecycleAction gets a reference to the given AnyOfmicrosoftGraphAccessPackageExternalUserLifecycleAction and assigns it to the ExternalUserLifecycleAction field.
func (o *MicrosoftGraphEntitlementManagementSettings) SetExternalUserLifecycleAction(v AnyOfmicrosoftGraphAccessPackageExternalUserLifecycleAction) {
	o.ExternalUserLifecycleAction = v
}

func (o MicrosoftGraphEntitlementManagementSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.DurationUntilExternalUserDeletedAfterBlocked.IsSet() {
		toSerialize["durationUntilExternalUserDeletedAfterBlocked"] = o.DurationUntilExternalUserDeletedAfterBlocked.Get()
	}
	if o.ExternalUserLifecycleAction != nil {
		toSerialize["externalUserLifecycleAction"] = o.ExternalUserLifecycleAction
	}
	return json.Marshal(toSerialize)
}

type NullableMicrosoftGraphEntitlementManagementSettings struct {
	value *MicrosoftGraphEntitlementManagementSettings
	isSet bool
}

func (v NullableMicrosoftGraphEntitlementManagementSettings) Get() *MicrosoftGraphEntitlementManagementSettings {
	return v.value
}

func (v *NullableMicrosoftGraphEntitlementManagementSettings) Set(val *MicrosoftGraphEntitlementManagementSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphEntitlementManagementSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphEntitlementManagementSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphEntitlementManagementSettings(val *MicrosoftGraphEntitlementManagementSettings) *NullableMicrosoftGraphEntitlementManagementSettings {
	return &NullableMicrosoftGraphEntitlementManagementSettings{value: val, isSet: true}
}

func (v NullableMicrosoftGraphEntitlementManagementSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphEntitlementManagementSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


