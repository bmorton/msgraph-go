/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphWeekIndex the model 'MicrosoftGraphWeekIndex'
type MicrosoftGraphWeekIndex string

// List of microsoft.graph.weekIndex
const (
	FIRST MicrosoftGraphWeekIndex = "first"
	SECOND MicrosoftGraphWeekIndex = "second"
	THIRD MicrosoftGraphWeekIndex = "third"
	FOURTH MicrosoftGraphWeekIndex = "fourth"
	LAST MicrosoftGraphWeekIndex = "last"
)

// All allowed values of MicrosoftGraphWeekIndex enum
var AllowedMicrosoftGraphWeekIndexEnumValues = []MicrosoftGraphWeekIndex{
	"first",
	"second",
	"third",
	"fourth",
	"last",
}

func (v *MicrosoftGraphWeekIndex) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphWeekIndex(value)
	for _, existing := range AllowedMicrosoftGraphWeekIndexEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphWeekIndex", value)
}

// NewMicrosoftGraphWeekIndexFromValue returns a pointer to a valid MicrosoftGraphWeekIndex
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphWeekIndexFromValue(v string) (*MicrosoftGraphWeekIndex, error) {
	ev := MicrosoftGraphWeekIndex(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphWeekIndex: valid values are %v", v, AllowedMicrosoftGraphWeekIndexEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphWeekIndex) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphWeekIndexEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.weekIndex value
func (v MicrosoftGraphWeekIndex) Ptr() *MicrosoftGraphWeekIndex {
	return &v
}

type NullableMicrosoftGraphWeekIndex struct {
	value *MicrosoftGraphWeekIndex
	isSet bool
}

func (v NullableMicrosoftGraphWeekIndex) Get() *MicrosoftGraphWeekIndex {
	return v.value
}

func (v *NullableMicrosoftGraphWeekIndex) Set(val *MicrosoftGraphWeekIndex) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphWeekIndex) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphWeekIndex) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphWeekIndex(val *MicrosoftGraphWeekIndex) *NullableMicrosoftGraphWeekIndex {
	return &NullableMicrosoftGraphWeekIndex{value: val, isSet: true}
}

func (v NullableMicrosoftGraphWeekIndex) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphWeekIndex) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

