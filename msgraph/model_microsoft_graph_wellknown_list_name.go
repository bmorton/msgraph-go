/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphWellknownListName the model 'MicrosoftGraphWellknownListName'
type MicrosoftGraphWellknownListName string

// List of microsoft.graph.wellknownListName
const (
	NONE MicrosoftGraphWellknownListName = "none"
	DEFAULT_LIST MicrosoftGraphWellknownListName = "defaultList"
	FLAGGED_EMAILS MicrosoftGraphWellknownListName = "flaggedEmails"
	UNKNOWN_FUTURE_VALUE MicrosoftGraphWellknownListName = "unknownFutureValue"
)

// All allowed values of MicrosoftGraphWellknownListName enum
var AllowedMicrosoftGraphWellknownListNameEnumValues = []MicrosoftGraphWellknownListName{
	"none",
	"defaultList",
	"flaggedEmails",
	"unknownFutureValue",
}

func (v *MicrosoftGraphWellknownListName) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphWellknownListName(value)
	for _, existing := range AllowedMicrosoftGraphWellknownListNameEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphWellknownListName", value)
}

// NewMicrosoftGraphWellknownListNameFromValue returns a pointer to a valid MicrosoftGraphWellknownListName
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphWellknownListNameFromValue(v string) (*MicrosoftGraphWellknownListName, error) {
	ev := MicrosoftGraphWellknownListName(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphWellknownListName: valid values are %v", v, AllowedMicrosoftGraphWellknownListNameEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphWellknownListName) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphWellknownListNameEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.wellknownListName value
func (v MicrosoftGraphWellknownListName) Ptr() *MicrosoftGraphWellknownListName {
	return &v
}

type NullableMicrosoftGraphWellknownListName struct {
	value *MicrosoftGraphWellknownListName
	isSet bool
}

func (v NullableMicrosoftGraphWellknownListName) Get() *MicrosoftGraphWellknownListName {
	return v.value
}

func (v *NullableMicrosoftGraphWellknownListName) Set(val *MicrosoftGraphWellknownListName) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphWellknownListName) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphWellknownListName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphWellknownListName(val *MicrosoftGraphWellknownListName) *NullableMicrosoftGraphWellknownListName {
	return &NullableMicrosoftGraphWellknownListName{value: val, isSet: true}
}

func (v NullableMicrosoftGraphWellknownListName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphWellknownListName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

