/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MicrosoftGraphPrintFinishing the model 'MicrosoftGraphPrintFinishing'
type MicrosoftGraphPrintFinishing string

// List of microsoft.graph.printFinishing
const (
	NONE MicrosoftGraphPrintFinishing = "none"
	STAPLE MicrosoftGraphPrintFinishing = "staple"
	PUNCH MicrosoftGraphPrintFinishing = "punch"
	COVER MicrosoftGraphPrintFinishing = "cover"
	BIND MicrosoftGraphPrintFinishing = "bind"
	SADDLE_STITCH MicrosoftGraphPrintFinishing = "saddleStitch"
	STITCH_EDGE MicrosoftGraphPrintFinishing = "stitchEdge"
	STAPLE_TOP_LEFT MicrosoftGraphPrintFinishing = "stapleTopLeft"
	STAPLE_BOTTOM_LEFT MicrosoftGraphPrintFinishing = "stapleBottomLeft"
	STAPLE_TOP_RIGHT MicrosoftGraphPrintFinishing = "stapleTopRight"
	STAPLE_BOTTOM_RIGHT MicrosoftGraphPrintFinishing = "stapleBottomRight"
	STITCH_LEFT_EDGE MicrosoftGraphPrintFinishing = "stitchLeftEdge"
	STITCH_TOP_EDGE MicrosoftGraphPrintFinishing = "stitchTopEdge"
	STITCH_RIGHT_EDGE MicrosoftGraphPrintFinishing = "stitchRightEdge"
	STITCH_BOTTOM_EDGE MicrosoftGraphPrintFinishing = "stitchBottomEdge"
	STAPLE_DUAL_LEFT MicrosoftGraphPrintFinishing = "stapleDualLeft"
	STAPLE_DUAL_TOP MicrosoftGraphPrintFinishing = "stapleDualTop"
	STAPLE_DUAL_RIGHT MicrosoftGraphPrintFinishing = "stapleDualRight"
	STAPLE_DUAL_BOTTOM MicrosoftGraphPrintFinishing = "stapleDualBottom"
	UNKNOWN_FUTURE_VALUE MicrosoftGraphPrintFinishing = "unknownFutureValue"
)

// All allowed values of MicrosoftGraphPrintFinishing enum
var AllowedMicrosoftGraphPrintFinishingEnumValues = []MicrosoftGraphPrintFinishing{
	"none",
	"staple",
	"punch",
	"cover",
	"bind",
	"saddleStitch",
	"stitchEdge",
	"stapleTopLeft",
	"stapleBottomLeft",
	"stapleTopRight",
	"stapleBottomRight",
	"stitchLeftEdge",
	"stitchTopEdge",
	"stitchRightEdge",
	"stitchBottomEdge",
	"stapleDualLeft",
	"stapleDualTop",
	"stapleDualRight",
	"stapleDualBottom",
	"unknownFutureValue",
}

func (v *MicrosoftGraphPrintFinishing) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MicrosoftGraphPrintFinishing(value)
	for _, existing := range AllowedMicrosoftGraphPrintFinishingEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MicrosoftGraphPrintFinishing", value)
}

// NewMicrosoftGraphPrintFinishingFromValue returns a pointer to a valid MicrosoftGraphPrintFinishing
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMicrosoftGraphPrintFinishingFromValue(v string) (*MicrosoftGraphPrintFinishing, error) {
	ev := MicrosoftGraphPrintFinishing(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MicrosoftGraphPrintFinishing: valid values are %v", v, AllowedMicrosoftGraphPrintFinishingEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MicrosoftGraphPrintFinishing) IsValid() bool {
	for _, existing := range AllowedMicrosoftGraphPrintFinishingEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to microsoft.graph.printFinishing value
func (v MicrosoftGraphPrintFinishing) Ptr() *MicrosoftGraphPrintFinishing {
	return &v
}

type NullableMicrosoftGraphPrintFinishing struct {
	value *MicrosoftGraphPrintFinishing
	isSet bool
}

func (v NullableMicrosoftGraphPrintFinishing) Get() *MicrosoftGraphPrintFinishing {
	return v.value
}

func (v *NullableMicrosoftGraphPrintFinishing) Set(val *MicrosoftGraphPrintFinishing) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftGraphPrintFinishing) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftGraphPrintFinishing) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftGraphPrintFinishing(val *MicrosoftGraphPrintFinishing) *NullableMicrosoftGraphPrintFinishing {
	return &NullableMicrosoftGraphPrintFinishing{value: val, isSet: true}
}

func (v NullableMicrosoftGraphPrintFinishing) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftGraphPrintFinishing) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

