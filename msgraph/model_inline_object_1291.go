/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject1291 struct for InlineObject1291
type InlineObject1291 struct {
	Cost AnyOfobject `json:"cost,omitempty"`
	Salvage AnyOfobject `json:"salvage,omitempty"`
	Life AnyOfobject `json:"life,omitempty"`
	Period AnyOfobject `json:"period,omitempty"`
	Month AnyOfobject `json:"month,omitempty"`
}

// NewInlineObject1291 instantiates a new InlineObject1291 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject1291() *InlineObject1291 {
	this := InlineObject1291{}
	return &this
}

// NewInlineObject1291WithDefaults instantiates a new InlineObject1291 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject1291WithDefaults() *InlineObject1291 {
	this := InlineObject1291{}
	return &this
}

// GetCost returns the Cost field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1291) GetCost() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Cost
}

// GetCostOk returns a tuple with the Cost field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1291) GetCostOk() (*AnyOfobject, bool) {
	if o == nil || o.Cost == nil {
		return nil, false
	}
	return &o.Cost, true
}

// HasCost returns a boolean if a field has been set.
func (o *InlineObject1291) HasCost() bool {
	if o != nil && o.Cost != nil {
		return true
	}

	return false
}

// SetCost gets a reference to the given AnyOfobject and assigns it to the Cost field.
func (o *InlineObject1291) SetCost(v AnyOfobject) {
	o.Cost = v
}

// GetSalvage returns the Salvage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1291) GetSalvage() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Salvage
}

// GetSalvageOk returns a tuple with the Salvage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1291) GetSalvageOk() (*AnyOfobject, bool) {
	if o == nil || o.Salvage == nil {
		return nil, false
	}
	return &o.Salvage, true
}

// HasSalvage returns a boolean if a field has been set.
func (o *InlineObject1291) HasSalvage() bool {
	if o != nil && o.Salvage != nil {
		return true
	}

	return false
}

// SetSalvage gets a reference to the given AnyOfobject and assigns it to the Salvage field.
func (o *InlineObject1291) SetSalvage(v AnyOfobject) {
	o.Salvage = v
}

// GetLife returns the Life field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1291) GetLife() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Life
}

// GetLifeOk returns a tuple with the Life field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1291) GetLifeOk() (*AnyOfobject, bool) {
	if o == nil || o.Life == nil {
		return nil, false
	}
	return &o.Life, true
}

// HasLife returns a boolean if a field has been set.
func (o *InlineObject1291) HasLife() bool {
	if o != nil && o.Life != nil {
		return true
	}

	return false
}

// SetLife gets a reference to the given AnyOfobject and assigns it to the Life field.
func (o *InlineObject1291) SetLife(v AnyOfobject) {
	o.Life = v
}

// GetPeriod returns the Period field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1291) GetPeriod() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1291) GetPeriodOk() (*AnyOfobject, bool) {
	if o == nil || o.Period == nil {
		return nil, false
	}
	return &o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *InlineObject1291) HasPeriod() bool {
	if o != nil && o.Period != nil {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given AnyOfobject and assigns it to the Period field.
func (o *InlineObject1291) SetPeriod(v AnyOfobject) {
	o.Period = v
}

// GetMonth returns the Month field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject1291) GetMonth() AnyOfobject {
	if o == nil  {
		var ret AnyOfobject
		return ret
	}
	return o.Month
}

// GetMonthOk returns a tuple with the Month field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject1291) GetMonthOk() (*AnyOfobject, bool) {
	if o == nil || o.Month == nil {
		return nil, false
	}
	return &o.Month, true
}

// HasMonth returns a boolean if a field has been set.
func (o *InlineObject1291) HasMonth() bool {
	if o != nil && o.Month != nil {
		return true
	}

	return false
}

// SetMonth gets a reference to the given AnyOfobject and assigns it to the Month field.
func (o *InlineObject1291) SetMonth(v AnyOfobject) {
	o.Month = v
}

func (o InlineObject1291) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Cost != nil {
		toSerialize["cost"] = o.Cost
	}
	if o.Salvage != nil {
		toSerialize["salvage"] = o.Salvage
	}
	if o.Life != nil {
		toSerialize["life"] = o.Life
	}
	if o.Period != nil {
		toSerialize["period"] = o.Period
	}
	if o.Month != nil {
		toSerialize["month"] = o.Month
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject1291 struct {
	value *InlineObject1291
	isSet bool
}

func (v NullableInlineObject1291) Get() *InlineObject1291 {
	return v.value
}

func (v *NullableInlineObject1291) Set(val *InlineObject1291) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject1291) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject1291) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject1291(val *InlineObject1291) *NullableInlineObject1291 {
	return &NullableInlineObject1291{value: val, isSet: true}
}

func (v NullableInlineObject1291) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject1291) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


