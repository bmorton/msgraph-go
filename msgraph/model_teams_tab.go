/*
Partial Graph API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgraph

import (
	"encoding/json"
)

// TeamsTab struct for TeamsTab
type TeamsTab struct {
	// Container for custom settings applied to a tab. The tab is considered configured only once this property is set.
	Configuration AnyOfmicrosoftGraphTeamsTabConfiguration `json:"configuration,omitempty"`
	// Name of the tab.
	DisplayName NullableString `json:"displayName,omitempty"`
	// Deep link URL of the tab instance. Read only.
	WebUrl NullableString `json:"webUrl,omitempty"`
	// The application that is linked to the tab. This cannot be changed after tab creation.
	TeamsApp AnyOfmicrosoftGraphTeamsApp `json:"teamsApp,omitempty"`
}

// NewTeamsTab instantiates a new TeamsTab object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTeamsTab() *TeamsTab {
	this := TeamsTab{}
	return &this
}

// NewTeamsTabWithDefaults instantiates a new TeamsTab object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTeamsTabWithDefaults() *TeamsTab {
	this := TeamsTab{}
	return &this
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TeamsTab) GetConfiguration() AnyOfmicrosoftGraphTeamsTabConfiguration {
	if o == nil  {
		var ret AnyOfmicrosoftGraphTeamsTabConfiguration
		return ret
	}
	return o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TeamsTab) GetConfigurationOk() (*AnyOfmicrosoftGraphTeamsTabConfiguration, bool) {
	if o == nil || o.Configuration == nil {
		return nil, false
	}
	return &o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *TeamsTab) HasConfiguration() bool {
	if o != nil && o.Configuration != nil {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given AnyOfmicrosoftGraphTeamsTabConfiguration and assigns it to the Configuration field.
func (o *TeamsTab) SetConfiguration(v AnyOfmicrosoftGraphTeamsTabConfiguration) {
	o.Configuration = v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TeamsTab) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TeamsTab) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *TeamsTab) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *TeamsTab) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *TeamsTab) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *TeamsTab) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetWebUrl returns the WebUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TeamsTab) GetWebUrl() string {
	if o == nil || o.WebUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.WebUrl.Get()
}

// GetWebUrlOk returns a tuple with the WebUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TeamsTab) GetWebUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.WebUrl.Get(), o.WebUrl.IsSet()
}

// HasWebUrl returns a boolean if a field has been set.
func (o *TeamsTab) HasWebUrl() bool {
	if o != nil && o.WebUrl.IsSet() {
		return true
	}

	return false
}

// SetWebUrl gets a reference to the given NullableString and assigns it to the WebUrl field.
func (o *TeamsTab) SetWebUrl(v string) {
	o.WebUrl.Set(&v)
}
// SetWebUrlNil sets the value for WebUrl to be an explicit nil
func (o *TeamsTab) SetWebUrlNil() {
	o.WebUrl.Set(nil)
}

// UnsetWebUrl ensures that no value is present for WebUrl, not even an explicit nil
func (o *TeamsTab) UnsetWebUrl() {
	o.WebUrl.Unset()
}

// GetTeamsApp returns the TeamsApp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TeamsTab) GetTeamsApp() AnyOfmicrosoftGraphTeamsApp {
	if o == nil  {
		var ret AnyOfmicrosoftGraphTeamsApp
		return ret
	}
	return o.TeamsApp
}

// GetTeamsAppOk returns a tuple with the TeamsApp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TeamsTab) GetTeamsAppOk() (*AnyOfmicrosoftGraphTeamsApp, bool) {
	if o == nil || o.TeamsApp == nil {
		return nil, false
	}
	return &o.TeamsApp, true
}

// HasTeamsApp returns a boolean if a field has been set.
func (o *TeamsTab) HasTeamsApp() bool {
	if o != nil && o.TeamsApp != nil {
		return true
	}

	return false
}

// SetTeamsApp gets a reference to the given AnyOfmicrosoftGraphTeamsApp and assigns it to the TeamsApp field.
func (o *TeamsTab) SetTeamsApp(v AnyOfmicrosoftGraphTeamsApp) {
	o.TeamsApp = v
}

func (o TeamsTab) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Configuration != nil {
		toSerialize["configuration"] = o.Configuration
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.WebUrl.IsSet() {
		toSerialize["webUrl"] = o.WebUrl.Get()
	}
	if o.TeamsApp != nil {
		toSerialize["teamsApp"] = o.TeamsApp
	}
	return json.Marshal(toSerialize)
}

type NullableTeamsTab struct {
	value *TeamsTab
	isSet bool
}

func (v NullableTeamsTab) Get() *TeamsTab {
	return v.value
}

func (v *NullableTeamsTab) Set(val *TeamsTab) {
	v.value = val
	v.isSet = true
}

func (v NullableTeamsTab) IsSet() bool {
	return v.isSet
}

func (v *NullableTeamsTab) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTeamsTab(val *TeamsTab) *NullableTeamsTab {
	return &NullableTeamsTab{value: val, isSet: true}
}

func (v NullableTeamsTab) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTeamsTab) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


